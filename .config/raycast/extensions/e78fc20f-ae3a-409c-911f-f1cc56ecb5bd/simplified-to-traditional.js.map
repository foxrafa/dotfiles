{
  "version": 3,
  "sources": ["../node_modules/tslib/tslib.es6.mjs", "../node_modules/regexp-helper/lib/cjk-conv.ts", "../node_modules/type-detect/type-detect.js", "../node_modules/deep-eql/index.js", "../node_modules/lodash/lodash.js", "../node_modules/array-hyper-unique/src/util.ts", "../node_modules/array-hyper-unique/src/index.ts", "../node_modules/array-hyper-unique/src/index.cts", "../node_modules/array-hyper-unique/src/util.ts", "../node_modules/array-hyper-unique/src/index.ts", "../node_modules/array-hyper-unique/src/index.cts", "../node_modules/array-hyper-unique/dist/index.cjs", "../node_modules/@lazy-cjk/zh-convert/lib/const.ts", "../node_modules/@lazy-cjk/zh-convert/lib/util.ts", "../node_modules/@lazy-cjk/zh-convert/lib/table.ts", "../node_modules/runes2/src/index.ts", "../node_modules/runes2/src/index.cts", "../node_modules/runes2/src/index.ts", "../node_modules/runes2/src/index.cts", "../node_modules/runes2/dist/index.cjs", "../node_modules/es6-class-prototype/src/index.ts", "../node_modules/es6-class-prototype/src/index.cts", "../node_modules/es6-class-prototype/src/index.ts", "../node_modules/es6-class-prototype/src/index.cts", "../node_modules/es6-class-prototype/dist/index.cjs", "../node_modules/uni-string/src/index.ts", "../node_modules/uni-string/src/index.cts", "../node_modules/uni-string/src/index.ts", "../node_modules/uni-string/src/index.cts", "../node_modules/uni-string/dist/index.cjs", "../node_modules/@lazy-cjk/zh-convert/lib/util/map.ts", "../node_modules/@lazy-cjk/zh-convert/lib/core/map.ts", "../node_modules/@lazy-cjk/zh-convert/lib/core.ts", "../node_modules/@lazy-cjk/zh-convert/lib/types.js", "../node_modules/@lazy-cjk/zh-convert/index.ts", "../node_modules/cjk-conv/lib/zh/convert/index.ts", "../node_modules/@lazy-cjk/zh-table-alias/lib/util/core.ts", "../node_modules/@lazy-cjk/zh-table-alias/lib/table.ts", "../node_modules/@lazy-cjk/zh-table-alias/lib/table/raw.ts", "../node_modules/@lazy-cjk/zh-table-alias/index.ts", "../node_modules/@lazy-cjk/zh-table-list/lib/util.ts", "../node_modules/@lazy-cjk/zh-table-list/lib/types.js", "../node_modules/@lazy-cjk/jp-table-convert/lib/table.ts", "../node_modules/@lazy-cjk/jp-table-convert/lib/types.ts", "../node_modules/@lazy-cjk/jp-table-convert/lib/util.ts", "../node_modules/@lazy-cjk/jp-table-convert/lib/index.ts", "../node_modules/@lazy-cjk/jp-table-comparison/lib/table.ts", "../node_modules/@lazy-cjk/jp-table-comparison/index.ts", "../node_modules/@lazy-cjk/jp-table-convert/index.ts", "../node_modules/@lazy-cjk/jp-table-alias/index.ts", "../node_modules/@lazy-cjk/zh-table-greedy/lib/util.ts", "../node_modules/@lazy-cjk/zh-table-greedy/lib/core.ts", "../node_modules/@lazy-cjk/zh-table-greedy/lib/table/re.ts", "../node_modules/@lazy-cjk/zh-table-greedy/lib/table.ts", "../node_modules/@lazy-cjk/zh-table-greedy/index.ts", "../node_modules/@lazy-cjk/zh-table-list/index.ts", "../node_modules/cjk-conv/lib/zh/table/index.ts", "../node_modules/cjk-conv/lib/jp/index.ts", "../node_modules/@lazy-cjk/novel-filename/index.ts", "../node_modules/cjk-conv/lib/novel/filename.ts", "../node_modules/cjk-conv/lib/index.ts", "../node_modules/cjk-conv/package.json", "../node_modules/cjk-conv/version.ts", "../node_modules/cjk-conv/index.ts", "../src/simplified-to-traditional.tsx", "../src/utils/input-item.ts", "../src/utils/common-utils.ts"],
  "sourcesContent": ["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/**\n * Created by user on 2019/4/9.\n */\n\n/**\n * for cjk-conv and regexp-cjk only\n */\nexport function _re_cjk_conv(flags?: string, addSource?: string)\n{\n\tflags = (flags || 'u');\n\n\tif (flags.indexOf('u') === -1)\n\t{\n\t\tflags += 'u';\n\t}\n\n\treturn new RegExp(`[\\\\u2e80-\\\\u2e99\\\\u2e9b-\\\\u2ef3\\\\u2f00-\\\\u2fd5\\\\u3038-\\\\u303b\\\\u3400-\\\\u4db5\\\\u4E00-\\\\u9FFF\\\\u{20000}-\\\\u{2FA1F}${addSource || ''}]`, flags)\n}\n\nexport default exports as typeof import('./cjk-conv');\n", "(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec \u00B11.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec \u00B14.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec \u00B11.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec \u00B11.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec \u00B11.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec \u00B11.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec \u00B11.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec \u00B11.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec \u00B11.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec \u00B10.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec \u00B11.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec \u00B11.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec \u00B10.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec \u00B10.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec \u00B11.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec \u00B12.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec \u00B11.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec \u00B12.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec \u00B12.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec \u00B12.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec \u00B15.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec \u00B14.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec \u00B14.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec \u00B113.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec \u00B11.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec \u00B11.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec \u00B11.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec \u00B11.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec \u00B13.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec \u00B11.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec \u00B11.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec \u00B11.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec \u00B11.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec \u00B12.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec \u00B10.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec \u00B10.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec \u00B14.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec \u00B11.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec \u00B11.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec \u00B11.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec \u00B11.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec \u00B16.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec \u00B12.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec \u00B12.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec \u00B12.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec \u00B11.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec \u00B11.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec \u00B10.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n", "'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n      return leftHandOperand === rightHandOperand;\n    case 'Error':\n      return keysEqual(leftHandOperand, rightHandOperand, [ 'name', 'message', 'code' ], options);\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n", "/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('d\u00E9j\u00E0 vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n", "// @ts-ignore\nimport _equals from 'deep-eql';\nimport { IOptions } from './types';\nimport { findLastIndex, findIndex } from 'lodash';\n\nexport function equals<T>(a1: T, a2: T): boolean\nexport function equals<T>(a1: T, a2: unknown): a2 is T\nexport function equals<T>(a1: unknown, a2: T): a1 is T\nexport function equals(a1: any, a2: any): boolean\n{\n\treturn _equals(a1, a2)\n}\n\nexport function defaultFilter<T>(options: IOptions<T> = {})\n{\n\tconst checker = options.checker || defaultChecker;\n\tconst filter = options.filter || null;\n\n\tconst find = options.removeFromFirst ? findLastIndex : findIndex;\n\n\tconst cb = <K extends any[]>(val: K[keyof K], index: number, arr: K) =>\n\t{\n\t\tlet i = find(arr, a => checker(a, val, arr, arr));\n\t\treturn i === index && (!filter || filter(val));\n\t};\n\n\treturn cb;\n}\n\n// @ts-ignore\nexport function defaultChecker<T, R>(element: T, value: R, arr_new?: Array<T | R>, arr_old?: Array<T | R>): boolean\n{\n\treturn _equals(element, value);\n}\n", "import { defaultFilter, equals, defaultChecker } from './util';\n\nimport { IOptions } from './types';\n\nexport * from './types';\nexport * from './util';\n\nexport function array_unique<T>(arr: T, options: IOptions<T> = {}): T\n{\n\tif (!Array.isArray(arr))\n\t{\n\t\tthrow new TypeError(`Expected an Array but got ${typeof arr}.`)\n\t}\n\n\tconst cb = defaultFilter(options);\n\n\tif (options.overwrite)\n\t{\n\t\tlet index = arr.length;\n\n\t\twhile (index--)\n\t\t{\n\t\t\tlet val = arr[index];\n\n\t\t\tif (!cb(val, index, arr))\n\t\t\t{\n\t\t\t\tarr.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\t// @ts-ignore\n\treturn arr.filter(cb);\n}\n\nexport function array_unique_overwrite<T>(arr: T, options: IOptions<T> = {}): T\n{\n\treturn array_unique(arr, {\n\t\t...options,\n\t\toverwrite: true,\n\t});\n}\n\nexport function lazy_unique<T extends any[]>(arr: T): T\nexport function lazy_unique<T, T1, T2>(a1: T1, a2: T2, ...arr: T[]): Array<T | T1 | T2>\nexport function lazy_unique<T>(...arr: Array<T | T[]>): T | (T | T[])[]\n// @ts-ignore\nexport function lazy_unique<T>(...arr: Array<T | T[]>)\n{\n\tif (arr.length > 1)\n\t{\n\t\treturn array_unique(arr);\n\t}\n\n\treturn array_unique(arr[0]);\n}\n\nexport function lazy_unique_overwrite<T>(...arr: Array<T | T[]>)\n{\n\tif (arr.length > 1)\n\t{\n\t\treturn array_unique_overwrite(arr);\n\t}\n\n\treturn array_unique_overwrite(arr[0]);\n}\n\nexport {\n\tequals,\n\tdefaultFilter,\n\tdefaultChecker,\n}\n\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(lazy_unique, \"array_unique\", { value: array_unique });\n\tObject.defineProperty(lazy_unique, \"array_unique_overwrite\", { value: array_unique_overwrite });\n\tObject.defineProperty(lazy_unique, \"lazy_unique_overwrite\", { value: lazy_unique_overwrite });\n\n\tObject.defineProperty(lazy_unique, \"equals\", { value: equals });\n\tObject.defineProperty(lazy_unique, \"defaultFilter\", { value: defaultFilter });\n\tObject.defineProperty(lazy_unique, \"defaultChecker\", { value: defaultChecker });\n\n\tObject.defineProperty(lazy_unique, \"lazy_unique\", { value: lazy_unique });\n\tObject.defineProperty(lazy_unique, \"default\", { value: lazy_unique });\n\n\tObject.defineProperty(lazy_unique, \"__esModule\", { value: true });\n}\n\nexport default lazy_unique\n", "import { lazy_unique } from './index';\n\n// @ts-ignore\nexport = lazy_unique\n", "// @ts-ignore\nimport _equals from 'deep-eql';\nimport { IOptions } from './types';\nimport { findLastIndex, findIndex } from 'lodash';\n\nexport function equals<T>(a1: T, a2: T): boolean\nexport function equals<T>(a1: T, a2: unknown): a2 is T\nexport function equals<T>(a1: unknown, a2: T): a1 is T\nexport function equals(a1: any, a2: any): boolean\n{\n\treturn _equals(a1, a2)\n}\n\nexport function defaultFilter<T>(options: IOptions<T> = {})\n{\n\tconst checker = options.checker || defaultChecker;\n\tconst filter = options.filter || null;\n\n\tconst find = options.removeFromFirst ? findLastIndex : findIndex;\n\n\tconst cb = <K extends any[]>(val: K[keyof K], index: number, arr: K) =>\n\t{\n\t\tlet i = find(arr, a => checker(a, val, arr, arr));\n\t\treturn i === index && (!filter || filter(val));\n\t};\n\n\treturn cb;\n}\n\n// @ts-ignore\nexport function defaultChecker<T, R>(element: T, value: R, arr_new?: Array<T | R>, arr_old?: Array<T | R>): boolean\n{\n\treturn _equals(element, value);\n}\n", "import { defaultFilter, equals, defaultChecker } from './util';\n\nimport { IOptions } from './types';\n\nexport * from './types';\nexport * from './util';\n\nexport function array_unique<T>(arr: T, options: IOptions<T> = {}): T\n{\n\tif (!Array.isArray(arr))\n\t{\n\t\tthrow new TypeError(`Expected an Array but got ${typeof arr}.`)\n\t}\n\n\tconst cb = defaultFilter(options);\n\n\tif (options.overwrite)\n\t{\n\t\tlet index = arr.length;\n\n\t\twhile (index--)\n\t\t{\n\t\t\tlet val = arr[index];\n\n\t\t\tif (!cb(val, index, arr))\n\t\t\t{\n\t\t\t\tarr.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\t// @ts-ignore\n\treturn arr.filter(cb);\n}\n\nexport function array_unique_overwrite<T>(arr: T, options: IOptions<T> = {}): T\n{\n\treturn array_unique(arr, {\n\t\t...options,\n\t\toverwrite: true,\n\t});\n}\n\nexport function lazy_unique<T extends any[]>(arr: T): T\nexport function lazy_unique<T, T1, T2>(a1: T1, a2: T2, ...arr: T[]): Array<T | T1 | T2>\nexport function lazy_unique<T>(...arr: Array<T | T[]>): T | (T | T[])[]\n// @ts-ignore\nexport function lazy_unique<T>(...arr: Array<T | T[]>)\n{\n\tif (arr.length > 1)\n\t{\n\t\treturn array_unique(arr);\n\t}\n\n\treturn array_unique(arr[0]);\n}\n\nexport function lazy_unique_overwrite<T>(...arr: Array<T | T[]>)\n{\n\tif (arr.length > 1)\n\t{\n\t\treturn array_unique_overwrite(arr);\n\t}\n\n\treturn array_unique_overwrite(arr[0]);\n}\n\nexport {\n\tequals,\n\tdefaultFilter,\n\tdefaultChecker,\n}\n\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(lazy_unique, \"array_unique\", { value: array_unique });\n\tObject.defineProperty(lazy_unique, \"array_unique_overwrite\", { value: array_unique_overwrite });\n\tObject.defineProperty(lazy_unique, \"lazy_unique_overwrite\", { value: lazy_unique_overwrite });\n\n\tObject.defineProperty(lazy_unique, \"equals\", { value: equals });\n\tObject.defineProperty(lazy_unique, \"defaultFilter\", { value: defaultFilter });\n\tObject.defineProperty(lazy_unique, \"defaultChecker\", { value: defaultChecker });\n\n\tObject.defineProperty(lazy_unique, \"lazy_unique\", { value: lazy_unique });\n\tObject.defineProperty(lazy_unique, \"default\", { value: lazy_unique });\n\n\tObject.defineProperty(lazy_unique, \"__esModule\", { value: true });\n}\n\nexport default lazy_unique\n", "import { lazy_unique } from './index';\n\n// @ts-ignore\nexport = lazy_unique\n", "\n'use strict'\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  module.exports = require('./index.cjs.development.cjs')\n} else {\n  module.exports = require('./index.cjs.production.min.cjs')\n}\n", "import { _re_cjk_conv } from 'regexp-helper/lib/cjk-conv';\nimport { array_unique } from 'array-hyper-unique';\n\nexport const defaultOptions = Object.freeze({\n\tsafe: true,\n});\n\nexport const REGEXP_TEST = _re_cjk_conv('ug');\n\nexport const SAFE_MODE_CHAR = array_unique([\n\t'后',\n\t'里',\n\t'餵',\n\t'志',\n\t'布',\n\t'佈',\n\t'系',\n\t'繫',\n\t'梁',\n\t'樑',\n\t'衝',\n\t'沖',\n\t'谷',\n\t'穀',\n\t'注',\n\t'克',\n]);\n", "import { IOptions } from './types';\nimport { SAFE_MODE_CHAR, defaultOptions, REGEXP_TEST } from './const';\n\nexport function getOptionsSkip(options: IOptions, skip = SAFE_MODE_CHAR)\n{\n\tif (!options.skip)\n\t{\n\t\toptions.skip = skip.slice();\n\t}\n\telse if (typeof options.skip == 'string')\n\t{\n\t\toptions.skip += skip.join('');\n\t}\n\telse if (Array.isArray(options.skip))\n\t{\n\t\toptions.skip = options.skip.slice().concat(skip);\n\t}\n\telse\n\t{\n\t\toptions.table = skip.reduce(function (a, b)\n\t\t{\n\t\t\ta[b] = b;\n\n\t\t\treturn a;\n\t\t}, Object.assign({}, options.table || {}));\n\t}\n\n\treturn options;\n}\n\nexport function getOptions(options: IOptions = {}, defaultOpts = defaultOptions, skip = SAFE_MODE_CHAR)\n{\n\toptions = Object.assign({}, defaultOpts, options);\n\n\tif (options.safe)\n\t{\n\t\toptions = getOptionsSkip(options, skip);\n\n\t\t//console.log(options);\n\t}\n\n\treturn options;\n}\n\nexport function _call(fn, text: string, options: IOptions = {}, ...argv)\n{\n\toptions = getOptions(options);\n\n\tif (options.skip || options.table || options.tableOnly)\n\t{\n\t\tlet { skip, table, tableOnly } = options;\n\t\tlet not_tableOnly = !tableOnly;\n\n\t\tif (tableOnly && !table)\n\t\t{\n\t\t\tthrow new Error(`table is ${table}`);\n\t\t}\n\n\t\treturn text.replace(REGEXP_TEST, function (text)\n\t\t{\n\t\t\tif (skip && skip.indexOf(text) !== -1)\n\t\t\t{\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\telse if (table && typeof table == 'function')\n\t\t\t{\n\t\t\t\tlet ret = table(fn, text, options, ...argv);\n\n\t\t\t\tif (ret !== null && typeof ret != 'undefined')\n\t\t\t\t{\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (table && table[text])\n\t\t\t{\n\t\t\t\treturn table[text];\n\t\t\t}\n\t\t\telse if (not_tableOnly)\n\t\t\t{\n\t\t\t\treturn fn(text);\n\t\t\t}\n\n\t\t\treturn text;\n\t\t});\n\t}\n\n\treturn fn(text, options, ...argv);\n}\n", "\n\nimport { ITable } from './types';\n\nexport const table_cn2tw: ITable = {\n\t\"万\": \"萬\",\n\t\"与\": \"與\",\n\t\"丑\": \"醜\",\n\t\"专\": \"專\",\n\t\"业\": \"業\",\n\t\"丛\": \"叢\",\n\t\"东\": \"東\",\n\t\"丝\": \"絲\",\n\t\"丢\": \"丟\",\n\t\"两\": \"兩\",\n\t\"严\": \"嚴\",\n\t\"并\": \"並\",\n\t\"丧\": \"喪\",\n\t\"个\": \"個\",\n\t\"丬\": \"爿\",\n\t\"丰\": \"豐\",\n\t\"临\": \"臨\",\n\t\"为\": \"為\",\n\t\"丽\": \"麗\",\n\t\"举\": \"舉\",\n\t\"么\": \"麼\",\n\t\"义\": \"義\",\n\t\"乌\": \"烏\",\n\t\"乐\": \"樂\",\n\t\"乔\": \"喬\",\n\t\"习\": \"習\",\n\t\"乡\": \"鄉\",\n\t\"书\": \"書\",\n\t\"买\": \"買\",\n\t\"乱\": \"亂\",\n\t\"干\": \"幹\",\n\t\"争\": \"爭\",\n\t\"于\": \"於\",\n\t\"亏\": \"虧\",\n\t\"云\": \"雲\",\n\t\"亘\": \"亘\",\n\t\"亚\": \"亞\",\n\t\"产\": \"產\",\n\t\"亩\": \"畝\",\n\t\"亲\": \"親\",\n\t\"亵\": \"褻\",\n\t\"亸\": \"嚲\",\n\t\"亿\": \"億\",\n\t\"仅\": \"僅\",\n\t\"仆\": \"僕\",\n\t\"从\": \"從\",\n\t\"仑\": \"侖\",\n\t\"仓\": \"倉\",\n\t\"仪\": \"儀\",\n\t\"们\": \"們\",\n\t\"价\": \"價\",\n\t\"众\": \"眾\",\n\t\"优\": \"優\",\n\t\"伙\": \"伙\",\n\t\"会\": \"會\",\n\t\"伛\": \"傴\",\n\t\"伞\": \"傘\",\n\t\"伟\": \"偉\",\n\t\"传\": \"傳\",\n\t\"伤\": \"傷\",\n\t\"伥\": \"倀\",\n\t\"伦\": \"倫\",\n\t\"伧\": \"傖\",\n\t\"伪\": \"偽\",\n\t\"伫\": \"佇\",\n\t\"体\": \"體\",\n\t\"余\": \"餘\",\n\t\"佣\": \"傭\",\n\t\"佥\": \"僉\",\n\t\"来\": \"來\",\n\t\"侠\": \"俠\",\n\t\"侣\": \"侶\",\n\t\"侥\": \"僥\",\n\t\"侦\": \"偵\",\n\t\"侧\": \"側\",\n\t\"侨\": \"僑\",\n\t\"侩\": \"儈\",\n\t\"侪\": \"儕\",\n\t\"侬\": \"儂\",\n\t\"俣\": \"俁\",\n\t\"俦\": \"儔\",\n\t\"俨\": \"儼\",\n\t\"俩\": \"倆\",\n\t\"俪\": \"儷\",\n\t\"俭\": \"儉\",\n\t\"债\": \"債\",\n\t\"倾\": \"傾\",\n\t\"偬\": \"傯\",\n\t\"偻\": \"僂\",\n\t\"偾\": \"僨\",\n\t\"偿\": \"償\",\n\t\"杰\": \"傑\",\n\t\"备\": \"備\",\n\t\"傥\": \"儻\",\n\t\"傧\": \"儐\",\n\t\"储\": \"儲\",\n\t\"傩\": \"儺\",\n\t\"当\": \"當\",\n\t\"尽\": \"盡\",\n\t\"罗\": \"羅\",\n\t\"攒\": \"攢\",\n\t\"儿\": \"兒\",\n\t\"兑\": \"兌\",\n\t\"兖\": \"兗\",\n\t\"党\": \"黨\",\n\t\"内\": \"內\",\n\t\"兰\": \"蘭\",\n\t\"关\": \"關\",\n\t\"兴\": \"興\",\n\t\"兹\": \"茲\",\n\t\"养\": \"養\",\n\t\"兽\": \"獸\",\n\t\"冁\": \"囅\",\n\t\"冈\": \"岡\",\n\t\"册\": \"冊\",\n\t\"写\": \"寫\",\n\t\"军\": \"軍\",\n\t\"农\": \"農\",\n\t\"冢\": \"塚\",\n\t\"幂\": \"冪\",\n\t\"冯\": \"馮\",\n\t\"冲\": \"衝\",\n\t\"决\": \"決\",\n\t\"况\": \"況\",\n\t\"冻\": \"凍\",\n\t\"净\": \"淨\",\n\t\"涂\": \"涂\",\n\t\"凄\": \"淒\",\n\t\"凉\": \"涼\",\n\t\"凌\": \"凌\",\n\t\"减\": \"減\",\n\t\"凑\": \"湊\",\n\t\"凛\": \"凜\",\n\t\"渎\": \"瀆\",\n\t\"几\": \"幾\",\n\t\"凤\": \"鳳\",\n\t\"处\": \"處\",\n\t\"凫\": \"鳧\",\n\t\"凭\": \"憑\",\n\t\"凯\": \"凱\",\n\t\"击\": \"擊\",\n\t\"凿\": \"鑿\",\n\t\"刍\": \"芻\",\n\t\"划\": \"劃\",\n\t\"刘\": \"劉\",\n\t\"则\": \"則\",\n\t\"刚\": \"剛\",\n\t\"创\": \"創\",\n\t\"删\": \"刪\",\n\t\"别\": \"別\",\n\t\"刭\": \"剄\",\n\t\"刽\": \"劊\",\n\t\"刿\": \"劌\",\n\t\"剀\": \"剴\",\n\t\"剂\": \"劑\",\n\t\"剐\": \"剮\",\n\t\"剑\": \"劍\",\n\t\"剥\": \"剝\",\n\t\"剧\": \"劇\",\n\t\"札\": \"札\",\n\t\"劝\": \"勸\",\n\t\"办\": \"辦\",\n\t\"务\": \"務\",\n\t\"劢\": \"勱\",\n\t\"动\": \"動\",\n\t\"励\": \"勵\",\n\t\"劲\": \"勁\",\n\t\"劳\": \"勞\",\n\t\"势\": \"勢\",\n\t\"勋\": \"勛\",\n\t\"勐\": \"勐\",\n\t\"勚\": \"勩\",\n\t\"胜\": \"勝\",\n\t\"绩\": \"績\",\n\t\"匀\": \"勻\",\n\t\"匦\": \"匭\",\n\t\"匮\": \"匱\",\n\t\"汇\": \"匯\",\n\t\"奁\": \"奩\",\n\t\"椟\": \"櫝\",\n\t\"区\": \"區\",\n\t\"医\": \"醫\",\n\t\"华\": \"華\",\n\t\"协\": \"協\",\n\t\"单\": \"單\",\n\t\"卖\": \"賣\",\n\t\"卜\": \"蔔\",\n\t\"卢\": \"盧\",\n\t\"卤\": \"滷\",\n\t\"卧\": \"臥\",\n\t\"卫\": \"衛\",\n\t\"却\": \"卻\",\n\t\"卺\": \"巹\",\n\t\"厂\": \"廠\",\n\t\"厅\": \"廳\",\n\t\"历\": \"歷\",\n\t\"厉\": \"厲\",\n\t\"压\": \"壓\",\n\t\"厌\": \"厭\",\n\t\"厍\": \"厙\",\n\t\"厕\": \"廁\",\n\t\"厢\": \"廂\",\n\t\"厣\": \"厴\",\n\t\"厦\": \"廈\",\n\t\"厨\": \"廚\",\n\t\"厩\": \"廄\",\n\t\"厮\": \"廝\",\n\t\"县\": \"縣\",\n\t\"叁\": \"叄\",\n\t\"参\": \"參\",\n\t\"叆\": \"靉\",\n\t\"叇\": \"靆\",\n\t\"双\": \"雙\",\n\t\"发\": \"發\",\n\t\"变\": \"變\",\n\t\"叙\": \"敘\",\n\t\"叠\": \"疊\",\n\t\"叶\": \"葉\",\n\t\"号\": \"號\",\n\t\"叹\": \"嘆\",\n\t\"叽\": \"嘰\",\n\t\"吁\": \"吁\",\n\t\"咤\": \"吒\",\n\t\"吓\": \"嚇\",\n\t\"吕\": \"呂\",\n\t\"吗\": \"嗎\",\n\t\"吣\": \"唚\",\n\t\"吨\": \"噸\",\n\t\"听\": \"聽\",\n\t\"启\": \"啟\",\n\t\"吴\": \"吳\",\n\t\"呒\": \"嘸\",\n\t\"呓\": \"囈\",\n\t\"呕\": \"嘔\",\n\t\"呖\": \"嚦\",\n\t\"呗\": \"唄\",\n\t\"员\": \"員\",\n\t\"呙\": \"咼\",\n\t\"呛\": \"嗆\",\n\t\"呜\": \"嗚\",\n\t\"咏\": \"詠\",\n\t\"咔\": \"咔\",\n\t\"咙\": \"嚨\",\n\t\"咛\": \"嚀\",\n\t\"咝\": \"噝\",\n\t\"咨\": \"諮\",\n\t\"咴\": \"噅\",\n\t\"咸\": \"鹹\",\n\t\"哌\": \"呱\",\n\t\"响\": \"響\",\n\t\"哑\": \"啞\",\n\t\"哒\": \"噠\",\n\t\"哓\": \"嘵\",\n\t\"哔\": \"嗶\",\n\t\"哕\": \"噦\",\n\t\"哗\": \"嘩\",\n\t\"哙\": \"噲\",\n\t\"哜\": \"嚌\",\n\t\"哝\": \"噥\",\n\t\"哟\": \"喲\",\n\t\"唣\": \"唕\",\n\t\"唛\": \"嘜\",\n\t\"唝\": \"嗊\",\n\t\"唠\": \"嘮\",\n\t\"唡\": \"啢\",\n\t\"唢\": \"嗩\",\n\t\"唤\": \"喚\",\n\t\"唿\": \"唿\",\n\t\"问\": \"問\",\n\t\"衔\": \"銜\",\n\t\"啧\": \"嘖\",\n\t\"啬\": \"嗇\",\n\t\"啭\": \"囀\",\n\t\"啮\": \"齧\",\n\t\"啰\": \"囉\",\n\t\"啴\": \"嘽\",\n\t\"啸\": \"嘯\",\n\t\"喷\": \"噴\",\n\t\"喽\": \"嘍\",\n\t\"喾\": \"嚳\",\n\t\"嗫\": \"囁\",\n\t\"嗬\": \"嗬\",\n\t\"嗳\": \"噯\",\n\t\"尝\": \"嘗\",\n\t\"嘘\": \"噓\",\n\t\"嘤\": \"嚶\",\n\t\"嘱\": \"囑\",\n\t\"恶\": \"惡\",\n\t\"噜\": \"嚕\",\n\t\"噼\": \"噼\",\n\t\"嚣\": \"囂\",\n\t\"嚯\": \"嚯\",\n\t\"苏\": \"蘇\",\n\t\"团\": \"團\",\n\t\"囱\": \"囪\",\n\t\"园\": \"園\",\n\t\"国\": \"國\",\n\t\"围\": \"圍\",\n\t\"囵\": \"圇\",\n\t\"图\": \"圖\",\n\t\"圆\": \"圓\",\n\t\"圣\": \"聖\",\n\t\"圹\": \"壙\",\n\t\"场\": \"場\",\n\t\"坂\": \"阪\",\n\t\"坏\": \"壞\",\n\t\"块\": \"塊\",\n\t\"坚\": \"堅\",\n\t\"坛\": \"壇\",\n\t\"坜\": \"壢\",\n\t\"坝\": \"壩\",\n\t\"坞\": \"塢\",\n\t\"坟\": \"墳\",\n\t\"坠\": \"墜\",\n\t\"垧\": \"坰\",\n\t\"垄\": \"壟\",\n\t\"垅\": \"壠\",\n\t\"垆\": \"壚\",\n\t\"垒\": \"壘\",\n\t\"垦\": \"墾\",\n\t\"垩\": \"堊\",\n\t\"垫\": \"墊\",\n\t\"垭\": \"埡\",\n\t\"垯\": \"墶\",\n\t\"垱\": \"壋\",\n\t\"垲\": \"塏\",\n\t\"垴\": \"堖\",\n\t\"埯\": \"垵\",\n\t\"埘\": \"塒\",\n\t\"埙\": \"塤\",\n\t\"埚\": \"堝\",\n\t\"埝\": \"墊\",\n\t\"执\": \"執\",\n\t\"堑\": \"塹\",\n\t\"堕\": \"墮\",\n\t\"阶\": \"階\",\n\t\"尧\": \"堯\",\n\t\"报\": \"報\",\n\t\"碱\": \"鹼\",\n\t\"塆\": \"壪\",\n\t\"茔\": \"塋\",\n\t\"塬\": \"原\",\n\t\"尘\": \"塵\",\n\t\"砖\": \"磚\",\n\t\"墙\": \"牆\",\n\t\"硗\": \"磽\",\n\t\"壮\": \"壯\",\n\t\"声\": \"聲\",\n\t\"壳\": \"殻\",\n\t\"壶\": \"壺\",\n\t\"壸\": \"壼\",\n\t\"寿\": \"壽\",\n\t\"复\": \"復\",\n\t\"够\": \"夠\",\n\t\"梦\": \"夢\",\n\t\"头\": \"頭\",\n\t\"夸\": \"誇\",\n\t\"夹\": \"夾\",\n\t\"夺\": \"奪\",\n\t\"奂\": \"奐\",\n\t\"奋\": \"奮\",\n\t\"奖\": \"獎\",\n\t\"奥\": \"奧\",\n\t\"妆\": \"妝\",\n\t\"妇\": \"婦\",\n\t\"妈\": \"媽\",\n\t\"妩\": \"嫵\",\n\t\"妪\": \"嫗\",\n\t\"妫\": \"媯\",\n\t\"姗\": \"姍\",\n\t\"姜\": \"姜\",\n\t\"娄\": \"婁\",\n\t\"娅\": \"婭\",\n\t\"娆\": \"嬈\",\n\t\"娇\": \"嬌\",\n\t\"娈\": \"孌\",\n\t\"娱\": \"娛\",\n\t\"娲\": \"媧\",\n\t\"娴\": \"嫻\",\n\t\"婳\": \"嫿\",\n\t\"婴\": \"嬰\",\n\t\"婵\": \"嬋\",\n\t\"婶\": \"嬸\",\n\t\"媪\": \"媼\",\n\t\"袅\": \"裊\",\n\t\"嫒\": \"嬡\",\n\t\"嫔\": \"嬪\",\n\t\"嫱\": \"嬙\",\n\t\"嬷\": \"嬤\",\n\t\"懒\": \"懶\",\n\t\"孙\": \"孫\",\n\t\"学\": \"學\",\n\t\"孪\": \"孿\",\n\t\"宁\": \"寧\",\n\t\"宝\": \"寶\",\n\t\"实\": \"實\",\n\t\"宠\": \"寵\",\n\t\"审\": \"審\",\n\t\"宪\": \"憲\",\n\t\"宫\": \"宮\",\n\t\"宽\": \"寬\",\n\t\"宾\": \"賓\",\n\t\"寝\": \"寢\",\n\t\"对\": \"對\",\n\t\"寻\": \"尋\",\n\t\"导\": \"導\",\n\t\"将\": \"將\",\n\t\"尔\": \"爾\",\n\t\"尴\": \"尷\",\n\t\"尸\": \"屍\",\n\t\"层\": \"層\",\n\t\"屃\": \"屓\",\n\t\"届\": \"屆\",\n\t\"屉\": \"屜\",\n\t\"属\": \"屬\",\n\t\"屡\": \"屢\",\n\t\"屦\": \"屨\",\n\t\"屿\": \"嶼\",\n\t\"岁\": \"歲\",\n\t\"岂\": \"豈\",\n\t\"岖\": \"嶇\",\n\t\"岗\": \"崗\",\n\t\"岘\": \"峴\",\n\t\"岙\": \"嶴\",\n\t\"岚\": \"嵐\",\n\t\"岛\": \"島\",\n\t\"岭\": \"嶺\",\n\t\"岳\": \"嶽\",\n\t\"岽\": \"崬\",\n\t\"岿\": \"巋\",\n\t\"峃\": \"嶨\",\n\t\"峄\": \"嶧\",\n\t\"峡\": \"峽\",\n\t\"峣\": \"嶢\",\n\t\"峤\": \"嶠\",\n\t\"峥\": \"崢\",\n\t\"峦\": \"巒\",\n\t\"崂\": \"嶗\",\n\t\"崃\": \"崍\",\n\t\"崄\": \"嶮\",\n\t\"崭\": \"嶄\",\n\t\"嵛\": \"崳\",\n\t\"嵘\": \"嶸\",\n\t\"嵚\": \"嶔\",\n\t\"嵝\": \"嶁\",\n\t\"嵴\": \"脊\",\n\t\"巅\": \"巔\",\n\t\"巩\": \"鞏\",\n\t\"巯\": \"巰\",\n\t\"币\": \"幣\",\n\t\"帅\": \"帥\",\n\t\"师\": \"師\",\n\t\"帏\": \"幃\",\n\t\"帐\": \"帳\",\n\t\"帘\": \"簾\",\n\t\"帜\": \"幟\",\n\t\"带\": \"帶\",\n\t\"帧\": \"幀\",\n\t\"帮\": \"幫\",\n\t\"帱\": \"幬\",\n\t\"帻\": \"幘\",\n\t\"帼\": \"幗\",\n\t\"幞\": \"襆\",\n\t\"襕\": \"幱\",\n\t\"幺\": \"么\",\n\t\"广\": \"廣\",\n\t\"庄\": \"莊\",\n\t\"庆\": \"慶\",\n\t\"庐\": \"廬\",\n\t\"庑\": \"廡\",\n\t\"库\": \"庫\",\n\t\"应\": \"應\",\n\t\"庙\": \"廟\",\n\t\"庞\": \"龐\",\n\t\"废\": \"廢\",\n\t\"庼\": \"廎\",\n\t\"荫\": \"蔭\",\n\t\"廪\": \"廩\",\n\t\"开\": \"開\",\n\t\"异\": \"異\",\n\t\"弃\": \"棄\",\n\t\"张\": \"張\",\n\t\"弥\": \"彌\",\n\t\"弪\": \"弳\",\n\t\"弯\": \"彎\",\n\t\"强\": \"強\",\n\t\"弹\": \"彈\",\n\t\"归\": \"歸\",\n\t\"录\": \"錄\",\n\t\"彟\": \"彠\",\n\t\"彦\": \"彥\",\n\t\"彻\": \"徹\",\n\t\"径\": \"徑\",\n\t\"徕\": \"徠\",\n\t\"御\": \"御\",\n\t\"忆\": \"憶\",\n\t\"忏\": \"懺\",\n\t\"忧\": \"憂\",\n\t\"忾\": \"愾\",\n\t\"怀\": \"懷\",\n\t\"态\": \"態\",\n\t\"怂\": \"慫\",\n\t\"怃\": \"憮\",\n\t\"怄\": \"慪\",\n\t\"怅\": \"悵\",\n\t\"怆\": \"愴\",\n\t\"怜\": \"憐\",\n\t\"总\": \"總\",\n\t\"怼\": \"懟\",\n\t\"怿\": \"懌\",\n\t\"恋\": \"戀\",\n\t\"耻\": \"恥\",\n\t\"恳\": \"懇\",\n\t\"恸\": \"慟\",\n\t\"恹\": \"懨\",\n\t\"恺\": \"愷\",\n\t\"恻\": \"惻\",\n\t\"恼\": \"惱\",\n\t\"恽\": \"惲\",\n\t\"悦\": \"悅\",\n\t\"悫\": \"愨\",\n\t\"悬\": \"懸\",\n\t\"悭\": \"慳\",\n\t\"悯\": \"憫\",\n\t\"闷\": \"悶\",\n\t\"惊\": \"驚\",\n\t\"惧\": \"懼\",\n\t\"惨\": \"慘\",\n\t\"惩\": \"懲\",\n\t\"惫\": \"憊\",\n\t\"惬\": \"愜\",\n\t\"惭\": \"慚\",\n\t\"惮\": \"憚\",\n\t\"惯\": \"慣\",\n\t\"愍\": \"湣\",\n\t\"爱\": \"愛\",\n\t\"愠\": \"慍\",\n\t\"愤\": \"憤\",\n\t\"愦\": \"憒\",\n\t\"愿\": \"願\",\n\t\"慑\": \"懾\",\n\t\"慭\": \"憖\",\n\t\"虑\": \"慮\",\n\t\"憷\": \"憷\",\n\t\"懔\": \"懍\",\n\t\"懑\": \"懣\",\n\t\"欢\": \"歡\",\n\t\"戆\": \"戇\",\n\t\"戋\": \"戔\",\n\t\"戏\": \"戲\",\n\t\"戗\": \"戧\",\n\t\"战\": \"戰\",\n\t\"戬\": \"戩\",\n\t\"户\": \"戶\",\n\t\"扎\": \"扎\",\n\t\"扑\": \"撲\",\n\t\"扦\": \"扦\",\n\t\"扩\": \"擴\",\n\t\"扪\": \"捫\",\n\t\"扫\": \"掃\",\n\t\"扬\": \"揚\",\n\t\"扰\": \"擾\",\n\t\"抚\": \"撫\",\n\t\"抛\": \"拋\",\n\t\"抟\": \"摶\",\n\t\"抠\": \"摳\",\n\t\"抡\": \"掄\",\n\t\"抢\": \"搶\",\n\t\"护\": \"護\",\n\t\"担\": \"擔\",\n\t\"拟\": \"擬\",\n\t\"拢\": \"攏\",\n\t\"拣\": \"揀\",\n\t\"拥\": \"擁\",\n\t\"拦\": \"攔\",\n\t\"拧\": \"擰\",\n\t\"拨\": \"撥\",\n\t\"择\": \"擇\",\n\t\"挂\": \"掛\",\n\t\"挚\": \"摯\",\n\t\"挛\": \"攣\",\n\t\"挜\": \"掗\",\n\t\"挝\": \"撾\",\n\t\"挞\": \"撻\",\n\t\"挟\": \"挾\",\n\t\"挠\": \"撓\",\n\t\"挡\": \"擋\",\n\t\"挢\": \"撟\",\n\t\"挣\": \"掙\",\n\t\"挤\": \"擠\",\n\t\"挥\": \"揮\",\n\t\"挦\": \"撏\",\n\t\"捞\": \"撈\",\n\t\"损\": \"損\",\n\t\"捡\": \"撿\",\n\t\"换\": \"換\",\n\t\"捣\": \"搗\",\n\t\"据\": \"據\",\n\t\"捻\": \"捻\",\n\t\"掳\": \"擄\",\n\t\"掴\": \"摑\",\n\t\"掷\": \"擲\",\n\t\"掸\": \"撣\",\n\t\"掺\": \"摻\",\n\t\"掼\": \"摜\",\n\t\"揸\": \"摣\",\n\t\"揽\": \"攬\",\n\t\"揿\": \"撳\",\n\t\"搀\": \"攙\",\n\t\"搁\": \"擱\",\n\t\"搂\": \"摟\",\n\t\"搅\": \"攪\",\n\t\"构\": \"構\",\n\t\"摇\": \"搖\",\n\t\"携\": \"攜\",\n\t\"摄\": \"攝\",\n\t\"摅\": \"攄\",\n\t\"摆\": \"擺\",\n\t\"摈\": \"擯\",\n\t\"摊\": \"攤\",\n\t\"撄\": \"攖\",\n\t\"撑\": \"撐\",\n\t\"撵\": \"攆\",\n\t\"撷\": \"擷\",\n\t\"撸\": \"擼\",\n\t\"撺\": \"攛\",\n\t\"擞\": \"擻\",\n\t\"敌\": \"敵\",\n\t\"败\": \"敗\",\n\t\"敛\": \"斂\",\n\t\"数\": \"數\",\n\t\"驱\": \"驅\",\n\t\"毙\": \"斃\",\n\t\"斋\": \"齋\",\n\t\"斓\": \"斕\",\n\t\"斗\": \"鬥\",\n\t\"斩\": \"斬\",\n\t\"断\": \"斷\",\n\t\"无\": \"無\",\n\t\"旧\": \"舊\",\n\t\"时\": \"時\",\n\t\"旷\": \"曠\",\n\t\"旸\": \"暘\",\n\t\"昙\": \"曇\",\n\t\"昼\": \"晝\",\n\t\"昽\": \"曨\",\n\t\"显\": \"顯\",\n\t\"晋\": \"晉\",\n\t\"晒\": \"曬\",\n\t\"晓\": \"曉\",\n\t\"晔\": \"曄\",\n\t\"晕\": \"暈\",\n\t\"晖\": \"暉\",\n\t\"暂\": \"暫\",\n\t\"畅\": \"暢\",\n\t\"暧\": \"曖\",\n\t\"胧\": \"朧\",\n\t\"术\": \"術\",\n\t\"朴\": \"樸\",\n\t\"机\": \"機\",\n\t\"杀\": \"殺\",\n\t\"杂\": \"雜\",\n\t\"权\": \"權\",\n\t\"条\": \"條\",\n\t\"杨\": \"楊\",\n\t\"杩\": \"榪\",\n\t\"极\": \"極\",\n\t\"枞\": \"樅\",\n\t\"枢\": \"樞\",\n\t\"枣\": \"棗\",\n\t\"枥\": \"櫪\",\n\t\"枧\": \"梘\",\n\t\"枨\": \"棖\",\n\t\"枪\": \"槍\",\n\t\"枫\": \"楓\",\n\t\"枭\": \"梟\",\n\t\"柜\": \"櫃\",\n\t\"柠\": \"檸\",\n\t\"栅\": \"柵\",\n\t\"柽\": \"檉\",\n\t\"栀\": \"梔\",\n\t\"标\": \"標\",\n\t\"栈\": \"棧\",\n\t\"栉\": \"櫛\",\n\t\"栊\": \"櫳\",\n\t\"栋\": \"棟\",\n\t\"栌\": \"櫨\",\n\t\"栎\": \"櫟\",\n\t\"栏\": \"欄\",\n\t\"树\": \"樹\",\n\t\"栖\": \"棲\",\n\t\"样\": \"樣\",\n\t\"栾\": \"欒\",\n\t\"桊\": \"棬\",\n\t\"桠\": \"椏\",\n\t\"桡\": \"橈\",\n\t\"桢\": \"楨\",\n\t\"档\": \"檔\",\n\t\"桤\": \"榿\",\n\t\"桥\": \"橋\",\n\t\"桦\": \"樺\",\n\t\"桧\": \"檜\",\n\t\"桨\": \"槳\",\n\t\"桩\": \"樁\",\n\t\"梼\": \"檮\",\n\t\"梾\": \"棶\",\n\t\"检\": \"檢\",\n\t\"棂\": \"欞\",\n\t\"椁\": \"槨\",\n\t\"椠\": \"槧\",\n\t\"椤\": \"欏\",\n\t\"椭\": \"橢\",\n\t\"楼\": \"樓\",\n\t\"榄\": \"欖\",\n\t\"榇\": \"櫬\",\n\t\"榈\": \"櫚\",\n\t\"榉\": \"櫸\",\n\t\"荣\": \"榮\",\n\t\"盘\": \"盤\",\n\t\"槚\": \"檟\",\n\t\"槛\": \"檻\",\n\t\"槟\": \"檳\",\n\t\"槠\": \"櫧\",\n\t\"规\": \"規\",\n\t\"横\": \"橫\",\n\t\"樯\": \"檣\",\n\t\"樱\": \"櫻\",\n\t\"橥\": \"櫫\",\n\t\"橱\": \"櫥\",\n\t\"橹\": \"櫓\",\n\t\"橼\": \"櫞\",\n\t\"檩\": \"檁\",\n\t\"檐\": \"檐\",\n\t\"苘\": \"檾\",\n\t\"欤\": \"歟\",\n\t\"欧\": \"歐\",\n\t\"钦\": \"欽\",\n\t\"歼\": \"殲\",\n\t\"殁\": \"歿\",\n\t\"殇\": \"殤\",\n\t\"残\": \"殘\",\n\t\"殒\": \"殞\",\n\t\"殓\": \"殮\",\n\t\"殚\": \"殫\",\n\t\"殡\": \"殯\",\n\t\"殴\": \"毆\",\n\t\"毁\": \"毀\",\n\t\"毂\": \"轂\",\n\t\"毕\": \"畢\",\n\t\"毡\": \"氈\",\n\t\"绒\": \"絨\",\n\t\"毵\": \"毿\",\n\t\"牦\": \"氂\",\n\t\"氇\": \"氌\",\n\t\"气\": \"氣\",\n\t\"氢\": \"氫\",\n\t\"氩\": \"氬\",\n\t\"氲\": \"氳\",\n\t\"汉\": \"漢\",\n\t\"污\": \"污\",\n\t\"汤\": \"湯\",\n\t\"汹\": \"洶\",\n\t\"没\": \"沒\",\n\t\"沓\": \"沓\",\n\t\"沟\": \"溝\",\n\t\"沣\": \"灃\",\n\t\"沤\": \"漚\",\n\t\"沥\": \"瀝\",\n\t\"沦\": \"淪\",\n\t\"沧\": \"滄\",\n\t\"沨\": \"渢\",\n\t\"沩\": \"溈\",\n\t\"沪\": \"滬\",\n\t\"沵\": \"濔\",\n\t\"泞\": \"濘\",\n\t\"泪\": \"淚\",\n\t\"泶\": \"澩\",\n\t\"泷\": \"瀧\",\n\t\"泸\": \"瀘\",\n\t\"泺\": \"濼\",\n\t\"泻\": \"瀉\",\n\t\"泼\": \"潑\",\n\t\"泽\": \"澤\",\n\t\"泾\": \"涇\",\n\t\"洁\": \"潔\",\n\t\"洒\": \"灑\",\n\t\"洼\": \"窪\",\n\t\"浃\": \"浹\",\n\t\"浅\": \"淺\",\n\t\"浆\": \"漿\",\n\t\"浇\": \"澆\",\n\t\"浈\": \"湞\",\n\t\"浉\": \"溮\",\n\t\"浊\": \"濁\",\n\t\"测\": \"測\",\n\t\"浍\": \"澮\",\n\t\"济\": \"濟\",\n\t\"浏\": \"瀏\",\n\t\"浐\": \"滻\",\n\t\"浑\": \"渾\",\n\t\"浒\": \"滸\",\n\t\"浓\": \"濃\",\n\t\"浔\": \"潯\",\n\t\"浕\": \"濜\",\n\t\"涌\": \"涌\",\n\t\"莅\": \"蒞\",\n\t\"涛\": \"濤\",\n\t\"涝\": \"澇\",\n\t\"涞\": \"淶\",\n\t\"涟\": \"漣\",\n\t\"涠\": \"潿\",\n\t\"涡\": \"渦\",\n\t\"涢\": \"溳\",\n\t\"涣\": \"渙\",\n\t\"涤\": \"滌\",\n\t\"润\": \"潤\",\n\t\"涧\": \"澗\",\n\t\"涨\": \"漲\",\n\t\"涩\": \"澀\",\n\t\"淀\": \"澱\",\n\t\"渌\": \"淥\",\n\t\"渊\": \"淵\",\n\t\"渍\": \"漬\",\n\t\"渐\": \"漸\",\n\t\"渑\": \"澠\",\n\t\"渔\": \"漁\",\n\t\"渖\": \"瀋\",\n\t\"渗\": \"滲\",\n\t\"温\": \"溫\",\n\t\"游\": \"游\",\n\t\"湾\": \"灣\",\n\t\"湿\": \"濕\",\n\t\"溃\": \"潰\",\n\t\"溅\": \"濺\",\n\t\"溆\": \"漵\",\n\t\"溇\": \"漊\",\n\t\"灭\": \"滅\",\n\t\"荥\": \"滎\",\n\t\"滗\": \"潷\",\n\t\"滚\": \"滾\",\n\t\"滞\": \"滯\",\n\t\"滟\": \"灧\",\n\t\"滠\": \"灄\",\n\t\"满\": \"滿\",\n\t\"滢\": \"瀅\",\n\t\"滤\": \"濾\",\n\t\"滥\": \"濫\",\n\t\"滦\": \"灤\",\n\t\"滨\": \"濱\",\n\t\"滩\": \"灘\",\n\t\"滪\": \"澦\",\n\t\"漤\": \"灠\",\n\t\"颍\": \"潁\",\n\t\"潆\": \"瀠\",\n\t\"潇\": \"瀟\",\n\t\"潋\": \"瀲\",\n\t\"潍\": \"濰\",\n\t\"潜\": \"潛\",\n\t\"潴\": \"瀦\",\n\t\"澜\": \"瀾\",\n\t\"濑\": \"瀨\",\n\t\"濒\": \"瀕\",\n\t\"阔\": \"闊\",\n\t\"灏\": \"灝\",\n\t\"灯\": \"燈\",\n\t\"灵\": \"靈\",\n\t\"灾\": \"災\",\n\t\"灿\": \"燦\",\n\t\"炀\": \"煬\",\n\t\"炉\": \"爐\",\n\t\"炖\": \"燉\",\n\t\"炜\": \"煒\",\n\t\"炝\": \"熗\",\n\t\"点\": \"點\",\n\t\"炼\": \"煉\",\n\t\"炽\": \"熾\",\n\t\"烁\": \"爍\",\n\t\"烂\": \"爛\",\n\t\"烃\": \"烴\",\n\t\"烛\": \"燭\",\n\t\"烟\": \"煙\",\n\t\"烦\": \"煩\",\n\t\"烧\": \"燒\",\n\t\"烨\": \"燁\",\n\t\"烩\": \"燴\",\n\t\"烫\": \"燙\",\n\t\"烬\": \"燼\",\n\t\"热\": \"熱\",\n\t\"焕\": \"煥\",\n\t\"焖\": \"燜\",\n\t\"焘\": \"燾\",\n\t\"煅\": \"煆\",\n\t\"辉\": \"輝\",\n\t\"茕\": \"煢\",\n\t\"煳\": \"糊\",\n\t\"煺\": \"退\",\n\t\"荧\": \"熒\",\n\t\"熘\": \"溜\",\n\t\"颎\": \"熲\",\n\t\"营\": \"營\",\n\t\"爷\": \"爺\",\n\t\"笺\": \"箋\",\n\t\"牍\": \"牘\",\n\t\"闸\": \"閘\",\n\t\"牵\": \"牽\",\n\t\"牺\": \"犧\",\n\t\"犊\": \"犢\",\n\t\"荦\": \"犖\",\n\t\"犟\": \"犟\",\n\t\"犭\": \"犬\",\n\t\"状\": \"狀\",\n\t\"犷\": \"獷\",\n\t\"犸\": \"獁\",\n\t\"犹\": \"猶\",\n\t\"狈\": \"狽\",\n\t\"狍\": \"麅\",\n\t\"狝\": \"獮\",\n\t\"狞\": \"獰\",\n\t\"独\": \"獨\",\n\t\"狭\": \"狹\",\n\t\"狮\": \"獅\",\n\t\"狯\": \"獪\",\n\t\"狰\": \"猙\",\n\t\"狱\": \"獄\",\n\t\"狲\": \"猻\",\n\t\"猃\": \"獫\",\n\t\"猎\": \"獵\",\n\t\"猕\": \"獼\",\n\t\"猡\": \"玀\",\n\t\"猪\": \"豬\",\n\t\"猫\": \"貓\",\n\t\"猬\": \"蝟\",\n\t\"献\": \"獻\",\n\t\"獭\": \"獺\",\n\t\"获\": \"獲\",\n\t\"玑\": \"璣\",\n\t\"玙\": \"璵\",\n\t\"玚\": \"瑒\",\n\t\"玛\": \"瑪\",\n\t\"珏\": \"玨\",\n\t\"玮\": \"瑋\",\n\t\"环\": \"環\",\n\t\"现\": \"現\",\n\t\"玱\": \"瑲\",\n\t\"玺\": \"璽\",\n\t\"珉\": \"瑉\",\n\t\"珐\": \"琺\",\n\t\"珑\": \"瓏\",\n\t\"珰\": \"璫\",\n\t\"珲\": \"琿\",\n\t\"琎\": \"璡\",\n\t\"琏\": \"璉\",\n\t\"琐\": \"瑣\",\n\t\"琼\": \"瓊\",\n\t\"瑶\": \"瑤\",\n\t\"莹\": \"瑩\",\n\t\"瑷\": \"璦\",\n\t\"璇\": \"璿\",\n\t\"璎\": \"瓔\",\n\t\"瓒\": \"瓚\",\n\t\"瓮\": \"瓮\",\n\t\"瓯\": \"甌\",\n\t\"罂\": \"罌\",\n\t\"电\": \"電\",\n\t\"画\": \"畫\",\n\t\"畴\": \"疇\",\n\t\"疖\": \"癤\",\n\t\"疗\": \"療\",\n\t\"疟\": \"瘧\",\n\t\"疠\": \"癘\",\n\t\"疡\": \"瘍\",\n\t\"疬\": \"癧\",\n\t\"疮\": \"瘡\",\n\t\"疯\": \"瘋\",\n\t\"疱\": \"皰\",\n\t\"疴\": \"痾\",\n\t\"痈\": \"癰\",\n\t\"痉\": \"痙\",\n\t\"痒\": \"癢\",\n\t\"痖\": \"瘂\",\n\t\"痨\": \"癆\",\n\t\"痪\": \"瘓\",\n\t\"痫\": \"癇\",\n\t\"痴\": \"痴\",\n\t\"瘅\": \"癉\",\n\t\"瘆\": \"瘮\",\n\t\"瘗\": \"瘞\",\n\t\"瘘\": \"瘺\",\n\t\"瘪\": \"癟\",\n\t\"瘫\": \"癱\",\n\t\"瘾\": \"癮\",\n\t\"瘿\": \"癭\",\n\t\"癞\": \"癩\",\n\t\"癣\": \"癬\",\n\t\"癫\": \"癲\",\n\t\"癯\": \"臒\",\n\t\"皑\": \"皚\",\n\t\"皱\": \"皺\",\n\t\"皲\": \"皸\",\n\t\"盏\": \"盞\",\n\t\"盐\": \"鹽\",\n\t\"监\": \"監\",\n\t\"盖\": \"蓋\",\n\t\"盗\": \"盜\",\n\t\"荡\": \"蕩\",\n\t\"眍\": \"瞘\",\n\t\"视\": \"視\",\n\t\"眦\": \"眥\",\n\t\"眬\": \"矓\",\n\t\"着\": \"著\",\n\t\"睁\": \"睜\",\n\t\"睐\": \"睞\",\n\t\"睑\": \"瞼\",\n\t\"瞆\": \"瞶\",\n\t\"瞒\": \"瞞\",\n\t\"瞩\": \"矚\",\n\t\"矫\": \"矯\",\n\t\"矶\": \"磯\",\n\t\"硅\": \"硅\",\n\t\"矾\": \"礬\",\n\t\"矿\": \"礦\",\n\t\"砀\": \"碭\",\n\t\"码\": \"碼\",\n\t\"砗\": \"硨\",\n\t\"砚\": \"硯\",\n\t\"砜\": \"碸\",\n\t\"砺\": \"礪\",\n\t\"砻\": \"礱\",\n\t\"砾\": \"礫\",\n\t\"础\": \"礎\",\n\t\"硁\": \"硜\",\n\t\"硕\": \"碩\",\n\t\"硖\": \"硤\",\n\t\"硙\": \"磑\",\n\t\"硚\": \"礄\",\n\t\"确\": \"確\",\n\t\"碜\": \"磣\",\n\t\"硷\": \"鹼\",\n\t\"碍\": \"礙\",\n\t\"碛\": \"磧\",\n\t\"碹\": \"碹\",\n\t\"磙\": \"滾\",\n\t\"礼\": \"禮\",\n\t\"祎\": \"禕\",\n\t\"祢\": \"禰\",\n\t\"祯\": \"禎\",\n\t\"祷\": \"禱\",\n\t\"祸\": \"禍\",\n\t\"禄\": \"祿\",\n\t\"禀\": \"稟\",\n\t\"禅\": \"禪\",\n\t\"离\": \"離\",\n\t\"秃\": \"禿\",\n\t\"秆\": \"稈\",\n\t\"籼\": \"秈\",\n\t\"种\": \"種\",\n\t\"积\": \"積\",\n\t\"称\": \"稱\",\n\t\"秽\": \"穢\",\n\t\"秾\": \"穠\",\n\t\"税\": \"稅\",\n\t\"稆\": \"穭\",\n\t\"稣\": \"穌\",\n\t\"稳\": \"穩\",\n\t\"谷\": \"穀\",\n\t\"颖\": \"穎\",\n\t\"穑\": \"穡\",\n\t\"颓\": \"穨\",\n\t\"穷\": \"窮\",\n\t\"窃\": \"竊\",\n\t\"窍\": \"竅\",\n\t\"窑\": \"窯\",\n\t\"窜\": \"竄\",\n\t\"窝\": \"窩\",\n\t\"窥\": \"窺\",\n\t\"窦\": \"竇\",\n\t\"窭\": \"窶\",\n\t\"竖\": \"豎\",\n\t\"竞\": \"競\",\n\t\"笃\": \"篤\",\n\t\"笋\": \"筍\",\n\t\"笔\": \"筆\",\n\t\"笕\": \"筧\",\n\t\"笼\": \"籠\",\n\t\"笾\": \"籩\",\n\t\"筑\": \"築\",\n\t\"筚\": \"篳\",\n\t\"筛\": \"篩\",\n\t\"筜\": \"簹\",\n\t\"筝\": \"箏\",\n\t\"筹\": \"籌\",\n\t\"签\": \"簽\",\n\t\"简\": \"簡\",\n\t\"箓\": \"籙\",\n\t\"箦\": \"簀\",\n\t\"箧\": \"篋\",\n\t\"箨\": \"籜\",\n\t\"箩\": \"籮\",\n\t\"箪\": \"簞\",\n\t\"箫\": \"簫\",\n\t\"节\": \"節\",\n\t\"范\": \"範\",\n\t\"篑\": \"簣\",\n\t\"篓\": \"簍\",\n\t\"篮\": \"籃\",\n\t\"篱\": \"籬\",\n\t\"簖\": \"籪\",\n\t\"籁\": \"籟\",\n\t\"钥\": \"鑰\",\n\t\"籴\": \"糴\",\n\t\"类\": \"類\",\n\t\"粜\": \"糶\",\n\t\"粝\": \"糲\",\n\t\"粤\": \"粵\",\n\t\"粪\": \"糞\",\n\t\"粮\": \"糧\",\n\t\"糁\": \"糝\",\n\t\"糇\": \"餱\",\n\t\"纟\": \"糹\",\n\t\"纠\": \"糾\",\n\t\"纪\": \"紀\",\n\t\"纣\": \"紂\",\n\t\"约\": \"約\",\n\t\"红\": \"紅\",\n\t\"纡\": \"紆\",\n\t\"纥\": \"紇\",\n\t\"纨\": \"紈\",\n\t\"纫\": \"紉\",\n\t\"纹\": \"紋\",\n\t\"纳\": \"納\",\n\t\"纽\": \"紐\",\n\t\"纾\": \"紓\",\n\t\"纯\": \"純\",\n\t\"纰\": \"紕\",\n\t\"纼\": \"紖\",\n\t\"纱\": \"紗\",\n\t\"纮\": \"紘\",\n\t\"纸\": \"紙\",\n\t\"级\": \"級\",\n\t\"纷\": \"紛\",\n\t\"纭\": \"紜\",\n\t\"纴\": \"紝\",\n\t\"纺\": \"紡\",\n\t\"紧\": \"緊\",\n\t\"细\": \"細\",\n\t\"绂\": \"紱\",\n\t\"绁\": \"紲\",\n\t\"绅\": \"紳\",\n\t\"纻\": \"紵\",\n\t\"绍\": \"紹\",\n\t\"绀\": \"紺\",\n\t\"绋\": \"紼\",\n\t\"绐\": \"紿\",\n\t\"绌\": \"絀\",\n\t\"终\": \"終\",\n\t\"组\": \"組\",\n\t\"绊\": \"絆\",\n\t\"绗\": \"絎\",\n\t\"结\": \"結\",\n\t\"绝\": \"絕\",\n\t\"绦\": \"絛\",\n\t\"绔\": \"絝\",\n\t\"绞\": \"絞\",\n\t\"络\": \"絡\",\n\t\"绚\": \"絢\",\n\t\"给\": \"給\",\n\t\"绖\": \"絰\",\n\t\"统\": \"統\",\n\t\"绛\": \"絳\",\n\t\"絷\": \"縶\",\n\t\"绢\": \"絹\",\n\t\"绑\": \"綁\",\n\t\"绡\": \"綃\",\n\t\"绠\": \"綆\",\n\t\"绨\": \"綈\",\n\t\"绣\": \"綉\",\n\t\"绤\": \"綌\",\n\t\"绥\": \"綏\",\n\t\"经\": \"經\",\n\t\"综\": \"綜\",\n\t\"缍\": \"綞\",\n\t\"绿\": \"綠\",\n\t\"绸\": \"綢\",\n\t\"绻\": \"綣\",\n\t\"线\": \"線\",\n\t\"绶\": \"綬\",\n\t\"维\": \"維\",\n\t\"绹\": \"綯\",\n\t\"绾\": \"綰\",\n\t\"纲\": \"綱\",\n\t\"网\": \"網\",\n\t\"绷\": \"綳\",\n\t\"缀\": \"綴\",\n\t\"纶\": \"綸\",\n\t\"绺\": \"綹\",\n\t\"绮\": \"綺\",\n\t\"绽\": \"綻\",\n\t\"绰\": \"綽\",\n\t\"绫\": \"綾\",\n\t\"绵\": \"綿\",\n\t\"绲\": \"緄\",\n\t\"缁\": \"緇\",\n\t\"绯\": \"緋\",\n\t\"缗\": \"緡\",\n\t\"绪\": \"緒\",\n\t\"绬\": \"緓\",\n\t\"绱\": \"緔\",\n\t\"缃\": \"緗\",\n\t\"缄\": \"緘\",\n\t\"缂\": \"緙\",\n\t\"缉\": \"緝\",\n\t\"缎\": \"緞\",\n\t\"缔\": \"締\",\n\t\"缘\": \"緣\",\n\t\"缌\": \"緦\",\n\t\"编\": \"編\",\n\t\"缓\": \"緩\",\n\t\"缅\": \"緬\",\n\t\"纬\": \"緯\",\n\t\"缑\": \"緱\",\n\t\"缈\": \"緲\",\n\t\"练\": \"練\",\n\t\"缏\": \"緶\",\n\t\"缇\": \"緹\",\n\t\"缊\": \"縕\",\n\t\"萦\": \"縈\",\n\t\"缙\": \"縉\",\n\t\"缢\": \"縊\",\n\t\"缒\": \"縋\",\n\t\"绉\": \"縐\",\n\t\"缣\": \"縑\",\n\t\"缞\": \"縗\",\n\t\"缚\": \"縛\",\n\t\"缜\": \"縝\",\n\t\"缟\": \"縞\",\n\t\"缛\": \"縟\",\n\t\"缝\": \"縫\",\n\t\"缡\": \"縭\",\n\t\"缩\": \"縮\",\n\t\"纵\": \"縱\",\n\t\"缧\": \"縲\",\n\t\"纤\": \"纖\",\n\t\"缦\": \"縵\",\n\t\"缕\": \"縷\",\n\t\"缥\": \"縹\",\n\t\"缫\": \"繅\",\n\t\"缪\": \"繆\",\n\t\"襁\": \"繈\",\n\t\"缯\": \"繒\",\n\t\"织\": \"織\",\n\t\"缮\": \"繕\",\n\t\"缭\": \"繚\",\n\t\"绕\": \"繞\",\n\t\"缋\": \"繢\",\n\t\"绳\": \"繩\",\n\t\"绘\": \"繪\",\n\t\"茧\": \"繭\",\n\t\"缰\": \"繮\",\n\t\"缳\": \"繯\",\n\t\"缲\": \"繰\",\n\t\"缴\": \"繳\",\n\t\"绎\": \"繹\",\n\t\"继\": \"繼\",\n\t\"缤\": \"繽\",\n\t\"缱\": \"繾\",\n\t\"颣\": \"纇\",\n\t\"缬\": \"纈\",\n\t\"纩\": \"纊\",\n\t\"续\": \"續\",\n\t\"缠\": \"纏\",\n\t\"缨\": \"纓\",\n\t\"缵\": \"纘\",\n\t\"缆\": \"纜\",\n\t\"缐\": \"線\",\n\t\"钵\": \"缽\",\n\t\"罚\": \"罰\",\n\t\"罢\": \"罷\",\n\t\"罴\": \"羆\",\n\t\"骂\": \"罵\",\n\t\"羁\": \"羈\",\n\t\"芈\": \"羋\",\n\t\"羟\": \"羥\",\n\t\"羡\": \"羨\",\n\t\"翘\": \"翹\",\n\t\"翙\": \"翽\",\n\t\"翚\": \"翬\",\n\t\"锄\": \"鋤\",\n\t\"耢\": \"耮\",\n\t\"耧\": \"耬\",\n\t\"耸\": \"聳\",\n\t\"聂\": \"聶\",\n\t\"聋\": \"聾\",\n\t\"职\": \"職\",\n\t\"聍\": \"聹\",\n\t\"联\": \"聯\",\n\t\"闻\": \"聞\",\n\t\"聩\": \"聵\",\n\t\"聪\": \"聰\",\n\t\"肃\": \"肅\",\n\t\"肠\": \"腸\",\n\t\"肤\": \"膚\",\n\t\"肷\": \"膁\",\n\t\"肾\": \"腎\",\n\t\"肿\": \"腫\",\n\t\"胀\": \"脹\",\n\t\"胁\": \"脅\",\n\t\"胆\": \"膽\",\n\t\"胨\": \"腖\",\n\t\"胪\": \"臚\",\n\t\"胫\": \"脛\",\n\t\"胶\": \"膠\",\n\t\"脉\": \"脈\",\n\t\"脍\": \"膾\",\n\t\"脏\": \"髒\",\n\t\"脐\": \"臍\",\n\t\"脑\": \"腦\",\n\t\"脓\": \"膿\",\n\t\"脔\": \"臠\",\n\t\"脚\": \"腳\",\n\t\"脱\": \"脫\",\n\t\"脶\": \"腡\",\n\t\"脸\": \"臉\",\n\t\"腊\": \"臘\",\n\t\"腌\": \"醃\",\n\t\"腘\": \"膕\",\n\t\"腭\": \"齶\",\n\t\"腻\": \"膩\",\n\t\"腼\": \"靦\",\n\t\"腽\": \"膃\",\n\t\"腾\": \"騰\",\n\t\"膑\": \"臏\",\n\t\"臜\": \"臢\",\n\t\"舆\": \"輿\",\n\t\"铺\": \"鋪\",\n\t\"馆\": \"館\",\n\t\"舣\": \"艤\",\n\t\"舰\": \"艦\",\n\t\"舱\": \"艙\",\n\t\"舻\": \"艫\",\n\t\"艰\": \"艱\",\n\t\"艳\": \"艷\",\n\t\"艹\": \"艸\",\n\t\"艺\": \"藝\",\n\t\"芗\": \"薌\",\n\t\"芜\": \"蕪\",\n\t\"芦\": \"蘆\",\n\t\"苁\": \"蓯\",\n\t\"苇\": \"葦\",\n\t\"苈\": \"藶\",\n\t\"苋\": \"莧\",\n\t\"苌\": \"萇\",\n\t\"苍\": \"蒼\",\n\t\"苎\": \"苧\",\n\t\"苹\": \"蘋\",\n\t\"茎\": \"莖\",\n\t\"茏\": \"蘢\",\n\t\"茑\": \"蔦\",\n\t\"荆\": \"荊\",\n\t\"荐\": \"薦\",\n\t\"荙\": \"薘\",\n\t\"荚\": \"莢\",\n\t\"荛\": \"蕘\",\n\t\"荜\": \"蓽\",\n\t\"荞\": \"蕎\",\n\t\"荟\": \"薈\",\n\t\"荠\": \"薺\",\n\t\"荤\": \"葷\",\n\t\"荨\": \"蕁\",\n\t\"荩\": \"藎\",\n\t\"荪\": \"蓀\",\n\t\"荬\": \"蕒\",\n\t\"荭\": \"葒\",\n\t\"荮\": \"葤\",\n\t\"药\": \"藥\",\n\t\"莜\": \"蓧\",\n\t\"莱\": \"萊\",\n\t\"莲\": \"蓮\",\n\t\"莳\": \"蒔\",\n\t\"莴\": \"萵\",\n\t\"莶\": \"薟\",\n\t\"莸\": \"蕕\",\n\t\"莺\": \"鶯\",\n\t\"莼\": \"蓴\",\n\t\"萚\": \"蘀\",\n\t\"萝\": \"蘿\",\n\t\"萤\": \"螢\",\n\t\"萧\": \"蕭\",\n\t\"萨\": \"薩\",\n\t\"葱\": \"蔥\",\n\t\"蒇\": \"蕆\",\n\t\"蒉\": \"蕢\",\n\t\"蒋\": \"蔣\",\n\t\"蒌\": \"蔞\",\n\t\"蓝\": \"藍\",\n\t\"蓟\": \"薊\",\n\t\"蓠\": \"蘺\",\n\t\"蓣\": \"蕷\",\n\t\"蓥\": \"鎣\",\n\t\"蓦\": \"驀\",\n\t\"蔷\": \"薔\",\n\t\"蔹\": \"蘞\",\n\t\"蔺\": \"藺\",\n\t\"蔼\": \"藹\",\n\t\"蕲\": \"蘄\",\n\t\"蕴\": \"蘊\",\n\t\"薮\": \"藪\",\n\t\"藁\": \"槁\",\n\t\"藓\": \"蘚\",\n\t\"虏\": \"虜\",\n\t\"虚\": \"虛\",\n\t\"虫\": \"蟲\",\n\t\"虬\": \"虯\",\n\t\"虮\": \"蟣\",\n\t\"虽\": \"雖\",\n\t\"虾\": \"蝦\",\n\t\"虿\": \"蠆\",\n\t\"蚀\": \"蝕\",\n\t\"蚁\": \"蟻\",\n\t\"蚂\": \"螞\",\n\t\"蚕\": \"蠶\",\n\t\"蚝\": \"蠔\",\n\t\"蚬\": \"蜆\",\n\t\"蛊\": \"蠱\",\n\t\"蛎\": \"蠣\",\n\t\"蛏\": \"蟶\",\n\t\"蛮\": \"蠻\",\n\t\"蛰\": \"蟄\",\n\t\"蛱\": \"蛺\",\n\t\"蛲\": \"蟯\",\n\t\"蛳\": \"螄\",\n\t\"蛴\": \"蠐\",\n\t\"蜕\": \"蛻\",\n\t\"蜗\": \"蝸\",\n\t\"蜡\": \"蠟\",\n\t\"蝇\": \"蠅\",\n\t\"蝈\": \"蟈\",\n\t\"蝉\": \"蟬\",\n\t\"蝎\": \"蠍\",\n\t\"蝼\": \"螻\",\n\t\"蝾\": \"蠑\",\n\t\"螀\": \"螿\",\n\t\"螨\": \"蟎\",\n\t\"蟏\": \"蠨\",\n\t\"衅\": \"釁\",\n\t\"补\": \"補\",\n\t\"衬\": \"襯\",\n\t\"衮\": \"袞\",\n\t\"袄\": \"襖\",\n\t\"袆\": \"褘\",\n\t\"袜\": \"襪\",\n\t\"袭\": \"襲\",\n\t\"袯\": \"襏\",\n\t\"装\": \"裝\",\n\t\"裆\": \"襠\",\n\t\"裈\": \"褌\",\n\t\"里\": \"裡\",\n\t\"裢\": \"褳\",\n\t\"裣\": \"襝\",\n\t\"裤\": \"褲\",\n\t\"裥\": \"襇\",\n\t\"褛\": \"褸\",\n\t\"褴\": \"襤\",\n\t\"见\": \"見\",\n\t\"觃\": \"覎\",\n\t\"觅\": \"覓\",\n\t\"觇\": \"覘\",\n\t\"觋\": \"覡\",\n\t\"觍\": \"覥\",\n\t\"觎\": \"覦\",\n\t\"觊\": \"覬\",\n\t\"觏\": \"覯\",\n\t\"觑\": \"覷\",\n\t\"觐\": \"覲\",\n\t\"觉\": \"覺\",\n\t\"览\": \"覽\",\n\t\"觌\": \"覿\",\n\t\"观\": \"觀\",\n\t\"觞\": \"觴\",\n\t\"触\": \"觸\",\n\t\"觯\": \"觶\",\n\t\"讠\": \"訁\",\n\t\"订\": \"訂\",\n\t\"讣\": \"訃\",\n\t\"计\": \"計\",\n\t\"讯\": \"訊\",\n\t\"讧\": \"訌\",\n\t\"讨\": \"討\",\n\t\"讦\": \"訐\",\n\t\"讱\": \"訒\",\n\t\"训\": \"訓\",\n\t\"讪\": \"訕\",\n\t\"讫\": \"訖\",\n\t\"记\": \"記\",\n\t\"讹\": \"訛\",\n\t\"讶\": \"訝\",\n\t\"讼\": \"訟\",\n\t\"诀\": \"訣\",\n\t\"讷\": \"訥\",\n\t\"谌\": \"諶\",\n\t\"讻\": \"訩\",\n\t\"访\": \"訪\",\n\t\"设\": \"設\",\n\t\"许\": \"許\",\n\t\"诉\": \"訴\",\n\t\"诃\": \"訶\",\n\t\"诊\": \"診\",\n\t\"证\": \"證\",\n\t\"诂\": \"詁\",\n\t\"诋\": \"詆\",\n\t\"讵\": \"詎\",\n\t\"诈\": \"詐\",\n\t\"诒\": \"詒\",\n\t\"诏\": \"詔\",\n\t\"评\": \"評\",\n\t\"诐\": \"詖\",\n\t\"诇\": \"詗\",\n\t\"诎\": \"詘\",\n\t\"诅\": \"詛\",\n\t\"词\": \"詞\",\n\t\"詟\": \"讋\",\n\t\"诩\": \"詡\",\n\t\"询\": \"詢\",\n\t\"诣\": \"詣\",\n\t\"试\": \"試\",\n\t\"诗\": \"詩\",\n\t\"诧\": \"詫\",\n\t\"诟\": \"詬\",\n\t\"诡\": \"詭\",\n\t\"诠\": \"詮\",\n\t\"诘\": \"詰\",\n\t\"话\": \"話\",\n\t\"该\": \"該\",\n\t\"详\": \"詳\",\n\t\"诜\": \"詵\",\n\t\"诙\": \"詼\",\n\t\"诖\": \"詿\",\n\t\"诔\": \"誄\",\n\t\"诛\": \"誅\",\n\t\"诓\": \"誆\",\n\t\"誉\": \"譽\",\n\t\"誊\": \"謄\",\n\t\"认\": \"認\",\n\t\"诳\": \"誑\",\n\t\"诶\": \"誒\",\n\t\"诞\": \"誕\",\n\t\"诱\": \"誘\",\n\t\"诮\": \"誚\",\n\t\"语\": \"語\",\n\t\"诚\": \"誠\",\n\t\"诫\": \"誡\",\n\t\"诬\": \"誣\",\n\t\"误\": \"誤\",\n\t\"诰\": \"誥\",\n\t\"诵\": \"誦\",\n\t\"诲\": \"誨\",\n\t\"说\": \"說\",\n\t\"谁\": \"誰\",\n\t\"课\": \"課\",\n\t\"谇\": \"誶\",\n\t\"诽\": \"誹\",\n\t\"谊\": \"誼\",\n\t\"调\": \"調\",\n\t\"谄\": \"諂\",\n\t\"谆\": \"諄\",\n\t\"谈\": \"談\",\n\t\"诿\": \"諉\",\n\t\"请\": \"請\",\n\t\"诤\": \"諍\",\n\t\"诹\": \"諏\",\n\t\"诼\": \"諑\",\n\t\"谅\": \"諒\",\n\t\"论\": \"論\",\n\t\"谂\": \"諗\",\n\t\"谀\": \"諛\",\n\t\"谍\": \"諜\",\n\t\"谞\": \"諝\",\n\t\"谝\": \"諞\",\n\t\"谥\": \"謚\",\n\t\"诨\": \"諢\",\n\t\"谔\": \"諤\",\n\t\"谛\": \"諦\",\n\t\"谐\": \"諧\",\n\t\"谏\": \"諫\",\n\t\"谕\": \"諭\",\n\t\"讳\": \"諱\",\n\t\"谙\": \"諳\",\n\t\"讽\": \"諷\",\n\t\"诸\": \"諸\",\n\t\"谚\": \"諺\",\n\t\"谖\": \"諼\",\n\t\"诺\": \"諾\",\n\t\"谋\": \"謀\",\n\t\"谒\": \"謁\",\n\t\"谓\": \"謂\",\n\t\"诌\": \"謅\",\n\t\"谎\": \"謊\",\n\t\"谜\": \"謎\",\n\t\"谧\": \"謐\",\n\t\"谑\": \"謔\",\n\t\"谡\": \"謖\",\n\t\"谤\": \"謗\",\n\t\"谦\": \"謙\",\n\t\"讲\": \"講\",\n\t\"谢\": \"謝\",\n\t\"谣\": \"謠\",\n\t\"谟\": \"謨\",\n\t\"谪\": \"謫\",\n\t\"谬\": \"謬\",\n\t\"讴\": \"謳\",\n\t\"谨\": \"謹\",\n\t\"谩\": \"謾\",\n\t\"谲\": \"譎\",\n\t\"讥\": \"譏\",\n\t\"谮\": \"譖\",\n\t\"识\": \"識\",\n\t\"谯\": \"譙\",\n\t\"谭\": \"譚\",\n\t\"谱\": \"譜\",\n\t\"谵\": \"譫\",\n\t\"译\": \"譯\",\n\t\"议\": \"議\",\n\t\"谴\": \"譴\",\n\t\"诪\": \"譸\",\n\t\"谫\": \"譾\",\n\t\"读\": \"讀\",\n\t\"雠\": \"讎\",\n\t\"谗\": \"讒\",\n\t\"让\": \"讓\",\n\t\"谰\": \"讕\",\n\t\"谶\": \"讖\",\n\t\"赞\": \"贊\",\n\t\"谠\": \"讜\",\n\t\"谳\": \"讞\",\n\t\"谘\": \"諮\",\n\t\"豮\": \"豶\",\n\t\"贝\": \"貝\",\n\t\"贞\": \"貞\",\n\t\"贠\": \"貟\",\n\t\"负\": \"負\",\n\t\"财\": \"財\",\n\t\"贡\": \"貢\",\n\t\"贫\": \"貧\",\n\t\"货\": \"貨\",\n\t\"贩\": \"販\",\n\t\"贪\": \"貪\",\n\t\"贯\": \"貫\",\n\t\"责\": \"責\",\n\t\"贮\": \"貯\",\n\t\"贳\": \"貰\",\n\t\"赀\": \"貲\",\n\t\"贰\": \"貳\",\n\t\"贵\": \"貴\",\n\t\"贬\": \"貶\",\n\t\"贷\": \"貸\",\n\t\"贶\": \"貺\",\n\t\"费\": \"費\",\n\t\"贴\": \"貼\",\n\t\"贻\": \"貽\",\n\t\"贸\": \"貿\",\n\t\"贺\": \"賀\",\n\t\"贲\": \"賁\",\n\t\"赂\": \"賂\",\n\t\"赁\": \"賃\",\n\t\"贿\": \"賄\",\n\t\"赅\": \"賅\",\n\t\"资\": \"資\",\n\t\"贾\": \"賈\",\n\t\"贼\": \"賊\",\n\t\"赃\": \"贓\",\n\t\"赈\": \"賑\",\n\t\"赊\": \"賒\",\n\t\"赇\": \"賕\",\n\t\"赒\": \"賙\",\n\t\"赉\": \"賚\",\n\t\"赐\": \"賜\",\n\t\"赏\": \"賞\",\n\t\"赔\": \"賠\",\n\t\"赓\": \"賡\",\n\t\"贤\": \"賢\",\n\t\"贱\": \"賤\",\n\t\"赋\": \"賦\",\n\t\"赕\": \"賧\",\n\t\"质\": \"質\",\n\t\"赍\": \"賫\",\n\t\"账\": \"賬\",\n\t\"赌\": \"賭\",\n\t\"赆\": \"贐\",\n\t\"赖\": \"賴\",\n\t\"赗\": \"賵\",\n\t\"赚\": \"賺\",\n\t\"赙\": \"賻\",\n\t\"购\": \"購\",\n\t\"赛\": \"賽\",\n\t\"赜\": \"賾\",\n\t\"贽\": \"贄\",\n\t\"赘\": \"贅\",\n\t\"赟\": \"贇\",\n\t\"赠\": \"贈\",\n\t\"赝\": \"贋\",\n\t\"赡\": \"贍\",\n\t\"赢\": \"贏\",\n\t\"赑\": \"贔\",\n\t\"赎\": \"贖\",\n\t\"赣\": \"贛\",\n\t\"赪\": \"赬\",\n\t\"赵\": \"趙\",\n\t\"赶\": \"趕\",\n\t\"趋\": \"趨\",\n\t\"趱\": \"趲\",\n\t\"趸\": \"躉\",\n\t\"跃\": \"躍\",\n\t\"跄\": \"蹌\",\n\t\"跖\": \"跖\",\n\t\"跞\": \"躒\",\n\t\"迹\": \"跡\",\n\t\"践\": \"踐\",\n\t\"跶\": \"躂\",\n\t\"跷\": \"蹺\",\n\t\"跸\": \"蹕\",\n\t\"跹\": \"躚\",\n\t\"跻\": \"躋\",\n\t\"踊\": \"踴\",\n\t\"踌\": \"躊\",\n\t\"踪\": \"蹤\",\n\t\"踬\": \"躓\",\n\t\"踯\": \"躑\",\n\t\"蹑\": \"躡\",\n\t\"蹒\": \"蹣\",\n\t\"蹰\": \"躕\",\n\t\"蹿\": \"躥\",\n\t\"躏\": \"躪\",\n\t\"躜\": \"躦\",\n\t\"躯\": \"軀\",\n\t\"车\": \"車\",\n\t\"轧\": \"軋\",\n\t\"轨\": \"軌\",\n\t\"轪\": \"軑\",\n\t\"轩\": \"軒\",\n\t\"轫\": \"軔\",\n\t\"轭\": \"軛\",\n\t\"软\": \"軟\",\n\t\"轷\": \"軤\",\n\t\"轸\": \"軫\",\n\t\"轱\": \"軲\",\n\t\"轴\": \"軸\",\n\t\"轵\": \"軹\",\n\t\"轺\": \"軺\",\n\t\"轲\": \"軻\",\n\t\"轶\": \"軼\",\n\t\"轼\": \"軾\",\n\t\"较\": \"較\",\n\t\"辂\": \"輅\",\n\t\"辁\": \"輇\",\n\t\"辀\": \"輈\",\n\t\"载\": \"載\",\n\t\"轾\": \"輊\",\n\t\"辄\": \"輒\",\n\t\"辅\": \"輔\",\n\t\"轻\": \"輕\",\n\t\"辆\": \"輛\",\n\t\"辎\": \"輜\",\n\t\"辋\": \"輞\",\n\t\"辍\": \"輟\",\n\t\"辊\": \"輥\",\n\t\"辇\": \"輦\",\n\t\"辈\": \"輩\",\n\t\"轮\": \"輪\",\n\t\"辌\": \"輬\",\n\t\"辑\": \"輯\",\n\t\"辏\": \"輳\",\n\t\"输\": \"輸\",\n\t\"辐\": \"輻\",\n\t\"辒\": \"轀\",\n\t\"辗\": \"輾\",\n\t\"辖\": \"轄\",\n\t\"辕\": \"轅\",\n\t\"辘\": \"轆\",\n\t\"转\": \"轉\",\n\t\"辙\": \"轍\",\n\t\"轿\": \"轎\",\n\t\"辚\": \"轔\",\n\t\"轰\": \"轟\",\n\t\"辔\": \"轡\",\n\t\"轹\": \"轢\",\n\t\"轳\": \"轤\",\n\t\"辞\": \"辭\",\n\t\"辩\": \"辯\",\n\t\"辫\": \"辮\",\n\t\"边\": \"邊\",\n\t\"辽\": \"遼\",\n\t\"达\": \"達\",\n\t\"迁\": \"遷\",\n\t\"过\": \"過\",\n\t\"迈\": \"邁\",\n\t\"运\": \"運\",\n\t\"还\": \"還\",\n\t\"这\": \"這\",\n\t\"进\": \"進\",\n\t\"远\": \"遠\",\n\t\"违\": \"違\",\n\t\"连\": \"連\",\n\t\"迟\": \"遲\",\n\t\"迩\": \"邇\",\n\t\"迳\": \"逕\",\n\t\"适\": \"適\",\n\t\"选\": \"選\",\n\t\"逊\": \"遜\",\n\t\"递\": \"遞\",\n\t\"逦\": \"邐\",\n\t\"逻\": \"邏\",\n\t\"遗\": \"遺\",\n\t\"遥\": \"遙\",\n\t\"邓\": \"鄧\",\n\t\"邝\": \"鄺\",\n\t\"邬\": \"鄔\",\n\t\"邮\": \"郵\",\n\t\"邹\": \"鄒\",\n\t\"邺\": \"鄴\",\n\t\"邻\": \"鄰\",\n\t\"郁\": \"郁\",\n\t\"郄\": \"郤\",\n\t\"郏\": \"郟\",\n\t\"郐\": \"鄶\",\n\t\"郑\": \"鄭\",\n\t\"郓\": \"鄆\",\n\t\"郦\": \"酈\",\n\t\"郧\": \"鄖\",\n\t\"郸\": \"鄲\",\n\t\"酝\": \"醞\",\n\t\"酦\": \"醱\",\n\t\"酰\": \"醯\",\n\t\"酱\": \"醬\",\n\t\"酽\": \"釅\",\n\t\"酾\": \"釃\",\n\t\"酿\": \"釀\",\n\t\"释\": \"釋\",\n\t\"钆\": \"釓\",\n\t\"钇\": \"釔\",\n\t\"钌\": \"釕\",\n\t\"钊\": \"釗\",\n\t\"钉\": \"釘\",\n\t\"钋\": \"釙\",\n\t\"针\": \"針\",\n\t\"钓\": \"釣\",\n\t\"钐\": \"釤\",\n\t\"钏\": \"釧\",\n\t\"钒\": \"釩\",\n\t\"钗\": \"釵\",\n\t\"钍\": \"釷\",\n\t\"钕\": \"釹\",\n\t\"钎\": \"釺\",\n\t\"钯\": \"鈀\",\n\t\"钫\": \"鈁\",\n\t\"钘\": \"鈃\",\n\t\"钭\": \"鈄\",\n\t\"钚\": \"鈈\",\n\t\"钠\": \"鈉\",\n\t\"钝\": \"鈍\",\n\t\"钩\": \"鈎\",\n\t\"钤\": \"鈐\",\n\t\"钣\": \"鈑\",\n\t\"钑\": \"鈒\",\n\t\"钞\": \"鈔\",\n\t\"钮\": \"鈕\",\n\t\"钧\": \"鈞\",\n\t\"钟\": \"鐘\",\n\t\"钙\": \"鈣\",\n\t\"钬\": \"鈥\",\n\t\"钛\": \"鈦\",\n\t\"钪\": \"鈧\",\n\t\"铌\": \"鈮\",\n\t\"铈\": \"鈰\",\n\t\"钶\": \"鈳\",\n\t\"铃\": \"鈴\",\n\t\"钴\": \"鈷\",\n\t\"钹\": \"鈸\",\n\t\"铍\": \"鈹\",\n\t\"钰\": \"鈺\",\n\t\"钸\": \"鈽\",\n\t\"铀\": \"鈾\",\n\t\"钿\": \"鈿\",\n\t\"钾\": \"鉀\",\n\t\"铁\": \"鐵\",\n\t\"钻\": \"鑽\",\n\t\"铊\": \"鉈\",\n\t\"铉\": \"鉉\",\n\t\"铋\": \"鉍\",\n\t\"铂\": \"鉑\",\n\t\"钷\": \"鉕\",\n\t\"钳\": \"鉗\",\n\t\"铆\": \"鉚\",\n\t\"铅\": \"鉛\",\n\t\"钺\": \"鉞\",\n\t\"钲\": \"鉦\",\n\t\"钼\": \"鉬\",\n\t\"钽\": \"鉭\",\n\t\"锎\": \"鐦\",\n\t\"鉴\": \"鑑\",\n\t\"铏\": \"鉶\",\n\t\"铰\": \"鉸\",\n\t\"铒\": \"鉺\",\n\t\"铬\": \"鉻\",\n\t\"铪\": \"鉿\",\n\t\"银\": \"銀\",\n\t\"铳\": \"銃\",\n\t\"铜\": \"銅\",\n\t\"铚\": \"銍\",\n\t\"铣\": \"銑\",\n\t\"铨\": \"銓\",\n\t\"铢\": \"銖\",\n\t\"铭\": \"銘\",\n\t\"铫\": \"銚\",\n\t\"铦\": \"銛\",\n\t\"铑\": \"銠\",\n\t\"铷\": \"銣\",\n\t\"铱\": \"銥\",\n\t\"铟\": \"銦\",\n\t\"铵\": \"銨\",\n\t\"铥\": \"銩\",\n\t\"铕\": \"銪\",\n\t\"铯\": \"銫\",\n\t\"铐\": \"銬\",\n\t\"銮\": \"鑾\",\n\t\"铞\": \"銱\",\n\t\"锐\": \"銳\",\n\t\"销\": \"銷\",\n\t\"锈\": \"銹\",\n\t\"锑\": \"銻\",\n\t\"锉\": \"銼\",\n\t\"铝\": \"鋁\",\n\t\"镅\": \"鎇\",\n\t\"锒\": \"鋃\",\n\t\"锌\": \"鋅\",\n\t\"钡\": \"鋇\",\n\t\"铤\": \"鋌\",\n\t\"铗\": \"鋏\",\n\t\"锋\": \"鋒\",\n\t\"铻\": \"鋙\",\n\t\"镯\": \"鐲\",\n\t\"锊\": \"鋝\",\n\t\"锓\": \"鋟\",\n\t\"铘\": \"鋣\",\n\t\"锃\": \"鋥\",\n\t\"锔\": \"鋦\",\n\t\"锇\": \"鋨\",\n\t\"铓\": \"鋩\",\n\t\"铖\": \"鋮\",\n\t\"锆\": \"鋯\",\n\t\"锂\": \"鋰\",\n\t\"铽\": \"鋱\",\n\t\"锍\": \"鋶\",\n\t\"锯\": \"鋸\",\n\t\"钢\": \"鋼\",\n\t\"锞\": \"錁\",\n\t\"锖\": \"錆\",\n\t\"锫\": \"錇\",\n\t\"锩\": \"錈\",\n\t\"铔\": \"錏\",\n\t\"锥\": \"錐\",\n\t\"锕\": \"錒\",\n\t\"锟\": \"錕\",\n\t\"锤\": \"錘\",\n\t\"锱\": \"錙\",\n\t\"铮\": \"錚\",\n\t\"锛\": \"錛\",\n\t\"锬\": \"錟\",\n\t\"锭\": \"錠\",\n\t\"锜\": \"錡\",\n\t\"钱\": \"錢\",\n\t\"锦\": \"錦\",\n\t\"锚\": \"錨\",\n\t\"锠\": \"錩\",\n\t\"锡\": \"錫\",\n\t\"锢\": \"錮\",\n\t\"错\": \"錯\",\n\t\"锰\": \"錳\",\n\t\"铼\": \"錸\",\n\t\"镎\": \"鎿\",\n\t\"錾\": \"鏨\",\n\t\"锝\": \"鍀\",\n\t\"锨\": \"鍁\",\n\t\"锪\": \"鍃\",\n\t\"钔\": \"鍆\",\n\t\"锴\": \"鍇\",\n\t\"锳\": \"鍈\",\n\t\"锅\": \"鍋\",\n\t\"镀\": \"鍍\",\n\t\"锷\": \"鍔\",\n\t\"铡\": \"鍘\",\n\t\"钖\": \"鍚\",\n\t\"锻\": \"鍛\",\n\t\"锽\": \"鍠\",\n\t\"锸\": \"鍤\",\n\t\"锲\": \"鍥\",\n\t\"锘\": \"鍩\",\n\t\"锹\": \"鍬\",\n\t\"锾\": \"鍰\",\n\t\"键\": \"鍵\",\n\t\"锶\": \"鍶\",\n\t\"锗\": \"鍺\",\n\t\"镁\": \"鎂\",\n\t\"锿\": \"鎄\",\n\t\"镑\": \"鎊\",\n\t\"镕\": \"鎔\",\n\t\"锁\": \"鎖\",\n\t\"镉\": \"鎘\",\n\t\"镈\": \"鎛\",\n\t\"镃\": \"鎡\",\n\t\"钨\": \"鎢\",\n\t\"镏\": \"鎦\",\n\t\"铠\": \"鎧\",\n\t\"铩\": \"鎩\",\n\t\"锼\": \"鎪\",\n\t\"镐\": \"鎬\",\n\t\"镇\": \"鎮\",\n\t\"镒\": \"鎰\",\n\t\"镋\": \"鎲\",\n\t\"镍\": \"鎳\",\n\t\"镓\": \"鎵\",\n\t\"镌\": \"鎸\",\n\t\"镞\": \"鏃\",\n\t\"链\": \"鏈\",\n\t\"镆\": \"鏌\",\n\t\"镙\": \"鏍\",\n\t\"镠\": \"鏐\",\n\t\"镝\": \"鏑\",\n\t\"铿\": \"鏗\",\n\t\"锵\": \"鏘\",\n\t\"镗\": \"鏜\",\n\t\"镘\": \"鏝\",\n\t\"镛\": \"鏞\",\n\t\"镜\": \"鏡\",\n\t\"镖\": \"鏢\",\n\t\"镂\": \"鏤\",\n\t\"镚\": \"鏰\",\n\t\"铧\": \"鏵\",\n\t\"镤\": \"鏷\",\n\t\"镪\": \"鏹\",\n\t\"铙\": \"鐃\",\n\t\"铴\": \"鐋\",\n\t\"镣\": \"鐐\",\n\t\"铹\": \"鐒\",\n\t\"镦\": \"鐓\",\n\t\"镡\": \"鐔\",\n\t\"镫\": \"鐙\",\n\t\"镢\": \"鐝\",\n\t\"镨\": \"鐠\",\n\t\"锏\": \"鐧\",\n\t\"镄\": \"鐨\",\n\t\"镰\": \"鐮\",\n\t\"镭\": \"鐳\",\n\t\"镮\": \"鐶\",\n\t\"铎\": \"鐸\",\n\t\"铛\": \"鐺\",\n\t\"镱\": \"鐿\",\n\t\"铸\": \"鑄\",\n\t\"镬\": \"鑊\",\n\t\"镔\": \"鑌\",\n\t\"镲\": \"鑔\",\n\t\"锧\": \"鑕\",\n\t\"镴\": \"鑞\",\n\t\"铄\": \"鑠\",\n\t\"镳\": \"鑣\",\n\t\"镥\": \"鑥\",\n\t\"镧\": \"鑭\",\n\t\"镵\": \"鑱\",\n\t\"镶\": \"鑲\",\n\t\"镊\": \"鑷\",\n\t\"镩\": \"鑹\",\n\t\"锣\": \"鑼\",\n\t\"锺\": \"鍾\",\n\t\"长\": \"長\",\n\t\"门\": \"門\",\n\t\"闩\": \"閂\",\n\t\"闪\": \"閃\",\n\t\"闫\": \"閆\",\n\t\"闬\": \"閈\",\n\t\"闭\": \"閉\",\n\t\"闶\": \"閌\",\n\t\"闳\": \"閎\",\n\t\"闰\": \"閏\",\n\t\"闲\": \"閑\",\n\t\"间\": \"間\",\n\t\"闵\": \"閔\",\n\t\"闹\": \"鬧\",\n\t\"阂\": \"閡\",\n\t\"阁\": \"閣\",\n\t\"阀\": \"閥\",\n\t\"闺\": \"閨\",\n\t\"闽\": \"閩\",\n\t\"阃\": \"閫\",\n\t\"阆\": \"閬\",\n\t\"闾\": \"閭\",\n\t\"阅\": \"閱\",\n\t\"阊\": \"閶\",\n\t\"阉\": \"閹\",\n\t\"阎\": \"閻\",\n\t\"阏\": \"閼\",\n\t\"阍\": \"閽\",\n\t\"阈\": \"閾\",\n\t\"阌\": \"閿\",\n\t\"阒\": \"闃\",\n\t\"闱\": \"闈\",\n\t\"阕\": \"闋\",\n\t\"阑\": \"闌\",\n\t\"阇\": \"闍\",\n\t\"阗\": \"闐\",\n\t\"阘\": \"闒\",\n\t\"闿\": \"闓\",\n\t\"阖\": \"闔\",\n\t\"阙\": \"闕\",\n\t\"闯\": \"闖\",\n\t\"阚\": \"闞\",\n\t\"阓\": \"闠\",\n\t\"阐\": \"闡\",\n\t\"阛\": \"闤\",\n\t\"闼\": \"闥\",\n\t\"阄\": \"鬮\",\n\t\"阋\": \"鬩\",\n\t\"队\": \"隊\",\n\t\"阳\": \"陽\",\n\t\"阴\": \"陰\",\n\t\"阵\": \"陣\",\n\t\"际\": \"際\",\n\t\"陆\": \"陸\",\n\t\"陇\": \"隴\",\n\t\"陈\": \"陳\",\n\t\"陉\": \"陘\",\n\t\"陕\": \"陝\",\n\t\"陧\": \"隉\",\n\t\"陨\": \"隕\",\n\t\"险\": \"險\",\n\t\"随\": \"隨\",\n\t\"隐\": \"隱\",\n\t\"隶\": \"隸\",\n\t\"隽\": \"雋\",\n\t\"难\": \"難\",\n\t\"雏\": \"雛\",\n\t\"鸡\": \"雞\",\n\t\"雳\": \"靂\",\n\t\"雾\": \"霧\",\n\t\"霁\": \"霽\",\n\t\"霉\": \"霉\",\n\t\"霭\": \"靄\",\n\t\"靓\": \"靚\",\n\t\"静\": \"靜\",\n\t\"靥\": \"靨\",\n\t\"韧\": \"韌\",\n\t\"鼗\": \"鞀\",\n\t\"鞑\": \"韃\",\n\t\"鞒\": \"鞽\",\n\t\"鞯\": \"韉\",\n\t\"鞴\": \"韝\",\n\t\"韦\": \"韋\",\n\t\"韨\": \"韍\",\n\t\"韩\": \"韓\",\n\t\"韪\": \"韙\",\n\t\"韬\": \"韜\",\n\t\"韫\": \"韞\",\n\t\"韵\": \"韻\",\n\t\"页\": \"頁\",\n\t\"顶\": \"頂\",\n\t\"顷\": \"頃\",\n\t\"项\": \"項\",\n\t\"顺\": \"順\",\n\t\"顸\": \"頇\",\n\t\"须\": \"須\",\n\t\"顼\": \"頊\",\n\t\"颂\": \"頌\",\n\t\"颀\": \"頎\",\n\t\"颃\": \"頏\",\n\t\"预\": \"預\",\n\t\"顽\": \"頑\",\n\t\"颁\": \"頒\",\n\t\"顿\": \"頓\",\n\t\"颇\": \"頗\",\n\t\"领\": \"領\",\n\t\"颌\": \"頜\",\n\t\"颉\": \"頡\",\n\t\"颐\": \"頤\",\n\t\"颏\": \"頦\",\n\t\"颒\": \"頮\",\n\t\"颊\": \"頰\",\n\t\"颋\": \"頲\",\n\t\"颕\": \"頴\",\n\t\"颔\": \"頷\",\n\t\"颈\": \"頸\",\n\t\"频\": \"頻\",\n\t\"颗\": \"顆\",\n\t\"题\": \"題\",\n\t\"额\": \"額\",\n\t\"颚\": \"顎\",\n\t\"颜\": \"顏\",\n\t\"颙\": \"顒\",\n\t\"颛\": \"顓\",\n\t\"颡\": \"顙\",\n\t\"颠\": \"顛\",\n\t\"颟\": \"顢\",\n\t\"颢\": \"顥\",\n\t\"顾\": \"顧\",\n\t\"颤\": \"顫\",\n\t\"颥\": \"顬\",\n\t\"颦\": \"顰\",\n\t\"颅\": \"顱\",\n\t\"颞\": \"顳\",\n\t\"颧\": \"顴\",\n\t\"风\": \"風\",\n\t\"飐\": \"颭\",\n\t\"飑\": \"颮\",\n\t\"飒\": \"颯\",\n\t\"飓\": \"颶\",\n\t\"飔\": \"颸\",\n\t\"飖\": \"颻\",\n\t\"飕\": \"颼\",\n\t\"飗\": \"飀\",\n\t\"飘\": \"飄\",\n\t\"飙\": \"飆\",\n\t\"飏\": \"颺\",\n\t\"飚\": \"飈\",\n\t\"飞\": \"飛\",\n\t\"饥\": \"飢\",\n\t\"饤\": \"飣\",\n\t\"饦\": \"飥\",\n\t\"飨\": \"饗\",\n\t\"饨\": \"飩\",\n\t\"饪\": \"飪\",\n\t\"饫\": \"飫\",\n\t\"饬\": \"飭\",\n\t\"饭\": \"飯\",\n\t\"饮\": \"飲\",\n\t\"饴\": \"飴\",\n\t\"饲\": \"飼\",\n\t\"饱\": \"飽\",\n\t\"饰\": \"飾\",\n\t\"饳\": \"飿\",\n\t\"饺\": \"餃\",\n\t\"饸\": \"餄\",\n\t\"饼\": \"餅\",\n\t\"饷\": \"餉\",\n\t\"饵\": \"餌\",\n\t\"餍\": \"饜\",\n\t\"饹\": \"餎\",\n\t\"饻\": \"餏\",\n\t\"饽\": \"餑\",\n\t\"馁\": \"餒\",\n\t\"饿\": \"餓\",\n\t\"馂\": \"餕\",\n\t\"饾\": \"餖\",\n\t\"馄\": \"餛\",\n\t\"馃\": \"餜\",\n\t\"饯\": \"餞\",\n\t\"馅\": \"餡\",\n\t\"饧\": \"餳\",\n\t\"馉\": \"餶\",\n\t\"馇\": \"餷\",\n\t\"馎\": \"餺\",\n\t\"饩\": \"餼\",\n\t\"馈\": \"饋\",\n\t\"馏\": \"餾\",\n\t\"馊\": \"餿\",\n\t\"馌\": \"饁\",\n\t\"馍\": \"饃\",\n\t\"馒\": \"饅\",\n\t\"馐\": \"饈\",\n\t\"馑\": \"饉\",\n\t\"馓\": \"饊\",\n\t\"馔\": \"饌\",\n\t\"饶\": \"饒\",\n\t\"馋\": \"饞\",\n\t\"馕\": \"饢\",\n\t\"馀\": \"餘\",\n\t\"马\": \"馬\",\n\t\"驭\": \"馭\",\n\t\"驮\": \"馱\",\n\t\"驰\": \"馳\",\n\t\"驯\": \"馴\",\n\t\"驲\": \"馹\",\n\t\"驳\": \"駁\",\n\t\"驻\": \"駐\",\n\t\"驽\": \"駑\",\n\t\"驹\": \"駒\",\n\t\"驵\": \"駔\",\n\t\"驾\": \"駕\",\n\t\"骀\": \"駘\",\n\t\"驸\": \"駙\",\n\t\"驶\": \"駛\",\n\t\"驼\": \"駝\",\n\t\"驷\": \"駟\",\n\t\"骈\": \"駢\",\n\t\"骇\": \"駭\",\n\t\"骃\": \"駰\",\n\t\"骆\": \"駱\",\n\t\"骎\": \"駸\",\n\t\"骏\": \"駿\",\n\t\"骋\": \"騁\",\n\t\"骍\": \"騂\",\n\t\"骓\": \"騅\",\n\t\"骔\": \"騌\",\n\t\"骒\": \"騍\",\n\t\"骑\": \"騎\",\n\t\"骐\": \"騏\",\n\t\"验\": \"驗\",\n\t\"骛\": \"騖\",\n\t\"骗\": \"騙\",\n\t\"骙\": \"騤\",\n\t\"骞\": \"騫\",\n\t\"骘\": \"騭\",\n\t\"骝\": \"騮\",\n\t\"驺\": \"騶\",\n\t\"骚\": \"騷\",\n\t\"骟\": \"騸\",\n\t\"骡\": \"騾\",\n\t\"骜\": \"驁\",\n\t\"骖\": \"驂\",\n\t\"骠\": \"驃\",\n\t\"骢\": \"驄\",\n\t\"骅\": \"驊\",\n\t\"骕\": \"驌\",\n\t\"骁\": \"驍\",\n\t\"骣\": \"驏\",\n\t\"骄\": \"驕\",\n\t\"驿\": \"驛\",\n\t\"骤\": \"驟\",\n\t\"驴\": \"驢\",\n\t\"骧\": \"驤\",\n\t\"骥\": \"驥\",\n\t\"骦\": \"驦\",\n\t\"骊\": \"驪\",\n\t\"骉\": \"驫\",\n\t\"鲠\": \"鯁\",\n\t\"髅\": \"髏\",\n\t\"髋\": \"髖\",\n\t\"髌\": \"髕\",\n\t\"鬓\": \"鬢\",\n\t\"魇\": \"魘\",\n\t\"魉\": \"魎\",\n\t\"鱼\": \"魚\",\n\t\"鱽\": \"魛\",\n\t\"鱾\": \"魢\",\n\t\"鲀\": \"魨\",\n\t\"鲁\": \"魯\",\n\t\"鲂\": \"魴\",\n\t\"鱿\": \"魷\",\n\t\"鲄\": \"魺\",\n\t\"鲅\": \"鮁\",\n\t\"鲆\": \"鮃\",\n\t\"鲌\": \"鮊\",\n\t\"鲉\": \"鮋\",\n\t\"鲧\": \"鯀\",\n\t\"鲏\": \"鮍\",\n\t\"鲇\": \"鮎\",\n\t\"鲐\": \"鮐\",\n\t\"鲍\": \"鮑\",\n\t\"鲋\": \"鮒\",\n\t\"鲊\": \"鮓\",\n\t\"鲒\": \"鮚\",\n\t\"鲘\": \"鮜\",\n\t\"鲕\": \"鮞\",\n\t\"鲖\": \"鮦\",\n\t\"鲔\": \"鮪\",\n\t\"鲛\": \"鮫\",\n\t\"鲑\": \"鮭\",\n\t\"鲜\": \"鮮\",\n\t\"鲓\": \"鮳\",\n\t\"鲪\": \"鮶\",\n\t\"鳀\": \"鯷\",\n\t\"鲝\": \"鮺\",\n\t\"鲩\": \"鯇\",\n\t\"鲤\": \"鯉\",\n\t\"鲨\": \"鯊\",\n\t\"鲬\": \"鯒\",\n\t\"鲻\": \"鯔\",\n\t\"鲯\": \"鯕\",\n\t\"鲭\": \"鯖\",\n\t\"鲞\": \"鯗\",\n\t\"鲷\": \"鯛\",\n\t\"鲴\": \"鯝\",\n\t\"鲱\": \"鯡\",\n\t\"鲵\": \"鯢\",\n\t\"鲲\": \"鯤\",\n\t\"鲳\": \"鯧\",\n\t\"鲸\": \"鯨\",\n\t\"鲮\": \"鯪\",\n\t\"鲰\": \"鯫\",\n\t\"鲶\": \"鯰\",\n\t\"鲺\": \"鯴\",\n\t\"鲹\": \"鰺\",\n\t\"鲫\": \"鯽\",\n\t\"鳊\": \"鯿\",\n\t\"鳈\": \"鰁\",\n\t\"鲗\": \"鰂\",\n\t\"鳂\": \"鰃\",\n\t\"鲽\": \"鰈\",\n\t\"鳇\": \"鰉\",\n\t\"鳅\": \"鰍\",\n\t\"鲾\": \"鰏\",\n\t\"鳄\": \"鱷\",\n\t\"鳆\": \"鰒\",\n\t\"鳃\": \"鰓\",\n\t\"鳁\": \"鰮\",\n\t\"鳒\": \"鰜\",\n\t\"鳑\": \"鰟\",\n\t\"鳋\": \"鰠\",\n\t\"鲥\": \"鰣\",\n\t\"鳏\": \"鰥\",\n\t\"鳎\": \"鰨\",\n\t\"鳐\": \"鰩\",\n\t\"鳍\": \"鰭\",\n\t\"鲢\": \"鰱\",\n\t\"鳌\": \"鰲\",\n\t\"鳓\": \"鰳\",\n\t\"鳘\": \"鰵\",\n\t\"鲦\": \"鰷\",\n\t\"鲣\": \"鰹\",\n\t\"鳗\": \"鰻\",\n\t\"鳛\": \"鰼\",\n\t\"鳔\": \"鰾\",\n\t\"鳉\": \"鱂\",\n\t\"鳙\": \"鱅\",\n\t\"鳕\": \"鱈\",\n\t\"鳖\": \"鱉\",\n\t\"鳟\": \"鱒\",\n\t\"鳝\": \"鱔\",\n\t\"鳜\": \"鱖\",\n\t\"鳞\": \"鱗\",\n\t\"鲟\": \"鱘\",\n\t\"鲼\": \"鱝\",\n\t\"鲎\": \"鱟\",\n\t\"鲙\": \"鱠\",\n\t\"鳣\": \"鱣\",\n\t\"鳡\": \"鱤\",\n\t\"鳢\": \"鱧\",\n\t\"鲿\": \"鱨\",\n\t\"鲚\": \"鱭\",\n\t\"鳠\": \"鱯\",\n\t\"鲈\": \"鱸\",\n\t\"鲡\": \"鱺\",\n\t\"鸟\": \"鳥\",\n\t\"鸠\": \"鳩\",\n\t\"鸤\": \"鳲\",\n\t\"鸣\": \"鳴\",\n\t\"鸢\": \"鳶\",\n\t\"鸩\": \"鴆\",\n\t\"鸨\": \"鴇\",\n\t\"鸦\": \"鴉\",\n\t\"鸰\": \"鴒\",\n\t\"鸵\": \"鴕\",\n\t\"鸳\": \"鴛\",\n\t\"鸲\": \"鴝\",\n\t\"鸮\": \"鴞\",\n\t\"鸱\": \"鴟\",\n\t\"鸪\": \"鴣\",\n\t\"鸯\": \"鴦\",\n\t\"鸭\": \"鴨\",\n\t\"鸴\": \"鷽\",\n\t\"鸸\": \"鴯\",\n\t\"鸹\": \"鴰\",\n\t\"鸻\": \"鴴\",\n\t\"鸿\": \"鴻\",\n\t\"鸽\": \"鴿\",\n\t\"鸺\": \"鵂\",\n\t\"鸼\": \"鵃\",\n\t\"鹀\": \"鵐\",\n\t\"鹃\": \"鵑\",\n\t\"鹆\": \"鵒\",\n\t\"鹁\": \"鵓\",\n\t\"鹈\": \"鵜\",\n\t\"鹅\": \"鵝\",\n\t\"鹄\": \"鵠\",\n\t\"鹉\": \"鵡\",\n\t\"鹌\": \"鵪\",\n\t\"鹏\": \"鵬\",\n\t\"鹐\": \"鵮\",\n\t\"鹎\": \"鵯\",\n\t\"鹊\": \"鵲\",\n\t\"鹓\": \"鵷\",\n\t\"鹍\": \"鵾\",\n\t\"鸫\": \"鶇\",\n\t\"鹑\": \"鶉\",\n\t\"鹒\": \"鶊\",\n\t\"鹋\": \"鶓\",\n\t\"鹙\": \"鶖\",\n\t\"鹕\": \"鶘\",\n\t\"鹗\": \"鶚\",\n\t\"鹖\": \"鶡\",\n\t\"鹛\": \"鶥\",\n\t\"鹜\": \"鶩\",\n\t\"鸧\": \"鶬\",\n\t\"鹟\": \"鶲\",\n\t\"鹤\": \"鶴\",\n\t\"鹠\": \"鶹\",\n\t\"鹡\": \"鶺\",\n\t\"鹘\": \"鶻\",\n\t\"鹣\": \"鶼\",\n\t\"鹚\": \"鶿\",\n\t\"鹢\": \"鷁\",\n\t\"鹞\": \"鷂\",\n\t\"鹝\": \"鷊\",\n\t\"鹧\": \"鷓\",\n\t\"鹥\": \"鷖\",\n\t\"鸥\": \"鷗\",\n\t\"鸷\": \"鷙\",\n\t\"鹨\": \"鷚\",\n\t\"鸶\": \"鷥\",\n\t\"鹪\": \"鷦\",\n\t\"鹔\": \"鷫\",\n\t\"鹩\": \"鷯\",\n\t\"鹫\": \"鷲\",\n\t\"鹇\": \"鷳\",\n\t\"鹬\": \"鷸\",\n\t\"鹰\": \"鷹\",\n\t\"鹭\": \"鷺\",\n\t\"鹯\": \"鸇\",\n\t\"鹱\": \"鸌\",\n\t\"鹲\": \"鸏\",\n\t\"鸬\": \"鸕\",\n\t\"鹴\": \"鸘\",\n\t\"鹦\": \"鸚\",\n\t\"鹳\": \"鸛\",\n\t\"鹂\": \"鸝\",\n\t\"鸾\": \"鸞\",\n\t\"鹾\": \"鹺\",\n\t\"麦\": \"麥\",\n\t\"麸\": \"麩\",\n\t\"黄\": \"黃\",\n\t\"黉\": \"黌\",\n\t\"黡\": \"黶\",\n\t\"黩\": \"黷\",\n\t\"黪\": \"黲\",\n\t\"黾\": \"黽\",\n\t\"鼋\": \"黿\",\n\t\"鼌\": \"鼂\",\n\t\"鼍\": \"鼉\",\n\t\"鼹\": \"鼴\",\n\t\"齄\": \"齇\",\n\t\"齐\": \"齊\",\n\t\"齑\": \"齏\",\n\t\"齿\": \"齒\",\n\t\"龀\": \"齔\",\n\t\"龁\": \"齕\",\n\t\"龂\": \"齗\",\n\t\"龅\": \"齙\",\n\t\"龇\": \"齜\",\n\t\"龃\": \"齟\",\n\t\"龆\": \"齠\",\n\t\"龄\": \"齡\",\n\t\"龈\": \"齦\",\n\t\"龊\": \"齪\",\n\t\"龉\": \"齬\",\n\t\"龋\": \"齲\",\n\t\"龌\": \"齷\",\n\t\"龙\": \"龍\",\n\t\"龚\": \"龔\",\n\t\"龛\": \"龕\",\n\t\"龟\": \"龜\",\n\t\"䌶\": \"䊷\",\n\t\"䜥\": \"𧩙\",\n\t\"伣\": \"俔\",\n\t\"俫\": \"倈\",\n\t\"刹\": \"剎\",\n\t\"厐\": \"龎\",\n\t\"厘\": \"釐\",\n\t\"呐\": \"吶\",\n\t\"㖞\": \"喎\",\n\t\"𡒄\": \"壈\",\n\t\"姹\": \"奼\",\n\t\"弑\": \"弒\",\n\t\"彝\": \"彞\",\n\t\"恒\": \"恆\",\n\t\"悮\": \"悞\",\n\t\"戯\": \"戱\",\n\t\"挽\": \"挽\",\n\t\"捝\": \"挩\",\n\t\"揾\": \"搵\",\n\t\"㧑\": \"撝\",\n\t\"㧟\": \"擓\",\n\t\"杆\": \"桿\",\n\t\"栗\": \"栗\",\n\t\"梿\": \"槤\",\n\t\"棁\": \"梲\",\n\t\"榅\": \"榲\",\n\t\"㱮\": \"殨\",\n\t\"灶\": \"灶\",\n\t\"煴\": \"熅\",\n\t\"疭\": \"瘲\",\n\t\"䁖\": \"瞜\",\n\t\"祃\": \"禡\",\n\t\"窎\": \"窵\",\n\t\"䇲\": \"筴\",\n\t\"筼\": \"篔\",\n\t\"䌷\": \"紬\",\n\t\"䌹\": \"絅\",\n\t\"䌸\": \"縳\",\n\t\"䍁\": \"繸\",\n\t\"肮\": \"骯\",\n\t\"肴\": \"餚\",\n\t\"蔂\": \"虆\",\n\t\"蕰\": \"薀\",\n\t\"蘖\": \"櫱\",\n\t\"訚\": \"誾\",\n\t\"䜣\": \"訢\",\n\t\"讬\": \"託\",\n\t\"酂\": \"酇\",\n\t\"钅\": \"釒\",\n\t\"钜\": \"鉅\",\n\t\"铇\": \"鉋\",\n\t\"镟\": \"鏇\",\n\t\"霡\": \"霢\",\n\t\"饣\": \"飠\",\n\t\"鲃\": \"䰾\",\n\t\"鳚\": \"䲁\",\n\t\"䴓\": \"鳾\",\n\t\"䴕\": \"鴷\",\n\t\"䴔\": \"鵁\",\n\t\"䴖\": \"鶄\",\n\t\"䴗\": \"鶪\",\n\t\"䴘\": \"鷈\",\n\t\"䴙\": \"鷿\",\n\t\"麽\": \"麼\",\n\t\"后\": \"後\",\n\t\"凃\": \"塗\",\n\t\"㑩\": \"儸\",\n\t\"准\": \"準\",\n\t\"𫔀\": \"鍊\",\n\t\"面\": \"麵\",\n\t\"舍\": \"捨\",\n\t\"松\": \"鬆\",\n\t\"𫔮\": \"閒\",\n\t\"痳\": \"痲\",\n\t\"占\": \"佔\",\n\t\"借\": \"藉\",\n\t\"制\": \"製\",\n\t\"征\": \"徵\",\n\t\"喂\": \"餵\",\n\t\"只\": \"隻\",\n\t\"炮\": \"砲\",\n\t\"奸\": \"姦\",\n\t\"困\": \"睏\",\n\t\"志\": \"誌\",\n\t\"布\": \"佈\",\n\t\"系\": \"繫\",\n\t\"分\": \"份\",\n\t\"梁\": \"樑\",\n\t\"䌽\": \"綵\",\n\t\"板\": \"闆\",\n\t\"注\": \"註\",\n\t\"克\": \"剋\",\n\t\"唇\": \"唇\",\n\t\"𪸩\": \"煇\",\n\t\"𫗭\": \"餵\",\n\t\"𫗪\": \"餧\",\n\t\"鹹\": \"咸\",\n\t\"刬\": \"剗\",\n\t\"铲\": \"鏟\",\n\t\"采\": \"採\",\n\t\"昵\": \"暱\",\n\t\"𫄤\": \"繨\",\n\t\"㓥\": \"劏\",\n\t\"㳽\": \"瀰\",\n\t\"𫔇\": \"鎞\",\n\t\"汙\": \"汙\",\n\t\"遊\": \"遊\",\n\t\"夥\": \"夥\",\n\t\"哢\": \"哢\",\n\t\"淩\": \"淩\",\n\t\"紮\": \"紮\",\n\t\"癡\": \"癡\",\n\t\"薑\": \"薑\",\n\t\"扡\": \"扡\",\n\t\"撚\": \"撚\",\n\t\"遝\": \"遝\",\n\t\"竈\": \"竈\",\n\t\"黴\": \"黴\",\n\t\"欲\": \"欲\",\n\t\"慾\": \"慾\",\n\t\"讚\": \"讚\",\n\t\"菸\": \"菸\",\n\t\"拾\": \"拾\",\n\t\"十\": \"十\",\n\t\"証\": \"証\",\n\t\"捲\": \"捲\",\n\t\"卷\": \"卷\",\n\t\"燻\": \"燻\",\n\t\"熏\": \"熏\",\n\t\"籲\": \"籲\",\n\t\"龥\": \"龥\",\n\t\"蹠\": \"蹠\",\n\t\"矽\": \"矽\",\n\t\"脩\": \"脩\",\n\t\"修\": \"修\",\n\t\"剷\": \"剷\",\n\t\"劈\": \"劈\",\n\t\"擗\": \"擗\",\n\t\"核\": \"核\",\n\t\"覈\": \"覈\",\n\t\"呼\": \"呼\",\n\t\"呵\": \"呵\",\n\t\"脣\": \"脣\",\n\t\"升\": \"升\",\n\t\"昇\": \"昇\",\n\t\"磐\": \"磐\",\n\t\"溪\": \"溪\",\n\t\"渓\": \"渓\",\n\t\"谿\": \"谿\",\n\t\"嵠\": \"嵠\",\n\t\"祐\": \"祐\",\n\t\"佑\": \"佑\",\n\t\"媮\": \"媮\",\n\t\"偷\": \"偷\",\n\t\"罋\": \"罋\",\n\t\"甕\": \"甕\",\n\t\"闇\": \"闇\",\n\t\"暗\": \"暗\",\n\t\"痺\": \"痺\",\n\t\"痹\": \"痹\",\n\t\"雇\": \"雇\",\n\t\"僱\": \"僱\",\n\t\"秘\": \"秘\",\n\t\"祕\": \"祕\",\n\t\"周\": \"周\",\n\t\"週\": \"週\",\n\t\"闢\": \"闢\",\n\t\"簷\": \"簷\",\n\t\"湧\": \"湧\",\n\t\"家\": \"家\",\n\t\"傢\": \"傢\",\n\t\"亙\": \"亙\",\n\t\"洩\": \"洩\",\n\t\"泄\": \"泄\",\n\t\"珮\": \"珮\",\n\t\"佩\": \"佩\",\n\t\"尅\": \"尅\",\n\t\"剿\": \"剿\",\n\t\"勦\": \"勦\",\n\t\"沉\": \"沉\",\n\t\"沈\": \"沈\",\n\t\"搾\": \"搾\",\n\t\"榨\": \"榨\",\n\t\"筱\": \"筱\",\n\t\"篠\": \"篠\",\n\t\"陞\": \"陞\",\n\t\"獃\": \"獃\",\n\t\"盃\": \"盃\",\n\t\"牋\": \"牋\",\n\t\"竝\": \"竝\",\n\t\"弔\": \"弔\",\n\t\"徬\": \"徬\",\n\t\"彷\": \"彷\",\n\t\"喦\": \"喦\",\n\t\"巖\": \"巖\",\n\t\"岩\": \"岩\",\n\t\"劄\": \"劄\",\n\t\"噪\": \"噪\",\n\t\"譟\": \"譟\",\n\t\"彫\": \"彫\",\n\t\"雕\": \"雕\",\n\t\"衊\": \"衊\",\n\t\"蔑\": \"蔑\",\n\t\"蒙\": \"蒙\",\n\t\"濛\": \"濛\",\n\t\"矇\": \"矇\",\n\t\"懞\": \"懞\",\n\t\"啣\": \"啣\",\n\t\"嫺\": \"嫺\",\n\t\"鞦\": \"鞦\",\n\t\"鬨\": \"鬨\",\n\t\"譁\": \"譁\",\n\t\"箇\": \"箇\",\n\t\"猛\": \"猛\",\n\t\"薰\": \"薰\"\n};\n\nexport const table_tw2cn: ITable = {\n\t\"萬\": \"万\",\n\t\"與\": \"与\",\n\t\"醜\": \"丑\",\n\t\"專\": \"专\",\n\t\"業\": \"业\",\n\t\"叢\": \"丛\",\n\t\"東\": \"东\",\n\t\"絲\": \"丝\",\n\t\"丟\": \"丢\",\n\t\"兩\": \"两\",\n\t\"嚴\": \"严\",\n\t\"並\": \"并\",\n\t\"喪\": \"丧\",\n\t\"個\": \"个\",\n\t\"爿\": \"丬\",\n\t\"豐\": \"丰\",\n\t\"臨\": \"临\",\n\t\"為\": \"为\",\n\t\"麗\": \"丽\",\n\t\"舉\": \"举\",\n\t\"麼\": \"么\",\n\t\"義\": \"义\",\n\t\"烏\": \"乌\",\n\t\"樂\": \"乐\",\n\t\"喬\": \"乔\",\n\t\"習\": \"习\",\n\t\"鄉\": \"乡\",\n\t\"書\": \"书\",\n\t\"買\": \"买\",\n\t\"亂\": \"乱\",\n\t\"乾\": \"干\",\n\t\"爭\": \"争\",\n\t\"於\": \"于\",\n\t\"虧\": \"亏\",\n\t\"雲\": \"云\",\n\t\"亙\": \"亙\",\n\t\"亞\": \"亚\",\n\t\"產\": \"产\",\n\t\"畝\": \"亩\",\n\t\"親\": \"亲\",\n\t\"褻\": \"亵\",\n\t\"嚲\": \"亸\",\n\t\"億\": \"亿\",\n\t\"僅\": \"仅\",\n\t\"僕\": \"仆\",\n\t\"從\": \"从\",\n\t\"侖\": \"仑\",\n\t\"倉\": \"仓\",\n\t\"儀\": \"仪\",\n\t\"們\": \"们\",\n\t\"價\": \"价\",\n\t\"伕\": \"夫\",\n\t\"眾\": \"众\",\n\t\"優\": \"优\",\n\t\"夥\": \"夥\",\n\t\"會\": \"会\",\n\t\"傴\": \"伛\",\n\t\"傘\": \"伞\",\n\t\"偉\": \"伟\",\n\t\"傳\": \"传\",\n\t\"傷\": \"伤\",\n\t\"倀\": \"伥\",\n\t\"倫\": \"伦\",\n\t\"傖\": \"伧\",\n\t\"偽\": \"伪\",\n\t\"佇\": \"伫\",\n\t\"佈\": \"布\",\n\t\"體\": \"体\",\n\t\"佔\": \"占\",\n\t\"佘\": \"佘\",\n\t\"餘\": \"馀\",\n\t\"傭\": \"佣\",\n\t\"僉\": \"佥\",\n\t\"併\": \"并\",\n\t\"來\": \"来\",\n\t\"俠\": \"侠\",\n\t\"侶\": \"侣\",\n\t\"僥\": \"侥\",\n\t\"偵\": \"侦\",\n\t\"側\": \"侧\",\n\t\"僑\": \"侨\",\n\t\"儈\": \"侩\",\n\t\"儕\": \"侪\",\n\t\"儂\": \"侬\",\n\t\"侷\": \"局\",\n\t\"俁\": \"俣\",\n\t\"係\": \"系\",\n\t\"儔\": \"俦\",\n\t\"儼\": \"俨\",\n\t\"倆\": \"俩\",\n\t\"儷\": \"俪\",\n\t\"儉\": \"俭\",\n\t\"倖\": \"幸\",\n\t\"倣\": \"仿\",\n\t\"債\": \"债\",\n\t\"傾\": \"倾\",\n\t\"傯\": \"偬\",\n\t\"偸\": \"偷\",\n\t\"偺\": \"咱\",\n\t\"僂\": \"偻\",\n\t\"僨\": \"偾\",\n\t\"償\": \"偿\",\n\t\"傑\": \"杰\",\n\t\"備\": \"备\",\n\t\"傚\": \"效\",\n\t\"傢\": \"傢\",\n\t\"儻\": \"傥\",\n\t\"儐\": \"傧\",\n\t\"儲\": \"储\",\n\t\"儺\": \"傩\",\n\t\"僞\": \"伪\",\n\t\"僱\": \"僱\",\n\t\"儅\": \"儅\",\n\t\"儘\": \"尽\",\n\t\"儸\": \"㑩\",\n\t\"儹\": \"攒\",\n\t\"兒\": \"儿\",\n\t\"兇\": \"凶\",\n\t\"兌\": \"兑\",\n\t\"兗\": \"兖\",\n\t\"黨\": \"党\",\n\t\"內\": \"内\",\n\t\"蘭\": \"兰\",\n\t\"關\": \"关\",\n\t\"興\": \"兴\",\n\t\"茲\": \"兹\",\n\t\"養\": \"养\",\n\t\"獸\": \"兽\",\n\t\"囅\": \"冁\",\n\t\"岡\": \"冈\",\n\t\"冊\": \"册\",\n\t\"寫\": \"写\",\n\t\"軍\": \"军\",\n\t\"農\": \"农\",\n\t\"塚\": \"冢\",\n\t\"冪\": \"幂\",\n\t\"馮\": \"冯\",\n\t\"沖\": \"冲\",\n\t\"決\": \"决\",\n\t\"況\": \"况\",\n\t\"凍\": \"冻\",\n\t\"淨\": \"净\",\n\t\"凃\": \"涂\",\n\t\"淒\": \"凄\",\n\t\"涼\": \"凉\",\n\t\"淩\": \"淩\",\n\t\"減\": \"减\",\n\t\"湊\": \"凑\",\n\t\"凜\": \"凛\",\n\t\"凟\": \"渎\",\n\t\"幾\": \"几\",\n\t\"鳳\": \"凤\",\n\t\"処\": \"处\",\n\t\"鳧\": \"凫\",\n\t\"憑\": \"凭\",\n\t\"凱\": \"凯\",\n\t\"凴\": \"凭\",\n\t\"擊\": \"击\",\n\t\"鑿\": \"凿\",\n\t\"芻\": \"刍\",\n\t\"劃\": \"划\",\n\t\"劉\": \"刘\",\n\t\"則\": \"则\",\n\t\"剛\": \"刚\",\n\t\"創\": \"创\",\n\t\"刪\": \"删\",\n\t\"別\": \"别\",\n\t\"剄\": \"刭\",\n\t\"劊\": \"刽\",\n\t\"劌\": \"刿\",\n\t\"剴\": \"剀\",\n\t\"劑\": \"剂\",\n\t\"剋\": \"克\",\n\t\"剮\": \"剐\",\n\t\"劍\": \"剑\",\n\t\"剝\": \"剥\",\n\t\"劇\": \"剧\",\n\t\"劄\": \"劄\",\n\t\"劒\": \"剑\",\n\t\"勸\": \"劝\",\n\t\"辦\": \"办\",\n\t\"務\": \"务\",\n\t\"勱\": \"劢\",\n\t\"動\": \"动\",\n\t\"勵\": \"励\",\n\t\"勁\": \"劲\",\n\t\"勞\": \"劳\",\n\t\"勢\": \"势\",\n\t\"勳\": \"勋\",\n\t\"勗\": \"勖\",\n\t\"勩\": \"勚\",\n\t\"勛\": \"勋\",\n\t\"勝\": \"胜\",\n\t\"勣\": \"绩\",\n\t\"勦\": \"勦\",\n\t\"勻\": \"匀\",\n\t\"匭\": \"匦\",\n\t\"匱\": \"匮\",\n\t\"匯\": \"汇\",\n\t\"匲\": \"奁\",\n\t\"匳\": \"奁\",\n\t\"匵\": \"椟\",\n\t\"區\": \"区\",\n\t\"醫\": \"医\",\n\t\"華\": \"华\",\n\t\"協\": \"协\",\n\t\"單\": \"单\",\n\t\"賣\": \"卖\",\n\t\"蔔\": \"卜\",\n\t\"盧\": \"卢\",\n\t\"鹵\": \"卤\",\n\t\"臥\": \"卧\",\n\t\"衛\": \"卫\",\n\t\"卻\": \"却\",\n\t\"卹\": \"恤\",\n\t\"巹\": \"卺\",\n\t\"廠\": \"厂\",\n\t\"廳\": \"厅\",\n\t\"曆\": \"历\",\n\t\"厲\": \"厉\",\n\t\"壓\": \"压\",\n\t\"厭\": \"厌\",\n\t\"厙\": \"厍\",\n\t\"廁\": \"厕\",\n\t\"厛\": \"厅\",\n\t\"厠\": \"厕\",\n\t\"廂\": \"厢\",\n\t\"厴\": \"厣\",\n\t\"厤\": \"历\",\n\t\"廈\": \"厦\",\n\t\"廚\": \"厨\",\n\t\"廄\": \"厩\",\n\t\"廝\": \"厮\",\n\t\"厰\": \"厂\",\n\t\"縣\": \"县\",\n\t\"參\": \"参\",\n\t\"靉\": \"叆\",\n\t\"靆\": \"叇\",\n\t\"雙\": \"双\",\n\t\"發\": \"发\",\n\t\"變\": \"变\",\n\t\"敘\": \"叙\",\n\t\"疊\": \"叠\",\n\t\"葉\": \"叶\",\n\t\"號\": \"号\",\n\t\"歎\": \"叹\",\n\t\"嘰\": \"叽\",\n\t\"籲\": \"籲\",\n\t\"吒\": \"吒\",\n\t\"嚇\": \"吓\",\n\t\"呂\": \"吕\",\n\t\"嗎\": \"吗\",\n\t\"唚\": \"吣\",\n\t\"噸\": \"噸\",\n\t\"聽\": \"听\",\n\t\"啟\": \"启\",\n\t\"吳\": \"吴\",\n\t\"嘸\": \"呒\",\n\t\"囈\": \"呓\",\n\t\"嘔\": \"呕\",\n\t\"嚦\": \"呖\",\n\t\"唄\": \"呗\",\n\t\"員\": \"员\",\n\t\"咼\": \"呙\",\n\t\"嗆\": \"呛\",\n\t\"嗚\": \"呜\",\n\t\"詠\": \"咏\",\n\t\"哢\": \"哢\",\n\t\"嚨\": \"咙\",\n\t\"嚀\": \"咛\",\n\t\"噝\": \"咝\",\n\t\"諮\": \"谘\",\n\t\"噅\": \"咴\",\n\t\"鹹\": \"咸\",\n\t\"響\": \"响\",\n\t\"啞\": \"哑\",\n\t\"噠\": \"哒\",\n\t\"嘵\": \"哓\",\n\t\"嗶\": \"哔\",\n\t\"噦\": \"哕\",\n\t\"嘩\": \"哗\",\n\t\"噲\": \"哙\",\n\t\"嚌\": \"哜\",\n\t\"噥\": \"哝\",\n\t\"喲\": \"哟\",\n\t\"唕\": \"唣\",\n\t\"嘜\": \"唛\",\n\t\"嗊\": \"唝\",\n\t\"嘮\": \"唠\",\n\t\"啢\": \"唡\",\n\t\"嗩\": \"唢\",\n\t\"喚\": \"唤\",\n\t\"唸\": \"念\",\n\t\"問\": \"问\",\n\t\"啓\": \"启\",\n\t\"啗\": \"啖\",\n\t\"啣\": \"啣\",\n\t\"嘖\": \"啧\",\n\t\"嗇\": \"啬\",\n\t\"囀\": \"啭\",\n\t\"齧\": \"啮\",\n\t\"囉\": \"啰\",\n\t\"嘽\": \"啴\",\n\t\"嘯\": \"啸\",\n\t\"喒\": \"咱\",\n\t\"喦\": \"喦\",\n\t\"喫\": \"吃\",\n\t\"噴\": \"喷\",\n\t\"嘍\": \"喽\",\n\t\"嚳\": \"喾\",\n\t\"囁\": \"嗫\",\n\t\"噯\": \"嗳\",\n\t\"嘆\": \"叹\",\n\t\"嘗\": \"尝\",\n\t\"噓\": \"嘘\",\n\t\"嚶\": \"嘤\",\n\t\"囑\": \"嘱\",\n\t\"噁\": \"恶\",\n\t\"嚕\": \"噜\",\n\t\"噹\": \"当\",\n\t\"嚐\": \"尝\",\n\t\"嚙\": \"啮\",\n\t\"囂\": \"嚣\",\n\t\"嚥\": \"咽\",\n\t\"嚮\": \"向\",\n\t\"謔\": \"谑\",\n\t\"嚻\": \"嚣\",\n\t\"囌\": \"苏\",\n\t\"囘\": \"回\",\n\t\"團\": \"团\",\n\t\"囪\": \"囱\",\n\t\"囬\": \"回\",\n\t\"園\": \"园\",\n\t\"囯\": \"国\",\n\t\"圍\": \"围\",\n\t\"圇\": \"囵\",\n\t\"國\": \"国\",\n\t\"圖\": \"图\",\n\t\"圓\": \"圆\",\n\t\"聖\": \"圣\",\n\t\"壙\": \"圹\",\n\t\"場\": \"场\",\n\t\"壞\": \"坏\",\n\t\"塊\": \"块\",\n\t\"堅\": \"坚\",\n\t\"壇\": \"坛\",\n\t\"壢\": \"坜\",\n\t\"壩\": \"坝\",\n\t\"塢\": \"坞\",\n\t\"墳\": \"坟\",\n\t\"墜\": \"坠\",\n\t\"坰\": \"垧\",\n\t\"壟\": \"垄\",\n\t\"壚\": \"垆\",\n\t\"壘\": \"垒\",\n\t\"墾\": \"垦\",\n\t\"堊\": \"垩\",\n\t\"墊\": \"垫\",\n\t\"埡\": \"垭\",\n\t\"墶\": \"垯\",\n\t\"壋\": \"垱\",\n\t\"塏\": \"垲\",\n\t\"堖\": \"垴\",\n\t\"垵\": \"埯\",\n\t\"垻\": \"坝\",\n\t\"塒\": \"埘\",\n\t\"塤\": \"埙\",\n\t\"堝\": \"埚\",\n\t\"埰\": \"采\",\n\t\"執\": \"执\",\n\t\"塹\": \"堑\",\n\t\"墮\": \"堕\",\n\t\"堦\": \"阶\",\n\t\"堯\": \"尧\",\n\t\"報\": \"报\",\n\t\"堿\": \"碱\",\n\t\"壪\": \"塆\",\n\t\"塋\": \"茔\",\n\t\"塗\": \"凃\",\n\t\"塲\": \"场\",\n\t\"塵\": \"尘\",\n\t\"塼\": \"砖\",\n\t\"牆\": \"墙\",\n\t\"墝\": \"硗\",\n\t\"墰\": \"坛\",\n\t\"墻\": \"墙\",\n\t\"壎\": \"埙\",\n\t\"壜\": \"坛\",\n\t\"壠\": \"垅\",\n\t\"壯\": \"壮\",\n\t\"聲\": \"声\",\n\t\"殼\": \"壳\",\n\t\"壺\": \"壶\",\n\t\"壼\": \"壸\",\n\t\"壽\": \"寿\",\n\t\"夀\": \"寿\",\n\t\"處\": \"处\",\n\t\"複\": \"复\",\n\t\"夠\": \"够\",\n\t\"夢\": \"梦\",\n\t\"頭\": \"头\",\n\t\"誇\": \"夸\",\n\t\"夾\": \"夹\",\n\t\"奪\": \"夺\",\n\t\"奩\": \"奁\",\n\t\"奐\": \"奂\",\n\t\"奮\": \"奋\",\n\t\"獎\": \"奖\",\n\t\"奧\": \"奥\",\n\t\"妝\": \"妆\",\n\t\"婦\": \"妇\",\n\t\"媽\": \"妈\",\n\t\"嫵\": \"妩\",\n\t\"嫗\": \"妪\",\n\t\"媯\": \"妫\",\n\t\"姍\": \"姗\",\n\t\"薑\": \"薑\",\n\t\"姦\": \"奸\",\n\t\"姪\": \"侄\",\n\t\"婁\": \"娄\",\n\t\"婭\": \"娅\",\n\t\"嬈\": \"娆\",\n\t\"嬌\": \"娇\",\n\t\"孌\": \"娈\",\n\t\"娛\": \"娱\",\n\t\"娬\": \"妩\",\n\t\"媧\": \"娲\",\n\t\"嫻\": \"娴\",\n\t\"婬\": \"淫\",\n\t\"嫿\": \"婳\",\n\t\"嬰\": \"婴\",\n\t\"嬋\": \"婵\",\n\t\"嬸\": \"婶\",\n\t\"媼\": \"媪\",\n\t\"媮\": \"媮\",\n\t\"嫋\": \"袅\",\n\t\"嬡\": \"嫒\",\n\t\"嬪\": \"嫔\",\n\t\"嬙\": \"嫱\",\n\t\"嫺\": \"嫺\",\n\t\"嬀\": \"妫\",\n\t\"嬝\": \"袅\",\n\t\"嬤\": \"嬷\",\n\t\"嬭\": \"奶\",\n\t\"嬾\": \"懒\",\n\t\"孃\": \"娘\",\n\t\"孫\": \"孙\",\n\t\"學\": \"学\",\n\t\"孿\": \"孪\",\n\t\"寧\": \"宁\",\n\t\"寶\": \"宝\",\n\t\"實\": \"实\",\n\t\"寵\": \"宠\",\n\t\"審\": \"审\",\n\t\"憲\": \"宪\",\n\t\"宮\": \"宫\",\n\t\"寬\": \"宽\",\n\t\"賓\": \"宾\",\n\t\"寢\": \"寝\",\n\t\"對\": \"对\",\n\t\"尋\": \"寻\",\n\t\"導\": \"导\",\n\t\"尅\": \"尅\",\n\t\"將\": \"将\",\n\t\"爾\": \"尔\",\n\t\"尲\": \"尴\",\n\t\"尷\": \"尴\",\n\t\"屍\": \"尸\",\n\t\"盡\": \"尽\",\n\t\"層\": \"层\",\n\t\"屭\": \"屃\",\n\t\"屆\": \"届\",\n\t\"屜\": \"屉\",\n\t\"屓\": \"屃\",\n\t\"屬\": \"属\",\n\t\"屢\": \"屡\",\n\t\"屨\": \"屦\",\n\t\"嶼\": \"屿\",\n\t\"歲\": \"岁\",\n\t\"豈\": \"岂\",\n\t\"嶇\": \"岖\",\n\t\"崗\": \"岗\",\n\t\"峴\": \"岘\",\n\t\"嶴\": \"岙\",\n\t\"嵐\": \"岚\",\n\t\"島\": \"岛\",\n\t\"嶺\": \"岭\",\n\t\"嶽\": \"岳\",\n\t\"崠\": \"岽\",\n\t\"巋\": \"岿\",\n\t\"嶨\": \"峃\",\n\t\"嶧\": \"峄\",\n\t\"峽\": \"峡\",\n\t\"嶢\": \"峣\",\n\t\"嶠\": \"峤\",\n\t\"崢\": \"峥\",\n\t\"巒\": \"峦\",\n\t\"嶗\": \"崂\",\n\t\"崍\": \"崃\",\n\t\"嶮\": \"崄\",\n\t\"崐\": \"昆\",\n\t\"崑\": \"昆\",\n\t\"崙\": \"仑\",\n\t\"崬\": \"岽\",\n\t\"嶄\": \"崭\",\n\t\"崳\": \"嵛\",\n\t\"嵗\": \"岁\",\n\t\"嶸\": \"嵘\",\n\t\"嶔\": \"嵚\",\n\t\"嶁\": \"嵝\",\n\t\"巔\": \"巅\",\n\t\"巖\": \"巖\",\n\t\"鞏\": \"巩\",\n\t\"巰\": \"巯\",\n\t\"幣\": \"币\",\n\t\"帥\": \"帅\",\n\t\"師\": \"师\",\n\t\"幃\": \"帏\",\n\t\"帳\": \"帐\",\n\t\"簾\": \"帘\",\n\t\"幟\": \"帜\",\n\t\"帶\": \"带\",\n\t\"幀\": \"帧\",\n\t\"幫\": \"帮\",\n\t\"幬\": \"帱\",\n\t\"幘\": \"帻\",\n\t\"幗\": \"帼\",\n\t\"襆\": \"幞\",\n\t\"幱\": \"襕\",\n\t\"幹\": \"干\",\n\t\"廣\": \"广\",\n\t\"莊\": \"庄\",\n\t\"慶\": \"庆\",\n\t\"廬\": \"庐\",\n\t\"廡\": \"庑\",\n\t\"庫\": \"库\",\n\t\"應\": \"应\",\n\t\"廟\": \"庙\",\n\t\"龐\": \"庞\",\n\t\"廢\": \"废\",\n\t\"廎\": \"庼\",\n\t\"廕\": \"荫\",\n\t\"廩\": \"廪\",\n\t\"廻\": \"回\",\n\t\"廼\": \"乃\",\n\t\"開\": \"开\",\n\t\"異\": \"异\",\n\t\"棄\": \"弃\",\n\t\"弔\": \"弔\",\n\t\"張\": \"张\",\n\t\"彌\": \"弥\",\n\t\"弳\": \"弪\",\n\t\"彎\": \"弯\",\n\t\"強\": \"强\",\n\t\"彈\": \"弹\",\n\t\"彆\": \"别\",\n\t\"彊\": \"强\",\n\t\"歸\": \"归\",\n\t\"當\": \"当\",\n\t\"錄\": \"录\",\n\t\"彙\": \"汇\",\n\t\"彜\": \"彝\",\n\t\"彞\": \"彝\",\n\t\"彠\": \"彟\",\n\t\"彥\": \"彦\",\n\t\"彫\": \"彫\",\n\t\"徹\": \"彻\",\n\t\"彿\": \"佛\",\n\t\"徑\": \"径\",\n\t\"徠\": \"徕\",\n\t\"禦\": \"御\",\n\t\"復\": \"复\",\n\t\"徬\": \"徬\",\n\t\"徴\": \"征\",\n\t\"徵\": \"征\",\n\t\"憶\": \"忆\",\n\t\"懺\": \"忏\",\n\t\"憂\": \"忧\",\n\t\"愾\": \"忾\",\n\t\"懷\": \"怀\",\n\t\"態\": \"态\",\n\t\"慫\": \"怂\",\n\t\"憮\": \"怃\",\n\t\"慪\": \"怄\",\n\t\"悵\": \"怅\",\n\t\"愴\": \"怆\",\n\t\"憐\": \"怜\",\n\t\"總\": \"总\",\n\t\"懟\": \"怼\",\n\t\"懌\": \"怿\",\n\t\"恆\": \"恒\",\n\t\"戀\": \"恋\",\n\t\"恥\": \"耻\",\n\t\"懇\": \"恳\",\n\t\"惡\": \"恶\",\n\t\"慟\": \"恸\",\n\t\"懨\": \"恹\",\n\t\"愷\": \"恺\",\n\t\"惻\": \"恻\",\n\t\"惱\": \"恼\",\n\t\"惲\": \"恽\",\n\t\"悅\": \"悦\",\n\t\"愨\": \"悫\",\n\t\"懸\": \"悬\",\n\t\"慳\": \"悭\",\n\t\"憫\": \"悯\",\n\t\"悶\": \"闷\",\n\t\"悽\": \"悽\",\n\t\"驚\": \"惊\",\n\t\"懼\": \"惧\",\n\t\"慘\": \"惨\",\n\t\"懲\": \"惩\",\n\t\"憊\": \"惫\",\n\t\"愜\": \"惬\",\n\t\"慚\": \"惭\",\n\t\"憚\": \"惮\",\n\t\"慣\": \"惯\",\n\t\"湣\": \"愍\",\n\t\"愛\": \"爱\",\n\t\"慍\": \"愠\",\n\t\"憤\": \"愤\",\n\t\"憒\": \"愦\",\n\t\"願\": \"愿\",\n\t\"慄\": \"栗\",\n\t\"慇\": \"殷\",\n\t\"懾\": \"慑\",\n\t\"慙\": \"惭\",\n\t\"慤\": \"悫\",\n\t\"憖\": \"慭\",\n\t\"慮\": \"虑\",\n\t\"慴\": \"慑\",\n\t\"慼\": \"戚\",\n\t\"慾\": \"慾\",\n\t\"懍\": \"懔\",\n\t\"懣\": \"懑\",\n\t\"懶\": \"懒\",\n\t\"懕\": \"恹\",\n\t\"懞\": \"懞\",\n\t\"懽\": \"欢\",\n\t\"戇\": \"戆\",\n\t\"戔\": \"戋\",\n\t\"戲\": \"戏\",\n\t\"戧\": \"戗\",\n\t\"戰\": \"战\",\n\t\"戩\": \"戬\",\n\t\"戯\": \"戏\",\n\t\"戶\": \"户\",\n\t\"紮\": \"紮\",\n\t\"撲\": \"扑\",\n\t\"扡\": \"扡\",\n\t\"擴\": \"扩\",\n\t\"捫\": \"扪\",\n\t\"掃\": \"扫\",\n\t\"揚\": \"扬\",\n\t\"擾\": \"扰\",\n\t\"撫\": \"抚\",\n\t\"拋\": \"抛\",\n\t\"摶\": \"抟\",\n\t\"摳\": \"抠\",\n\t\"掄\": \"抡\",\n\t\"搶\": \"抢\",\n\t\"護\": \"护\",\n\t\"擔\": \"担\",\n\t\"擬\": \"拟\",\n\t\"攏\": \"拢\",\n\t\"揀\": \"拣\",\n\t\"擁\": \"拥\",\n\t\"攔\": \"拦\",\n\t\"擰\": \"拧\",\n\t\"撥\": \"拨\",\n\t\"擇\": \"择\",\n\t\"掛\": \"挂\",\n\t\"摯\": \"挚\",\n\t\"攣\": \"挛\",\n\t\"掗\": \"挜\",\n\t\"撾\": \"挝\",\n\t\"撻\": \"挞\",\n\t\"挾\": \"挟\",\n\t\"撓\": \"挠\",\n\t\"擋\": \"挡\",\n\t\"撟\": \"挢\",\n\t\"掙\": \"挣\",\n\t\"擠\": \"挤\",\n\t\"揮\": \"挥\",\n\t\"撏\": \"挦\",\n\t\"撈\": \"捞\",\n\t\"損\": \"损\",\n\t\"撿\": \"捡\",\n\t\"換\": \"换\",\n\t\"搗\": \"捣\",\n\t\"捨\": \"舍\",\n\t\"據\": \"据\",\n\t\"捲\": \"捲\",\n\t\"撚\": \"撚\",\n\t\"採\": \"采\",\n\t\"擄\": \"掳\",\n\t\"摑\": \"掴\",\n\t\"擲\": \"掷\",\n\t\"撣\": \"掸\",\n\t\"摻\": \"掺\",\n\t\"摜\": \"掼\",\n\t\"摣\": \"揸\",\n\t\"揹\": \"背\",\n\t\"攬\": \"揽\",\n\t\"撳\": \"揿\",\n\t\"攙\": \"搀\",\n\t\"擱\": \"搁\",\n\t\"摟\": \"搂\",\n\t\"攪\": \"搅\",\n\t\"搆\": \"构\",\n\t\"搇\": \"揿\",\n\t\"搖\": \"摇\",\n\t\"攜\": \"携\",\n\t\"搾\": \"搾\",\n\t\"攝\": \"摄\",\n\t\"攄\": \"摅\",\n\t\"擺\": \"摆\",\n\t\"擯\": \"摈\",\n\t\"攤\": \"摊\",\n\t\"摺\": \"折\",\n\t\"攖\": \"撄\",\n\t\"撐\": \"撑\",\n\t\"攆\": \"撵\",\n\t\"擷\": \"撷\",\n\t\"擼\": \"撸\",\n\t\"攛\": \"撺\",\n\t\"擕\": \"携\",\n\t\"擻\": \"擞\",\n\t\"擡\": \"抬\",\n\t\"擣\": \"捣\",\n\t\"擧\": \"举\",\n\t\"攢\": \"攒\",\n\t\"攩\": \"挡\",\n\t\"攷\": \"考\",\n\t\"敵\": \"敌\",\n\t\"敍\": \"叙\",\n\t\"敗\": \"败\",\n\t\"斂\": \"敛\",\n\t\"敭\": \"扬\",\n\t\"數\": \"数\",\n\t\"敺\": \"驱\",\n\t\"斃\": \"毙\",\n\t\"齋\": \"斋\",\n\t\"斕\": \"斓\",\n\t\"鬥\": \"斗\",\n\t\"斬\": \"斩\",\n\t\"斷\": \"断\",\n\t\"旂\": \"旗\",\n\t\"無\": \"无\",\n\t\"舊\": \"旧\",\n\t\"時\": \"时\",\n\t\"曠\": \"旷\",\n\t\"暘\": \"旸\",\n\t\"昇\": \"昇\",\n\t\"曇\": \"昙\",\n\t\"晝\": \"昼\",\n\t\"曨\": \"昽\",\n\t\"顯\": \"显\",\n\t\"晉\": \"晋\",\n\t\"曬\": \"晒\",\n\t\"曉\": \"晓\",\n\t\"曄\": \"晔\",\n\t\"暈\": \"晕\",\n\t\"暉\": \"晖\",\n\t\"暫\": \"暂\",\n\t\"暢\": \"畅\",\n\t\"曖\": \"暧\",\n\t\"暱\": \"昵\",\n\t\"曏\": \"向\",\n\t\"曡\": \"叠\",\n\t\"朧\": \"胧\",\n\t\"術\": \"术\",\n\t\"樸\": \"朴\",\n\t\"機\": \"机\",\n\t\"殺\": \"杀\",\n\t\"雜\": \"杂\",\n\t\"權\": \"权\",\n\t\"條\": \"条\",\n\t\"楊\": \"杨\",\n\t\"榪\": \"杩\",\n\t\"極\": \"极\",\n\t\"構\": \"构\",\n\t\"樅\": \"枞\",\n\t\"樞\": \"枢\",\n\t\"棗\": \"枣\",\n\t\"櫪\": \"枥\",\n\t\"梘\": \"枧\",\n\t\"棖\": \"枨\",\n\t\"槍\": \"枪\",\n\t\"楓\": \"枫\",\n\t\"梟\": \"枭\",\n\t\"枴\": \"拐\",\n\t\"櫃\": \"柜\",\n\t\"檸\": \"柠\",\n\t\"柵\": \"栅\",\n\t\"柺\": \"拐\",\n\t\"檉\": \"柽\",\n\t\"梔\": \"栀\",\n\t\"標\": \"标\",\n\t\"棧\": \"栈\",\n\t\"櫛\": \"栉\",\n\t\"櫳\": \"栊\",\n\t\"棟\": \"栋\",\n\t\"櫨\": \"栌\",\n\t\"櫟\": \"栎\",\n\t\"欄\": \"栏\",\n\t\"樹\": \"树\",\n\t\"棲\": \"栖\",\n\t\"樣\": \"样\",\n\t\"欒\": \"栾\",\n\t\"棬\": \"桊\",\n\t\"椏\": \"桠\",\n\t\"橈\": \"桡\",\n\t\"楨\": \"桢\",\n\t\"榿\": \"桤\",\n\t\"橋\": \"桥\",\n\t\"樺\": \"桦\",\n\t\"檜\": \"桧\",\n\t\"槳\": \"桨\",\n\t\"樁\": \"桩\",\n\t\"桿\": \"杆\",\n\t\"梱\": \"捆\",\n\t\"檮\": \"梼\",\n\t\"棶\": \"梾\",\n\t\"檢\": \"检\",\n\t\"欞\": \"棂\",\n\t\"槨\": \"椁\",\n\t\"櫝\": \"椟\",\n\t\"槧\": \"椠\",\n\t\"欏\": \"椤\",\n\t\"橢\": \"椭\",\n\t\"樓\": \"楼\",\n\t\"欖\": \"榄\",\n\t\"櫬\": \"榇\",\n\t\"櫚\": \"榈\",\n\t\"櫸\": \"榉\",\n\t\"榦\": \"干\",\n\t\"榮\": \"荣\",\n\t\"槃\": \"盘\",\n\t\"槓\": \"杠\",\n\t\"檟\": \"槚\",\n\t\"檻\": \"槛\",\n\t\"檳\": \"槟\",\n\t\"櫧\": \"槠\",\n\t\"槼\": \"规\",\n\t\"樑\": \"梁\",\n\t\"橫\": \"横\",\n\t\"檣\": \"樯\",\n\t\"櫻\": \"樱\",\n\t\"樷\": \"丛\",\n\t\"櫫\": \"橥\",\n\t\"橰\": \"槔\",\n\t\"櫥\": \"橱\",\n\t\"櫓\": \"橹\",\n\t\"櫞\": \"橼\",\n\t\"檁\": \"檩\",\n\t\"簷\": \"簷\",\n\t\"檯\": \"台\",\n\t\"檾\": \"苘\",\n\t\"櫂\": \"棹\",\n\t\"櫺\": \"棂\",\n\t\"欑\": \"攒\",\n\t\"歡\": \"欢\",\n\t\"歟\": \"欤\",\n\t\"歐\": \"欧\",\n\t\"欽\": \"钦\",\n\t\"歗\": \"啸\",\n\t\"歛\": \"敛\",\n\t\"歷\": \"历\",\n\t\"殲\": \"歼\",\n\t\"歿\": \"殁\",\n\t\"殤\": \"殇\",\n\t\"殘\": \"残\",\n\t\"殞\": \"殒\",\n\t\"殮\": \"殓\",\n\t\"殫\": \"殚\",\n\t\"殯\": \"殡\",\n\t\"毆\": \"殴\",\n\t\"毀\": \"毁\",\n\t\"轂\": \"毂\",\n\t\"毉\": \"医\",\n\t\"畢\": \"毕\",\n\t\"氈\": \"毡\",\n\t\"毧\": \"绒\",\n\t\"毬\": \"球\",\n\t\"毿\": \"毵\",\n\t\"氂\": \"牦\",\n\t\"氌\": \"氇\",\n\t\"氊\": \"毡\",\n\t\"氣\": \"气\",\n\t\"氫\": \"氢\",\n\t\"氬\": \"氩\",\n\t\"氳\": \"氲\",\n\t\"氾\": \"泛\",\n\t\"漢\": \"汉\",\n\t\"汎\": \"泛\",\n\t\"汙\": \"汙\",\n\t\"汚\": \"污\",\n\t\"湯\": \"汤\",\n\t\"洶\": \"汹\",\n\t\"沍\": \"冱\",\n\t\"沒\": \"没\",\n\t\"遝\": \"遝\",\n\t\"溝\": \"沟\",\n\t\"灃\": \"沣\",\n\t\"漚\": \"沤\",\n\t\"瀝\": \"沥\",\n\t\"淪\": \"沦\",\n\t\"滄\": \"沧\",\n\t\"渢\": \"沨\",\n\t\"溈\": \"沩\",\n\t\"滬\": \"沪\",\n\t\"濔\": \"沵\",\n\t\"濘\": \"泞\",\n\t\"淚\": \"泪\",\n\t\"澩\": \"泶\",\n\t\"瀧\": \"泷\",\n\t\"瀘\": \"泸\",\n\t\"濼\": \"泺\",\n\t\"瀉\": \"泻\",\n\t\"潑\": \"泼\",\n\t\"澤\": \"泽\",\n\t\"涇\": \"泾\",\n\t\"潔\": \"洁\",\n\t\"灑\": \"洒\",\n\t\"洩\": \"洩\",\n\t\"窪\": \"洼\",\n\t\"浹\": \"浃\",\n\t\"淺\": \"浅\",\n\t\"漿\": \"浆\",\n\t\"澆\": \"浇\",\n\t\"湞\": \"浈\",\n\t\"溮\": \"浉\",\n\t\"濁\": \"浊\",\n\t\"測\": \"测\",\n\t\"澮\": \"浍\",\n\t\"濟\": \"济\",\n\t\"瀏\": \"浏\",\n\t\"滻\": \"浐\",\n\t\"渾\": \"浑\",\n\t\"滸\": \"浒\",\n\t\"濃\": \"浓\",\n\t\"潯\": \"浔\",\n\t\"濜\": \"浕\",\n\t\"湧\": \"湧\",\n\t\"涖\": \"莅\",\n\t\"濤\": \"涛\",\n\t\"澇\": \"涝\",\n\t\"淶\": \"涞\",\n\t\"漣\": \"涟\",\n\t\"潿\": \"涠\",\n\t\"渦\": \"涡\",\n\t\"溳\": \"涢\",\n\t\"渙\": \"涣\",\n\t\"滌\": \"涤\",\n\t\"潤\": \"润\",\n\t\"澗\": \"涧\",\n\t\"漲\": \"涨\",\n\t\"澀\": \"涩\",\n\t\"澱\": \"淀\",\n\t\"淥\": \"渌\",\n\t\"淵\": \"渊\",\n\t\"漬\": \"渍\",\n\t\"瀆\": \"渎\",\n\t\"漸\": \"渐\",\n\t\"澠\": \"渑\",\n\t\"漁\": \"渔\",\n\t\"瀋\": \"沈\",\n\t\"滲\": \"渗\",\n\t\"溫\": \"温\",\n\t\"遊\": \"遊\",\n\t\"灣\": \"湾\",\n\t\"濕\": \"湿\",\n\t\"潰\": \"溃\",\n\t\"濺\": \"溅\",\n\t\"漵\": \"溆\",\n\t\"漊\": \"溇\",\n\t\"準\": \"准\",\n\t\"溼\": \"湿\",\n\t\"滅\": \"灭\",\n\t\"滎\": \"荥\",\n\t\"潷\": \"滗\",\n\t\"滙\": \"汇\",\n\t\"滾\": \"滚\",\n\t\"滯\": \"滞\",\n\t\"灩\": \"滟\",\n\t\"灄\": \"滠\",\n\t\"滿\": \"满\",\n\t\"瀅\": \"滢\",\n\t\"濾\": \"滤\",\n\t\"濫\": \"滥\",\n\t\"灤\": \"滦\",\n\t\"濱\": \"滨\",\n\t\"灘\": \"滩\",\n\t\"澦\": \"滪\",\n\t\"滷\": \"卤\",\n\t\"潁\": \"颍\",\n\t\"瀠\": \"潆\",\n\t\"瀟\": \"潇\",\n\t\"瀲\": \"潋\",\n\t\"濰\": \"潍\",\n\t\"潙\": \"沩\",\n\t\"潛\": \"潜\",\n\t\"潟\": \"舄\",\n\t\"瀦\": \"潴\",\n\t\"澁\": \"涩\",\n\t\"澂\": \"澄\",\n\t\"瀾\": \"澜\",\n\t\"瀨\": \"濑\",\n\t\"瀕\": \"濒\",\n\t\"濛\": \"濛\",\n\t\"濬\": \"浚\",\n\t\"濶\": \"阔\",\n\t\"瀰\": \"㳽\",\n\t\"灝\": \"灏\",\n\t\"灕\": \"漓\",\n\t\"灧\": \"滟\",\n\t\"燈\": \"灯\",\n\t\"靈\": \"灵\",\n\t\"災\": \"灾\",\n\t\"燦\": \"灿\",\n\t\"煬\": \"炀\",\n\t\"爐\": \"炉\",\n\t\"燉\": \"炖\",\n\t\"煒\": \"炜\",\n\t\"熗\": \"炝\",\n\t\"炤\": \"照\",\n\t\"點\": \"点\",\n\t\"煉\": \"炼\",\n\t\"熾\": \"炽\",\n\t\"爍\": \"烁\",\n\t\"爛\": \"烂\",\n\t\"烴\": \"烃\",\n\t\"燭\": \"烛\",\n\t\"煙\": \"烟\",\n\t\"煩\": \"烦\",\n\t\"燒\": \"烧\",\n\t\"燁\": \"烨\",\n\t\"燴\": \"烩\",\n\t\"燙\": \"烫\",\n\t\"燼\": \"烬\",\n\t\"熱\": \"热\",\n\t\"煥\": \"焕\",\n\t\"燜\": \"焖\",\n\t\"燾\": \"焘\",\n\t\"煆\": \"煅\",\n\t\"煖\": \"暖\",\n\t\"煢\": \"茕\",\n\t\"熒\": \"荧\",\n\t\"熲\": \"颎\",\n\t\"燄\": \"焰\",\n\t\"燐\": \"磷\",\n\t\"營\": \"营\",\n\t\"燬\": \"毁\",\n\t\"燻\": \"燻\",\n\t\"燿\": \"耀\",\n\t\"爗\": \"烨\",\n\t\"爲\": \"为\",\n\t\"爺\": \"爷\",\n\t\"牀\": \"床\",\n\t\"牋\": \"牋\",\n\t\"牘\": \"牍\",\n\t\"牐\": \"闸\",\n\t\"犛\": \"牦\",\n\t\"牴\": \"抵\",\n\t\"牽\": \"牵\",\n\t\"犧\": \"牺\",\n\t\"犢\": \"犊\",\n\t\"犖\": \"荦\",\n\t\"狀\": \"状\",\n\t\"獷\": \"犷\",\n\t\"獁\": \"犸\",\n\t\"猶\": \"犹\",\n\t\"狽\": \"狈\",\n\t\"麅\": \"狍\",\n\t\"獮\": \"狝\",\n\t\"獰\": \"狞\",\n\t\"獨\": \"独\",\n\t\"狹\": \"狭\",\n\t\"獅\": \"狮\",\n\t\"獪\": \"狯\",\n\t\"猙\": \"狰\",\n\t\"獄\": \"狱\",\n\t\"猻\": \"狲\",\n\t\"獫\": \"猃\",\n\t\"獵\": \"猎\",\n\t\"獼\": \"猕\",\n\t\"玀\": \"猡\",\n\t\"豬\": \"猪\",\n\t\"貓\": \"猫\",\n\t\"蝟\": \"猬\",\n\t\"獻\": \"献\",\n\t\"獃\": \"獃\",\n\t\"獺\": \"獭\",\n\t\"獲\": \"获\",\n\t\"玆\": \"兹\",\n\t\"璣\": \"玑\",\n\t\"璵\": \"玙\",\n\t\"瑒\": \"玚\",\n\t\"瑪\": \"玛\",\n\t\"玨\": \"珏\",\n\t\"瑋\": \"玮\",\n\t\"環\": \"环\",\n\t\"現\": \"现\",\n\t\"瑲\": \"玱\",\n\t\"璽\": \"玺\",\n\t\"瑉\": \"珉\",\n\t\"琺\": \"珐\",\n\t\"瓏\": \"珑\",\n\t\"珮\": \"珮\",\n\t\"璫\": \"珰\",\n\t\"琿\": \"珲\",\n\t\"琍\": \"璃\",\n\t\"璡\": \"琎\",\n\t\"璉\": \"琏\",\n\t\"瑣\": \"琐\",\n\t\"琯\": \"管\",\n\t\"瓊\": \"琼\",\n\t\"瑤\": \"瑶\",\n\t\"瑩\": \"莹\",\n\t\"瑯\": \"琅\",\n\t\"璦\": \"瑷\",\n\t\"璿\": \"璇\",\n\t\"瓔\": \"璎\",\n\t\"瓚\": \"瓒\",\n\t\"甕\": \"甕\",\n\t\"甌\": \"瓯\",\n\t\"甎\": \"砖\",\n\t\"甖\": \"罂\",\n\t\"産\": \"产\",\n\t\"甦\": \"苏\",\n\t\"甯\": \"宁\",\n\t\"電\": \"电\",\n\t\"畫\": \"画\",\n\t\"畱\": \"留\",\n\t\"疇\": \"畴\",\n\t\"癤\": \"疖\",\n\t\"療\": \"疗\",\n\t\"瘧\": \"疟\",\n\t\"癘\": \"疠\",\n\t\"瘍\": \"疡\",\n\t\"鬁\": \"疬\",\n\t\"瘡\": \"疮\",\n\t\"瘋\": \"疯\",\n\t\"皰\": \"疱\",\n\t\"癰\": \"痈\",\n\t\"痙\": \"痉\",\n\t\"癢\": \"痒\",\n\t\"瘂\": \"痖\",\n\t\"痠\": \"酸\",\n\t\"癆\": \"痨\",\n\t\"瘓\": \"痪\",\n\t\"癇\": \"痫\",\n\t\"癡\": \"癡\",\n\t\"痺\": \"痺\",\n\t\"癉\": \"瘅\",\n\t\"瘮\": \"瘆\",\n\t\"瘉\": \"愈\",\n\t\"瘞\": \"瘗\",\n\t\"瘺\": \"瘘\",\n\t\"癟\": \"瘪\",\n\t\"癱\": \"瘫\",\n\t\"瘻\": \"瘘\",\n\t\"癮\": \"瘾\",\n\t\"癭\": \"瘿\",\n\t\"癒\": \"愈\",\n\t\"癩\": \"癞\",\n\t\"癬\": \"癣\",\n\t\"癥\": \"症\",\n\t\"癧\": \"疬\",\n\t\"癲\": \"癫\",\n\t\"臒\": \"癯\",\n\t\"皚\": \"皑\",\n\t\"皺\": \"皱\",\n\t\"皸\": \"皲\",\n\t\"盃\": \"盃\",\n\t\"盞\": \"盏\",\n\t\"鹽\": \"盐\",\n\t\"監\": \"监\",\n\t\"蓋\": \"盖\",\n\t\"盜\": \"盗\",\n\t\"盤\": \"盘\",\n\t\"盪\": \"荡\",\n\t\"瞘\": \"眍\",\n\t\"眎\": \"视\",\n\t\"眡\": \"视\",\n\t\"眥\": \"眦\",\n\t\"矓\": \"眬\",\n\t\"著\": \"着\",\n\t\"睜\": \"睁\",\n\t\"睏\": \"困\",\n\t\"睞\": \"睐\",\n\t\"瞼\": \"睑\",\n\t\"瞞\": \"瞒\",\n\t\"矚\": \"瞩\",\n\t\"矇\": \"矇\",\n\t\"矯\": \"矫\",\n\t\"磯\": \"矶\",\n\t\"矽\": \"矽\",\n\t\"礬\": \"矾\",\n\t\"礦\": \"矿\",\n\t\"碭\": \"砀\",\n\t\"碼\": \"码\",\n\t\"磚\": \"砖\",\n\t\"硨\": \"砗\",\n\t\"硯\": \"砚\",\n\t\"碸\": \"砜\",\n\t\"砲\": \"炮\",\n\t\"礪\": \"砺\",\n\t\"礱\": \"砻\",\n\t\"礫\": \"砾\",\n\t\"礎\": \"础\",\n\t\"硜\": \"硁\",\n\t\"硃\": \"朱\",\n\t\"碩\": \"硕\",\n\t\"硤\": \"硖\",\n\t\"磽\": \"硗\",\n\t\"磑\": \"硙\",\n\t\"礄\": \"硚\",\n\t\"確\": \"确\",\n\t\"硶\": \"碜\",\n\t\"鹼\": \"硷\",\n\t\"礙\": \"碍\",\n\t\"磧\": \"碛\",\n\t\"磣\": \"碜\",\n\t\"镟\": \"碹\",\n\t\"磐\": \"磐\",\n\t\"礮\": \"炮\",\n\t\"禮\": \"礼\",\n\t\"禕\": \"祎\",\n\t\"祐\": \"祐\",\n\t\"祕\": \"祕\",\n\t\"禰\": \"祢\",\n\t\"禎\": \"祯\",\n\t\"禱\": \"祷\",\n\t\"禍\": \"祸\",\n\t\"祿\": \"禄\",\n\t\"稟\": \"禀\",\n\t\"禪\": \"禅\",\n\t\"離\": \"离\",\n\t\"禿\": \"秃\",\n\t\"稈\": \"秆\",\n\t\"秈\": \"籼\",\n\t\"種\": \"种\",\n\t\"積\": \"积\",\n\t\"稱\": \"称\",\n\t\"穢\": \"秽\",\n\t\"穠\": \"秾\",\n\t\"稅\": \"税\",\n\t\"穭\": \"稆\",\n\t\"稜\": \"棱\",\n\t\"穌\": \"稣\",\n\t\"稭\": \"秸\",\n\t\"穩\": \"稳\",\n\t\"穀\": \"谷\",\n\t\"穎\": \"颖\",\n\t\"穡\": \"穑\",\n\t\"穨\": \"颓\",\n\t\"穫\": \"获\",\n\t\"窮\": \"穷\",\n\t\"竊\": \"窃\",\n\t\"竅\": \"窍\",\n\t\"窯\": \"窑\",\n\t\"竄\": \"窜\",\n\t\"窩\": \"窝\",\n\t\"窺\": \"窥\",\n\t\"竇\": \"窦\",\n\t\"窶\": \"窭\",\n\t\"窰\": \"窑\",\n\t\"竈\": \"竈\",\n\t\"豎\": \"竖\",\n\t\"竝\": \"竝\",\n\t\"競\": \"竞\",\n\t\"竪\": \"竖\",\n\t\"篤\": \"笃\",\n\t\"筍\": \"笋\",\n\t\"筆\": \"笔\",\n\t\"筧\": \"笕\",\n\t\"箋\": \"笺\",\n\t\"籠\": \"笼\",\n\t\"籩\": \"笾\",\n\t\"築\": \"筑\",\n\t\"篳\": \"筚\",\n\t\"篩\": \"筛\",\n\t\"簹\": \"筜\",\n\t\"箏\": \"筝\",\n\t\"籌\": \"筹\",\n\t\"簽\": \"签\",\n\t\"簡\": \"简\",\n\t\"箇\": \"箇\",\n\t\"籙\": \"箓\",\n\t\"箠\": \"棰\",\n\t\"簀\": \"箦\",\n\t\"篋\": \"箧\",\n\t\"籜\": \"箨\",\n\t\"籮\": \"箩\",\n\t\"簞\": \"箪\",\n\t\"簫\": \"箫\",\n\t\"節\": \"节\",\n\t\"範\": \"范\",\n\t\"簣\": \"篑\",\n\t\"簍\": \"篓\",\n\t\"篛\": \"箬\",\n\t\"篠\": \"篠\",\n\t\"籃\": \"篮\",\n\t\"籬\": \"篱\",\n\t\"簑\": \"蓑\",\n\t\"籪\": \"簖\",\n\t\"籟\": \"籁\",\n\t\"籐\": \"藤\",\n\t\"籢\": \"奁\",\n\t\"籤\": \"签\",\n\t\"籥\": \"钥\",\n\t\"糴\": \"籴\",\n\t\"類\": \"类\",\n\t\"糶\": \"粜\",\n\t\"糲\": \"粝\",\n\t\"粵\": \"粤\",\n\t\"粧\": \"妆\",\n\t\"糞\": \"粪\",\n\t\"粬\": \"曲\",\n\t\"糧\": \"粮\",\n\t\"糝\": \"糁\",\n\t\"餱\": \"糇\",\n\t\"糢\": \"模\",\n\t\"糰\": \"团\",\n\t\"糸\": \"纟\",\n\t\"糾\": \"纠\",\n\t\"紀\": \"纪\",\n\t\"紂\": \"纣\",\n\t\"約\": \"约\",\n\t\"紅\": \"红\",\n\t\"紆\": \"纡\",\n\t\"紇\": \"纥\",\n\t\"紈\": \"纨\",\n\t\"紉\": \"纫\",\n\t\"紋\": \"纹\",\n\t\"納\": \"纳\",\n\t\"紐\": \"纽\",\n\t\"紓\": \"纾\",\n\t\"純\": \"纯\",\n\t\"紕\": \"纰\",\n\t\"紖\": \"纼\",\n\t\"紗\": \"纱\",\n\t\"紘\": \"纮\",\n\t\"紙\": \"纸\",\n\t\"級\": \"级\",\n\t\"紛\": \"纷\",\n\t\"紜\": \"纭\",\n\t\"紝\": \"纴\",\n\t\"紡\": \"纺\",\n\t\"紥\": \"扎\",\n\t\"緊\": \"紧\",\n\t\"細\": \"细\",\n\t\"紱\": \"绂\",\n\t\"紲\": \"绁\",\n\t\"紳\": \"绅\",\n\t\"紵\": \"纻\",\n\t\"紹\": \"绍\",\n\t\"紺\": \"绀\",\n\t\"紼\": \"绋\",\n\t\"紿\": \"绐\",\n\t\"絀\": \"绌\",\n\t\"終\": \"终\",\n\t\"絃\": \"弦\",\n\t\"組\": \"组\",\n\t\"絆\": \"绊\",\n\t\"絍\": \"纴\",\n\t\"絎\": \"绗\",\n\t\"絏\": \"绁\",\n\t\"結\": \"结\",\n\t\"絕\": \"绝\",\n\t\"絛\": \"绦\",\n\t\"絝\": \"绔\",\n\t\"絞\": \"绞\",\n\t\"絡\": \"络\",\n\t\"絢\": \"绚\",\n\t\"給\": \"给\",\n\t\"絨\": \"绒\",\n\t\"絰\": \"绖\",\n\t\"統\": \"统\",\n\t\"絳\": \"绛\",\n\t\"縶\": \"絷\",\n\t\"絹\": \"绢\",\n\t\"綁\": \"绑\",\n\t\"綃\": \"绡\",\n\t\"綆\": \"绠\",\n\t\"綈\": \"绨\",\n\t\"綉\": \"绣\",\n\t\"綌\": \"绤\",\n\t\"綏\": \"绥\",\n\t\"綑\": \"捆\",\n\t\"經\": \"经\",\n\t\"綜\": \"综\",\n\t\"綞\": \"缍\",\n\t\"綠\": \"绿\",\n\t\"綢\": \"绸\",\n\t\"綣\": \"绻\",\n\t\"綫\": \"线\",\n\t\"綬\": \"绶\",\n\t\"維\": \"维\",\n\t\"綯\": \"绹\",\n\t\"綰\": \"绾\",\n\t\"綱\": \"纲\",\n\t\"網\": \"网\",\n\t\"綳\": \"绷\",\n\t\"綴\": \"缀\",\n\t\"綵\": \"䌽\",\n\t\"綸\": \"纶\",\n\t\"綹\": \"绺\",\n\t\"綺\": \"绮\",\n\t\"綻\": \"绽\",\n\t\"綽\": \"绰\",\n\t\"綾\": \"绫\",\n\t\"綿\": \"绵\",\n\t\"緄\": \"绲\",\n\t\"緇\": \"缁\",\n\t\"緋\": \"绯\",\n\t\"緍\": \"缗\",\n\t\"緒\": \"绪\",\n\t\"緓\": \"绬\",\n\t\"緔\": \"绱\",\n\t\"緗\": \"缃\",\n\t\"緘\": \"缄\",\n\t\"緙\": \"缂\",\n\t\"線\": \"缐\",\n\t\"緜\": \"绵\",\n\t\"緝\": \"缉\",\n\t\"緞\": \"缎\",\n\t\"締\": \"缔\",\n\t\"緡\": \"缗\",\n\t\"緣\": \"缘\",\n\t\"緤\": \"绁\",\n\t\"緦\": \"缌\",\n\t\"編\": \"编\",\n\t\"緩\": \"缓\",\n\t\"緬\": \"缅\",\n\t\"緯\": \"纬\",\n\t\"緱\": \"缑\",\n\t\"緲\": \"缈\",\n\t\"練\": \"练\",\n\t\"緶\": \"缏\",\n\t\"緹\": \"缇\",\n\t\"緻\": \"致\",\n\t\"緼\": \"缊\",\n\t\"縂\": \"总\",\n\t\"縈\": \"萦\",\n\t\"縉\": \"缙\",\n\t\"縊\": \"缢\",\n\t\"縋\": \"缒\",\n\t\"縐\": \"绉\",\n\t\"縑\": \"缣\",\n\t\"縕\": \"缊\",\n\t\"縗\": \"缞\",\n\t\"縚\": \"绦\",\n\t\"縛\": \"缚\",\n\t\"縝\": \"缜\",\n\t\"縞\": \"缟\",\n\t\"縟\": \"缛\",\n\t\"縧\": \"绦\",\n\t\"縫\": \"缝\",\n\t\"縭\": \"缡\",\n\t\"縮\": \"缩\",\n\t\"縯\": \"演\",\n\t\"縱\": \"纵\",\n\t\"縲\": \"缧\",\n\t\"縴\": \"纤\",\n\t\"縵\": \"缦\",\n\t\"縷\": \"缕\",\n\t\"縹\": \"缥\",\n\t\"績\": \"绩\",\n\t\"繃\": \"绷\",\n\t\"繅\": \"缫\",\n\t\"繆\": \"缪\",\n\t\"繈\": \"襁\",\n\t\"繒\": \"缯\",\n\t\"織\": \"织\",\n\t\"繕\": \"缮\",\n\t\"繖\": \"伞\",\n\t\"繙\": \"翻\",\n\t\"繚\": \"缭\",\n\t\"繞\": \"绕\",\n\t\"繡\": \"绣\",\n\t\"繢\": \"缋\",\n\t\"繦\": \"襁\",\n\t\"繩\": \"绳\",\n\t\"繪\": \"绘\",\n\t\"繫\": \"系\",\n\t\"繭\": \"茧\",\n\t\"繮\": \"缰\",\n\t\"繯\": \"缳\",\n\t\"繰\": \"缲\",\n\t\"繳\": \"缴\",\n\t\"繹\": \"绎\",\n\t\"繼\": \"继\",\n\t\"繽\": \"缤\",\n\t\"繾\": \"缱\",\n\t\"纇\": \"颣\",\n\t\"纈\": \"缬\",\n\t\"纊\": \"纩\",\n\t\"續\": \"续\",\n\t\"纍\": \"累\",\n\t\"纏\": \"缠\",\n\t\"纓\": \"缨\",\n\t\"纖\": \"纤\",\n\t\"纘\": \"缵\",\n\t\"纜\": \"缆\",\n\t\"韁\": \"缰\",\n\t\"缽\": \"钵\",\n\t\"罌\": \"罂\",\n\t\"罈\": \"坛\",\n\t\"罋\": \"罋\",\n\t\"罎\": \"坛\",\n\t\"罏\": \"垆\",\n\t\"羅\": \"罗\",\n\t\"罰\": \"罚\",\n\t\"罷\": \"罢\",\n\t\"羆\": \"罴\",\n\t\"罵\": \"骂\",\n\t\"罸\": \"罚\",\n\t\"羈\": \"羁\",\n\t\"羋\": \"芈\",\n\t\"羥\": \"羟\",\n\t\"羨\": \"羡\",\n\t\"羢\": \"绒\",\n\t\"羶\": \"膻\",\n\t\"翹\": \"翘\",\n\t\"翽\": \"翙\",\n\t\"翬\": \"翚\",\n\t\"翺\": \"翱\",\n\t\"耑\": \"端\",\n\t\"耡\": \"锄\",\n\t\"耮\": \"耢\",\n\t\"耬\": \"耧\",\n\t\"聳\": \"耸\",\n\t\"聶\": \"聂\",\n\t\"聾\": \"聋\",\n\t\"職\": \"职\",\n\t\"聹\": \"聍\",\n\t\"聯\": \"联\",\n\t\"聞\": \"闻\",\n\t\"聵\": \"聩\",\n\t\"聰\": \"聪\",\n\t\"聼\": \"听\",\n\t\"肅\": \"肃\",\n\t\"腸\": \"肠\",\n\t\"膚\": \"肤\",\n\t\"膁\": \"肷\",\n\t\"腎\": \"肾\",\n\t\"腫\": \"肿\",\n\t\"脹\": \"胀\",\n\t\"脅\": \"胁\",\n\t\"膽\": \"胆\",\n\t\"腖\": \"胨\",\n\t\"臚\": \"胪\",\n\t\"脛\": \"胫\",\n\t\"膠\": \"胶\",\n\t\"脇\": \"胁\",\n\t\"脈\": \"脉\",\n\t\"膾\": \"脍\",\n\t\"髒\": \"脏\",\n\t\"臍\": \"脐\",\n\t\"腦\": \"脑\",\n\t\"膿\": \"脓\",\n\t\"臠\": \"脔\",\n\t\"腳\": \"脚\",\n\t\"脣\": \"脣\",\n\t\"脩\": \"脩\",\n\t\"脫\": \"脱\",\n\t\"腡\": \"脶\",\n\t\"臉\": \"脸\",\n\t\"臘\": \"腊\",\n\t\"醃\": \"腌\",\n\t\"膕\": \"腘\",\n\t\"齶\": \"腭\",\n\t\"膩\": \"腻\",\n\t\"靦\": \"腼\",\n\t\"膃\": \"腽\",\n\t\"騰\": \"腾\",\n\t\"臏\": \"膑\",\n\t\"臢\": \"臜\",\n\t\"臟\": \"脏\",\n\t\"臯\": \"皋\",\n\t\"臺\": \"台\",\n\t\"輿\": \"舆\",\n\t\"舖\": \"铺\",\n\t\"舘\": \"馆\",\n\t\"艤\": \"舣\",\n\t\"艦\": \"舰\",\n\t\"艙\": \"舱\",\n\t\"艫\": \"舻\",\n\t\"艢\": \"樯\",\n\t\"艣\": \"橹\",\n\t\"艪\": \"橹\",\n\t\"艱\": \"艰\",\n\t\"豔\": \"艳\",\n\t\"艷\": \"艳\",\n\t\"艸\": \"艸\",\n\t\"藝\": \"艺\",\n\t\"薌\": \"芗\",\n\t\"蕪\": \"芜\",\n\t\"蘆\": \"芦\",\n\t\"蓯\": \"苁\",\n\t\"葦\": \"苇\",\n\t\"藶\": \"苈\",\n\t\"莧\": \"苋\",\n\t\"萇\": \"苌\",\n\t\"蒼\": \"苍\",\n\t\"苧\": \"苎\",\n\t\"蘇\": \"苏\",\n\t\"蘋\": \"苹\",\n\t\"莖\": \"茎\",\n\t\"蘢\": \"茏\",\n\t\"蔦\": \"茑\",\n\t\"荊\": \"荆\",\n\t\"薦\": \"荐\",\n\t\"薘\": \"荙\",\n\t\"莢\": \"荚\",\n\t\"蕘\": \"荛\",\n\t\"蓽\": \"荜\",\n\t\"蕎\": \"荞\",\n\t\"薈\": \"荟\",\n\t\"薺\": \"荠\",\n\t\"蕩\": \"荡\",\n\t\"葷\": \"荤\",\n\t\"蕁\": \"荨\",\n\t\"藎\": \"荩\",\n\t\"蓀\": \"荪\",\n\t\"蔭\": \"荫\",\n\t\"蕒\": \"荬\",\n\t\"葒\": \"荭\",\n\t\"葤\": \"荮\",\n\t\"藥\": \"药\",\n\t\"蒞\": \"莅\",\n\t\"蓧\": \"莜\",\n\t\"萊\": \"莱\",\n\t\"蓮\": \"莲\",\n\t\"蒔\": \"莳\",\n\t\"萵\": \"莴\",\n\t\"薟\": \"莶\",\n\t\"蕕\": \"莸\",\n\t\"鶯\": \"莺\",\n\t\"蓴\": \"莼\",\n\t\"菴\": \"庵\",\n\t\"菸\": \"菸\",\n\t\"蘀\": \"萚\",\n\t\"蘿\": \"萝\",\n\t\"螢\": \"萤\",\n\t\"蕭\": \"萧\",\n\t\"薩\": \"萨\",\n\t\"葠\": \"参\",\n\t\"葯\": \"药\",\n\t\"蔥\": \"葱\",\n\t\"蕆\": \"蒇\",\n\t\"蕢\": \"蒉\",\n\t\"蔣\": \"蒋\",\n\t\"蔞\": \"蒌\",\n\t\"蒐\": \"搜\",\n\t\"蒓\": \"莼\",\n\t\"蓆\": \"席\",\n\t\"藍\": \"蓝\",\n\t\"薊\": \"蓟\",\n\t\"蘺\": \"蓠\",\n\t\"蓡\": \"参\",\n\t\"蕷\": \"蓣\",\n\t\"鎣\": \"蓥\",\n\t\"驀\": \"蓦\",\n\t\"蔆\": \"菱\",\n\t\"蔴\": \"麻\",\n\t\"薔\": \"蔷\",\n\t\"蘞\": \"蔹\",\n\t\"藺\": \"蔺\",\n\t\"藹\": \"蔼\",\n\t\"蕓\": \"芸\",\n\t\"蘄\": \"蕲\",\n\t\"蘊\": \"蕴\",\n\t\"藪\": \"薮\",\n\t\"薰\": \"薰\",\n\t\"蘚\": \"藓\",\n\t\"虜\": \"虏\",\n\t\"虛\": \"虚\",\n\t\"蟲\": \"虫\",\n\t\"虯\": \"虬\",\n\t\"蟣\": \"虮\",\n\t\"雖\": \"虽\",\n\t\"蝦\": \"虾\",\n\t\"蠆\": \"虿\",\n\t\"蝕\": \"蚀\",\n\t\"蟻\": \"蚁\",\n\t\"螞\": \"蚂\",\n\t\"蠶\": \"蚕\",\n\t\"蠔\": \"蚝\",\n\t\"蜆\": \"蚬\",\n\t\"蠱\": \"蛊\",\n\t\"蠣\": \"蛎\",\n\t\"蟶\": \"蛏\",\n\t\"蠻\": \"蛮\",\n\t\"蟄\": \"蛰\",\n\t\"蛺\": \"蛱\",\n\t\"蟯\": \"蛲\",\n\t\"螄\": \"蛳\",\n\t\"蠐\": \"蛴\",\n\t\"蛻\": \"蜕\",\n\t\"蝸\": \"蜗\",\n\t\"蠟\": \"蜡\",\n\t\"蠅\": \"蝇\",\n\t\"蟈\": \"蝈\",\n\t\"蟬\": \"蝉\",\n\t\"蠍\": \"蝎\",\n\t\"蝨\": \"虱\",\n\t\"螻\": \"蝼\",\n\t\"蠑\": \"蝾\",\n\t\"螿\": \"螀\",\n\t\"螘\": \"蚁\",\n\t\"蟎\": \"螨\",\n\t\"蠨\": \"蟏\",\n\t\"釁\": \"衅\",\n\t\"衆\": \"众\",\n\t\"衊\": \"衊\",\n\t\"銜\": \"衔\",\n\t\"衚\": \"胡\",\n\t\"衝\": \"冲\",\n\t\"衞\": \"卫\",\n\t\"補\": \"补\",\n\t\"襯\": \"衬\",\n\t\"袞\": \"衮\",\n\t\"衹\": \"只\",\n\t\"襖\": \"袄\",\n\t\"褘\": \"袆\",\n\t\"襪\": \"袜\",\n\t\"襲\": \"袭\",\n\t\"襏\": \"袯\",\n\t\"裝\": \"装\",\n\t\"襠\": \"裆\",\n\t\"褌\": \"裈\",\n\t\"裊\": \"袅\",\n\t\"裌\": \"夹\",\n\t\"裏\": \"里\",\n\t\"裡\": \"里\",\n\t\"褳\": \"裢\",\n\t\"襝\": \"裣\",\n\t\"褲\": \"裤\",\n\t\"襇\": \"裥\",\n\t\"製\": \"制\",\n\t\"褸\": \"褛\",\n\t\"襤\": \"褴\",\n\t\"襍\": \"杂\",\n\t\"襴\": \"襕\",\n\t\"覈\": \"覈\",\n\t\"見\": \"见\",\n\t\"覎\": \"觃\",\n\t\"規\": \"规\",\n\t\"覓\": \"觅\",\n\t\"覔\": \"觅\",\n\t\"視\": \"视\",\n\t\"覘\": \"觇\",\n\t\"覜\": \"眺\",\n\t\"覡\": \"觋\",\n\t\"覥\": \"觍\",\n\t\"覦\": \"觎\",\n\t\"覬\": \"觊\",\n\t\"覯\": \"觏\",\n\t\"覰\": \"觑\",\n\t\"覲\": \"觐\",\n\t\"覷\": \"觑\",\n\t\"覺\": \"觉\",\n\t\"覻\": \"觑\",\n\t\"覽\": \"览\",\n\t\"覿\": \"觌\",\n\t\"觀\": \"观\",\n\t\"觝\": \"抵\",\n\t\"觴\": \"觞\",\n\t\"觸\": \"触\",\n\t\"觶\": \"觯\",\n\t\"訁\": \"讠\",\n\t\"訂\": \"订\",\n\t\"訃\": \"讣\",\n\t\"計\": \"计\",\n\t\"訊\": \"讯\",\n\t\"訌\": \"讧\",\n\t\"討\": \"讨\",\n\t\"訏\": \"吁\",\n\t\"訐\": \"讦\",\n\t\"訒\": \"讱\",\n\t\"訓\": \"训\",\n\t\"訕\": \"讪\",\n\t\"訖\": \"讫\",\n\t\"託\": \"讬\",\n\t\"記\": \"记\",\n\t\"訛\": \"讹\",\n\t\"訝\": \"讶\",\n\t\"訟\": \"讼\",\n\t\"訢\": \"䜣\",\n\t\"訣\": \"诀\",\n\t\"訥\": \"讷\",\n\t\"訦\": \"谌\",\n\t\"訩\": \"讻\",\n\t\"訪\": \"访\",\n\t\"設\": \"设\",\n\t\"許\": \"许\",\n\t\"訴\": \"诉\",\n\t\"訶\": \"诃\",\n\t\"診\": \"诊\",\n\t\"註\": \"注\",\n\t\"証\": \"証\",\n\t\"詁\": \"诂\",\n\t\"詆\": \"诋\",\n\t\"詎\": \"讵\",\n\t\"詐\": \"诈\",\n\t\"詒\": \"诒\",\n\t\"詔\": \"诏\",\n\t\"評\": \"评\",\n\t\"詖\": \"诐\",\n\t\"詗\": \"诇\",\n\t\"詘\": \"诎\",\n\t\"詛\": \"诅\",\n\t\"詞\": \"词\",\n\t\"讋\": \"詟\",\n\t\"詡\": \"诩\",\n\t\"詢\": \"询\",\n\t\"詣\": \"诣\",\n\t\"試\": \"试\",\n\t\"詩\": \"诗\",\n\t\"詫\": \"诧\",\n\t\"詬\": \"诟\",\n\t\"詭\": \"诡\",\n\t\"詮\": \"诠\",\n\t\"詰\": \"诘\",\n\t\"話\": \"话\",\n\t\"該\": \"该\",\n\t\"詳\": \"详\",\n\t\"詵\": \"诜\",\n\t\"詼\": \"诙\",\n\t\"詾\": \"讻\",\n\t\"詿\": \"诖\",\n\t\"誄\": \"诔\",\n\t\"誅\": \"诛\",\n\t\"誆\": \"诓\",\n\t\"譽\": \"誉\",\n\t\"謄\": \"誊\",\n\t\"誌\": \"志\",\n\t\"認\": \"认\",\n\t\"誑\": \"诳\",\n\t\"誒\": \"诶\",\n\t\"誕\": \"诞\",\n\t\"誘\": \"诱\",\n\t\"誚\": \"诮\",\n\t\"語\": \"语\",\n\t\"誠\": \"诚\",\n\t\"誡\": \"诫\",\n\t\"誣\": \"诬\",\n\t\"誤\": \"误\",\n\t\"誥\": \"诰\",\n\t\"誦\": \"诵\",\n\t\"誨\": \"诲\",\n\t\"說\": \"说\",\n\t\"説\": \"说\",\n\t\"誰\": \"谁\",\n\t\"課\": \"课\",\n\t\"誶\": \"谇\",\n\t\"誹\": \"诽\",\n\t\"誼\": \"谊\",\n\t\"調\": \"调\",\n\t\"諂\": \"谄\",\n\t\"諄\": \"谆\",\n\t\"談\": \"谈\",\n\t\"諉\": \"诿\",\n\t\"請\": \"请\",\n\t\"諍\": \"诤\",\n\t\"諏\": \"诹\",\n\t\"諑\": \"诼\",\n\t\"諒\": \"谅\",\n\t\"論\": \"论\",\n\t\"諗\": \"谂\",\n\t\"諛\": \"谀\",\n\t\"諜\": \"谍\",\n\t\"諝\": \"谞\",\n\t\"諞\": \"谝\",\n\t\"諡\": \"谥\",\n\t\"諢\": \"诨\",\n\t\"諤\": \"谔\",\n\t\"諦\": \"谛\",\n\t\"諧\": \"谐\",\n\t\"諫\": \"谏\",\n\t\"諭\": \"谕\",\n\t\"諱\": \"讳\",\n\t\"諳\": \"谙\",\n\t\"諶\": \"谌\",\n\t\"諷\": \"讽\",\n\t\"諸\": \"诸\",\n\t\"諺\": \"谚\",\n\t\"諼\": \"谖\",\n\t\"諾\": \"诺\",\n\t\"謀\": \"谋\",\n\t\"謁\": \"谒\",\n\t\"謂\": \"谓\",\n\t\"謅\": \"诌\",\n\t\"謊\": \"谎\",\n\t\"謎\": \"谜\",\n\t\"謐\": \"谧\",\n\t\"謖\": \"谡\",\n\t\"謗\": \"谤\",\n\t\"謙\": \"谦\",\n\t\"謚\": \"谥\",\n\t\"講\": \"讲\",\n\t\"謝\": \"谢\",\n\t\"謠\": \"谣\",\n\t\"謨\": \"谟\",\n\t\"謫\": \"谪\",\n\t\"謬\": \"谬\",\n\t\"謳\": \"讴\",\n\t\"謹\": \"谨\",\n\t\"謾\": \"谩\",\n\t\"譁\": \"譁\",\n\t\"譆\": \"嘻\",\n\t\"證\": \"证\",\n\t\"譌\": \"讹\",\n\t\"譎\": \"谲\",\n\t\"譏\": \"讥\",\n\t\"譖\": \"谮\",\n\t\"識\": \"识\",\n\t\"譙\": \"谯\",\n\t\"譚\": \"谭\",\n\t\"譜\": \"谱\",\n\t\"譟\": \"譟\",\n\t\"譫\": \"谵\",\n\t\"譭\": \"毁\",\n\t\"譯\": \"译\",\n\t\"議\": \"议\",\n\t\"譴\": \"谴\",\n\t\"譸\": \"诪\",\n\t\"譾\": \"谫\",\n\t\"讀\": \"读\",\n\t\"讁\": \"谪\",\n\t\"讅\": \"审\",\n\t\"讌\": \"燕\",\n\t\"讎\": \"雠\",\n\t\"讐\": \"雠\",\n\t\"讒\": \"谗\",\n\t\"讓\": \"让\",\n\t\"讕\": \"谰\",\n\t\"讖\": \"谶\",\n\t\"讚\": \"讚\",\n\t\"讛\": \"呓\",\n\t\"讜\": \"谠\",\n\t\"讞\": \"谳\",\n\t\"谿\": \"谿\",\n\t\"豶\": \"豮\",\n\t\"貍\": \"狸\",\n\t\"貝\": \"贝\",\n\t\"貞\": \"贞\",\n\t\"貟\": \"贠\",\n\t\"負\": \"负\",\n\t\"財\": \"财\",\n\t\"貢\": \"贡\",\n\t\"貧\": \"贫\",\n\t\"貨\": \"货\",\n\t\"販\": \"贩\",\n\t\"貪\": \"贪\",\n\t\"貫\": \"贯\",\n\t\"責\": \"责\",\n\t\"貯\": \"贮\",\n\t\"貰\": \"贳\",\n\t\"貲\": \"赀\",\n\t\"貳\": \"贰\",\n\t\"貴\": \"贵\",\n\t\"貶\": \"贬\",\n\t\"貸\": \"贷\",\n\t\"貺\": \"贶\",\n\t\"費\": \"费\",\n\t\"貼\": \"贴\",\n\t\"貽\": \"贻\",\n\t\"貿\": \"贸\",\n\t\"賀\": \"贺\",\n\t\"賁\": \"贲\",\n\t\"賂\": \"赂\",\n\t\"賃\": \"赁\",\n\t\"賄\": \"贿\",\n\t\"賅\": \"赅\",\n\t\"資\": \"资\",\n\t\"賈\": \"贾\",\n\t\"賉\": \"恤\",\n\t\"賊\": \"贼\",\n\t\"賍\": \"赃\",\n\t\"賑\": \"赈\",\n\t\"賒\": \"赊\",\n\t\"賔\": \"宾\",\n\t\"賕\": \"赇\",\n\t\"賙\": \"赒\",\n\t\"賚\": \"赉\",\n\t\"賛\": \"赞\",\n\t\"賜\": \"赐\",\n\t\"賞\": \"赏\",\n\t\"賠\": \"赔\",\n\t\"賡\": \"赓\",\n\t\"賢\": \"贤\",\n\t\"賤\": \"贱\",\n\t\"賦\": \"赋\",\n\t\"賧\": \"赕\",\n\t\"質\": \"质\",\n\t\"賫\": \"赍\",\n\t\"賬\": \"账\",\n\t\"賭\": \"赌\",\n\t\"賮\": \"赆\",\n\t\"賴\": \"赖\",\n\t\"賵\": \"赗\",\n\t\"賸\": \"剩\",\n\t\"賺\": \"赚\",\n\t\"賻\": \"赙\",\n\t\"購\": \"购\",\n\t\"賽\": \"赛\",\n\t\"賾\": \"赜\",\n\t\"贄\": \"贽\",\n\t\"贅\": \"赘\",\n\t\"贇\": \"赟\",\n\t\"贈\": \"赠\",\n\t\"贊\": \"赞\",\n\t\"贋\": \"赝\",\n\t\"贍\": \"赡\",\n\t\"贏\": \"赢\",\n\t\"贐\": \"赆\",\n\t\"贓\": \"赃\",\n\t\"贔\": \"赑\",\n\t\"贖\": \"赎\",\n\t\"贗\": \"赝\",\n\t\"贛\": \"赣\",\n\t\"贜\": \"赃\",\n\t\"齎\": \"赍\",\n\t\"赬\": \"赪\",\n\t\"趙\": \"赵\",\n\t\"趕\": \"赶\",\n\t\"趨\": \"趋\",\n\t\"趲\": \"趱\",\n\t\"躉\": \"趸\",\n\t\"躍\": \"跃\",\n\t\"蹌\": \"跄\",\n\t\"蹠\": \"蹠\",\n\t\"躒\": \"跞\",\n\t\"跡\": \"迹\",\n\t\"踐\": \"践\",\n\t\"躂\": \"跶\",\n\t\"蹺\": \"跷\",\n\t\"蹕\": \"跸\",\n\t\"躚\": \"跹\",\n\t\"躋\": \"跻\",\n\t\"跼\": \"局\",\n\t\"踴\": \"踊\",\n\t\"躊\": \"踌\",\n\t\"踡\": \"蜷\",\n\t\"蹤\": \"踪\",\n\t\"躓\": \"踬\",\n\t\"躑\": \"踯\",\n\t\"躡\": \"蹑\",\n\t\"蹣\": \"蹒\",\n\t\"蹟\": \"迹\",\n\t\"躕\": \"蹰\",\n\t\"躥\": \"蹿\",\n\t\"躪\": \"躏\",\n\t\"躦\": \"躜\",\n\t\"軀\": \"躯\",\n\t\"躰\": \"体\",\n\t\"軃\": \"亸\",\n\t\"車\": \"车\",\n\t\"軋\": \"轧\",\n\t\"軌\": \"轨\",\n\t\"軑\": \"轪\",\n\t\"軒\": \"轩\",\n\t\"軔\": \"轫\",\n\t\"軛\": \"轭\",\n\t\"軟\": \"软\",\n\t\"軤\": \"轷\",\n\t\"軫\": \"轸\",\n\t\"軲\": \"轱\",\n\t\"軸\": \"轴\",\n\t\"軹\": \"轵\",\n\t\"軺\": \"轺\",\n\t\"軻\": \"轲\",\n\t\"軼\": \"轶\",\n\t\"軾\": \"轼\",\n\t\"較\": \"较\",\n\t\"輅\": \"辂\",\n\t\"輇\": \"辁\",\n\t\"輈\": \"辀\",\n\t\"載\": \"载\",\n\t\"輊\": \"轾\",\n\t\"輒\": \"辄\",\n\t\"輓\": \"挽\",\n\t\"輔\": \"辅\",\n\t\"輕\": \"轻\",\n\t\"輛\": \"辆\",\n\t\"輜\": \"辎\",\n\t\"輝\": \"辉\",\n\t\"輞\": \"辋\",\n\t\"輟\": \"辍\",\n\t\"輥\": \"辊\",\n\t\"輦\": \"辇\",\n\t\"輩\": \"辈\",\n\t\"輪\": \"轮\",\n\t\"輬\": \"辌\",\n\t\"輭\": \"软\",\n\t\"輯\": \"辑\",\n\t\"輳\": \"辏\",\n\t\"輸\": \"输\",\n\t\"輻\": \"辐\",\n\t\"輼\": \"辒\",\n\t\"輾\": \"辗\",\n\t\"轀\": \"辒\",\n\t\"轄\": \"辖\",\n\t\"轅\": \"辕\",\n\t\"轆\": \"辘\",\n\t\"轉\": \"转\",\n\t\"轍\": \"辙\",\n\t\"轎\": \"轿\",\n\t\"轔\": \"辚\",\n\t\"轟\": \"轰\",\n\t\"轡\": \"辔\",\n\t\"轢\": \"轹\",\n\t\"轤\": \"轳\",\n\t\"辭\": \"辞\",\n\t\"辤\": \"辞\",\n\t\"辯\": \"辩\",\n\t\"辮\": \"辫\",\n\t\"辳\": \"农\",\n\t\"邊\": \"边\",\n\t\"遼\": \"辽\",\n\t\"達\": \"达\",\n\t\"遷\": \"迁\",\n\t\"迆\": \"迤\",\n\t\"過\": \"过\",\n\t\"邁\": \"迈\",\n\t\"運\": \"运\",\n\t\"還\": \"还\",\n\t\"這\": \"这\",\n\t\"進\": \"进\",\n\t\"遠\": \"远\",\n\t\"違\": \"违\",\n\t\"連\": \"连\",\n\t\"遲\": \"迟\",\n\t\"邇\": \"迩\",\n\t\"逕\": \"迳\",\n\t\"迴\": \"回\",\n\t\"迺\": \"乃\",\n\t\"適\": \"适\",\n\t\"選\": \"选\",\n\t\"遜\": \"逊\",\n\t\"遞\": \"递\",\n\t\"邐\": \"逦\",\n\t\"週\": \"週\",\n\t\"邏\": \"逻\",\n\t\"遺\": \"遗\",\n\t\"遙\": \"遥\",\n\t\"鄧\": \"邓\",\n\t\"鄺\": \"邝\",\n\t\"鄔\": \"邬\",\n\t\"郵\": \"邮\",\n\t\"鄒\": \"邹\",\n\t\"鄴\": \"邺\",\n\t\"鄰\": \"邻\",\n\t\"鬱\": \"郁\",\n\t\"郃\": \"合\",\n\t\"郤\": \"郄\",\n\t\"郟\": \"郏\",\n\t\"鄶\": \"郐\",\n\t\"鄭\": \"郑\",\n\t\"鄆\": \"郓\",\n\t\"酈\": \"郦\",\n\t\"鄖\": \"郧\",\n\t\"鄲\": \"郸\",\n\t\"鄕\": \"乡\",\n\t\"鄘\": \"墉\",\n\t\"醞\": \"酝\",\n\t\"醱\": \"酦\",\n\t\"酧\": \"酬\",\n\t\"醯\": \"酰\",\n\t\"醬\": \"酱\",\n\t\"釅\": \"酽\",\n\t\"釃\": \"酾\",\n\t\"釀\": \"酿\",\n\t\"醖\": \"酝\",\n\t\"醻\": \"酬\",\n\t\"醼\": \"燕\",\n\t\"釋\": \"释\",\n\t\"釐\": \"厘\",\n\t\"釓\": \"钆\",\n\t\"釔\": \"钇\",\n\t\"釕\": \"钌\",\n\t\"釗\": \"钊\",\n\t\"釘\": \"钉\",\n\t\"釙\": \"钋\",\n\t\"針\": \"针\",\n\t\"釣\": \"钓\",\n\t\"釤\": \"钐\",\n\t\"釦\": \"扣\",\n\t\"釧\": \"钏\",\n\t\"釩\": \"钒\",\n\t\"釬\": \"焊\",\n\t\"釵\": \"钗\",\n\t\"釷\": \"钍\",\n\t\"釹\": \"钕\",\n\t\"釺\": \"钎\",\n\t\"鈀\": \"钯\",\n\t\"鈁\": \"钫\",\n\t\"鈃\": \"钘\",\n\t\"鈄\": \"钭\",\n\t\"鈅\": \"钥\",\n\t\"鈈\": \"钚\",\n\t\"鈉\": \"钠\",\n\t\"鈍\": \"钝\",\n\t\"鈎\": \"钩\",\n\t\"鈐\": \"钤\",\n\t\"鈑\": \"钣\",\n\t\"鈒\": \"钑\",\n\t\"鈔\": \"钞\",\n\t\"鈕\": \"钮\",\n\t\"鈞\": \"钧\",\n\t\"鈡\": \"钟\",\n\t\"鈣\": \"钙\",\n\t\"鈥\": \"钬\",\n\t\"鈦\": \"钛\",\n\t\"鈧\": \"钪\",\n\t\"鈮\": \"铌\",\n\t\"鈰\": \"铈\",\n\t\"鈳\": \"钶\",\n\t\"鈴\": \"铃\",\n\t\"鈷\": \"钴\",\n\t\"鈸\": \"钹\",\n\t\"鈹\": \"铍\",\n\t\"鈺\": \"钰\",\n\t\"鈽\": \"钸\",\n\t\"鈾\": \"铀\",\n\t\"鈿\": \"钿\",\n\t\"鉀\": \"钾\",\n\t\"鉄\": \"铁\",\n\t\"鉆\": \"钻\",\n\t\"鉈\": \"铊\",\n\t\"鉉\": \"铉\",\n\t\"鉋\": \"铇\",\n\t\"鉍\": \"铋\",\n\t\"鉑\": \"铂\",\n\t\"鉕\": \"钷\",\n\t\"鉗\": \"钳\",\n\t\"鉚\": \"铆\",\n\t\"鉛\": \"铅\",\n\t\"鉞\": \"钺\",\n\t\"鉢\": \"钵\",\n\t\"鉤\": \"钩\",\n\t\"鉦\": \"钲\",\n\t\"鉬\": \"钼\",\n\t\"鉭\": \"钽\",\n\t\"鉲\": \"锎\",\n\t\"鑒\": \"鉴\",\n\t\"鉶\": \"铏\",\n\t\"鉸\": \"铰\",\n\t\"鉺\": \"铒\",\n\t\"鉻\": \"铬\",\n\t\"鉿\": \"铪\",\n\t\"銀\": \"银\",\n\t\"銃\": \"铳\",\n\t\"銅\": \"铜\",\n\t\"銍\": \"铚\",\n\t\"銑\": \"铣\",\n\t\"銓\": \"铨\",\n\t\"銕\": \"铁\",\n\t\"銖\": \"铢\",\n\t\"銘\": \"铭\",\n\t\"銚\": \"铫\",\n\t\"銛\": \"铦\",\n\t\"銠\": \"铑\",\n\t\"銣\": \"铷\",\n\t\"銥\": \"铱\",\n\t\"銦\": \"铟\",\n\t\"銨\": \"铵\",\n\t\"銩\": \"铥\",\n\t\"銪\": \"铕\",\n\t\"銫\": \"铯\",\n\t\"銬\": \"铐\",\n\t\"鑾\": \"銮\",\n\t\"銱\": \"铞\",\n\t\"銲\": \"焊\",\n\t\"銳\": \"锐\",\n\t\"銷\": \"销\",\n\t\"銹\": \"锈\",\n\t\"銻\": \"锑\",\n\t\"銼\": \"锉\",\n\t\"鋁\": \"铝\",\n\t\"鋂\": \"镅\",\n\t\"鋃\": \"锒\",\n\t\"鋅\": \"锌\",\n\t\"鋇\": \"钡\",\n\t\"鋌\": \"铤\",\n\t\"鋏\": \"铗\",\n\t\"鋒\": \"锋\",\n\t\"鋙\": \"铻\",\n\t\"鋜\": \"镯\",\n\t\"鋝\": \"锊\",\n\t\"鋟\": \"锓\",\n\t\"鋣\": \"铘\",\n\t\"鋤\": \"锄\",\n\t\"鋥\": \"锃\",\n\t\"鋦\": \"锔\",\n\t\"鋨\": \"锇\",\n\t\"鋩\": \"铓\",\n\t\"鋪\": \"铺\",\n\t\"鋮\": \"铖\",\n\t\"鋯\": \"锆\",\n\t\"鋰\": \"锂\",\n\t\"鋱\": \"铽\",\n\t\"鋶\": \"锍\",\n\t\"鋸\": \"锯\",\n\t\"鋻\": \"鉴\",\n\t\"鋼\": \"钢\",\n\t\"錁\": \"锞\",\n\t\"錆\": \"锖\",\n\t\"錇\": \"锫\",\n\t\"錈\": \"锩\",\n\t\"錏\": \"铔\",\n\t\"錐\": \"锥\",\n\t\"錒\": \"锕\",\n\t\"錕\": \"锟\",\n\t\"錘\": \"锤\",\n\t\"錙\": \"锱\",\n\t\"錚\": \"铮\",\n\t\"錛\": \"锛\",\n\t\"錟\": \"锬\",\n\t\"錠\": \"锭\",\n\t\"錡\": \"锜\",\n\t\"錢\": \"钱\",\n\t\"錦\": \"锦\",\n\t\"錨\": \"锚\",\n\t\"錩\": \"锠\",\n\t\"錫\": \"锡\",\n\t\"錮\": \"锢\",\n\t\"錯\": \"错\",\n\t\"錳\": \"锰\",\n\t\"錶\": \"表\",\n\t\"錸\": \"铼\",\n\t\"錼\": \"镎\",\n\t\"鏨\": \"錾\",\n\t\"鍀\": \"锝\",\n\t\"鍁\": \"锨\",\n\t\"鍃\": \"锪\",\n\t\"鍆\": \"钔\",\n\t\"鍇\": \"锴\",\n\t\"鍈\": \"锳\",\n\t\"鍊\": \"炼\",\n\t\"鍋\": \"锅\",\n\t\"鍍\": \"镀\",\n\t\"鍔\": \"锷\",\n\t\"鍘\": \"铡\",\n\t\"鍚\": \"钖\",\n\t\"鍛\": \"锻\",\n\t\"鍠\": \"锽\",\n\t\"鍤\": \"锸\",\n\t\"鍥\": \"锲\",\n\t\"鍩\": \"锘\",\n\t\"鍫\": \"锹\",\n\t\"鍬\": \"锹\",\n\t\"鍰\": \"锾\",\n\t\"鍵\": \"键\",\n\t\"鍶\": \"锶\",\n\t\"鍺\": \"锗\",\n\t\"鍼\": \"针\",\n\t\"鍾\": \"锺\",\n\t\"鎂\": \"镁\",\n\t\"鎄\": \"锿\",\n\t\"鎇\": \"镅\",\n\t\"鎊\": \"镑\",\n\t\"鎋\": \"辖\",\n\t\"鎔\": \"镕\",\n\t\"鎖\": \"锁\",\n\t\"鎘\": \"镉\",\n\t\"鎚\": \"锤\",\n\t\"鎛\": \"镈\",\n\t\"鎡\": \"镃\",\n\t\"鎢\": \"钨\",\n\t\"鎦\": \"镏\",\n\t\"鎧\": \"铠\",\n\t\"鎩\": \"铩\",\n\t\"鎪\": \"锼\",\n\t\"鎬\": \"镐\",\n\t\"鎮\": \"镇\",\n\t\"鎰\": \"镒\",\n\t\"鎲\": \"镋\",\n\t\"鎳\": \"镍\",\n\t\"鎵\": \"镓\",\n\t\"鎸\": \"镌\",\n\t\"鎿\": \"镎\",\n\t\"鏃\": \"镞\",\n\t\"鏇\": \"镟\",\n\t\"鏈\": \"链\",\n\t\"鏌\": \"镆\",\n\t\"鏍\": \"镙\",\n\t\"鏐\": \"镠\",\n\t\"鏑\": \"镝\",\n\t\"鏗\": \"铿\",\n\t\"鏘\": \"锵\",\n\t\"鏚\": \"戚\",\n\t\"鏜\": \"镗\",\n\t\"鏝\": \"镘\",\n\t\"鏞\": \"镛\",\n\t\"鏡\": \"镜\",\n\t\"鏢\": \"镖\",\n\t\"鏤\": \"镂\",\n\t\"鏰\": \"镚\",\n\t\"鏵\": \"铧\",\n\t\"鏷\": \"镤\",\n\t\"鏹\": \"镪\",\n\t\"鏽\": \"锈\",\n\t\"鐃\": \"铙\",\n\t\"鐋\": \"铴\",\n\t\"鐐\": \"镣\",\n\t\"鐒\": \"铹\",\n\t\"鐓\": \"镦\",\n\t\"鐔\": \"镡\",\n\t\"鐘\": \"钟\",\n\t\"鐙\": \"镫\",\n\t\"鐝\": \"镢\",\n\t\"鐠\": \"镨\",\n\t\"鐦\": \"锎\",\n\t\"鐧\": \"锏\",\n\t\"鐨\": \"镄\",\n\t\"鐫\": \"镌\",\n\t\"鐮\": \"镰\",\n\t\"鐲\": \"镯\",\n\t\"鐳\": \"镭\",\n\t\"鐵\": \"铁\",\n\t\"鐶\": \"镮\",\n\t\"鐸\": \"铎\",\n\t\"鐺\": \"铛\",\n\t\"鐿\": \"镱\",\n\t\"鑄\": \"铸\",\n\t\"鑊\": \"镬\",\n\t\"鑌\": \"镔\",\n\t\"鑑\": \"鉴\",\n\t\"鑔\": \"镲\",\n\t\"鑕\": \"锧\",\n\t\"鑛\": \"矿\",\n\t\"鑞\": \"镴\",\n\t\"鑠\": \"铄\",\n\t\"鑣\": \"镳\",\n\t\"鑤\": \"刨\",\n\t\"鑥\": \"镥\",\n\t\"鑪\": \"炉\",\n\t\"鑭\": \"镧\",\n\t\"鑰\": \"钥\",\n\t\"鑱\": \"镵\",\n\t\"鑲\": \"镶\",\n\t\"鑷\": \"镊\",\n\t\"鑹\": \"镩\",\n\t\"鑼\": \"锣\",\n\t\"鑽\": \"钻\",\n\t\"钁\": \"镢\",\n\t\"钂\": \"镋\",\n\t\"長\": \"长\",\n\t\"門\": \"门\",\n\t\"閂\": \"闩\",\n\t\"閃\": \"闪\",\n\t\"閆\": \"闫\",\n\t\"閈\": \"闬\",\n\t\"閉\": \"闭\",\n\t\"閌\": \"闶\",\n\t\"閎\": \"闳\",\n\t\"閏\": \"闰\",\n\t\"閑\": \"闲\",\n\t\"閒\": \"闲\",\n\t\"間\": \"间\",\n\t\"閔\": \"闵\",\n\t\"閘\": \"闸\",\n\t\"閙\": \"闹\",\n\t\"閡\": \"阂\",\n\t\"関\": \"关\",\n\t\"閣\": \"阁\",\n\t\"閤\": \"合\",\n\t\"閥\": \"阀\",\n\t\"閨\": \"闺\",\n\t\"閩\": \"闽\",\n\t\"閫\": \"阃\",\n\t\"閬\": \"阆\",\n\t\"閭\": \"闾\",\n\t\"閱\": \"阅\",\n\t\"閲\": \"阅\",\n\t\"閶\": \"阊\",\n\t\"閹\": \"阉\",\n\t\"閻\": \"阎\",\n\t\"閼\": \"阏\",\n\t\"閽\": \"阍\",\n\t\"閾\": \"阈\",\n\t\"閿\": \"阌\",\n\t\"闃\": \"阒\",\n\t\"闆\": \"板\",\n\t\"闈\": \"闱\",\n\t\"闊\": \"阔\",\n\t\"闋\": \"阕\",\n\t\"闌\": \"阑\",\n\t\"闍\": \"阇\",\n\t\"闐\": \"阗\",\n\t\"闒\": \"阘\",\n\t\"闓\": \"闿\",\n\t\"闔\": \"阖\",\n\t\"闕\": \"阙\",\n\t\"闖\": \"闯\",\n\t\"闚\": \"窥\",\n\t\"闞\": \"阚\",\n\t\"闠\": \"阓\",\n\t\"闡\": \"阐\",\n\t\"闢\": \"闢\",\n\t\"闤\": \"阛\",\n\t\"闥\": \"闼\",\n\t\"鬧\": \"闹\",\n\t\"鬮\": \"阄\",\n\t\"鬩\": \"阋\",\n\t\"隊\": \"队\",\n\t\"阬\": \"坑\",\n\t\"阯\": \"址\",\n\t\"陽\": \"阳\",\n\t\"陰\": \"阴\",\n\t\"陣\": \"阵\",\n\t\"階\": \"阶\",\n\t\"際\": \"际\",\n\t\"陸\": \"陆\",\n\t\"隴\": \"陇\",\n\t\"陳\": \"陈\",\n\t\"陘\": \"陉\",\n\t\"陝\": \"陕\",\n\t\"陞\": \"陞\",\n\t\"隉\": \"陧\",\n\t\"隕\": \"陨\",\n\t\"險\": \"险\",\n\t\"隂\": \"阴\",\n\t\"隄\": \"堤\",\n\t\"隨\": \"随\",\n\t\"隱\": \"隐\",\n\t\"隖\": \"坞\",\n\t\"隣\": \"邻\",\n\t\"隸\": \"隶\",\n\t\"隷\": \"隶\",\n\t\"隻\": \"只\",\n\t\"雋\": \"隽\",\n\t\"難\": \"难\",\n\t\"雛\": \"雏\",\n\t\"雞\": \"鸡\",\n\t\"靂\": \"雳\",\n\t\"霧\": \"雾\",\n\t\"霽\": \"霁\",\n\t\"黴\": \"黴\",\n\t\"霑\": \"沾\",\n\t\"霛\": \"灵\",\n\t\"霤\": \"溜\",\n\t\"靄\": \"霭\",\n\t\"靚\": \"靓\",\n\t\"靜\": \"静\",\n\t\"靨\": \"靥\",\n\t\"靭\": \"韧\",\n\t\"鞀\": \"鼗\",\n\t\"鞉\": \"鼗\",\n\t\"韃\": \"鞑\",\n\t\"鞽\": \"鞒\",\n\t\"鞦\": \"鞦\",\n\t\"韉\": \"鞯\",\n\t\"韝\": \"鞴\",\n\t\"韆\": \"千\",\n\t\"韋\": \"韦\",\n\t\"韌\": \"韧\",\n\t\"韍\": \"韨\",\n\t\"韓\": \"韩\",\n\t\"韙\": \"韪\",\n\t\"韜\": \"韬\",\n\t\"韞\": \"韫\",\n\t\"韤\": \"袜\",\n\t\"韻\": \"韵\",\n\t\"頁\": \"页\",\n\t\"頂\": \"顶\",\n\t\"頃\": \"顷\",\n\t\"項\": \"项\",\n\t\"順\": \"顺\",\n\t\"頇\": \"顸\",\n\t\"須\": \"须\",\n\t\"頊\": \"顼\",\n\t\"頌\": \"颂\",\n\t\"頎\": \"颀\",\n\t\"頏\": \"颃\",\n\t\"預\": \"预\",\n\t\"頑\": \"顽\",\n\t\"頒\": \"颁\",\n\t\"頓\": \"顿\",\n\t\"頗\": \"颇\",\n\t\"領\": \"领\",\n\t\"頜\": \"颌\",\n\t\"頡\": \"颉\",\n\t\"頤\": \"颐\",\n\t\"頦\": \"颏\",\n\t\"頫\": \"俯\",\n\t\"頮\": \"颒\",\n\t\"頰\": \"颊\",\n\t\"頲\": \"颋\",\n\t\"頴\": \"颕\",\n\t\"頷\": \"颔\",\n\t\"頸\": \"颈\",\n\t\"頹\": \"颓\",\n\t\"頻\": \"频\",\n\t\"頽\": \"颓\",\n\t\"顆\": \"颗\",\n\t\"題\": \"题\",\n\t\"額\": \"额\",\n\t\"顎\": \"颚\",\n\t\"顏\": \"颜\",\n\t\"顒\": \"颙\",\n\t\"顓\": \"颛\",\n\t\"顔\": \"颜\",\n\t\"顙\": \"颡\",\n\t\"顛\": \"颠\",\n\t\"顢\": \"颟\",\n\t\"顥\": \"颢\",\n\t\"顧\": \"顾\",\n\t\"顫\": \"颤\",\n\t\"顬\": \"颥\",\n\t\"顰\": \"颦\",\n\t\"顱\": \"颅\",\n\t\"顳\": \"颞\",\n\t\"顴\": \"颧\",\n\t\"風\": \"风\",\n\t\"颭\": \"飐\",\n\t\"颮\": \"飑\",\n\t\"颯\": \"飒\",\n\t\"颱\": \"台\",\n\t\"颳\": \"刮\",\n\t\"颶\": \"飓\",\n\t\"颸\": \"飔\",\n\t\"颺\": \"飏\",\n\t\"颻\": \"飖\",\n\t\"颼\": \"飕\",\n\t\"飀\": \"飗\",\n\t\"飃\": \"飘\",\n\t\"飄\": \"飘\",\n\t\"飆\": \"飙\",\n\t\"飇\": \"飙\",\n\t\"飈\": \"飚\",\n\t\"飛\": \"飞\",\n\t\"飢\": \"饥\",\n\t\"飣\": \"饤\",\n\t\"飥\": \"饦\",\n\t\"饗\": \"飨\",\n\t\"飩\": \"饨\",\n\t\"飪\": \"饪\",\n\t\"飫\": \"饫\",\n\t\"飭\": \"饬\",\n\t\"飯\": \"饭\",\n\t\"飲\": \"饮\",\n\t\"飴\": \"饴\",\n\t\"飼\": \"饲\",\n\t\"飽\": \"饱\",\n\t\"飾\": \"饰\",\n\t\"飿\": \"饳\",\n\t\"餃\": \"饺\",\n\t\"餄\": \"饸\",\n\t\"餅\": \"饼\",\n\t\"餉\": \"饷\",\n\t\"餌\": \"饵\",\n\t\"饜\": \"餍\",\n\t\"餎\": \"饹\",\n\t\"餏\": \"饻\",\n\t\"餑\": \"饽\",\n\t\"餒\": \"馁\",\n\t\"餓\": \"饿\",\n\t\"餕\": \"馂\",\n\t\"餖\": \"饾\",\n\t\"餚\": \"肴\",\n\t\"餛\": \"馄\",\n\t\"餜\": \"馃\",\n\t\"餞\": \"饯\",\n\t\"餡\": \"馅\",\n\t\"館\": \"馆\",\n\t\"餳\": \"饧\",\n\t\"餵\": \"𫗭\",\n\t\"餶\": \"馉\",\n\t\"餷\": \"馇\",\n\t\"餺\": \"馎\",\n\t\"餼\": \"饩\",\n\t\"餽\": \"馈\",\n\t\"餾\": \"馏\",\n\t\"餿\": \"馊\",\n\t\"饁\": \"馌\",\n\t\"饃\": \"馍\",\n\t\"饅\": \"馒\",\n\t\"饈\": \"馐\",\n\t\"饉\": \"馑\",\n\t\"饊\": \"馓\",\n\t\"饋\": \"馈\",\n\t\"饌\": \"馔\",\n\t\"饑\": \"饥\",\n\t\"饒\": \"饶\",\n\t\"饝\": \"馍\",\n\t\"饞\": \"馋\",\n\t\"饢\": \"馕\",\n\t\"馬\": \"马\",\n\t\"馭\": \"驭\",\n\t\"馱\": \"驮\",\n\t\"馳\": \"驰\",\n\t\"馴\": \"驯\",\n\t\"馹\": \"驲\",\n\t\"駁\": \"驳\",\n\t\"駐\": \"驻\",\n\t\"駑\": \"驽\",\n\t\"駒\": \"驹\",\n\t\"駔\": \"驵\",\n\t\"駕\": \"驾\",\n\t\"駘\": \"骀\",\n\t\"駙\": \"驸\",\n\t\"駛\": \"驶\",\n\t\"駝\": \"驼\",\n\t\"駟\": \"驷\",\n\t\"駡\": \"骂\",\n\t\"駢\": \"骈\",\n\t\"駭\": \"骇\",\n\t\"駮\": \"驳\",\n\t\"駰\": \"骃\",\n\t\"駱\": \"骆\",\n\t\"駸\": \"骎\",\n\t\"駿\": \"骏\",\n\t\"騁\": \"骋\",\n\t\"騂\": \"骍\",\n\t\"騅\": \"骓\",\n\t\"騌\": \"骔\",\n\t\"騍\": \"骒\",\n\t\"騎\": \"骑\",\n\t\"騏\": \"骐\",\n\t\"騐\": \"验\",\n\t\"騖\": \"骛\",\n\t\"騗\": \"骗\",\n\t\"騙\": \"骗\",\n\t\"騣\": \"鬃\",\n\t\"騤\": \"骙\",\n\t\"騫\": \"骞\",\n\t\"騭\": \"骘\",\n\t\"騮\": \"骝\",\n\t\"騶\": \"驺\",\n\t\"騷\": \"骚\",\n\t\"騸\": \"骟\",\n\t\"騾\": \"骡\",\n\t\"驁\": \"骜\",\n\t\"驂\": \"骖\",\n\t\"驃\": \"骠\",\n\t\"驄\": \"骢\",\n\t\"驅\": \"驱\",\n\t\"驊\": \"骅\",\n\t\"驌\": \"骕\",\n\t\"驍\": \"骁\",\n\t\"驏\": \"骣\",\n\t\"驕\": \"骄\",\n\t\"驗\": \"验\",\n\t\"驘\": \"骡\",\n\t\"驛\": \"驿\",\n\t\"驟\": \"骤\",\n\t\"驢\": \"驴\",\n\t\"驤\": \"骧\",\n\t\"驥\": \"骥\",\n\t\"驦\": \"骦\",\n\t\"驪\": \"骊\",\n\t\"驫\": \"骉\",\n\t\"骾\": \"鲠\",\n\t\"髏\": \"髅\",\n\t\"髖\": \"髋\",\n\t\"髕\": \"髌\",\n\t\"髩\": \"鬓\",\n\t\"髮\": \"发\",\n\t\"鬆\": \"松\",\n\t\"鬍\": \"胡\",\n\t\"鬢\": \"鬓\",\n\t\"鬚\": \"须\",\n\t\"鬦\": \"斗\",\n\t\"鬨\": \"鬨\",\n\t\"鬭\": \"斗\",\n\t\"魘\": \"魇\",\n\t\"魎\": \"魉\",\n\t\"魚\": \"鱼\",\n\t\"魛\": \"鱽\",\n\t\"魢\": \"鱾\",\n\t\"魨\": \"鲀\",\n\t\"魯\": \"鲁\",\n\t\"魴\": \"鲂\",\n\t\"魷\": \"鱿\",\n\t\"魺\": \"鲄\",\n\t\"鮁\": \"鲅\",\n\t\"鮃\": \"鲆\",\n\t\"鮊\": \"鲌\",\n\t\"鮋\": \"鲉\",\n\t\"鮌\": \"鲧\",\n\t\"鮍\": \"鲏\",\n\t\"鮎\": \"鲇\",\n\t\"鮐\": \"鲐\",\n\t\"鮑\": \"鲍\",\n\t\"鮒\": \"鲋\",\n\t\"鮓\": \"鲊\",\n\t\"鮚\": \"鲒\",\n\t\"鮜\": \"鲘\",\n\t\"鮞\": \"鲕\",\n\t\"鮦\": \"鲖\",\n\t\"鮪\": \"鲔\",\n\t\"鮫\": \"鲛\",\n\t\"鮭\": \"鲑\",\n\t\"鮮\": \"鲜\",\n\t\"鮳\": \"鲓\",\n\t\"鮶\": \"鲪\",\n\t\"鮷\": \"鳀\",\n\t\"鮺\": \"鲝\",\n\t\"鯀\": \"鲧\",\n\t\"鯁\": \"鲠\",\n\t\"鯇\": \"鲩\",\n\t\"鯉\": \"鲤\",\n\t\"鯊\": \"鲨\",\n\t\"鯒\": \"鲬\",\n\t\"鯔\": \"鲻\",\n\t\"鯕\": \"鲯\",\n\t\"鯖\": \"鲭\",\n\t\"鯗\": \"鲞\",\n\t\"鯛\": \"鲷\",\n\t\"鯝\": \"鲴\",\n\t\"鯡\": \"鲱\",\n\t\"鯢\": \"鲵\",\n\t\"鯤\": \"鲲\",\n\t\"鯧\": \"鲳\",\n\t\"鯨\": \"鲸\",\n\t\"鯪\": \"鲮\",\n\t\"鯫\": \"鲰\",\n\t\"鯰\": \"鲶\",\n\t\"鯴\": \"鲺\",\n\t\"鯵\": \"鲹\",\n\t\"鯷\": \"鳀\",\n\t\"鯽\": \"鲫\",\n\t\"鯿\": \"鳊\",\n\t\"鰁\": \"鳈\",\n\t\"鰂\": \"鲗\",\n\t\"鰃\": \"鳂\",\n\t\"鰈\": \"鲽\",\n\t\"鰉\": \"鳇\",\n\t\"鰌\": \"鳅\",\n\t\"鰍\": \"鳅\",\n\t\"鰏\": \"鲾\",\n\t\"鰐\": \"鳄\",\n\t\"鰒\": \"鳆\",\n\t\"鰓\": \"鳃\",\n\t\"鰛\": \"鳁\",\n\t\"鰜\": \"鳒\",\n\t\"鰟\": \"鳑\",\n\t\"鰠\": \"鳋\",\n\t\"鰣\": \"鲥\",\n\t\"鰥\": \"鳏\",\n\t\"鰨\": \"鳎\",\n\t\"鰩\": \"鳐\",\n\t\"鰭\": \"鳍\",\n\t\"鰮\": \"鳁\",\n\t\"鰱\": \"鲢\",\n\t\"鰲\": \"鳌\",\n\t\"鰳\": \"鳓\",\n\t\"鰵\": \"鳘\",\n\t\"鰷\": \"鲦\",\n\t\"鰹\": \"鲣\",\n\t\"鰺\": \"鲹\",\n\t\"鰻\": \"鳗\",\n\t\"鰼\": \"鳛\",\n\t\"鰾\": \"鳔\",\n\t\"鱂\": \"鳉\",\n\t\"鱅\": \"鳙\",\n\t\"鱈\": \"鳕\",\n\t\"鱉\": \"鳖\",\n\t\"鱒\": \"鳟\",\n\t\"鱓\": \"鳝\",\n\t\"鱔\": \"鳝\",\n\t\"鱖\": \"鳜\",\n\t\"鱗\": \"鳞\",\n\t\"鱘\": \"鲟\",\n\t\"鱝\": \"鲼\",\n\t\"鱟\": \"鲎\",\n\t\"鱠\": \"鲙\",\n\t\"鱣\": \"鳣\",\n\t\"鱤\": \"鳡\",\n\t\"鱧\": \"鳢\",\n\t\"鱨\": \"鲿\",\n\t\"鱭\": \"鲚\",\n\t\"鱯\": \"鳠\",\n\t\"鱷\": \"鳄\",\n\t\"鱸\": \"鲈\",\n\t\"鱺\": \"鲡\",\n\t\"鼇\": \"鳌\",\n\t\"鳥\": \"鸟\",\n\t\"鳩\": \"鸠\",\n\t\"鳲\": \"鸤\",\n\t\"鳴\": \"鸣\",\n\t\"鳶\": \"鸢\",\n\t\"鴆\": \"鸩\",\n\t\"鴇\": \"鸨\",\n\t\"鴉\": \"鸦\",\n\t\"鴒\": \"鸰\",\n\t\"鴕\": \"鸵\",\n\t\"鴛\": \"鸳\",\n\t\"鴝\": \"鸲\",\n\t\"鴞\": \"鸮\",\n\t\"鴟\": \"鸱\",\n\t\"鴣\": \"鸪\",\n\t\"鴦\": \"鸯\",\n\t\"鴨\": \"鸭\",\n\t\"鴬\": \"鸴\",\n\t\"鴯\": \"鸸\",\n\t\"鴰\": \"鸹\",\n\t\"鴴\": \"鸻\",\n\t\"鴻\": \"鸿\",\n\t\"鴿\": \"鸽\",\n\t\"鵂\": \"鸺\",\n\t\"鵃\": \"鸼\",\n\t\"鵐\": \"鹀\",\n\t\"鵑\": \"鹃\",\n\t\"鵒\": \"鹆\",\n\t\"鵓\": \"鹁\",\n\t\"鵜\": \"鹈\",\n\t\"鵝\": \"鹅\",\n\t\"鵞\": \"鹅\",\n\t\"鵠\": \"鹄\",\n\t\"鵡\": \"鹉\",\n\t\"鵪\": \"鹌\",\n\t\"鵬\": \"鹏\",\n\t\"鵮\": \"鹐\",\n\t\"鵯\": \"鹎\",\n\t\"鵲\": \"鹊\",\n\t\"鵶\": \"鸦\",\n\t\"鵷\": \"鹓\",\n\t\"鵾\": \"鹍\",\n\t\"鶇\": \"鸫\",\n\t\"鶉\": \"鹑\",\n\t\"鶊\": \"鹒\",\n\t\"鶓\": \"鹋\",\n\t\"鶖\": \"鹙\",\n\t\"鶘\": \"鹕\",\n\t\"鶚\": \"鹗\",\n\t\"鶡\": \"鹖\",\n\t\"鶤\": \"鹍\",\n\t\"鶥\": \"鹛\",\n\t\"鶩\": \"鹜\",\n\t\"鶬\": \"鸧\",\n\t\"鶲\": \"鹟\",\n\t\"鶴\": \"鹤\",\n\t\"鶹\": \"鹠\",\n\t\"鶺\": \"鹡\",\n\t\"鶻\": \"鹘\",\n\t\"鶼\": \"鹣\",\n\t\"鶿\": \"鹚\",\n\t\"鷀\": \"鹚\",\n\t\"鷁\": \"鹢\",\n\t\"鷂\": \"鹞\",\n\t\"鷄\": \"鸡\",\n\t\"鷊\": \"鹝\",\n\t\"鷓\": \"鹧\",\n\t\"鷖\": \"鹥\",\n\t\"鷗\": \"鸥\",\n\t\"鷙\": \"鸷\",\n\t\"鷚\": \"鹨\",\n\t\"鷥\": \"鸶\",\n\t\"鷦\": \"鹪\",\n\t\"鷫\": \"鹔\",\n\t\"鷯\": \"鹩\",\n\t\"鷰\": \"燕\",\n\t\"鷲\": \"鹫\",\n\t\"鷳\": \"鹇\",\n\t\"鷴\": \"鹇\",\n\t\"鷸\": \"鹬\",\n\t\"鷹\": \"鹰\",\n\t\"鷺\": \"鹭\",\n\t\"鷼\": \"鹇\",\n\t\"鸇\": \"鹯\",\n\t\"鸌\": \"鹱\",\n\t\"鸎\": \"莺\",\n\t\"鸏\": \"鹲\",\n\t\"鸕\": \"鸬\",\n\t\"鸘\": \"鹴\",\n\t\"鸚\": \"鹦\",\n\t\"鸛\": \"鹳\",\n\t\"鸝\": \"鹂\",\n\t\"鸞\": \"鸾\",\n\t\"鹺\": \"鹾\",\n\t\"麥\": \"麦\",\n\t\"麩\": \"麸\",\n\t\"麪\": \"面\",\n\t\"麯\": \"曲\",\n\t\"麴\": \"曲\",\n\t\"麵\": \"面\",\n\t\"麽\": \"么\",\n\t\"黃\": \"黄\",\n\t\"黌\": \"黉\",\n\t\"黶\": \"黡\",\n\t\"黷\": \"黩\",\n\t\"黲\": \"黪\",\n\t\"黽\": \"黾\",\n\t\"黿\": \"鼋\",\n\t\"鼂\": \"鼌\",\n\t\"鼈\": \"鳖\",\n\t\"鼉\": \"鼍\",\n\t\"鼕\": \"冬\",\n\t\"鼴\": \"鼹\",\n\t\"齇\": \"齄\",\n\t\"齊\": \"齐\",\n\t\"齏\": \"齑\",\n\t\"齒\": \"齿\",\n\t\"齔\": \"龀\",\n\t\"齕\": \"龁\",\n\t\"齗\": \"龂\",\n\t\"齙\": \"龅\",\n\t\"齜\": \"龇\",\n\t\"齟\": \"龃\",\n\t\"齠\": \"龆\",\n\t\"齡\": \"龄\",\n\t\"齣\": \"齣\",\n\t\"齦\": \"龈\",\n\t\"齪\": \"龊\",\n\t\"齬\": \"龉\",\n\t\"齲\": \"龋\",\n\t\"齷\": \"龌\",\n\t\"龍\": \"龙\",\n\t\"龔\": \"龚\",\n\t\"龕\": \"龛\",\n\t\"龜\": \"龟\",\n\t\"䊷\": \"䌶\",\n\t\"𧩙\": \"䜥\",\n\t\"余\": \"余\",\n\t\"俔\": \"伣\",\n\t\"倈\": \"俫\",\n\t\"凈\": \"净\",\n\t\"剎\": \"刹\",\n\t\"叄\": \"叁\",\n\t\"吶\": \"呐\",\n\t\"喎\": \"㖞\",\n\t\"壈\": \"𡒄\",\n\t\"奬\": \"奖\",\n\t\"奼\": \"姹\",\n\t\"幺\": \"么\",\n\t\"弒\": \"弑\",\n\t\"彔\": \"录\",\n\t\"後\": \"后\",\n\t\"悞\": \"悮\",\n\t\"戱\": \"戯\",\n\t\"拾\": \"拾\",\n\t\"挩\": \"捝\",\n\t\"搵\": \"揾\",\n\t\"撝\": \"㧑\",\n\t\"擓\": \"㧟\",\n\t\"暨\": \"及\",\n\t\"朮\": \"术\",\n\t\"杴\": \"锨\",\n\t\"梲\": \"棁\",\n\t\"榲\": \"榅\",\n\t\"槤\": \"梿\",\n\t\"檔\": \"档\",\n\t\"櫱\": \"蘖\",\n\t\"殨\": \"㱮\",\n\t\"殻\": \"壳\",\n\t\"沈\": \"沈\",\n\t\"澐\": \"沄\",\n\t\"灠\": \"漤\",\n\t\"熅\": \"煴\",\n\t\"畵\": \"画\",\n\t\"痾\": \"疴\",\n\t\"瘲\": \"疭\",\n\t\"瞜\": \"䁖\",\n\t\"瞭\": \"了\",\n\t\"瞶\": \"瞆\",\n\t\"礆\": \"硷\",\n\t\"禡\": \"祃\",\n\t\"窵\": \"窎\",\n\t\"筴\": \"䇲\",\n\t\"篔\": \"筼\",\n\t\"籖\": \"签\",\n\t\"糹\": \"纟\",\n\t\"紬\": \"䌷\",\n\t\"絅\": \"䌹\",\n\t\"絶\": \"绝\",\n\t\"緑\": \"绿\",\n\t\"縳\": \"䌸\",\n\t\"繸\": \"䍁\",\n\t\"纔\": \"才\",\n\t\"苎\": \"苧\",\n\t\"薀\": \"蕰\",\n\t\"薴\": \"苧\",\n\t\"藉\": \"借\",\n\t\"藴\": \"蕴\",\n\t\"虆\": \"蔂\",\n\t\"衕\": \"同\",\n\t\"覆\": \"复\",\n\t\"誾\": \"訚\",\n\t\"謡\": \"谣\",\n\t\"謭\": \"谫\",\n\t\"酇\": \"酂\",\n\t\"釒\": \"钅\",\n\t\"鉅\": \"钜\",\n\t\"鋭\": \"锐\",\n\t\"録\": \"录\",\n\t\"闇\": \"闇\",\n\t\"阪\": \"坂\",\n\t\"霢\": \"霡\",\n\t\"鞝\": \"绱\",\n\t\"飠\": \"饣\",\n\t\"骯\": \"肮\",\n\t\"鮝\": \"鲞\",\n\t\"䰾\": \"鲃\",\n\t\"䲁\": \"鳚\",\n\t\"鳬\": \"凫\",\n\t\"鳾\": \"䴓\",\n\t\"鴷\": \"䴕\",\n\t\"鵁\": \"䴔\",\n\t\"鶄\": \"䴖\",\n\t\"鶪\": \"䴗\",\n\t\"鷈\": \"䴘\",\n\t\"鷽\": \"鸴\",\n\t\"鷿\": \"䴙\",\n\t\"麫\": \"面\",\n\t\"龎\": \"厐\",\n\t\"㑹\": \"会\",\n\t\"涂\": \"涂\",\n\t\"錬\": \"炼\",\n\t\"壊\": \"坏\",\n\t\"丑\": \"丑\",\n\t\"么\": \"么\",\n\t\"几\": \"几\",\n\t\"后\": \"后\",\n\t\"斗\": \"斗\",\n\t\"干\": \"干\",\n\t\"虫\": \"虫\",\n\t\"岳\": \"岳\",\n\t\"卜\": \"卜\",\n\t\"于\": \"于\",\n\t\"里\": \"里\",\n\t\"范\": \"范\",\n\t\"朴\": \"朴\",\n\t\"咨\": \"咨\",\n\t\"划\": \"划\",\n\t\"杰\": \"杰\",\n\t\"面\": \"面\",\n\t\"舍\": \"舍\",\n\t\"松\": \"松\",\n\t\"云\": \"云\",\n\t\"咸\": \"鹹\",\n\t\"折\": \"折\",\n\t\"同\": \"同\",\n\t\"胡\": \"胡\",\n\t\"症\": \"症\",\n\t\"郁\": \"郁\",\n\t\"采\": \"采\",\n\t\"栖\": \"栖\",\n\t\"踪\": \"踪\",\n\t\"昵\": \"昵\",\n\t\"厘\": \"厘\",\n\t\"痲\": \"痳\",\n\t\"痳\": \"痳\",\n\t\"怜\": \"怜\",\n\t\"占\": \"占\",\n\t\"借\": \"借\",\n\t\"吨\": \"吨\",\n\t\"制\": \"制\",\n\t\"征\": \"征\",\n\t\"向\": \"向\",\n\t\"喂\": \"喂\",\n\t\"只\": \"只\",\n\t\"困\": \"困\",\n\t\"志\": \"志\",\n\t\"布\": \"布\",\n\t\"系\": \"系\",\n\t\"份\": \"分\",\n\t\"分\": \"分\",\n\t\"梁\": \"梁\",\n\t\"谷\": \"谷\",\n\t\"板\": \"板\",\n\t\"祢\": \"祢\",\n\t\"注\": \"注\",\n\t\"恒\": \"恒\",\n\t\"晒\": \"晒\",\n\t\"杆\": \"杆\",\n\t\"坂\": \"坂\",\n\t\"克\": \"克\",\n\t\"咏\": \"咏\",\n\t\"袜\": \"袜\",\n\t\"仆\": \"仆\",\n\t\"餧\": \"𫗪\",\n\t\"剗\": \"刬\",\n\t\"鏟\": \"铲\",\n\t\"繨\": \"𫄤\",\n\t\"劏\": \"㓥\",\n\t\"鎞\": \"𫔇\",\n\t\"札\": \"札\",\n\t\"污\": \"污\",\n\t\"游\": \"游\",\n\t\"伙\": \"伙\",\n\t\"御\": \"御\",\n\t\"咔\": \"咔\",\n\t\"凌\": \"凌\",\n\t\"扎\": \"扎\",\n\t\"痴\": \"痴\",\n\t\"嚯\": \"嚯\",\n\t\"姜\": \"姜\",\n\t\"扦\": \"扦\",\n\t\"捻\": \"捻\",\n\t\"沓\": \"沓\",\n\t\"栗\": \"栗\",\n\t\"挽\": \"挽\",\n\t\"灶\": \"灶\",\n\t\"霉\": \"霉\",\n\t\"欲\": \"欲\",\n\t\"十\": \"十\",\n\t\"卷\": \"卷\",\n\t\"熏\": \"熏\",\n\t\"吁\": \"吁\",\n\t\"龥\": \"龥\",\n\t\"跖\": \"跖\",\n\t\"硅\": \"硅\",\n\t\"修\": \"修\",\n\t\"犟\": \"犟\",\n\t\"剷\": \"剷\",\n\t\"噼\": \"噼\",\n\t\"劈\": \"劈\",\n\t\"擗\": \"擗\",\n\t\"核\": \"核\",\n\t\"憷\": \"憷\",\n\t\"呼\": \"呼\",\n\t\"唿\": \"唿\",\n\t\"嗬\": \"嗬\",\n\t\"呵\": \"呵\",\n\t\"唇\": \"唇\",\n\t\"升\": \"升\",\n\t\"溪\": \"溪\",\n\t\"渓\": \"渓\",\n\t\"嵠\": \"嵠\",\n\t\"佑\": \"佑\",\n\t\"偷\": \"偷\",\n\t\"瓮\": \"瓮\",\n\t\"暗\": \"暗\",\n\t\"痹\": \"痹\",\n\t\"雇\": \"雇\",\n\t\"秘\": \"秘\",\n\t\"周\": \"周\",\n\t\"檐\": \"檐\",\n\t\"涌\": \"涌\",\n\t\"家\": \"家\",\n\t\"亘\": \"亘\",\n\t\"泄\": \"泄\",\n\t\"佩\": \"佩\",\n\t\"剿\": \"剿\",\n\t\"沉\": \"沉\",\n\t\"榨\": \"榨\",\n\t\"筱\": \"筱\",\n\t\"彷\": \"彷\",\n\t\"岩\": \"岩\",\n\t\"噪\": \"噪\",\n\t\"雕\": \"雕\",\n\t\"蔑\": \"蔑\",\n\t\"蒙\": \"蒙\",\n\t\"碹\": \"碹\",\n\t\"勐\": \"勐\",\n\t\"猛\": \"猛\"\n};\n\n", "export const enum EnumRunesCode\r\n{\r\n\tHIGH_SURROGATE_START = 0xd800,\r\n\tHIGH_SURROGATE_END = 0xdbff,\r\n\r\n\tLOW_SURROGATE_START = 0xdc00,\r\n\r\n\tREGIONAL_INDICATOR_START = 0x1f1e6,\r\n\tREGIONAL_INDICATOR_END = 0x1f1ff,\r\n\r\n\tFITZPATRICK_MODIFIER_START = 0x1f3fb,\r\n\tFITZPATRICK_MODIFIER_END = 0x1f3ff,\r\n\r\n\tVARIATION_MODIFIER_START = 0xfe00,\r\n\tVARIATION_MODIFIER_END = 0xfe0f,\r\n\r\n\tDIACRITICAL_MARKS_START = 0x20d0,\r\n\tDIACRITICAL_MARKS_END = 0x20ff,\r\n\r\n\tSUBDIVISION_INDICATOR_START = 0x1f3f4,\r\n\tTAGS_START = 0xe0000,\r\n\tTAGS_END = 0xe007f,\r\n\r\n\tZWJ = 0x200d,\r\n}\r\n\r\nexport const GRAPHEMES = Object.freeze([\r\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\r\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\r\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\r\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\r\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\r\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\r\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\r\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\r\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\r\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\r\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\r\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\r\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\r\n]);\r\n\r\nexport const enum EnumCodeUnits\r\n{\r\n\tunit_1 = 1,\r\n\tunit_2 = 2,\r\n\tunit_4 = 4,\r\n}\r\n\r\nexport function runes(string: string): string[]\r\n{\r\n\tif (typeof string !== 'string')\r\n\t{\r\n\t\tthrow new TypeError('string cannot be undefined or null')\r\n\t}\r\n\tconst result: string[] = []\r\n\tlet i = 0\r\n\tlet increment = 0\r\n\twhile (i < string.length)\r\n\t{\r\n\t\tincrement += nextUnits(i + increment, string)\r\n\t\tif (isGrapheme(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t}\r\n\t\tif (isVariationSelector(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t}\r\n\t\tif (isDiacriticalMark(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t}\r\n\t\tif (isZeroWidthJoiner(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tresult.push(string.substring(i, i + increment))\r\n\t\ti += increment\r\n\t\tincrement = 0\r\n\t}\r\n\treturn result\r\n}\r\n\r\n// Decide how many code units make up the current character.\r\n// BMP characters: 1 code unit\r\n// Non-BMP characters (represented by surrogate pairs): 2 code units\r\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\r\n// Country flags: 4 code units (2 code points)\r\n// Variations: 2 code units\r\n// Subdivision flags: 14 code units (7 code points)\r\nexport function nextUnits(i: number, string: string)\r\n{\r\n\tconst current = string[i]\r\n\t// If we don't have a value that is part of a surrogate pair, or we're at\r\n\t// the end, only take the value at i\r\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1)\r\n\t{\r\n\t\treturn EnumCodeUnits.unit_1\r\n\t}\r\n\r\n\tconst currentPair = current + string[i + 1]\r\n\tlet nextPair = string.substring(i + 2, i + 5)\r\n\r\n\t// Country flags are comprised of two regional indicator symbols,\r\n\t// each represented by a surrogate pair.\r\n\t// See http://emojipedia.org/flags/\r\n\t// If both pairs are regional indicator symbols, take 4\r\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair))\r\n\t{\r\n\t\treturn EnumCodeUnits.unit_4\r\n\t}\r\n\r\n\t// https://unicode.org/emoji/charts/full-emoji-list.html#subdivision-flag\r\n\t// See https://emojipedia.org/emoji-tag-sequence/\r\n\t// If nextPair is in Tags(https://en.wikipedia.org/wiki/Tags_(Unicode_block)),\r\n\t// then find next closest U+E007F(CANCEL TAG)\r\n\tif (isSubdivisionFlag(currentPair) &&\tisSupplementarySpecialpurposePlane(nextPair))\r\n\t{\r\n\t\treturn string.slice(i).indexOf(String.fromCodePoint(EnumRunesCode.TAGS_END)) + 2\r\n\t}\r\n\r\n\t// If the next pair make a Fitzpatrick skin tone\r\n\t// modifier, take 4\r\n\t// See http://emojipedia.org/modifiers/\r\n\t// Technically, only some code points are meant to be\r\n\t// combined with the skin tone modifiers. This function\r\n\t// does not check the current pair to see if it is\r\n\t// one of them.\r\n\tif (isFitzpatrickModifier(nextPair))\r\n\t{\r\n\t\treturn EnumCodeUnits.unit_4\r\n\t}\r\n\treturn EnumCodeUnits.unit_2\r\n}\r\n\r\nexport function isFirstOfSurrogatePair(string: string)\r\n{\r\n\treturn string && betweenInclusive(string[0].charCodeAt(0), EnumRunesCode.HIGH_SURROGATE_START, EnumRunesCode.HIGH_SURROGATE_END)\r\n}\r\n\r\nexport function isRegionalIndicator(string: string)\r\n{\r\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.REGIONAL_INDICATOR_START, EnumRunesCode.REGIONAL_INDICATOR_END)\r\n}\r\n\r\nexport function isSubdivisionFlag(string: string)\r\n{\r\n\treturn betweenInclusive(codePointFromSurrogatePair(string),\tEnumRunesCode.SUBDIVISION_INDICATOR_START, EnumRunesCode.SUBDIVISION_INDICATOR_START)\r\n}\r\n\r\nexport function isFitzpatrickModifier(string: string)\r\n{\r\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.FITZPATRICK_MODIFIER_START, EnumRunesCode.FITZPATRICK_MODIFIER_END)\r\n}\r\n\r\nexport function isVariationSelector(string: string)\r\n{\r\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.VARIATION_MODIFIER_START, EnumRunesCode.VARIATION_MODIFIER_END)\r\n}\r\n\r\nexport function isDiacriticalMark(string: string)\r\n{\r\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.DIACRITICAL_MARKS_START, EnumRunesCode.DIACRITICAL_MARKS_END)\r\n}\r\n\r\nexport function isSupplementarySpecialpurposePlane(string: string)\r\n{\r\n\tconst codePoint = string.codePointAt(0)\r\n\treturn (typeof string === 'string' &&\ttypeof codePoint === 'number' && betweenInclusive(codePoint, EnumRunesCode.TAGS_START, EnumRunesCode.TAGS_END))\r\n}\r\n\r\nexport function isGrapheme(string: string)\r\n{\r\n\treturn typeof string === 'string' && GRAPHEMES.includes(string.charCodeAt(0))\r\n}\r\n\r\nexport function isZeroWidthJoiner(string: string)\r\n{\r\n\treturn typeof string === 'string' && string.charCodeAt(0) === EnumRunesCode.ZWJ\r\n}\r\n\r\nexport function codePointFromSurrogatePair(pair: string)\r\n{\r\n\tconst highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START\r\n\tconst lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START\r\n\treturn (highOffset << 10) + lowOffset + 0x10000\r\n}\r\n\r\nexport function betweenInclusive(value: number, lower: number, upper: number)\r\n{\r\n\treturn value >= lower && value <= upper\r\n}\r\n\r\nexport function substring(string: string, start?: number, width?: number)\r\n{\r\n\tconst chars = runes(string)\r\n\tif (start === undefined)\r\n\t{\r\n\t\treturn string\r\n\t}\r\n\tif (start >= chars.length)\r\n\t{\r\n\t\treturn ''\r\n\t}\r\n\tconst rest = chars.length - start\r\n\tconst stringWidth = width === undefined ? rest : width\r\n\tlet endIndex = start + stringWidth\r\n\tif (endIndex > (start + rest))\r\n\t{\r\n\t\tendIndex = undefined\r\n\t}\r\n\treturn chars.slice(start, endIndex).join('')\r\n}\r\n\r\nexport { substring as substr }\r\n\r\n// @ts-ignore\r\nif (process.env.TSDX_FORMAT !== 'esm')\r\n{\r\n\tObject.defineProperty(runes, 'runes', { value: runes });\r\n\tObject.defineProperty(runes, 'default', { value: runes });\r\n\tObject.defineProperty(runes, \"__esModule\", { value: true });\r\n\r\n\tObject.defineProperty(runes, 'substr', { value: substring });\r\n\tObject.defineProperty(runes, 'substring', { value: substring });\r\n\r\n\t// @ts-ignore\r\n\tObject.defineProperty(runes, 'EnumRunesCode', { value: EnumRunesCode });\r\n\t// @ts-ignore\r\n\tObject.defineProperty(runes, 'EnumCodeUnits', { value: EnumCodeUnits });\r\n\tObject.defineProperty(runes, 'GRAPHEMES', { value: GRAPHEMES });\r\n}\r\n\r\nexport default runes\r\n", "import { default as _ } from './index';\n\n// @ts-ignore\nexport = _\n", "export const enum EnumRunesCode\r\n{\r\n\tHIGH_SURROGATE_START = 0xd800,\r\n\tHIGH_SURROGATE_END = 0xdbff,\r\n\r\n\tLOW_SURROGATE_START = 0xdc00,\r\n\r\n\tREGIONAL_INDICATOR_START = 0x1f1e6,\r\n\tREGIONAL_INDICATOR_END = 0x1f1ff,\r\n\r\n\tFITZPATRICK_MODIFIER_START = 0x1f3fb,\r\n\tFITZPATRICK_MODIFIER_END = 0x1f3ff,\r\n\r\n\tVARIATION_MODIFIER_START = 0xfe00,\r\n\tVARIATION_MODIFIER_END = 0xfe0f,\r\n\r\n\tDIACRITICAL_MARKS_START = 0x20d0,\r\n\tDIACRITICAL_MARKS_END = 0x20ff,\r\n\r\n\tSUBDIVISION_INDICATOR_START = 0x1f3f4,\r\n\tTAGS_START = 0xe0000,\r\n\tTAGS_END = 0xe007f,\r\n\r\n\tZWJ = 0x200d,\r\n}\r\n\r\nexport const GRAPHEMES = Object.freeze([\r\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\r\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\r\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\r\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\r\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\r\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\r\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\r\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\r\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\r\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\r\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\r\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\r\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\r\n]);\r\n\r\nexport const enum EnumCodeUnits\r\n{\r\n\tunit_1 = 1,\r\n\tunit_2 = 2,\r\n\tunit_4 = 4,\r\n}\r\n\r\nexport function runes(string: string): string[]\r\n{\r\n\tif (typeof string !== 'string')\r\n\t{\r\n\t\tthrow new TypeError('string cannot be undefined or null')\r\n\t}\r\n\tconst result: string[] = []\r\n\tlet i = 0\r\n\tlet increment = 0\r\n\twhile (i < string.length)\r\n\t{\r\n\t\tincrement += nextUnits(i + increment, string)\r\n\t\tif (isGrapheme(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t}\r\n\t\tif (isVariationSelector(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t}\r\n\t\tif (isDiacriticalMark(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t}\r\n\t\tif (isZeroWidthJoiner(string[i + increment]))\r\n\t\t{\r\n\t\t\tincrement++\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tresult.push(string.substring(i, i + increment))\r\n\t\ti += increment\r\n\t\tincrement = 0\r\n\t}\r\n\treturn result\r\n}\r\n\r\n// Decide how many code units make up the current character.\r\n// BMP characters: 1 code unit\r\n// Non-BMP characters (represented by surrogate pairs): 2 code units\r\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\r\n// Country flags: 4 code units (2 code points)\r\n// Variations: 2 code units\r\n// Subdivision flags: 14 code units (7 code points)\r\nexport function nextUnits(i: number, string: string)\r\n{\r\n\tconst current = string[i]\r\n\t// If we don't have a value that is part of a surrogate pair, or we're at\r\n\t// the end, only take the value at i\r\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1)\r\n\t{\r\n\t\treturn EnumCodeUnits.unit_1\r\n\t}\r\n\r\n\tconst currentPair = current + string[i + 1]\r\n\tlet nextPair = string.substring(i + 2, i + 5)\r\n\r\n\t// Country flags are comprised of two regional indicator symbols,\r\n\t// each represented by a surrogate pair.\r\n\t// See http://emojipedia.org/flags/\r\n\t// If both pairs are regional indicator symbols, take 4\r\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair))\r\n\t{\r\n\t\treturn EnumCodeUnits.unit_4\r\n\t}\r\n\r\n\t// https://unicode.org/emoji/charts/full-emoji-list.html#subdivision-flag\r\n\t// See https://emojipedia.org/emoji-tag-sequence/\r\n\t// If nextPair is in Tags(https://en.wikipedia.org/wiki/Tags_(Unicode_block)),\r\n\t// then find next closest U+E007F(CANCEL TAG)\r\n\tif (isSubdivisionFlag(currentPair) &&\tisSupplementarySpecialpurposePlane(nextPair))\r\n\t{\r\n\t\treturn string.slice(i).indexOf(String.fromCodePoint(EnumRunesCode.TAGS_END)) + 2\r\n\t}\r\n\r\n\t// If the next pair make a Fitzpatrick skin tone\r\n\t// modifier, take 4\r\n\t// See http://emojipedia.org/modifiers/\r\n\t// Technically, only some code points are meant to be\r\n\t// combined with the skin tone modifiers. This function\r\n\t// does not check the current pair to see if it is\r\n\t// one of them.\r\n\tif (isFitzpatrickModifier(nextPair))\r\n\t{\r\n\t\treturn EnumCodeUnits.unit_4\r\n\t}\r\n\treturn EnumCodeUnits.unit_2\r\n}\r\n\r\nexport function isFirstOfSurrogatePair(string: string)\r\n{\r\n\treturn string && betweenInclusive(string[0].charCodeAt(0), EnumRunesCode.HIGH_SURROGATE_START, EnumRunesCode.HIGH_SURROGATE_END)\r\n}\r\n\r\nexport function isRegionalIndicator(string: string)\r\n{\r\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.REGIONAL_INDICATOR_START, EnumRunesCode.REGIONAL_INDICATOR_END)\r\n}\r\n\r\nexport function isSubdivisionFlag(string: string)\r\n{\r\n\treturn betweenInclusive(codePointFromSurrogatePair(string),\tEnumRunesCode.SUBDIVISION_INDICATOR_START, EnumRunesCode.SUBDIVISION_INDICATOR_START)\r\n}\r\n\r\nexport function isFitzpatrickModifier(string: string)\r\n{\r\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.FITZPATRICK_MODIFIER_START, EnumRunesCode.FITZPATRICK_MODIFIER_END)\r\n}\r\n\r\nexport function isVariationSelector(string: string)\r\n{\r\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.VARIATION_MODIFIER_START, EnumRunesCode.VARIATION_MODIFIER_END)\r\n}\r\n\r\nexport function isDiacriticalMark(string: string)\r\n{\r\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.DIACRITICAL_MARKS_START, EnumRunesCode.DIACRITICAL_MARKS_END)\r\n}\r\n\r\nexport function isSupplementarySpecialpurposePlane(string: string)\r\n{\r\n\tconst codePoint = string.codePointAt(0)\r\n\treturn (typeof string === 'string' &&\ttypeof codePoint === 'number' && betweenInclusive(codePoint, EnumRunesCode.TAGS_START, EnumRunesCode.TAGS_END))\r\n}\r\n\r\nexport function isGrapheme(string: string)\r\n{\r\n\treturn typeof string === 'string' && GRAPHEMES.includes(string.charCodeAt(0))\r\n}\r\n\r\nexport function isZeroWidthJoiner(string: string)\r\n{\r\n\treturn typeof string === 'string' && string.charCodeAt(0) === EnumRunesCode.ZWJ\r\n}\r\n\r\nexport function codePointFromSurrogatePair(pair: string)\r\n{\r\n\tconst highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START\r\n\tconst lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START\r\n\treturn (highOffset << 10) + lowOffset + 0x10000\r\n}\r\n\r\nexport function betweenInclusive(value: number, lower: number, upper: number)\r\n{\r\n\treturn value >= lower && value <= upper\r\n}\r\n\r\nexport function substring(string: string, start?: number, width?: number)\r\n{\r\n\tconst chars = runes(string)\r\n\tif (start === undefined)\r\n\t{\r\n\t\treturn string\r\n\t}\r\n\tif (start >= chars.length)\r\n\t{\r\n\t\treturn ''\r\n\t}\r\n\tconst rest = chars.length - start\r\n\tconst stringWidth = width === undefined ? rest : width\r\n\tlet endIndex = start + stringWidth\r\n\tif (endIndex > (start + rest))\r\n\t{\r\n\t\tendIndex = undefined\r\n\t}\r\n\treturn chars.slice(start, endIndex).join('')\r\n}\r\n\r\nexport { substring as substr }\r\n\r\n// @ts-ignore\r\nif (process.env.TSDX_FORMAT !== 'esm')\r\n{\r\n\tObject.defineProperty(runes, 'runes', { value: runes });\r\n\tObject.defineProperty(runes, 'default', { value: runes });\r\n\tObject.defineProperty(runes, \"__esModule\", { value: true });\r\n\r\n\tObject.defineProperty(runes, 'substr', { value: substring });\r\n\tObject.defineProperty(runes, 'substring', { value: substring });\r\n\r\n\t// @ts-ignore\r\n\tObject.defineProperty(runes, 'EnumRunesCode', { value: EnumRunesCode });\r\n\t// @ts-ignore\r\n\tObject.defineProperty(runes, 'EnumCodeUnits', { value: EnumCodeUnits });\r\n\tObject.defineProperty(runes, 'GRAPHEMES', { value: GRAPHEMES });\r\n}\r\n\r\nexport default runes\r\n", "import { default as _ } from './index';\n\n// @ts-ignore\nexport = _\n", "\n'use strict'\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  module.exports = require('./index.cjs.development.cjs')\n} else {\n  module.exports = require('./index.cjs.production.min.cjs')\n}\n", "/**\n * Created by user on 2018/3/16/016.\n */\n\nimport { IClassProxyStatic } from 'class-proxy';\nexport { IClassProxyStatic } from 'class-proxy';\n\nexport function classPrototype<T>(target: IClassProxyStatic<T>, all?: boolean): T\n{\n\t// @ts-ignore\n\tlet desc = Object.getOwnPropertyDescriptors(target.prototype);\n\n\tlet prototype = Object.keys(desc).reduce(function (a, b)\n\t{\n\t\tif (all || !desc[b].get && !desc[b].set)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\ta[b] = target.prototype[b];\n\t\t}\n\n\t\treturn a;\n\t}, {});\n\n\t// @ts-ignore\n\treturn Object.assign({}, target.prototype, prototype);\n}\n\nexport default classPrototype\n\n// @ts-ignore\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(classPrototype, \"__esModule\", { value: true });\n\n\tObject.defineProperty(classPrototype, 'classPrototype', { value: classPrototype });\n\tObject.defineProperty(classPrototype, 'default', { value: classPrototype });\n}\n", "/**\n * Created by user on 2018/2/11/011.\n */\n\nimport _ from './index';\n\n// @ts-ignore\nexport = _;\n", "/**\n * Created by user on 2018/3/16/016.\n */\n\nimport { IClassProxyStatic } from 'class-proxy';\nexport { IClassProxyStatic } from 'class-proxy';\n\nexport function classPrototype<T>(target: IClassProxyStatic<T>, all?: boolean): T\n{\n\t// @ts-ignore\n\tlet desc = Object.getOwnPropertyDescriptors(target.prototype);\n\n\tlet prototype = Object.keys(desc).reduce(function (a, b)\n\t{\n\t\tif (all || !desc[b].get && !desc[b].set)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\ta[b] = target.prototype[b];\n\t\t}\n\n\t\treturn a;\n\t}, {});\n\n\t// @ts-ignore\n\treturn Object.assign({}, target.prototype, prototype);\n}\n\nexport default classPrototype\n\n// @ts-ignore\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(classPrototype, \"__esModule\", { value: true });\n\n\tObject.defineProperty(classPrototype, 'classPrototype', { value: classPrototype });\n\tObject.defineProperty(classPrototype, 'default', { value: classPrototype });\n}\n", "/**\n * Created by user on 2018/2/11/011.\n */\n\nimport _ from './index';\n\n// @ts-ignore\nexport = _;\n", "\n'use strict'\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  module.exports = require('./index.cjs.development.cjs')\n} else {\n  module.exports = require('./index.cjs.production.min.cjs')\n}\n", "import { runes } from 'runes2';\nimport { classPrototype } from \"es6-class-prototype\";\n\nexport interface IObjectWithSymbolSplit\n{\n\t[Symbol.split](separator?: RegExp | string, limit?: number): string[]\n}\n\nexport type IStringSplitInput = RegExp | string | IObjectWithSymbolSplit;\n\nexport const STRING_PROTOTYPE = Object.getOwnPropertyNames(String.prototype);\n\nexport class UString extends String\n{\n\tprotected _arr: string[] = null;\n\n\tconstructor(str: unknown, ...argv: unknown[])\n\t{\n\t\tsuper(str);\n\n\t\tlet d = Object.getOwnPropertyDescriptor(this, '_arr');\n\t\tObject.defineProperty(this, '_arr', Object.assign(d, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t}));\n\t}\n\n\toverride [Symbol.iterator]()\n\t{\n\t\treturn UString.toArray(this)[Symbol.iterator]();\n\t}\n\n\tstatic isString(str: unknown): str is string | String\n\t{\n\t\treturn (typeof str === 'string' || str instanceof String);\n\t}\n\n\tstatic toArray(str: unknown)\n\t{\n\t\tif (str instanceof UString)\n\t\t{\n\t\t\treturn str.toArray();\n\t\t}\n\n\t\treturn runes(String(str));\n\t}\n\n\ttoArray(): string[]\n\t{\n\t\tif (!this._arr)\n\t\t{\n\t\t\tthis._arr = runes(String(this));\n\t\t}\n\n\t\treturn this._arr;\n\t}\n\n\toverride split(separator?: IStringSplitInput, limit?: number): string[]\n\t{\n\t\tlet ret: string[];\n\t\tlet str = String(this);\n\n\t\tif (separator === '')\n\t\t{\n\t\t\tret = UString.toArray(this);\n\n\t\t\tif (typeof limit !== 'undefined')\n\t\t\t{\n\t\t\t\tret = ret.slice(0, limit);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret = String.prototype.split.call(str, separator as any, limit)\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\toverride substr(start: number, length?: number): string\n\t{\n\t\treturn UString.toArray(this).slice(start).slice(0, length).join('');\n\t}\n\n\toverride substring(start: number, indexEnd?: number)\n\t{\n\t\tif (Number.isNaN(start) || start < 0)\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\n\t\tif (typeof indexEnd === 'number')\n\t\t{\n\t\t\tif (Number.isNaN(indexEnd) || indexEnd < 0)\n\t\t\t{\n\t\t\t\tindexEnd = 0;\n\t\t\t}\n\n\t\t\tif (start > indexEnd)\n\t\t\t{\n\t\t\t\t[start, indexEnd] = [indexEnd, start];\n\t\t\t}\n\t\t}\n\n\t\treturn this.slice(start, indexEnd);\n\t}\n\n\toverride indexOf(search: string, start: number = 0): number\n\t{\n\t\tlet a = UString.toArray(this);\n\n\t\tstart = Math.max(0, Math.min(a.length, start));\n\t\tsearch = String(search);\n\n\t\tif (search === '')\n\t\t{\n\t\t\treturn start;\n\t\t}\n\n\t\ta = a.slice(start);\n\n\t\tlet s = UString.toArray(search);\n\n\t\tlet i = 0;\n\t\tlet j = 0;\n\n\t\tlet se = s[s.length - 1];\n\n\t\tdo\n\t\t{\n\t\t\ti = a.indexOf(s[0], j);\n\n\t\t\tif (i !== -1)\n\t\t\t{\n\t\t\t\tif (a.slice(i, i + s.length).join('') === search)\n\t\t\t\t{\n\t\t\t\t\treturn start + i;\n\t\t\t\t}\n\n\t\t\t\tj = i;\n\n\t\t\t\tif (s.length > 1)\n\t\t\t\t{\n\t\t\t\t\ti = a.indexOf(se, i + 1);\n\t\t\t\t\tj = i - s.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tj++;\n\t\t}\n\t\twhile (i !== -1 && j < a.length);\n\n\t\treturn -1;\n\t}\n\n\toverride includes(search: string, start: number = 0)\n\t{\n\t\treturn UString.toArray(this).slice(start).join('').indexOf(search) !== -1\n\t}\n\n\toverride slice(start: number, indexEnd?: number)\n\t{\n\t\treturn UString.toArray(this).slice(start, indexEnd).join('');\n\t}\n\n\toverride charAt(index: number): string\n\t{\n\t\treturn this.substr(index, 1);\n\t}\n\n\toverride startsWith(search: string, pos?: number): boolean\n\t{\n\t\treturn this.substr(!pos || pos < 0 ? 0 : +pos, search.length)\n\t\t\t.indexOf(search) === 0\n\t\t\t;\n\t}\n\n\toverride endsWith(search: string, length?: number): boolean\n\t{\n\t\tlet a = UString.toArray(this);\n\t\tlet s = UString.toArray(search);\n\n\t\tif (typeof length === 'undefined' || length > a.length)\n\t\t{\n\t\t\tlength = a.length;\n\t\t}\n\n\t\treturn this.substring(length - s.length, length) === search;\n\t}\n\n\toverride padEnd(targetLength: number, padString: string)\n\t{\n\t\ttargetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n\t\tpadString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n\t\tlet str = this.split('');\n\t\tlet pad = this.split.call(padString, '');\n\n\t\tif (str.length > targetLength)\n\t\t{\n\t\t\treturn String(this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttargetLength = targetLength - str.length;\n\t\t\tif (targetLength > pad.length)\n\t\t\t{\n\t\t\t\tpadString += padString.repeat(targetLength / pad.length); //append to original to ensure we are longer than needed\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tpad = new UString(padString);\n\t\t\t}\n\t\t\treturn String(this) + pad.slice(0, targetLength);\n\t\t}\n\t}\n\n\toverride padStart(targetLength: number, padString: string)\n\t{\n\t\ttargetLength = targetLength >> 0; //truncate if number or convert non-number to 0;\n\t\tpadString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n\t\tlet str = this.split('');\n\t\tlet pad = this.split.call(padString, '');\n\n\t\tif (str.length > targetLength)\n\t\t{\n\t\t\treturn String(this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttargetLength = targetLength - str.length;\n\t\t\tif (targetLength > pad.length)\n\t\t\t{\n\t\t\t\tpadString += padString.repeat(targetLength / pad.length); //append to original to ensure we are longer than needed\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tpad = new UString(padString);\n\t\t\t}\n\n\t\t\treturn pad.slice(0, targetLength) + String(this);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * 𠮷 134071 20bb7\n\t */\n\toverride codePointAt(pos: number): number\n\t{\n\t\treturn this.toArray()[pos].codePointAt(0)\n\t}\n\n\tstatic UString = UString;\n\t/**\n\t * @private\n\t */\n\tstatic default = UString;\n\n\tstatic create(str: unknown, ...argv: unknown[])\n\t{\n\t\treturn new this(str, ...argv);\n\t}\n\n\t/**\n\t * 顯示 目前支援 unicode 的 method\n\t */\n\tstatic get support(): {\n\n\t\tsplit?: boolean,\n\t\tsubstr?: boolean,\n\t\tsubstring?: boolean,\n\t\tindexOf?: boolean,\n\t\tincludes?: boolean,\n\t\tslice?: boolean,\n\t\tcharAt?: boolean,\n\t\tstartsWith?: boolean,\n\t\tendsWith?: boolean,\n\t\tpadEnd?: boolean,\n\t\tpadStart?: boolean,\n\n\t\tcodePointAt?: boolean,\n\n\t\t[key: string]: boolean,\n\t}\n\t{\n\t\tlet prototype = classPrototype(this);\n\n\t\treturn Object.keys(prototype).reduce(function (a, b)\n\t\t{\n\t\t\tif (STRING_PROTOTYPE.includes(b))\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\ta[b] = true;\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, {} as Record<keyof String, true | undefined>)\n\t}\n\n\tstatic indexOf(str: unknown, search: string, start: number = 0)\n\t{\n\t\treturn this.create(str).indexOf(search, start);\n\t}\n\n\tstatic includes(str: unknown, search: string, start: number = 0)\n\t{\n\t\treturn this.create(str).includes(search, start);\n\t}\n\n\t/**\n\t * splits a String object into an array of strings by separating the string into substrings, using a specified separator string to determine where to make each split.\n\t */\n\tstatic split(str: unknown, separator?: any, limit?: number)\n\t{\n\t\treturn this.create(str).split(separator, limit);\n\t}\n\n\tstatic substr(str: unknown, start: number, length?: number)\n\t{\n\t\treturn this.create(str).substr(start, length);\n\t}\n\n\tstatic substring(str: unknown, start: number, indexEnd?: number)\n\t{\n\t\treturn this.create(str).substring(start, indexEnd);\n\t}\n\n\tstatic slice(str: unknown, start: number, indexEnd?: number)\n\t{\n\t\treturn this.create(str).slice(start, indexEnd);\n\t}\n\n\tstatic charAt(str: unknown, index: number)\n\t{\n\t\treturn this.create(str).charAt(index);\n\t}\n\n\tstatic padEnd(str: unknown, targetLength: number, padString: string)\n\t{\n\t\treturn this.create(str).padEnd(targetLength, padString);\n\t}\n\n\tstatic padStart(str: unknown, targetLength: number, padString: string)\n\t{\n\t\treturn this.create(str).padStart(targetLength, padString);\n\t}\n\n\tstatic startsWith(str: unknown, search: string, pos?: number)\n\t{\n\t\treturn this.create(str).startsWith(search, pos);\n\t}\n\n\tstatic endsWith(str: unknown, search: string, length?: number)\n\t{\n\t\treturn this.create(str).endsWith(search, length);\n\t}\n\n\tget charLength()\n\t{\n\t\treturn UString.toArray(this).length;\n\t}\n\n\tsize()\n\t{\n\t\treturn UString.toArray(this).length;\n\t}\n\n\tstatic size(str: unknown)\n\t{\n\t\treturn this.create(str).size();\n\t}\n\n\t/**\n\t * 𠮷 134071 20bb7\n\t */\n\tstatic codePointAt(str: unknown, pos: number): number\n\t{\n\t\treturn this.create(str).codePointAt(pos)\n\t}\n\n}\n\nexport default UString;\n\n// @ts-ignore\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(UString, 'UString', { value: UString });\n\tObject.defineProperty(UString, 'default', { value: UString });\n\tObject.defineProperty(UString, \"__esModule\", { value: true });\n}\n", "// @ts-ignore\nimport { UString } from './index.ts';\n// @ts-ignore\nexport = UString;\n", "import { runes } from 'runes2';\nimport { classPrototype } from \"es6-class-prototype\";\n\nexport interface IObjectWithSymbolSplit\n{\n\t[Symbol.split](separator?: RegExp | string, limit?: number): string[]\n}\n\nexport type IStringSplitInput = RegExp | string | IObjectWithSymbolSplit;\n\nexport const STRING_PROTOTYPE = Object.getOwnPropertyNames(String.prototype);\n\nexport class UString extends String\n{\n\tprotected _arr: string[] = null;\n\n\tconstructor(str: unknown, ...argv: unknown[])\n\t{\n\t\tsuper(str);\n\n\t\tlet d = Object.getOwnPropertyDescriptor(this, '_arr');\n\t\tObject.defineProperty(this, '_arr', Object.assign(d, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t}));\n\t}\n\n\toverride [Symbol.iterator]()\n\t{\n\t\treturn UString.toArray(this)[Symbol.iterator]();\n\t}\n\n\tstatic isString(str: unknown): str is string | String\n\t{\n\t\treturn (typeof str === 'string' || str instanceof String);\n\t}\n\n\tstatic toArray(str: unknown)\n\t{\n\t\tif (str instanceof UString)\n\t\t{\n\t\t\treturn str.toArray();\n\t\t}\n\n\t\treturn runes(String(str));\n\t}\n\n\ttoArray(): string[]\n\t{\n\t\tif (!this._arr)\n\t\t{\n\t\t\tthis._arr = runes(String(this));\n\t\t}\n\n\t\treturn this._arr;\n\t}\n\n\toverride split(separator?: IStringSplitInput, limit?: number): string[]\n\t{\n\t\tlet ret: string[];\n\t\tlet str = String(this);\n\n\t\tif (separator === '')\n\t\t{\n\t\t\tret = UString.toArray(this);\n\n\t\t\tif (typeof limit !== 'undefined')\n\t\t\t{\n\t\t\t\tret = ret.slice(0, limit);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret = String.prototype.split.call(str, separator as any, limit)\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\toverride substr(start: number, length?: number): string\n\t{\n\t\treturn UString.toArray(this).slice(start).slice(0, length).join('');\n\t}\n\n\toverride substring(start: number, indexEnd?: number)\n\t{\n\t\tif (Number.isNaN(start) || start < 0)\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\n\t\tif (typeof indexEnd === 'number')\n\t\t{\n\t\t\tif (Number.isNaN(indexEnd) || indexEnd < 0)\n\t\t\t{\n\t\t\t\tindexEnd = 0;\n\t\t\t}\n\n\t\t\tif (start > indexEnd)\n\t\t\t{\n\t\t\t\t[start, indexEnd] = [indexEnd, start];\n\t\t\t}\n\t\t}\n\n\t\treturn this.slice(start, indexEnd);\n\t}\n\n\toverride indexOf(search: string, start: number = 0): number\n\t{\n\t\tlet a = UString.toArray(this);\n\n\t\tstart = Math.max(0, Math.min(a.length, start));\n\t\tsearch = String(search);\n\n\t\tif (search === '')\n\t\t{\n\t\t\treturn start;\n\t\t}\n\n\t\ta = a.slice(start);\n\n\t\tlet s = UString.toArray(search);\n\n\t\tlet i = 0;\n\t\tlet j = 0;\n\n\t\tlet se = s[s.length - 1];\n\n\t\tdo\n\t\t{\n\t\t\ti = a.indexOf(s[0], j);\n\n\t\t\tif (i !== -1)\n\t\t\t{\n\t\t\t\tif (a.slice(i, i + s.length).join('') === search)\n\t\t\t\t{\n\t\t\t\t\treturn start + i;\n\t\t\t\t}\n\n\t\t\t\tj = i;\n\n\t\t\t\tif (s.length > 1)\n\t\t\t\t{\n\t\t\t\t\ti = a.indexOf(se, i + 1);\n\t\t\t\t\tj = i - s.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tj++;\n\t\t}\n\t\twhile (i !== -1 && j < a.length);\n\n\t\treturn -1;\n\t}\n\n\toverride includes(search: string, start: number = 0)\n\t{\n\t\treturn UString.toArray(this).slice(start).join('').indexOf(search) !== -1\n\t}\n\n\toverride slice(start: number, indexEnd?: number)\n\t{\n\t\treturn UString.toArray(this).slice(start, indexEnd).join('');\n\t}\n\n\toverride charAt(index: number): string\n\t{\n\t\treturn this.substr(index, 1);\n\t}\n\n\toverride startsWith(search: string, pos?: number): boolean\n\t{\n\t\treturn this.substr(!pos || pos < 0 ? 0 : +pos, search.length)\n\t\t\t.indexOf(search) === 0\n\t\t\t;\n\t}\n\n\toverride endsWith(search: string, length?: number): boolean\n\t{\n\t\tlet a = UString.toArray(this);\n\t\tlet s = UString.toArray(search);\n\n\t\tif (typeof length === 'undefined' || length > a.length)\n\t\t{\n\t\t\tlength = a.length;\n\t\t}\n\n\t\treturn this.substring(length - s.length, length) === search;\n\t}\n\n\toverride padEnd(targetLength: number, padString: string)\n\t{\n\t\ttargetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n\t\tpadString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n\t\tlet str = this.split('');\n\t\tlet pad = this.split.call(padString, '');\n\n\t\tif (str.length > targetLength)\n\t\t{\n\t\t\treturn String(this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttargetLength = targetLength - str.length;\n\t\t\tif (targetLength > pad.length)\n\t\t\t{\n\t\t\t\tpadString += padString.repeat(targetLength / pad.length); //append to original to ensure we are longer than needed\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tpad = new UString(padString);\n\t\t\t}\n\t\t\treturn String(this) + pad.slice(0, targetLength);\n\t\t}\n\t}\n\n\toverride padStart(targetLength: number, padString: string)\n\t{\n\t\ttargetLength = targetLength >> 0; //truncate if number or convert non-number to 0;\n\t\tpadString = String((typeof padString !== 'undefined' ? padString : ' '));\n\n\t\tlet str = this.split('');\n\t\tlet pad = this.split.call(padString, '');\n\n\t\tif (str.length > targetLength)\n\t\t{\n\t\t\treturn String(this);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttargetLength = targetLength - str.length;\n\t\t\tif (targetLength > pad.length)\n\t\t\t{\n\t\t\t\tpadString += padString.repeat(targetLength / pad.length); //append to original to ensure we are longer than needed\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tpad = new UString(padString);\n\t\t\t}\n\n\t\t\treturn pad.slice(0, targetLength) + String(this);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * 𠮷 134071 20bb7\n\t */\n\toverride codePointAt(pos: number): number\n\t{\n\t\treturn this.toArray()[pos].codePointAt(0)\n\t}\n\n\tstatic UString = UString;\n\t/**\n\t * @private\n\t */\n\tstatic default = UString;\n\n\tstatic create(str: unknown, ...argv: unknown[])\n\t{\n\t\treturn new this(str, ...argv);\n\t}\n\n\t/**\n\t * 顯示 目前支援 unicode 的 method\n\t */\n\tstatic get support(): {\n\n\t\tsplit?: boolean,\n\t\tsubstr?: boolean,\n\t\tsubstring?: boolean,\n\t\tindexOf?: boolean,\n\t\tincludes?: boolean,\n\t\tslice?: boolean,\n\t\tcharAt?: boolean,\n\t\tstartsWith?: boolean,\n\t\tendsWith?: boolean,\n\t\tpadEnd?: boolean,\n\t\tpadStart?: boolean,\n\n\t\tcodePointAt?: boolean,\n\n\t\t[key: string]: boolean,\n\t}\n\t{\n\t\tlet prototype = classPrototype(this);\n\n\t\treturn Object.keys(prototype).reduce(function (a, b)\n\t\t{\n\t\t\tif (STRING_PROTOTYPE.includes(b))\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\ta[b] = true;\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, {} as Record<keyof String, true | undefined>)\n\t}\n\n\tstatic indexOf(str: unknown, search: string, start: number = 0)\n\t{\n\t\treturn this.create(str).indexOf(search, start);\n\t}\n\n\tstatic includes(str: unknown, search: string, start: number = 0)\n\t{\n\t\treturn this.create(str).includes(search, start);\n\t}\n\n\t/**\n\t * splits a String object into an array of strings by separating the string into substrings, using a specified separator string to determine where to make each split.\n\t */\n\tstatic split(str: unknown, separator?: any, limit?: number)\n\t{\n\t\treturn this.create(str).split(separator, limit);\n\t}\n\n\tstatic substr(str: unknown, start: number, length?: number)\n\t{\n\t\treturn this.create(str).substr(start, length);\n\t}\n\n\tstatic substring(str: unknown, start: number, indexEnd?: number)\n\t{\n\t\treturn this.create(str).substring(start, indexEnd);\n\t}\n\n\tstatic slice(str: unknown, start: number, indexEnd?: number)\n\t{\n\t\treturn this.create(str).slice(start, indexEnd);\n\t}\n\n\tstatic charAt(str: unknown, index: number)\n\t{\n\t\treturn this.create(str).charAt(index);\n\t}\n\n\tstatic padEnd(str: unknown, targetLength: number, padString: string)\n\t{\n\t\treturn this.create(str).padEnd(targetLength, padString);\n\t}\n\n\tstatic padStart(str: unknown, targetLength: number, padString: string)\n\t{\n\t\treturn this.create(str).padStart(targetLength, padString);\n\t}\n\n\tstatic startsWith(str: unknown, search: string, pos?: number)\n\t{\n\t\treturn this.create(str).startsWith(search, pos);\n\t}\n\n\tstatic endsWith(str: unknown, search: string, length?: number)\n\t{\n\t\treturn this.create(str).endsWith(search, length);\n\t}\n\n\tget charLength()\n\t{\n\t\treturn UString.toArray(this).length;\n\t}\n\n\tsize()\n\t{\n\t\treturn UString.toArray(this).length;\n\t}\n\n\tstatic size(str: unknown)\n\t{\n\t\treturn this.create(str).size();\n\t}\n\n\t/**\n\t * 𠮷 134071 20bb7\n\t */\n\tstatic codePointAt(str: unknown, pos: number): number\n\t{\n\t\treturn this.create(str).codePointAt(pos)\n\t}\n\n}\n\nexport default UString;\n\n// @ts-ignore\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(UString, 'UString', { value: UString });\n\tObject.defineProperty(UString, 'default', { value: UString });\n\tObject.defineProperty(UString, \"__esModule\", { value: true });\n}\n", "// @ts-ignore\nimport { UString } from './index.ts';\n// @ts-ignore\nexport = UString;\n", "\n'use strict'\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  module.exports = require('./index.cjs.development.cjs')\n} else {\n  module.exports = require('./index.cjs.production.min.cjs')\n}\n", "import { UString } from 'uni-string';\nimport { ITable } from '../types';\nimport { REGEXP_TEST } from '../const';\n\nexport function charMap(s: string, table: ITable): string\n{\n\tlet t = table[s];\n\treturn (typeof t === 'string') ? t : s\n}\n\nexport function textMap1(text: string, table: ITable): string\n{\n\tlet toText = [];\n\tlet len = text.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(text[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('')\n}\n\nexport function textMap2(text: string, table: ITable): string\n{\n\tlet toText = UString.split(text, '');\n\tlet len = toText.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(toText[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('');\n}\n\nexport function textMap3(text: string, table: ITable): string\n{\n\tlet toText = text.split(/(?:)/u);\n\tlet len = toText.length;\n\n\tfor (let i = 0; i < len; i++)\n\t{\n\t\ttoText[i] = charMap(toText[i], table);\n\t}\n\n\t//console.log(toText.length, toText);\n\treturn toText.join('');\n}\n\nexport function textMap4(text: string, table: ITable): string\n{\n\treturn text.replace(REGEXP_TEST, function (s)\n\t{\n\t\treturn charMap(s, table);\n\t});\n}\n", "/**\n * Created by user on 2020/5/29.\n */\n\nimport { textMap4 } from '../util/map';\n\nexport { textMap4 as textMap }\n\nexport default textMap4\n", "import { table_cn2tw, table_tw2cn } from './table';\nimport { textMap } from './core/map';\n\nexport function _cn2tw(text: string): string\n{\n\treturn textMap(text, table_cn2tw);\n}\n\nexport function _tw2cn(text: string): string\n{\n\treturn textMap(text, table_tw2cn);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "import { IOptions } from './lib/types';\nimport { _call } from './lib/util';\nimport { _cn2tw, _tw2cn } from './lib/core';\n\nexport * from './lib/types';\n\nexport function cn2tw(text: string, options: IOptions = {}, ...argv): string\n{\n\treturn _call(_cn2tw, text, options, ...argv);\n}\n\nexport function tw2cn(text: string, options: IOptions = {}, ...argv): string\n{\n\treturn _call(_tw2cn, text, options, ...argv);\n}\n\nexport default {\n\tcn2tw,\n\ttw2cn,\n}\n", "/**\n * Created by user on 2018/2/15/015.\n *\n * same as chinese_convert, but a little bug fix\n */\n\nimport { _call, getOptions, getOptionsSkip } from '@lazy-cjk/zh-convert/lib/util';\nimport { IOptions } from '@lazy-cjk/jp-table-convert/lib/types';\nimport { ITable } from '@lazy-cjk/zh-convert/lib/types';\nimport { defaultOptions, REGEXP_TEST, SAFE_MODE_CHAR } from '@lazy-cjk/zh-convert/lib/const';\nimport { cn2tw, tw2cn } from '@lazy-cjk/zh-convert';\nimport { _cn2tw, _tw2cn } from '@lazy-cjk/zh-convert/lib/core';\nimport { table_cn2tw, table_tw2cn } from '@lazy-cjk/zh-convert/lib/table';\n\nexport { cn2tw, tw2cn }\nexport { _cn2tw, _tw2cn }\nexport { table_cn2tw, table_tw2cn }\n\nexport {\n\t_call,\n\tIOptions,\n\tITable,\n\tgetOptions,\n\tdefaultOptions,\n\tREGEXP_TEST,\n\tgetOptionsSkip,\n\tSAFE_MODE_CHAR,\n}\n\nexport default exports as typeof import('./index');\n\n//console.log(cn2tw('轉换最里后裡後轉换最后'));\n//console.log(tw2cn('轉换最里后裡後轉换最后'));\n", "import { ISimpleTable } from '../types';\n\nexport function _update(target: ISimpleTable, source: ISimpleTable): ISimpleTable\n{\n\ttarget = Object.keys(source)\n\t\t.reduce(function (a, b)\n\t\t{\n\t\t\ta[source[b]] = b;\n\n\t\t\treturn a;\n\t\t}, {})\n\t;\n\n\treturn target;\n}\n\nexport function _get(arr: string[], value: string | string[], ...values: Array<string | string[]>): string[]\n{\n\tlet ret: string[] = []\n\t\t.concat(value)\n\t\t.concat(...values)\n\t\t.filter(function (v)\n\t\t{\n\t\t\treturn v;\n\t\t})\n\t;\n\n\t//ret.length && ret.sort();\n\n\treturn ret;\n}\n\n", "\n\nimport { ISimpleTable } from './types';\n\nexport type ITableJpPlusKeys = \"會\" | \"会\" | \"㑹\" | \"䇳\" | \"笺\" | \"箋\" | \"牋\" | \"網\" | \"䋄\" | \"䋞\" | \"网\" | \"處\" | \"处\" | \"䖏\" | \"処\" | \"話\" | \"话\" | \"䛡\" | \"駄\" | \"䭾\" | \"馱\" | \"驮\" | \"専\" | \"專\" | \"专\" | \"糸\" | \"絲\" | \"丝\" | \"両\" | \"两\" | \"兩\" | \"並\" | \"并\" | \"併\" | \"為\" | \"为\" | \"爲\" | \"麼\" | \"麽\" | \"樂\" | \"乐\" | \"楽\" | \"乡\" | \"郷\" | \"鄕\" | \"鄉\" | \"鄊\" | \"亀\" | \"龜\" | \"龟\" | \"𪚧\" | \"𪚿\" | \"𠃾\" | \"貳\" | \"贰\" | \"弐\" | \"貮\" | \"𢎐\" | \"二\" | \"於\" | \"亘\" | \"亙\" | \"亜\" | \"亞\" | \"亚\" | \"産\" | \"產\" | \"产\" | \"她\" | \"他\" | \"伙\" | \"夥\" | \"偽\" | \"僞\" | \"布\" | \"佈\" | \"祐\" | \"佑\" | \"餘\" | \"馀\" | \"余\" | \"妳\" | \"你\" | \"儘\" | \"侮\" | \"侮\" | \"俱\" | \"倶\" | \"藉\" | \"傑\" | \"杰\" | \"家\" | \"傢\" | \"像\" | \"象\" | \"雇\" | \"僱\" | \"盡\" | \"尽\" | \"凶\" | \"兇\" | \"勉\" | \"勉\" | \"兎\" | \"兔\" | \"內\" | \"内\" | \"関\" | \"關\" | \"关\" | \"茲\" | \"兹\" | \"玆\" | \"氷\" | \"冰\" | \"衝\" | \"沖\" | \"冲\" | \"淨\" | \"凈\" | \"净\" | \"塗\" | \"凃\" | \"涂\" | \"悽\" | \"淒\" | \"凄\" | \"準\" | \"淩\" | \"凌\" | \"凖\" | \"擊\" | \"撃\" | \"击\" | \"凼\" | \"氹\" | \"刃\" | \"刄\" | \"劫\" | \"刦\" | \"刧\" | \"刼\" | \"剷\" | \"鏟\" | \"铲\" | \"刬\" | \"剗\" | \"剁\" | \"刴\" | \"劵\" | \"券\" | \"卷\" | \"劍\" | \"剑\" | \"剣\" | \"劎\" | \"劒\" | \"剱\" | \"劔\" | \"箚\" | \"剳\" | \"剿\" | \"勦\" | \"𠞰\" | \"擗\" | \"劈\" | \"労\" | \"勞\" | \"劳\" | \"效\" | \"効\" | \"勛\" | \"勳\" | \"勋\" | \"勲\" | \"猛\" | \"勐\" | \"升\" | \"昇\" | \"単\" | \"單\" | \"单\" | \"滷\" | \"鹵\" | \"卤\" | \"衛\" | \"衞\" | \"卫\" | \"歴\" | \"暦\" | \"歷\" | \"曆\" | \"壓\" | \"压\" | \"圧\" | \"崖\" | \"崕\" | \"厓\" | \"廄\" | \"厩\" | \"廐\" | \"廏\" | \"县\" | \"県\" | \"縣\" | \"蔘\" | \"參\" | \"参\" | \"收\" | \"収\" | \"髮\" | \"敘\" | \"叙\" | \"敍\" | \"閤\" | \"阁\" | \"向\" | \"曏\" | \"嚮\" | \"吒\" | \"咤\" | \"噸\" | \"吨\" | \"聴\" | \"聽\" | \"听\" | \"启\" | \"啓\" | \"啟\" | \"啔\" | \"吿\" | \"告\" | \"獃\" | \"呆\" | \"周\" | \"週\" | \"呪\" | \"咒\" | \"詋\" | \"諮\" | \"谘\" | \"咨\" | \"咸\" | \"鹹\" | \"唖\" | \"啞\" | \"哑\" | \"哗\" | \"嘩\" | \"譁\" | \"脣\" | \"唇\" | \"齧\" | \"啮\" | \"𪘂\" | \"囓\" | \"噛\" | \"嚙\" | \"喂\" | \"餵\" | \"餧\" | \"𫗭\" | \"喻\" | \"喩\" | \"営\" | \"營\" | \"营\" | \"嚐\" | \"嘗\" | \"尝\" | \"嬉\" | \"嘻\" | \"恶\" | \"蘇\" | \"苏\" | \"囌\" | \"廻\" | \"迴\" | \"団\" | \"团\" | \"團\" | \"国\" | \"囯\" | \"國\" | \"圈\" | \"圏\" | \"坏\" | \"坯\" | \"壊\" | \"壞\" | \"牆\" | \"墙\" | \"墻\" | \"殻\" | \"殼\" | \"壳\" | \"壶\" | \"壺\" | \"壷\" | \"复\" | \"復\" | \"複\" | \"犇\" | \"奔\" | \"姉\" | \"姐\" | \"姊\" | \"薑\" | \"姜\" | \"葁\" | \"姫\" | \"姬\" | \"孃\" | \"嬢\" | \"娯\" | \"娛\" | \"娱\" | \"娴\" | \"嫺\" | \"嫻\" | \"肉\" | \"宍\" | \"𠕎\" | \"實\" | \"実\" | \"实\" | \"寔\" | \"祕\" | \"秘\" | \"対\" | \"對\" | \"对\" | \"尋\" | \"寻\" | \"𡬶\" | \"爾\" | \"尔\" | \"尓\" | \"尨\" | \"狵\" | \"歲\" | \"歳\" | \"岁\" | \"岩\" | \"巖\" | \"巗\" | \"巌\" | \"険\" | \"險\" | \"险\" | \"嶮\" | \"崄\" | \"谿\" | \"嵠\" | \"帯\" | \"帶\" | \"带\" | \"庅\" | \"廢\" | \"廃\" | \"废\" | \"廸\" | \"迪\" | \"録\" | \"錄\" | \"录\" | \"彷\" | \"徬\" | \"徵\" | \"徴\" | \"御\" | \"禦\" | \"憂\" | \"懐\" | \"懷\" | \"怀\" | \"恆\" | \"恒\" | \"悪\" | \"惡\" | \"悠\" | \"滺\" | \"癒\" | \"瘉\" | \"栗\" | \"慄\" | \"欲\" | \"慾\" | \"𢝊\" | \"𢚧\" | \"𢟜\" | \"懮\" | \"𨗫\" | \"戰\" | \"戦\" | \"战\" | \"紮\" | \"扎\" | \"託\" | \"讬\" | \"托\" | \"拡\" | \"擴\" | \"扩\" | \"扵\" | \"折\" | \"摺\" | \"拔\" | \"抜\" | \"據\" | \"据\" | \"拠\" | \"挽\" | \"輓\" | \"插\" | \"挿\" | \"揷\" | \"捶\" | \"撚\" | \"捻\" | \"搥\" | \"搾\" | \"榨\" | \"教\" | \"敎\" | \"鬥\" | \"鬭\" | \"闘\" | \"鬪\" | \"昵\" | \"暱\" | \"曉\" | \"晓\" | \"暁\" | \"晚\" | \"晩\" | \"暗\" | \"闇\" | \"樸\" | \"朴\" | \"雑\" | \"雜\" | \"杂\" | \"權\" | \"権\" | \"权\" | \"杯\" | \"盃\" | \"鎗\" | \"槍\" | \"枪\" | \"査\" | \"查\" | \"栖\" | \"棲\" | \"様\" | \"樣\" | \"样\" | \"核\" | \"覈\" | \"櫻\" | \"桜\" | \"樱\" | \"樑\" | \"梁\" | \"檢\" | \"検\" | \"检\" | \"楕\" | \"椭\" | \"橢\" | \"簷\" | \"檐\" | \"歓\" | \"歡\" | \"欢\" | \"步\" | \"歩\" | \"毎\" | \"每\" | \"氣\" | \"気\" | \"气\" | \"污\" | \"汙\" | \"汚\" | \"沉\" | \"沈\" | \"砂\" | \"沙\" | \"泄\" | \"洩\" | \"泪\" | \"涙\" | \"淚\" | \"済\" | \"濟\" | \"济\" | \"浜\" | \"濱\" | \"滨\" | \"涌\" | \"湧\" | \"溪\" | \"渓\" | \"遊\" | \"游\" | \"湿\" | \"溼\" | \"濕\" | \"灕\" | \"漓\" | \"霊\" | \"靈\" | \"灵\" | \"灶\" | \"竈\" | \"炭\" | \"碳\" | \"砲\" | \"炮\" | \"鍊\" | \"錬\" | \"𫔀\" | \"炼\" | \"煉\" | \"煙\" | \"烟\" | \"菸\" | \"焼\" | \"燒\" | \"烧\" | \"焰\" | \"焔\" | \"鍛\" | \"锻\" | \"煅\" | \"薫\" | \"熏\" | \"薰\" | \"牺\" | \"犠\" | \"犧\" | \"获\" | \"獲\" | \"穫\" | \"瓮\" | \"罋\" | \"甕\" | \"痲\" | \"痳\" | \"痴\" | \"癡\" | \"痺\" | \"痹\" | \"蓋\" | \"盖\" | \"葢\" | \"磐\" | \"盤\" | \"盘\" | \"盪\" | \"蕩\" | \"荡\" | \"視\" | \"視\" | \"视\" | \"眎\" | \"瞪\" | \"瞠\" | \"眙\" | \"鹼\" | \"碱\" | \"硷\" | \"禍\" | \"禍\" | \"祸\" | \"稻\" | \"稲\" | \"糓\" | \"穀\" | \"穗\" | \"穂\" | \"竝\" | \"𠀤\" | \"篦\" | \"箆\" | \"範\" | \"范\" | \"藤\" | \"籐\" | \"籘\" | \"籲\" | \"龥\" | \"粘\" | \"黏\" | \"肅\" | \"粛\" | \"肃\" | \"粽\" | \"糉\" | \"糭\" | \"繫\" | \"繋\" | \"経\" | \"經\" | \"经\" | \"絶\" | \"絕\" | \"绝\" | \"絵\" | \"繪\" | \"绘\" | \"継\" | \"繼\" | \"继\" | \"綠\" | \"緑\" | \"绿\" | \"線\" | \"缐\" | \"綫\" | \"线\" | \"綳\" | \"繃\" | \"绷\" | \"纖\" | \"纤\" | \"縴\" | \"繊\" | \"繮\" | \"缰\" | \"韁\" | \"罵\" | \"骂\" | \"駡\" | \"耤\" | \"肢\" | \"胑\" | \"舖\" | \"铺\" | \"鋪\" | \"舗\" | \"館\" | \"館\" | \"舘\" | \"馆\" | \"艸\" | \"草\" | \"薬\" | \"藥\" | \"药\" | \"葯\" | \"𣛙\" | \"薩\" | \"萨\" | \"蕯\" | \"蔵\" | \"藏\" | \"蛎\" | \"蜊\" | \"蠣\" | \"裡\" | \"裏\" | \"里\" | \"裸\" | \"躶\" | \"霸\" | \"覇\" | \"観\" | \"觀\" | \"观\" | \"覌\" | \"覧\" | \"覽\" | \"览\" | \"證\" | \"証\" | \"证\" | \"諸\" | \"諸\" | \"诸\" | \"讚\" | \"讃\" | \"賎\" | \"賤\" | \"贱\" | \"贊\" | \"赞\" | \"賛\" | \"贋\" | \"贗\" | \"赝\" | \"贑\" | \"𫎬\" | \"蹠\" | \"跖\" | \"蹟\" | \"跡\" | \"迹\" | \"蹤\" | \"踪\" | \"踨\" | \"辺\" | \"邊\" | \"边\" | \"邉\" | \"鬱\" | \"郁\" | \"釈\" | \"釋\" | \"释\" | \"鉄\" | \"鐵\" | \"铁\" | \"鐡\" | \"鑑\" | \"鉴\" | \"鑒\" | \"銭\" | \"錢\" | \"钱\" | \"銳\" | \"鋭\" | \"锐\" | \"鏽\" | \"銹\" | \"锈\" | \"鎚\" | \"錘\" | \"锤\" | \"鐘\" | \"鍾\" | \"钟\" | \"锺\" | \"閒\" | \"𫔮\" | \"閑\" | \"闲\" | \"閲\" | \"阅\" | \"隷\" | \"隸\" | \"隶\" | \"鶏\" | \"鷄\" | \"雞\" | \"鸡\" | \"黴\" | \"霉\" | \"麵\" | \"麪\" | \"颜\" | \"顏\" | \"顔\" | \"驗\" | \"验\" | \"騐\" | \"験\" | \"騨\" | \"驒\" | \"驔\" | \"髪\" | \"鱷\" | \"鰐\" | \"鳄\" | \"鳥\" | \"鸟\" | \"𫠓\" | \"鶇\" | \"鶫\" | \"鸫\" | \"麺\" | \"黒\" | \"黑\" | \"默\" | \"黙\"\n\n/**\n * 此表內符合以下任意值時會觸發\n */\nexport const table_plus: Record<ITableJpPlusKeys, string[]> = {\n\t\"劍\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"砲\": [\n\t\t\"砲\",\n\t\t\"炮\"\n\t],\n\t\"偽\": [\n\t\t\"偽\",\n\t\t\"僞\"\n\t],\n\t\"內\": [\n\t\t\"內\",\n\t\t\"内\"\n\t],\n\t\"鬥\": [\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鶏\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"兎\": [\n\t\t\"兎\",\n\t\t\"兔\"\n\t],\n\t\"坏\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"殻\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"像\": [\n\t\t\"像\",\n\t\t\"象\"\n\t],\n\t\"蘇\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"囌\"\n\t],\n\t\"館\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"鳥\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"視\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"険\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"絶\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"鉄\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"諸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"尋\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"裡\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"鑑\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"麵\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"歲\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"鐘\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"會\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"塗\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"髮\": [\n\t\t\"髮\",\n\t\t\"髪\"\n\t],\n\t\"話\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"閤\": [\n\t\t\"閤\",\n\t\t\"阁\"\n\t],\n\t\"蔘\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"労\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"国\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"罵\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"対\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"鏽\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"駄\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"薩\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"単\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"継\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"驗\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"歴\": [\n\t\t\"歴\",\n\t\t\"歷\"\n\t],\n\t\"暦\": [\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"団\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"麼\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"戰\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"乡\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"勉\": [\n\t\t\"勉\",\n\t\t\"勉\"\n\t],\n\t\"餘\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"網\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"託\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"纖\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"鍊\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"擊\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"實\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"於\": [\n\t\t\"於\",\n\t\t\"扵\"\n\t],\n\t\"證\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"據\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"處\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"瞪\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"肢\": [\n\t\t\"肢\",\n\t\t\"胑\"\n\t],\n\t\"肉\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"憂\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"繫\": [\n\t\t\"繫\",\n\t\t\"繋\"\n\t],\n\t\"廻\": [\n\t\t\"廻\",\n\t\t\"迴\"\n\t],\n\t\"録\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"鎗\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"悠\": [\n\t\t\"悠\",\n\t\t\"滺\"\n\t],\n\t\"壶\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"茲\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"蓋\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"蹟\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"癒\": [\n\t\t\"癒\",\n\t\t\"瘉\"\n\t],\n\t\"辺\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"準\": [\n\t\t\"準\",\n\t\t\"凖\"\n\t],\n\t\"衛\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"晚\": [\n\t\t\"晚\",\n\t\t\"晩\"\n\t],\n\t\"裸\": [\n\t\t\"裸\",\n\t\t\"躶\"\n\t],\n\t\"亀\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"凼\": [\n\t\t\"凼\",\n\t\t\"氹\"\n\t],\n\t\"艸\": [\n\t\t\"艸\",\n\t\t\"草\"\n\t],\n\t\"箚\": [\n\t\t\"箚\",\n\t\t\"剳\"\n\t],\n\t\"复\": [\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"污\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"伙\": [\n\t\t\"伙\",\n\t\t\"夥\"\n\t],\n\t\"御\": [\n\t\t\"御\",\n\t\t\"禦\"\n\t],\n\t\"鬱\": [\n\t\t\"鬱\",\n\t\t\"郁\"\n\t],\n\t\"淩\": [\n\t\t\"淩\",\n\t\t\"凌\"\n\t],\n\t\"紮\": [\n\t\t\"紮\",\n\t\t\"扎\"\n\t],\n\t\"痴\": [\n\t\t\"痴\",\n\t\t\"癡\"\n\t],\n\t\"栖\": [\n\t\t\"栖\",\n\t\t\"棲\"\n\t],\n\t\"犇\": [\n\t\t\"犇\",\n\t\t\"奔\"\n\t],\n\t\"範\": [\n\t\t\"範\",\n\t\t\"范\"\n\t],\n\t\"薑\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"樸\": [\n\t\t\"樸\",\n\t\t\"朴\"\n\t],\n\t\"諮\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"撚\": [\n\t\t\"撚\",\n\t\t\"捻\"\n\t],\n\t\"喂\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"淨\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"栗\": [\n\t\t\"栗\",\n\t\t\"慄\"\n\t],\n\t\"挽\": [\n\t\t\"挽\",\n\t\t\"輓\"\n\t],\n\t\"灶\": [\n\t\t\"灶\",\n\t\t\"竈\"\n\t],\n\t\"線\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"盡\": [\n\t\t\"盡\",\n\t\t\"尽\",\n\t\t\"儘\"\n\t],\n\t\"黴\": [\n\t\t\"黴\",\n\t\t\"霉\"\n\t],\n\t\"周\": [\n\t\t\"周\",\n\t\t\"週\"\n\t],\n\t\"並\": [\n\t\t\"並\",\n\t\t\"并\",\n\t\t\"併\"\n\t],\n\t\"讚\": [\n\t\t\"讚\",\n\t\t\"讃\"\n\t],\n\t\"観\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"遊\": [\n\t\t\"遊\",\n\t\t\"游\"\n\t],\n\t\"启\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"廄\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"氣\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"欲\": [\n\t\t\"慾\",\n\t\t\"欲\"\n\t],\n\t\"傑\": [\n\t\t\"傑\",\n\t\t\"杰\"\n\t],\n\t\"鍛\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"徵\": [\n\t\t\"徵\",\n\t\t\"徴\"\n\t],\n\t\"閒\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"贊\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"櫻\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"尨\": [\n\t\t\"尨\",\n\t\t\"狵\"\n\t],\n\t\"圈\": [\n\t\t\"圈\",\n\t\t\"圏\"\n\t],\n\t\"凶\": [\n\t\t\"凶\",\n\t\t\"兇\"\n\t],\n\t\"浜\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"煙\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"黒\": [\n\t\t\"黒\",\n\t\t\"黑\"\n\t],\n\t\"樂\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"薬\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"劵\": [\n\t\t\"劵\",\n\t\t\"券\",\n\t\t\"卷\"\n\t],\n\t\"貳\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"隷\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"姫\": [\n\t\t\"姫\",\n\t\t\"姬\"\n\t],\n\t\"薫\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"籲\": [\n\t\t\"籲\",\n\t\t\"龥\"\n\t],\n\t\"齧\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"鹼\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"咸\": [\n\t\t\"咸\",\n\t\t\"鹹\"\n\t],\n\t\"穗\": [\n\t\t\"穗\",\n\t\t\"穂\"\n\t],\n\t\"廢\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"蹠\": [\n\t\t\"蹠\",\n\t\t\"跖\"\n\t],\n\t\"吒\": [\n\t\t\"吒\",\n\t\t\"咤\"\n\t],\n\t\"剷\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"擗\": [\n\t\t\"擗\",\n\t\t\"劈\"\n\t],\n\t\"核\": [\n\t\t\"核\",\n\t\t\"覈\"\n\t],\n\t\"脣\": [\n\t\t\"脣\",\n\t\t\"唇\"\n\t],\n\t\"升\": [\n\t\t\"升\",\n\t\t\"昇\"\n\t],\n\t\"磐\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"溪\": [\n\t\t\"溪\",\n\t\t\"渓\"\n\t],\n\t\"谿\": [\n\t\t\"谿\",\n\t\t\"嵠\"\n\t],\n\t\"折\": [\n\t\t\"折\",\n\t\t\"摺\"\n\t],\n\t\"祐\": [\n\t\t\"祐\",\n\t\t\"佑\"\n\t],\n\t\"瓮\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"蹤\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"暗\": [\n\t\t\"闇\",\n\t\t\"暗\"\n\t],\n\t\"昵\": [\n\t\t\"昵\",\n\t\t\"暱\"\n\t],\n\t\"布\": [\n\t\t\"布\",\n\t\t\"佈\"\n\t],\n\t\"為\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"綳\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"痺\": [\n\t\t\"痺\",\n\t\t\"痹\"\n\t],\n\t\"痲\": [\n\t\t\"痲\",\n\t\t\"痳\"\n\t],\n\t\"雇\": [\n\t\t\"雇\",\n\t\t\"僱\"\n\t],\n\t\"敘\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"盪\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"勛\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"祕\": [\n\t\t\"祕\",\n\t\t\"秘\"\n\t],\n\t\"牆\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"爾\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"焰\": [\n\t\t\"焰\",\n\t\t\"焔\"\n\t],\n\t\"默\": [\n\t\t\"默\",\n\t\t\"黙\"\n\t],\n\t\"壓\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"廸\": [\n\t\t\"廸\",\n\t\t\"迪\"\n\t],\n\t\"曉\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"霸\": [\n\t\t\"霸\",\n\t\t\"覇\"\n\t],\n\t\"霊\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"泪\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"牺\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"藉\": [\n\t\t\"藉\",\n\t\t\"耤\"\n\t],\n\t\"噸\": [\n\t\t\"噸\",\n\t\t\"吨\"\n\t],\n\t\"俱\": [\n\t\t\"俱\",\n\t\t\"倶\"\n\t],\n\t\"粽\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"向\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"悽\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"鱷\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"滷\": [\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"颜\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"衝\": [\n\t\t\"衝\",\n\t\t\"沖\",\n\t\t\"冲\"\n\t],\n\t\"樑\": [\n\t\t\"樑\",\n\t\t\"梁\"\n\t],\n\t\"砂\": [\n\t\t\"砂\",\n\t\t\"沙\"\n\t],\n\t\"炭\": [\n\t\t\"炭\",\n\t\t\"碳\"\n\t],\n\t\"糸\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"簷\": [\n\t\t\"簷\",\n\t\t\"檐\"\n\t],\n\t\"涌\": [\n\t\t\"涌\",\n\t\t\"湧\"\n\t],\n\t\"糓\": [\n\t\t\"穀\",\n\t\t\"糓\"\n\t],\n\t\"両\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"家\": [\n\t\t\"家\",\n\t\t\"傢\"\n\t],\n\t\"妳\": [\n\t\t\"妳\",\n\t\t\"你\"\n\t],\n\t\"她\": [\n\t\t\"她\",\n\t\t\"他\"\n\t],\n\t\"藤\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"嬉\": [\n\t\t\"嬉\",\n\t\t\"嘻\"\n\t],\n\t\"亘\": [\n\t\t\"亘\",\n\t\t\"亙\"\n\t],\n\t\"恆\": [\n\t\t\"恆\",\n\t\t\"恒\"\n\t],\n\t\"鶇\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"姉\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"剁\": [\n\t\t\"剁\",\n\t\t\"刴\"\n\t],\n\t\"泄\": [\n\t\t\"泄\",\n\t\t\"洩\"\n\t],\n\t\"舖\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"效\": [\n\t\t\"效\",\n\t\t\"効\"\n\t],\n\t\"喻\": [\n\t\t\"喻\",\n\t\t\"喩\"\n\t],\n\t\"插\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"銳\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"權\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"経\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"歓\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"孃\": [\n\t\t\"嬢\",\n\t\t\"孃\"\n\t],\n\t\"済\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"收\": [\n\t\t\"収\",\n\t\t\"收\"\n\t],\n\t\"綠\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"唖\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"剿\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"禍\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"営\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"産\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"査\": [\n\t\t\"查\",\n\t\t\"査\"\n\t],\n\t\"絵\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"懐\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"釈\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"蔵\": [\n\t\t\"藏\",\n\t\t\"蔵\"\n\t],\n\t\"娯\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"焼\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"拡\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"賎\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"銭\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"雑\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"聴\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"帯\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"閲\": [\n\t\t\"閲\",\n\t\t\"阅\"\n\t],\n\t\"覧\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"悪\": [\n\t\t\"惡\",\n\t\t\"悪\",\n\t\t\"恶\"\n\t],\n\t\"亜\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"氷\": [\n\t\t\"冰\",\n\t\t\"氷\"\n\t],\n\t\"县\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"肅\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"専\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"様\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"関\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"檢\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"侮\": [\n\t\t\"侮\",\n\t\t\"侮\"\n\t],\n\t\"沉\": [\n\t\t\"沉\",\n\t\t\"沈\"\n\t],\n\t\"嚐\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"搾\": [\n\t\t\"搾\",\n\t\t\"榨\"\n\t],\n\t\"获\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"繮\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"贋\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"獃\": [\n\t\t\"呆\"\n\t],\n\t\"杯\": [\n\t\t\"杯\",\n\t\t\"盃\"\n\t],\n\t\"呪\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"䇳\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"竝\": [\n\t\t\"竝\",\n\t\t\"𠀤\"\n\t],\n\t\"彷\": [\n\t\t\"彷\",\n\t\t\"徬\"\n\t],\n\t\"贑\": [\n\t\t\"贑\",\n\t\t\"𫎬\"\n\t],\n\t\"崖\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"岩\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"灕\": [\n\t\t\"灕\",\n\t\t\"漓\"\n\t],\n\t\"粘\": [\n\t\t\"粘\",\n\t\t\"黏\"\n\t],\n\t\"娴\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"哗\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"拔\": [\n\t\t\"拔\",\n\t\t\"抜\"\n\t],\n\t\"湿\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"稻\": [\n\t\t\"稻\",\n\t\t\"稲\"\n\t],\n\t\"楕\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"毎\": [\n\t\t\"毎\",\n\t\t\"每\"\n\t],\n\t\"篦\": [\n\t\t\"篦\",\n\t\t\"箆\"\n\t],\n\t\"騨\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"猛\": [\n\t\t\"猛\",\n\t\t\"勐\"\n\t],\n\t\"吿\": [\n\t\t\"吿\",\n\t\t\"告\"\n\t],\n\t\"刃\": [\n\t\t\"刃\",\n\t\t\"刄\"\n\t],\n\t\"教\": [\n\t\t\"教\",\n\t\t\"敎\"\n\t],\n\t\"蛎\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"步\": [\n\t\t\"步\",\n\t\t\"歩\"\n\t],\n\t\"劫\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"鎚\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"捶\": [\n\t\t\"搥\"\n\t],\n\t\"剑\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"剣\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"劎\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"劒\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"剱\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"劔\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"炮\": [\n\t\t\"砲\",\n\t\t\"炮\"\n\t],\n\t\"僞\": [\n\t\t\"偽\",\n\t\t\"僞\"\n\t],\n\t\"内\": [\n\t\t\"內\",\n\t\t\"内\"\n\t],\n\t\"鬭\": [\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"闘\": [\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鬪\": [\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鷄\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"雞\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"鸡\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"兔\": [\n\t\t\"兎\",\n\t\t\"兔\"\n\t],\n\t\"坯\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"壊\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"壞\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"殼\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"壳\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"象\": [\n\t\t\"像\",\n\t\t\"象\"\n\t],\n\t\"苏\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"囌\"\n\t],\n\t\"囌\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"囌\"\n\t],\n\t\"館\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"舘\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"馆\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"鸟\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"𫠓\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"視\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"视\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"眎\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"險\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"险\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"嶮\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"崄\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"絕\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"绝\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"鐵\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"铁\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"鐡\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"諸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"诸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"寻\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"𡬶\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"裏\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"里\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"鉴\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"鑒\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"麪\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"麺\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"歳\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"岁\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"鍾\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"钟\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"锺\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"会\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"㑹\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"凃\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"涂\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"髪\": [\n\t\t\"髮\",\n\t\t\"髪\"\n\t],\n\t\"话\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"䛡\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"阁\": [\n\t\t\"閤\",\n\t\t\"阁\"\n\t],\n\t\"參\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"参\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"勞\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"劳\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"囯\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"國\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"骂\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"駡\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"對\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"对\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"銹\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"锈\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"䭾\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"馱\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"驮\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"萨\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"蕯\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"單\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"单\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"繼\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"继\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"验\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"騐\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"験\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"歷\": [\n\t\t\"歴\",\n\t\t\"歷\"\n\t],\n\t\"曆\": [\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"团\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"團\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"麽\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"庅\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"戦\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"战\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"郷\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"鄕\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"鄉\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"鄊\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"勉\": [\n\t\t\"勉\",\n\t\t\"勉\"\n\t],\n\t\"馀\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"余\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"䋄\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"䋞\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"网\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"讬\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"托\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"纤\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"縴\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"繊\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"錬\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"𫔀\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"炼\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"煉\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"撃\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"击\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"実\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"实\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"寔\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"扵\": [\n\t\t\"於\",\n\t\t\"扵\"\n\t],\n\t\"証\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"证\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"据\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"拠\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"处\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"䖏\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"処\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"瞠\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"眙\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"胑\": [\n\t\t\"肢\",\n\t\t\"胑\"\n\t],\n\t\"宍\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"𠕎\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"𢝊\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"𢚧\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"𢟜\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"懮\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"𨗫\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"繋\": [\n\t\t\"繫\",\n\t\t\"繋\"\n\t],\n\t\"迴\": [\n\t\t\"廻\",\n\t\t\"迴\"\n\t],\n\t\"錄\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"录\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"槍\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"枪\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"滺\": [\n\t\t\"悠\",\n\t\t\"滺\"\n\t],\n\t\"壺\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"壷\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"兹\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"玆\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"盖\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"葢\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"跡\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"迹\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"瘉\": [\n\t\t\"癒\",\n\t\t\"瘉\"\n\t],\n\t\"邊\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"边\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"邉\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"凖\": [\n\t\t\"準\",\n\t\t\"凖\"\n\t],\n\t\"衞\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"卫\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"晩\": [\n\t\t\"晚\",\n\t\t\"晩\"\n\t],\n\t\"躶\": [\n\t\t\"裸\",\n\t\t\"躶\"\n\t],\n\t\"龜\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"龟\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"𪚧\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"𪚿\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"𠃾\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"氹\": [\n\t\t\"凼\",\n\t\t\"氹\"\n\t],\n\t\"草\": [\n\t\t\"艸\",\n\t\t\"草\"\n\t],\n\t\"剳\": [\n\t\t\"箚\",\n\t\t\"剳\"\n\t],\n\t\"復\": [\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"複\": [\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"汙\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"汚\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"夥\": [\n\t\t\"伙\",\n\t\t\"夥\"\n\t],\n\t\"禦\": [\n\t\t\"御\",\n\t\t\"禦\"\n\t],\n\t\"郁\": [\n\t\t\"鬱\",\n\t\t\"郁\"\n\t],\n\t\"凌\": [\n\t\t\"淩\",\n\t\t\"凌\"\n\t],\n\t\"扎\": [\n\t\t\"紮\",\n\t\t\"扎\"\n\t],\n\t\"癡\": [\n\t\t\"痴\",\n\t\t\"癡\"\n\t],\n\t\"棲\": [\n\t\t\"栖\",\n\t\t\"棲\"\n\t],\n\t\"奔\": [\n\t\t\"犇\",\n\t\t\"奔\"\n\t],\n\t\"范\": [\n\t\t\"範\",\n\t\t\"范\"\n\t],\n\t\"姜\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"葁\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"朴\": [\n\t\t\"樸\",\n\t\t\"朴\"\n\t],\n\t\"谘\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"咨\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"捻\": [\n\t\t\"撚\",\n\t\t\"捻\"\n\t],\n\t\"餵\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"餧\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"𫗭\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"凈\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"净\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"慄\": [\n\t\t\"栗\",\n\t\t\"慄\"\n\t],\n\t\"輓\": [\n\t\t\"挽\",\n\t\t\"輓\"\n\t],\n\t\"竈\": [\n\t\t\"灶\",\n\t\t\"竈\"\n\t],\n\t\"缐\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"綫\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"线\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"尽\": [\n\t\t\"盡\",\n\t\t\"尽\",\n\t\t\"儘\"\n\t],\n\t\"儘\": [\n\t\t\"盡\",\n\t\t\"尽\",\n\t\t\"儘\"\n\t],\n\t\"霉\": [\n\t\t\"黴\",\n\t\t\"霉\"\n\t],\n\t\"週\": [\n\t\t\"周\",\n\t\t\"週\"\n\t],\n\t\"并\": [\n\t\t\"並\",\n\t\t\"并\",\n\t\t\"併\"\n\t],\n\t\"併\": [\n\t\t\"並\",\n\t\t\"并\",\n\t\t\"併\"\n\t],\n\t\"讃\": [\n\t\t\"讚\",\n\t\t\"讃\"\n\t],\n\t\"觀\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"观\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"覌\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"游\": [\n\t\t\"遊\",\n\t\t\"游\"\n\t],\n\t\"啓\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"啟\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"啔\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"厩\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"廐\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"廏\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"気\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"气\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"慾\": [\n\t\t\"慾\",\n\t\t\"欲\"\n\t],\n\t\"杰\": [\n\t\t\"傑\",\n\t\t\"杰\"\n\t],\n\t\"锻\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"煅\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"徴\": [\n\t\t\"徵\",\n\t\t\"徴\"\n\t],\n\t\"𫔮\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"閑\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"闲\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"赞\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"賛\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"桜\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"樱\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"狵\": [\n\t\t\"尨\",\n\t\t\"狵\"\n\t],\n\t\"圏\": [\n\t\t\"圈\",\n\t\t\"圏\"\n\t],\n\t\"兇\": [\n\t\t\"凶\",\n\t\t\"兇\"\n\t],\n\t\"濱\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"滨\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"烟\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"菸\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"黑\": [\n\t\t\"黒\",\n\t\t\"黑\"\n\t],\n\t\"乐\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"楽\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"藥\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"药\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"葯\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"𣛙\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"券\": [\n\t\t\"劵\",\n\t\t\"券\",\n\t\t\"卷\"\n\t],\n\t\"卷\": [\n\t\t\"劵\",\n\t\t\"券\",\n\t\t\"卷\"\n\t],\n\t\"贰\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"弐\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"貮\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"𢎐\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"二\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"隸\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"隶\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"姬\": [\n\t\t\"姫\",\n\t\t\"姬\"\n\t],\n\t\"熏\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"薰\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"龥\": [\n\t\t\"籲\",\n\t\t\"龥\"\n\t],\n\t\"啮\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"𪘂\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"囓\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"噛\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"嚙\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"碱\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"硷\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"鹹\": [\n\t\t\"咸\",\n\t\t\"鹹\"\n\t],\n\t\"穂\": [\n\t\t\"穗\",\n\t\t\"穂\"\n\t],\n\t\"廃\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"废\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"跖\": [\n\t\t\"蹠\",\n\t\t\"跖\"\n\t],\n\t\"咤\": [\n\t\t\"吒\",\n\t\t\"咤\"\n\t],\n\t\"鏟\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"铲\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"刬\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"剗\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"劈\": [\n\t\t\"擗\",\n\t\t\"劈\"\n\t],\n\t\"覈\": [\n\t\t\"核\",\n\t\t\"覈\"\n\t],\n\t\"唇\": [\n\t\t\"脣\",\n\t\t\"唇\"\n\t],\n\t\"昇\": [\n\t\t\"升\",\n\t\t\"昇\"\n\t],\n\t\"盤\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"盘\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"渓\": [\n\t\t\"溪\",\n\t\t\"渓\"\n\t],\n\t\"嵠\": [\n\t\t\"谿\",\n\t\t\"嵠\"\n\t],\n\t\"摺\": [\n\t\t\"折\",\n\t\t\"摺\"\n\t],\n\t\"佑\": [\n\t\t\"祐\",\n\t\t\"佑\"\n\t],\n\t\"罋\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"甕\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"踪\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"踨\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"闇\": [\n\t\t\"闇\",\n\t\t\"暗\"\n\t],\n\t\"暱\": [\n\t\t\"昵\",\n\t\t\"暱\"\n\t],\n\t\"佈\": [\n\t\t\"布\",\n\t\t\"佈\"\n\t],\n\t\"为\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"爲\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"繃\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"绷\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"痹\": [\n\t\t\"痺\",\n\t\t\"痹\"\n\t],\n\t\"痳\": [\n\t\t\"痲\",\n\t\t\"痳\"\n\t],\n\t\"僱\": [\n\t\t\"雇\",\n\t\t\"僱\"\n\t],\n\t\"叙\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"敍\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"蕩\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"荡\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"勳\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"勋\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"勲\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"秘\": [\n\t\t\"祕\",\n\t\t\"秘\"\n\t],\n\t\"墙\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"墻\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"尔\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"尓\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"焔\": [\n\t\t\"焰\",\n\t\t\"焔\"\n\t],\n\t\"黙\": [\n\t\t\"默\",\n\t\t\"黙\"\n\t],\n\t\"压\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"圧\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"迪\": [\n\t\t\"廸\",\n\t\t\"迪\"\n\t],\n\t\"晓\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"暁\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"覇\": [\n\t\t\"霸\",\n\t\t\"覇\"\n\t],\n\t\"靈\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"灵\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"涙\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"淚\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"犠\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"犧\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"耤\": [\n\t\t\"藉\",\n\t\t\"耤\"\n\t],\n\t\"吨\": [\n\t\t\"噸\",\n\t\t\"吨\"\n\t],\n\t\"倶\": [\n\t\t\"俱\",\n\t\t\"倶\"\n\t],\n\t\"糉\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"糭\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"曏\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"嚮\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"淒\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"凄\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"鰐\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"鳄\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"鹵\": [\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"卤\": [\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"顏\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"顔\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"沖\": [\n\t\t\"衝\",\n\t\t\"沖\",\n\t\t\"冲\"\n\t],\n\t\"冲\": [\n\t\t\"衝\",\n\t\t\"沖\",\n\t\t\"冲\"\n\t],\n\t\"梁\": [\n\t\t\"樑\",\n\t\t\"梁\"\n\t],\n\t\"沙\": [\n\t\t\"砂\",\n\t\t\"沙\"\n\t],\n\t\"碳\": [\n\t\t\"炭\",\n\t\t\"碳\"\n\t],\n\t\"絲\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"丝\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"檐\": [\n\t\t\"簷\",\n\t\t\"檐\"\n\t],\n\t\"湧\": [\n\t\t\"涌\",\n\t\t\"湧\"\n\t],\n\t\"穀\": [\n\t\t\"穀\",\n\t\t\"糓\"\n\t],\n\t\"两\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"兩\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"傢\": [\n\t\t\"家\",\n\t\t\"傢\"\n\t],\n\t\"你\": [\n\t\t\"妳\",\n\t\t\"你\"\n\t],\n\t\"他\": [\n\t\t\"她\",\n\t\t\"他\"\n\t],\n\t\"籐\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"籘\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"嘻\": [\n\t\t\"嬉\",\n\t\t\"嘻\"\n\t],\n\t\"亙\": [\n\t\t\"亘\",\n\t\t\"亙\"\n\t],\n\t\"恒\": [\n\t\t\"恆\",\n\t\t\"恒\"\n\t],\n\t\"鶫\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"鸫\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"姐\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"姊\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"刴\": [\n\t\t\"剁\",\n\t\t\"刴\"\n\t],\n\t\"洩\": [\n\t\t\"泄\",\n\t\t\"洩\"\n\t],\n\t\"铺\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"鋪\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"舗\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"効\": [\n\t\t\"效\",\n\t\t\"効\"\n\t],\n\t\"喩\": [\n\t\t\"喻\",\n\t\t\"喩\"\n\t],\n\t\"挿\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"揷\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"鋭\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"锐\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"権\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"权\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"經\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"经\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"歡\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"欢\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"嬢\": [\n\t\t\"嬢\",\n\t\t\"孃\"\n\t],\n\t\"濟\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"济\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"収\": [\n\t\t\"収\",\n\t\t\"收\"\n\t],\n\t\"緑\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"绿\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"啞\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"哑\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"勦\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"𠞰\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"禍\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"祸\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"營\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"营\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"產\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"产\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"查\": [\n\t\t\"查\",\n\t\t\"査\"\n\t],\n\t\"繪\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"绘\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"懷\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"怀\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"釋\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"释\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"藏\": [\n\t\t\"藏\",\n\t\t\"蔵\"\n\t],\n\t\"娛\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"娱\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"燒\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"烧\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"擴\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"扩\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"賤\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"贱\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"錢\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"钱\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"雜\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"杂\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"聽\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"听\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"帶\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"带\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"阅\": [\n\t\t\"閲\",\n\t\t\"阅\"\n\t],\n\t\"覽\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"览\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"惡\": [\n\t\t\"惡\",\n\t\t\"悪\",\n\t\t\"恶\"\n\t],\n\t\"恶\": [\n\t\t\"惡\",\n\t\t\"悪\",\n\t\t\"恶\"\n\t],\n\t\"亞\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"亚\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"冰\": [\n\t\t\"冰\",\n\t\t\"氷\"\n\t],\n\t\"県\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"縣\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"粛\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"肃\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"專\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"专\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"樣\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"样\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"關\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"关\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"検\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"检\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"侮\": [\n\t\t\"侮\",\n\t\t\"侮\"\n\t],\n\t\"沈\": [\n\t\t\"沉\",\n\t\t\"沈\"\n\t],\n\t\"嘗\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"尝\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"榨\": [\n\t\t\"搾\",\n\t\t\"榨\"\n\t],\n\t\"獲\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"穫\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"缰\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"韁\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"贗\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"赝\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"呆\": [\n\t\t\"呆\"\n\t],\n\t\"盃\": [\n\t\t\"杯\",\n\t\t\"盃\"\n\t],\n\t\"咒\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"詋\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"笺\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"箋\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"牋\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"𠀤\": [\n\t\t\"竝\",\n\t\t\"𠀤\"\n\t],\n\t\"徬\": [\n\t\t\"彷\",\n\t\t\"徬\"\n\t],\n\t\"𫎬\": [\n\t\t\"贑\",\n\t\t\"𫎬\"\n\t],\n\t\"崕\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"厓\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"巖\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"巗\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"巌\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"漓\": [\n\t\t\"灕\",\n\t\t\"漓\"\n\t],\n\t\"黏\": [\n\t\t\"粘\",\n\t\t\"黏\"\n\t],\n\t\"嫺\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"嫻\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"嘩\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"譁\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"抜\": [\n\t\t\"拔\",\n\t\t\"抜\"\n\t],\n\t\"溼\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"濕\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"稲\": [\n\t\t\"稻\",\n\t\t\"稲\"\n\t],\n\t\"椭\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"橢\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"每\": [\n\t\t\"毎\",\n\t\t\"每\"\n\t],\n\t\"箆\": [\n\t\t\"篦\",\n\t\t\"箆\"\n\t],\n\t\"驒\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"驔\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"勐\": [\n\t\t\"猛\",\n\t\t\"勐\"\n\t],\n\t\"告\": [\n\t\t\"吿\",\n\t\t\"告\"\n\t],\n\t\"刄\": [\n\t\t\"刃\",\n\t\t\"刄\"\n\t],\n\t\"敎\": [\n\t\t\"教\",\n\t\t\"敎\"\n\t],\n\t\"蜊\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"蠣\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"歩\": [\n\t\t\"步\",\n\t\t\"歩\"\n\t],\n\t\"刦\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"刧\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"刼\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"錘\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"锤\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"搥\": [\n\t\t\"搥\"\n\t]\n};\n\nexport type ITableJpKeys = \"と\" | \"の\" | \"罗\" | \"會\" | \"会\" | \"㑹\" | \"䇳\" | \"笺\" | \"箋\" | \"牋\" | \"網\" | \"䋄\" | \"䋞\" | \"网\" | \"處\" | \"处\" | \"䖏\" | \"処\" | \"話\" | \"话\" | \"䛡\" | \"駄\" | \"䭾\" | \"馱\" | \"驮\" | \"専\" | \"專\" | \"专\" | \"糸\" | \"絲\" | \"丝\" | \"両\" | \"两\" | \"兩\" | \"併\" | \"并\" | \"並\" | \"為\" | \"为\" | \"爲\" | \"麼\" | \"麽\" | \"樂\" | \"乐\" | \"楽\" | \"乡\" | \"郷\" | \"鄕\" | \"鄉\" | \"鄊\" | \"乾\" | \"亁\" | \"乹\" | \"干\" | \"亀\" | \"龜\" | \"龟\" | \"𪚧\" | \"𪚿\" | \"𠃾\" | \"貳\" | \"贰\" | \"弐\" | \"貮\" | \"𢎐\" | \"二\" | \"於\" | \"亘\" | \"亙\" | \"亜\" | \"亞\" | \"亚\" | \"産\" | \"產\" | \"产\" | \"她\" | \"他\" | \"伙\" | \"夥\" | \"偽\" | \"僞\" | \"布\" | \"佈\" | \"祐\" | \"佑\" | \"餘\" | \"馀\" | \"余\" | \"妳\" | \"你\" | \"倂\" | \"儘\" | \"侭\" | \"侮\" | \"侮\" | \"修\" | \"俱\" | \"倶\" | \"藉\" | \"媮\" | \"傑\" | \"杰\" | \"家\" | \"傢\" | \"像\" | \"象\" | \"雇\" | \"僱\" | \"当\" | \"儓\" | \"檯\" | \"盡\" | \"尽\" | \"忧\" | \"凶\" | \"兇\" | \"勉\" | \"勉\" | \"兎\" | \"兔\" | \"內\" | \"内\" | \"関\" | \"關\" | \"关\" | \"茲\" | \"兹\" | \"玆\" | \"氷\" | \"冰\" | \"冲\" | \"衝\" | \"沖\" | \"淨\" | \"凈\" | \"净\" | \"塗\" | \"凃\" | \"涂\" | \"悽\" | \"淒\" | \"凄\" | \"准\" | \"準\" | \"淩\" | \"凌\" | \"凖\" | \"擊\" | \"撃\" | \"击\" | \"凼\" | \"氹\" | \"刃\" | \"刄\" | \"画\" | \"瀏\" | \"浏\" | \"劫\" | \"刦\" | \"刧\" | \"刼\" | \"剷\" | \"鏟\" | \"铲\" | \"刬\" | \"剗\" | \"剁\" | \"刴\" | \"卷\" | \"巻\" | \"劵\" | \"券\" | \"劍\" | \"剑\" | \"剣\" | \"劎\" | \"劒\" | \"剱\" | \"劔\" | \"箚\" | \"剳\" | \"剿\" | \"勦\" | \"𠞰\" | \"擗\" | \"劈\" | \"労\" | \"勞\" | \"劳\" | \"效\" | \"効\" | \"勛\" | \"勳\" | \"勋\" | \"勲\" | \"猛\" | \"勐\" | \"汇\" | \"升\" | \"昇\" | \"単\" | \"單\" | \"单\" | \"滷\" | \"鹵\" | \"卤\" | \"衛\" | \"衞\" | \"卫\" | \"捲\" | \"历\" | \"歴\" | \"歷\" | \"暦\" | \"曆\" | \"壓\" | \"压\" | \"圧\" | \"崖\" | \"崕\" | \"厓\" | \"廄\" | \"厩\" | \"廐\" | \"廏\" | \"县\" | \"県\" | \"縣\" | \"蔘\" | \"參\" | \"参\" | \"收\" | \"収\" | \"发\" | \"髮\" | \"敘\" | \"叙\" | \"敍\" | \"台\" | \"吁\" | \"閤\" | \"阁\" | \"向\" | \"曏\" | \"嚮\" | \"吒\" | \"咤\" | \"噸\" | \"吨\" | \"聴\" | \"聽\" | \"听\" | \"启\" | \"啓\" | \"啟\" | \"啔\" | \"吿\" | \"告\" | \"獃\" | \"呆\" | \"周\" | \"週\" | \"呪\" | \"咒\" | \"詋\" | \"嗬\" | \"呻\" | \"唿\" | \"諮\" | \"谘\" | \"咨\" | \"鹹\" | \"咸\" | \"唖\" | \"啞\" | \"哑\" | \"哗\" | \"嘩\" | \"譁\" | \"脣\" | \"唇\" | \"齧\" | \"啮\" | \"𪘂\" | \"囓\" | \"噛\" | \"嚙\" | \"囉\" | \"啰\" | \"喂\" | \"餵\" | \"餧\" | \"𫗭\" | \"喻\" | \"喩\" | \"営\" | \"營\" | \"营\" | \"嚐\" | \"嘗\" | \"尝\" | \"嬉\" | \"嘻\" | \"恶\" | \"苏\" | \"蘇\" | \"囌\" | \"廻\" | \"迴\" | \"団\" | \"团\" | \"團\" | \"国\" | \"囯\" | \"國\" | \"図\" | \"圈\" | \"圏\" | \"坏\" | \"坯\" | \"壊\" | \"壞\" | \"牆\" | \"墙\" | \"墻\" | \"殻\" | \"殼\" | \"壳\" | \"壶\" | \"壺\" | \"壷\" | \"覆\" | \"复\" | \"復\" | \"複\" | \"犇\" | \"奔\" | \"姉\" | \"姐\" | \"姊\" | \"薑\" | \"姜\" | \"葁\" | \"姫\" | \"姬\" | \"孃\" | \"嬢\" | \"娯\" | \"娛\" | \"娱\" | \"娴\" | \"嫺\" | \"嫻\" | \"肉\" | \"宍\" | \"𠕎\" | \"實\" | \"実\" | \"实\" | \"寔\" | \"祕\" | \"秘\" | \"対\" | \"對\" | \"对\" | \"尋\" | \"寻\" | \"𡬶\" | \"爾\" | \"尔\" | \"尓\" | \"尨\" | \"狵\" | \"歲\" | \"歳\" | \"岁\" | \"岩\" | \"巖\" | \"巗\" | \"巌\" | \"険\" | \"險\" | \"险\" | \"嶮\" | \"崄\" | \"谿\" | \"嵠\" | \"帯\" | \"帶\" | \"带\" | \"幹\" | \"幷\" | \"庅\" | \"廢\" | \"廃\" | \"废\" | \"廸\" | \"迪\" | \"犟\" | \"録\" | \"錄\" | \"录\" | \"彩\" | \"彷\" | \"徬\" | \"徵\" | \"徴\" | \"御\" | \"禦\" | \"憂\" | \"懐\" | \"懷\" | \"怀\" | \"恆\" | \"恒\" | \"悪\" | \"惡\" | \"悠\" | \"滺\" | \"癒\" | \"瘉\" | \"栗\" | \"慄\" | \"慾\" | \"欲\" | \"𢝊\" | \"𢚧\" | \"𢟜\" | \"懮\" | \"𨗫\" | \"懞\" | \"戰\" | \"戦\" | \"战\" | \"紮\" | \"扎\" | \"託\" | \"讬\" | \"托\" | \"拡\" | \"擴\" | \"扩\" | \"扵\" | \"折\" | \"摺\" | \"拔\" | \"抜\" | \"據\" | \"据\" | \"拠\" | \"挽\" | \"輓\" | \"插\" | \"挿\" | \"揷\" | \"捶\" | \"撚\" | \"捻\" | \"采\" | \"揹\" | \"搥\" | \"搾\" | \"榨\" | \"教\" | \"敎\" | \"闘\" | \"鬥\" | \"鬭\" | \"鬪\" | \"昵\" | \"暱\" | \"曉\" | \"晓\" | \"暁\" | \"晚\" | \"晩\" | \"闇\" | \"暗\" | \"樸\" | \"朴\" | \"雑\" | \"雜\" | \"杂\" | \"權\" | \"権\" | \"权\" | \"杯\" | \"盃\" | \"版\" | \"鎗\" | \"槍\" | \"枪\" | \"査\" | \"查\" | \"栖\" | \"棲\" | \"様\" | \"樣\" | \"样\" | \"核\" | \"覈\" | \"櫻\" | \"桜\" | \"樱\" | \"樑\" | \"梁\" | \"檢\" | \"検\" | \"检\" | \"楕\" | \"椭\" | \"橢\" | \"簷\" | \"檐\" | \"歓\" | \"歡\" | \"欢\" | \"步\" | \"歩\" | \"毎\" | \"每\" | \"氣\" | \"気\" | \"气\" | \"污\" | \"汙\" | \"汚\" | \"沉\" | \"沈\" | \"砂\" | \"沙\" | \"泄\" | \"洩\" | \"泪\" | \"涙\" | \"淚\" | \"済\" | \"濟\" | \"济\" | \"浜\" | \"濱\" | \"滨\" | \"涌\" | \"湧\" | \"溪\" | \"渓\" | \"遊\" | \"游\" | \"湿\" | \"溼\" | \"濕\" | \"灕\" | \"漓\" | \"濛\" | \"霊\" | \"靈\" | \"灵\" | \"灶\" | \"竈\" | \"炭\" | \"碳\" | \"炰\" | \"砲\" | \"炮\" | \"練\" | \"练\" | \"鍊\" | \"錬\" | \"𫔀\" | \"炼\" | \"煉\" | \"煙\" | \"烟\" | \"菸\" | \"焼\" | \"燒\" | \"烧\" | \"焰\" | \"焔\" | \"鍛\" | \"锻\" | \"煅\" | \"煇\" | \"𪸩\" | \"燻\" | \"薫\" | \"熏\" | \"薰\" | \"牺\" | \"犠\" | \"犧\" | \"获\" | \"獲\" | \"穫\" | \"瓮\" | \"罋\" | \"甕\" | \"甦\" | \"痲\" | \"痳\" | \"痴\" | \"癡\" | \"痺\" | \"痹\" | \"蓋\" | \"盖\" | \"葢\" | \"磐\" | \"盤\" | \"盘\" | \"盪\" | \"蕩\" | \"荡\" | \"視\" | \"視\" | \"视\" | \"眎\" | \"瞪\" | \"瞠\" | \"眙\" | \"矇\" | \"鹼\" | \"碱\" | \"硷\" | \"袮\" | \"禍\" | \"禍\" | \"祸\" | \"稻\" | \"稲\" | \"糓\" | \"穀\" | \"穗\" | \"穂\" | \"竝\" | \"𠀤\" | \"签\" | \"篦\" | \"箆\" | \"範\" | \"范\" | \"藤\" | \"籐\" | \"籘\" | \"籲\" | \"龥\" | \"粘\" | \"黏\" | \"肅\" | \"粛\" | \"肃\" | \"粽\" | \"糉\" | \"糭\" | \"繫\" | \"繋\" | \"経\" | \"經\" | \"经\" | \"絶\" | \"絕\" | \"绝\" | \"絵\" | \"繪\" | \"绘\" | \"継\" | \"繼\" | \"继\" | \"綠\" | \"緑\" | \"绿\" | \"線\" | \"缐\" | \"綫\" | \"线\" | \"綳\" | \"繃\" | \"绷\" | \"纖\" | \"纤\" | \"縴\" | \"繊\" | \"繮\" | \"缰\" | \"韁\" | \"罵\" | \"骂\" | \"駡\" | \"耤\" | \"肢\" | \"胑\" | \"脏\" | \"舖\" | \"铺\" | \"鋪\" | \"舗\" | \"館\" | \"館\" | \"舘\" | \"馆\" | \"艸\" | \"草\" | \"薬\" | \"藥\" | \"药\" | \"葯\" | \"𣛙\" | \"薩\" | \"萨\" | \"蕯\" | \"蔵\" | \"藏\" | \"蛎\" | \"蜊\" | \"蠣\" | \"裡\" | \"裏\" | \"里\" | \"裸\" | \"躶\" | \"霸\" | \"覇\" | \"観\" | \"觀\" | \"观\" | \"覌\" | \"覧\" | \"覽\" | \"览\" | \"證\" | \"証\" | \"证\" | \"諸\" | \"諸\" | \"诸\" | \"讚\" | \"讃\" | \"賎\" | \"賤\" | \"贱\" | \"贊\" | \"赞\" | \"賛\" | \"贋\" | \"贗\" | \"赝\" | \"贑\" | \"𫎬\" | \"蹠\" | \"跖\" | \"蹟\" | \"跡\" | \"迹\" | \"蹤\" | \"踪\" | \"踨\" | \"辟\" | \"避\" | \"闢\" | \"辺\" | \"邊\" | \"边\" | \"邉\" | \"鬱\" | \"郁\" | \"釈\" | \"釋\" | \"释\" | \"𠩺\" | \"鉄\" | \"鐵\" | \"铁\" | \"鐡\" | \"鑑\" | \"鉴\" | \"鑒\" | \"銭\" | \"錢\" | \"钱\" | \"銳\" | \"鋭\" | \"锐\" | \"鏽\" | \"銹\" | \"锈\" | \"鎚\" | \"錘\" | \"锤\" | \"鐘\" | \"鍾\" | \"钟\" | \"锺\" | \"閒\" | \"𫔮\" | \"閑\" | \"闲\" | \"閲\" | \"阅\" | \"隷\" | \"隸\" | \"隶\" | \"鶏\" | \"鷄\" | \"雞\" | \"鸡\" | \"黴\" | \"霉\" | \"面\" | \"麵\" | \"麪\" | \"鬚\" | \"颜\" | \"顏\" | \"顔\" | \"驗\" | \"验\" | \"騐\" | \"験\" | \"騨\" | \"驒\" | \"驔\" | \"髪\" | \"鱷\" | \"鰐\" | \"鳄\" | \"鳥\" | \"鸟\" | \"𫠓\" | \"鶇\" | \"鶫\" | \"鸫\" | \"麺\" | \"黒\" | \"黑\" | \"默\" | \"黙\"\n\n/**\n * 此表內只有符合 KEY 值時才會觸發\n */\nexport const table_jp: Record<ITableJpKeys, string[]> = {\n\t\"の\": [\n\t\t\"の\",\n\t\t\"之\",\n\t\t\"的\"\n\t],\n\t\"と\": [\n\t\t\"と\",\n\t\t\"與\",\n\t\t\"与\"\n\t],\n\t\"画\": [\n\t\t\"划\",\n\t\t\"画\",\n\t\t\"劃\",\n\t\t\"畫\"\n\t],\n\t\"闘\": [\n\t\t\"斗\",\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鬥\": [\n\t\t\"斗\",\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鬭\": [\n\t\t\"斗\",\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鬪\": [\n\t\t\"斗\",\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"闇\": [\n\t\t\"暗\",\n\t\t\"闇\"\n\t],\n\t\"図\": [\n\t\t\"図\",\n\t\t\"圖\",\n\t\t\"图\"\n\t],\n\t\"当\": [\n\t\t\"当\",\n\t\t\"噹\",\n\t\t\"當\",\n\t\t\"儅\"\n\t],\n\t\"閤\": [\n\t\t\"合\",\n\t\t\"閤\",\n\t\t\"阁\"\n\t],\n\t\"阁\": [\n\t\t\"合\",\n\t\t\"閤\",\n\t\t\"阁\"\n\t],\n\t\"罗\": [\n\t\t\"羅\",\n\t\t\"罗\",\n\t\t\"儸\",\n\t\t\"㑩\",\n\t\t\"囉\",\n\t\t\"啰\"\n\t],\n\t\"干\": [\n\t\t\"幹\",\n\t\t\"乾\",\n\t\t\"干\"\n\t],\n\t\"幹\": [\n\t\t\"幹\",\n\t\t\"干\"\n\t],\n\t\"乾\": [\n\t\t\"干\",\n\t\t\"乾\",\n\t\t\"亁\",\n\t\t\"乹\"\n\t],\n\t\"亁\": [\n\t\t\"乾\",\n\t\t\"亁\",\n\t\t\"乹\"\n\t],\n\t\"乹\": [\n\t\t\"乾\",\n\t\t\"亁\",\n\t\t\"乹\"\n\t],\n\t\"历\": [\n\t\t\"历\",\n\t\t\"歴\",\n\t\t\"歷\",\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"歴\": [\n\t\t\"历\",\n\t\t\"歴\",\n\t\t\"歷\"\n\t],\n\t\"歷\": [\n\t\t\"历\",\n\t\t\"歴\",\n\t\t\"歷\"\n\t],\n\t\"暦\": [\n\t\t\"历\",\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"曆\": [\n\t\t\"历\",\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"呻\": [\n\t\t\"呻\",\n\t\t\"申\"\n\t],\n\t\"覆\": [\n\t\t\"覆\",\n\t\t\"复\"\n\t],\n\t\"复\": [\n\t\t\"覆\",\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"勉\": [\n\t\t\"免\",\n\t\t\"勉\",\n\t\t\"勉\"\n\t],\n\t\"勉\": [\n\t\t\"免\",\n\t\t\"勉\",\n\t\t\"勉\"\n\t],\n\t\"甦\": [\n\t\t\"甦\",\n\t\t\"蘇\",\n\t\t\"苏\"\n\t],\n\t\"忧\": [\n\t\t\"憂\",\n\t\t\"優\"\n\t],\n\t\"鹹\": [\n\t\t\"咸\",\n\t\t\"鹹\"\n\t],\n\t\"准\": [\n\t\t\"準\",\n\t\t\"准\"\n\t],\n\t\"準\": [\n\t\t\"準\",\n\t\t\"准\",\n\t\t\"凖\"\n\t],\n\t\"袮\": [\n\t\t\"袮\",\n\t\t\"祢\"\n\t],\n\t\"儘\": [\n\t\t\"儘\",\n\t\t\"侭\",\n\t\t\"盡\",\n\t\t\"尽\"\n\t],\n\t\"侭\": [\n\t\t\"儘\",\n\t\t\"侭\"\n\t],\n\t\"脏\": [\n\t\t\"脏\",\n\t\t\"髒\",\n\t\t\"臟\"\n\t],\n\t\"发\": [\n\t\t\"髮\",\n\t\t\"髪\",\n\t\t\"发\"\n\t],\n\t\"髮\": [\n\t\t\"發\",\n\t\t\"发\",\n\t\t\"髮\",\n\t\t\"髪\"\n\t],\n\t\"慾\": [\n\t\t\"慾\",\n\t\t\"欲\"\n\t],\n\t\"讚\": [\n\t\t\"讃\",\n\t\t\"讚\",\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"冲\": [\n\t\t\"冲\",\n\t\t\"沖\",\n\t\t\"衝\"\n\t],\n\t\"面\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"鬚\": [\n\t\t\"鬚\",\n\t\t\"須\",\n\t\t\"须\"\n\t],\n\t\"揹\": [\n\t\t\"揹\",\n\t\t\"背\"\n\t],\n\t\"捲\": [\n\t\t\"捲\",\n\t\t\"卷\",\n\t\t\"巻\"\n\t],\n\t\"卷\": [\n\t\t\"捲\",\n\t\t\"卷\",\n\t\t\"巻\",\n\t\t\"劵\",\n\t\t\"券\"\n\t],\n\t\"巻\": [\n\t\t\"捲\",\n\t\t\"卷\",\n\t\t\"巻\",\n\t\t\"劵\",\n\t\t\"券\"\n\t],\n\t\"苏\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"甦\",\n\t\t\"囌\"\n\t],\n\t\"瀏\": [\n\t\t\"瀏\",\n\t\t\"浏\",\n\t\t\"刘\"\n\t],\n\t\"浏\": [\n\t\t\"瀏\",\n\t\t\"浏\",\n\t\t\"刘\"\n\t],\n\t\"吁\": [\n\t\t\"籲\",\n\t\t\"吁\"\n\t],\n\t\"囉\": [\n\t\t\"囉\",\n\t\t\"啰\",\n\t\t\"罗\",\n\t\t\"羅\"\n\t],\n\t\"啰\": [\n\t\t\"囉\",\n\t\t\"啰\",\n\t\t\"罗\",\n\t\t\"羅\"\n\t],\n\t\"修\": [\n\t\t\"修\",\n\t\t\"俢\"\n\t],\n\t\"犟\": [\n\t\t\"犟\",\n\t\t\"強\",\n\t\t\"强\"\n\t],\n\t\"嗬\": [\n\t\t\"嗬\",\n\t\t\"呵\"\n\t],\n\t\"唿\": [\n\t\t\"唿\",\n\t\t\"呼\"\n\t],\n\t\"媮\": [\n\t\t\"媮\",\n\t\t\"偷\"\n\t],\n\t\"采\": [\n\t\t\"采\",\n\t\t\"採\"\n\t],\n\t\"彩\": [\n\t\t\"彩\",\n\t\t\"采\"\n\t],\n\t\"𠩺\": [\n\t\t\"𠩺\",\n\t\t\"釐\"\n\t],\n\t\"恶\": [\n\t\t\"恶\",\n\t\t\"噁\",\n\t\t\"惡\",\n\t\t\"悪\"\n\t],\n\t\"炰\": [\n\t\t\"炰\",\n\t\t\"炮\"\n\t],\n\t\"辟\": [\n\t\t\"辟\",\n\t\t\"闢\",\n\t\t\"避\"\n\t],\n\t\"避\": [\n\t\t\"辟\",\n\t\t\"避\"\n\t],\n\t\"闢\": [\n\t\t\"辟\",\n\t\t\"闢\"\n\t],\n\t\"滷\": [\n\t\t\"魯\",\n\t\t\"鲁\",\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"鹵\": [\n\t\t\"魯\",\n\t\t\"鲁\",\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"卤\": [\n\t\t\"魯\",\n\t\t\"鲁\",\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"儓\": [\n\t\t\"儓\",\n\t\t\"檯\"\n\t],\n\t\"檯\": [\n\t\t\"儓\",\n\t\t\"檯\"\n\t],\n\t\"台\": [\n\t\t\"台\",\n\t\t\"檯\",\n\t\t\"臺\",\n\t\t\"颱\"\n\t],\n\t\"練\": [\n\t\t\"炼\"\n\t],\n\t\"练\": [\n\t\t\"炼\"\n\t],\n\t\"繫\": [\n\t\t\"系\",\n\t\t\"繫\",\n\t\t\"繋\"\n\t],\n\t\"繋\": [\n\t\t\"系\",\n\t\t\"繫\",\n\t\t\"繋\"\n\t],\n\t\"糓\": [\n\t\t\"谷\",\n\t\t\"穀\",\n\t\t\"糓\"\n\t],\n\t\"穀\": [\n\t\t\"谷\",\n\t\t\"穀\",\n\t\t\"糓\"\n\t],\n\t\"版\": [\n\t\t\"板\"\n\t],\n\t\"祕\": [\n\t\t\"密\",\n\t\t\"祕\",\n\t\t\"秘\"\n\t],\n\t\"秘\": [\n\t\t\"密\",\n\t\t\"祕\",\n\t\t\"秘\"\n\t],\n\t\"汇\": [\n\t\t\"彙\",\n\t\t\"匯\"\n\t],\n\t\"倂\": [\n\t\t\"倂\",\n\t\t\"併\"\n\t],\n\t\"併\": [\n\t\t\"倂\",\n\t\t\"併\",\n\t\t\"並\",\n\t\t\"并\"\n\t],\n\t\"幷\": [\n\t\t\"并\"\n\t],\n\t\"并\": [\n\t\t\"幷\",\n\t\t\"並\",\n\t\t\"并\",\n\t\t\"併\"\n\t],\n\t\"矇\": [\n\t\t\"蒙\"\n\t],\n\t\"濛\": [\n\t\t\"蒙\"\n\t],\n\t\"懞\": [\n\t\t\"蒙\"\n\t],\n\t\"煇\": [\n\t\t\"煇\",\n\t\t\"辉\",\n\t\t\"𪸩\"\n\t],\n\t\"𪸩\": [\n\t\t\"煇\",\n\t\t\"辉\",\n\t\t\"𪸩\"\n\t],\n\t\"签\": [\n\t\t\"籤\",\n\t\t\"簽\"\n\t],\n\t\"燻\": [\n\t\t\"燻\",\n\t\t\"熏\",\n\t\t\"薫\",\n\t\t\"薰\"\n\t],\n\t\"劍\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"砲\": [\n\t\t\"砲\",\n\t\t\"炮\"\n\t],\n\t\"偽\": [\n\t\t\"偽\",\n\t\t\"僞\"\n\t],\n\t\"內\": [\n\t\t\"內\",\n\t\t\"内\"\n\t],\n\t\"鶏\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"兎\": [\n\t\t\"兎\",\n\t\t\"兔\"\n\t],\n\t\"坏\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"殻\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"像\": [\n\t\t\"像\",\n\t\t\"象\"\n\t],\n\t\"蘇\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"囌\"\n\t],\n\t\"館\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"鳥\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"視\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"険\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"絶\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"鉄\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"諸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"尋\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"裡\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"鑑\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"麵\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"歲\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"鐘\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"會\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"塗\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"話\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"蔘\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"労\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"国\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"罵\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"対\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"鏽\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"駄\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"薩\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"単\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"継\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"驗\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"団\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"麼\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"戰\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"乡\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"餘\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"網\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"託\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"纖\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"鍊\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"擊\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"實\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"於\": [\n\t\t\"於\",\n\t\t\"扵\"\n\t],\n\t\"證\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"據\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"處\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"瞪\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"肢\": [\n\t\t\"肢\",\n\t\t\"胑\"\n\t],\n\t\"肉\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"憂\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"廻\": [\n\t\t\"廻\",\n\t\t\"迴\"\n\t],\n\t\"録\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"鎗\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"悠\": [\n\t\t\"悠\",\n\t\t\"滺\"\n\t],\n\t\"壶\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"茲\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"蓋\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"蹟\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"癒\": [\n\t\t\"癒\",\n\t\t\"瘉\"\n\t],\n\t\"辺\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"衛\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"晚\": [\n\t\t\"晚\",\n\t\t\"晩\"\n\t],\n\t\"裸\": [\n\t\t\"裸\",\n\t\t\"躶\"\n\t],\n\t\"亀\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"凼\": [\n\t\t\"凼\",\n\t\t\"氹\"\n\t],\n\t\"艸\": [\n\t\t\"艸\",\n\t\t\"草\"\n\t],\n\t\"箚\": [\n\t\t\"箚\",\n\t\t\"剳\"\n\t],\n\t\"污\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"伙\": [\n\t\t\"伙\",\n\t\t\"夥\"\n\t],\n\t\"御\": [\n\t\t\"御\",\n\t\t\"禦\"\n\t],\n\t\"鬱\": [\n\t\t\"鬱\",\n\t\t\"郁\"\n\t],\n\t\"淩\": [\n\t\t\"淩\",\n\t\t\"凌\"\n\t],\n\t\"紮\": [\n\t\t\"紮\",\n\t\t\"扎\"\n\t],\n\t\"痴\": [\n\t\t\"痴\",\n\t\t\"癡\"\n\t],\n\t\"栖\": [\n\t\t\"栖\",\n\t\t\"棲\"\n\t],\n\t\"犇\": [\n\t\t\"犇\",\n\t\t\"奔\"\n\t],\n\t\"範\": [\n\t\t\"範\",\n\t\t\"范\"\n\t],\n\t\"薑\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"樸\": [\n\t\t\"樸\",\n\t\t\"朴\"\n\t],\n\t\"諮\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"撚\": [\n\t\t\"撚\",\n\t\t\"捻\"\n\t],\n\t\"喂\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"淨\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"栗\": [\n\t\t\"栗\",\n\t\t\"慄\"\n\t],\n\t\"挽\": [\n\t\t\"挽\",\n\t\t\"輓\"\n\t],\n\t\"灶\": [\n\t\t\"灶\",\n\t\t\"竈\"\n\t],\n\t\"線\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"盡\": [\n\t\t\"盡\",\n\t\t\"尽\",\n\t\t\"儘\"\n\t],\n\t\"黴\": [\n\t\t\"黴\",\n\t\t\"霉\"\n\t],\n\t\"周\": [\n\t\t\"周\",\n\t\t\"週\"\n\t],\n\t\"並\": [\n\t\t\"並\",\n\t\t\"并\",\n\t\t\"併\"\n\t],\n\t\"観\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"遊\": [\n\t\t\"遊\",\n\t\t\"游\"\n\t],\n\t\"启\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"廄\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"氣\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"欲\": [\n\t\t\"慾\",\n\t\t\"欲\"\n\t],\n\t\"傑\": [\n\t\t\"傑\",\n\t\t\"杰\"\n\t],\n\t\"鍛\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"徵\": [\n\t\t\"徵\",\n\t\t\"徴\"\n\t],\n\t\"閒\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"贊\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"櫻\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"尨\": [\n\t\t\"尨\",\n\t\t\"狵\"\n\t],\n\t\"圈\": [\n\t\t\"圈\",\n\t\t\"圏\"\n\t],\n\t\"凶\": [\n\t\t\"凶\",\n\t\t\"兇\"\n\t],\n\t\"浜\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"煙\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"黒\": [\n\t\t\"黒\",\n\t\t\"黑\"\n\t],\n\t\"樂\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"薬\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"劵\": [\n\t\t\"劵\",\n\t\t\"券\",\n\t\t\"卷\"\n\t],\n\t\"貳\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"隷\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"姫\": [\n\t\t\"姫\",\n\t\t\"姬\"\n\t],\n\t\"薫\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"籲\": [\n\t\t\"籲\",\n\t\t\"龥\"\n\t],\n\t\"齧\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"鹼\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"咸\": [\n\t\t\"咸\",\n\t\t\"鹹\"\n\t],\n\t\"穗\": [\n\t\t\"穗\",\n\t\t\"穂\"\n\t],\n\t\"廢\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"蹠\": [\n\t\t\"蹠\",\n\t\t\"跖\"\n\t],\n\t\"吒\": [\n\t\t\"吒\",\n\t\t\"咤\"\n\t],\n\t\"剷\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"擗\": [\n\t\t\"擗\",\n\t\t\"劈\"\n\t],\n\t\"核\": [\n\t\t\"核\",\n\t\t\"覈\"\n\t],\n\t\"脣\": [\n\t\t\"脣\",\n\t\t\"唇\"\n\t],\n\t\"升\": [\n\t\t\"升\",\n\t\t\"昇\"\n\t],\n\t\"磐\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"溪\": [\n\t\t\"溪\",\n\t\t\"渓\"\n\t],\n\t\"谿\": [\n\t\t\"谿\",\n\t\t\"嵠\"\n\t],\n\t\"折\": [\n\t\t\"折\",\n\t\t\"摺\"\n\t],\n\t\"祐\": [\n\t\t\"祐\",\n\t\t\"佑\"\n\t],\n\t\"瓮\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"蹤\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"暗\": [\n\t\t\"闇\",\n\t\t\"暗\"\n\t],\n\t\"昵\": [\n\t\t\"昵\",\n\t\t\"暱\"\n\t],\n\t\"布\": [\n\t\t\"布\",\n\t\t\"佈\"\n\t],\n\t\"為\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"綳\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"痺\": [\n\t\t\"痺\",\n\t\t\"痹\"\n\t],\n\t\"痲\": [\n\t\t\"痲\",\n\t\t\"痳\"\n\t],\n\t\"雇\": [\n\t\t\"雇\",\n\t\t\"僱\"\n\t],\n\t\"敘\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"盪\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"勛\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"牆\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"爾\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"焰\": [\n\t\t\"焰\",\n\t\t\"焔\"\n\t],\n\t\"默\": [\n\t\t\"默\",\n\t\t\"黙\"\n\t],\n\t\"壓\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"廸\": [\n\t\t\"廸\",\n\t\t\"迪\"\n\t],\n\t\"曉\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"霸\": [\n\t\t\"霸\",\n\t\t\"覇\"\n\t],\n\t\"霊\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"泪\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"牺\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"藉\": [\n\t\t\"藉\",\n\t\t\"耤\"\n\t],\n\t\"噸\": [\n\t\t\"噸\",\n\t\t\"吨\"\n\t],\n\t\"俱\": [\n\t\t\"俱\",\n\t\t\"倶\"\n\t],\n\t\"粽\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"向\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"悽\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"鱷\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"颜\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"衝\": [\n\t\t\"衝\",\n\t\t\"沖\",\n\t\t\"冲\"\n\t],\n\t\"樑\": [\n\t\t\"樑\",\n\t\t\"梁\"\n\t],\n\t\"砂\": [\n\t\t\"砂\",\n\t\t\"沙\"\n\t],\n\t\"炭\": [\n\t\t\"炭\",\n\t\t\"碳\"\n\t],\n\t\"糸\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"簷\": [\n\t\t\"簷\",\n\t\t\"檐\"\n\t],\n\t\"涌\": [\n\t\t\"涌\",\n\t\t\"湧\"\n\t],\n\t\"両\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"家\": [\n\t\t\"家\",\n\t\t\"傢\"\n\t],\n\t\"妳\": [\n\t\t\"妳\",\n\t\t\"你\"\n\t],\n\t\"她\": [\n\t\t\"她\",\n\t\t\"他\"\n\t],\n\t\"藤\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"嬉\": [\n\t\t\"嬉\",\n\t\t\"嘻\"\n\t],\n\t\"亘\": [\n\t\t\"亘\",\n\t\t\"亙\"\n\t],\n\t\"恆\": [\n\t\t\"恆\",\n\t\t\"恒\"\n\t],\n\t\"鶇\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"姉\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"剁\": [\n\t\t\"剁\",\n\t\t\"刴\"\n\t],\n\t\"泄\": [\n\t\t\"泄\",\n\t\t\"洩\"\n\t],\n\t\"舖\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"效\": [\n\t\t\"效\",\n\t\t\"効\"\n\t],\n\t\"喻\": [\n\t\t\"喻\",\n\t\t\"喩\"\n\t],\n\t\"插\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"銳\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"權\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"経\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"歓\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"孃\": [\n\t\t\"嬢\",\n\t\t\"孃\"\n\t],\n\t\"済\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"收\": [\n\t\t\"収\",\n\t\t\"收\"\n\t],\n\t\"綠\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"唖\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"剿\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"禍\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"営\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"産\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"査\": [\n\t\t\"查\",\n\t\t\"査\"\n\t],\n\t\"絵\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"懐\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"釈\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"蔵\": [\n\t\t\"藏\",\n\t\t\"蔵\"\n\t],\n\t\"娯\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"焼\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"拡\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"賎\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"銭\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"雑\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"聴\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"帯\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"閲\": [\n\t\t\"閲\",\n\t\t\"阅\"\n\t],\n\t\"覧\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"悪\": [\n\t\t\"惡\",\n\t\t\"悪\",\n\t\t\"恶\"\n\t],\n\t\"亜\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"氷\": [\n\t\t\"冰\",\n\t\t\"氷\"\n\t],\n\t\"县\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"肅\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"専\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"様\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"関\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"檢\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"侮\": [\n\t\t\"侮\",\n\t\t\"侮\"\n\t],\n\t\"沉\": [\n\t\t\"沉\",\n\t\t\"沈\"\n\t],\n\t\"嚐\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"搾\": [\n\t\t\"搾\",\n\t\t\"榨\"\n\t],\n\t\"获\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"繮\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"贋\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"獃\": [\n\t\t\"呆\"\n\t],\n\t\"杯\": [\n\t\t\"杯\",\n\t\t\"盃\"\n\t],\n\t\"呪\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"䇳\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"竝\": [\n\t\t\"竝\",\n\t\t\"𠀤\"\n\t],\n\t\"彷\": [\n\t\t\"彷\",\n\t\t\"徬\"\n\t],\n\t\"贑\": [\n\t\t\"贑\",\n\t\t\"𫎬\"\n\t],\n\t\"崖\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"岩\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"灕\": [\n\t\t\"灕\",\n\t\t\"漓\"\n\t],\n\t\"粘\": [\n\t\t\"粘\",\n\t\t\"黏\"\n\t],\n\t\"娴\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"哗\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"拔\": [\n\t\t\"拔\",\n\t\t\"抜\"\n\t],\n\t\"湿\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"稻\": [\n\t\t\"稻\",\n\t\t\"稲\"\n\t],\n\t\"楕\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"毎\": [\n\t\t\"毎\",\n\t\t\"每\"\n\t],\n\t\"篦\": [\n\t\t\"篦\",\n\t\t\"箆\"\n\t],\n\t\"騨\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"猛\": [\n\t\t\"猛\",\n\t\t\"勐\"\n\t],\n\t\"吿\": [\n\t\t\"吿\",\n\t\t\"告\"\n\t],\n\t\"刃\": [\n\t\t\"刃\",\n\t\t\"刄\"\n\t],\n\t\"教\": [\n\t\t\"教\",\n\t\t\"敎\"\n\t],\n\t\"蛎\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"步\": [\n\t\t\"步\",\n\t\t\"歩\"\n\t],\n\t\"劫\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"鎚\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"捶\": [\n\t\t\"搥\"\n\t],\n\t\"剑\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"剣\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"劎\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"劒\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"剱\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"劔\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"炮\": [\n\t\t\"砲\",\n\t\t\"炮\"\n\t],\n\t\"僞\": [\n\t\t\"偽\",\n\t\t\"僞\"\n\t],\n\t\"内\": [\n\t\t\"內\",\n\t\t\"内\"\n\t],\n\t\"鷄\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"雞\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"鸡\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"兔\": [\n\t\t\"兎\",\n\t\t\"兔\"\n\t],\n\t\"坯\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"壊\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"壞\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"殼\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"壳\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"象\": [\n\t\t\"像\",\n\t\t\"象\"\n\t],\n\t\"囌\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"囌\"\n\t],\n\t\"館\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"舘\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"馆\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"鸟\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"𫠓\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"視\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"视\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"眎\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"險\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"险\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"嶮\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"崄\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"絕\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"绝\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"鐵\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"铁\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"鐡\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"諸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"诸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"寻\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"𡬶\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"裏\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"里\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"鉴\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"鑒\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"麪\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"麺\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"歳\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"岁\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"鍾\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"钟\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"锺\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"会\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"㑹\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"凃\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"涂\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"髪\": [\n\t\t\"髮\",\n\t\t\"髪\"\n\t],\n\t\"话\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"䛡\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"參\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"参\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"勞\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"劳\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"囯\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"國\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"骂\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"駡\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"對\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"对\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"銹\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"锈\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"䭾\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"馱\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"驮\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"萨\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"蕯\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"單\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"单\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"繼\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"继\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"验\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"騐\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"験\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"团\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"團\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"麽\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"庅\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"戦\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"战\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"郷\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"鄕\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"鄉\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"鄊\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"馀\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"余\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"䋄\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"䋞\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"网\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"讬\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"托\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"纤\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"縴\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"繊\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"錬\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"𫔀\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"炼\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"煉\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"撃\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"击\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"実\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"实\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"寔\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"扵\": [\n\t\t\"於\",\n\t\t\"扵\"\n\t],\n\t\"証\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"证\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"据\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"拠\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"处\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"䖏\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"処\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"瞠\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"眙\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"胑\": [\n\t\t\"肢\",\n\t\t\"胑\"\n\t],\n\t\"宍\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"𠕎\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"𢝊\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"𢚧\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"𢟜\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"懮\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"𨗫\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"迴\": [\n\t\t\"廻\",\n\t\t\"迴\"\n\t],\n\t\"錄\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"录\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"槍\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"枪\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"滺\": [\n\t\t\"悠\",\n\t\t\"滺\"\n\t],\n\t\"壺\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"壷\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"兹\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"玆\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"盖\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"葢\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"跡\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"迹\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"瘉\": [\n\t\t\"癒\",\n\t\t\"瘉\"\n\t],\n\t\"邊\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"边\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"邉\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"凖\": [\n\t\t\"準\",\n\t\t\"凖\"\n\t],\n\t\"衞\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"卫\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"晩\": [\n\t\t\"晚\",\n\t\t\"晩\"\n\t],\n\t\"躶\": [\n\t\t\"裸\",\n\t\t\"躶\"\n\t],\n\t\"龜\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"龟\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"𪚧\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"𪚿\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"𠃾\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"氹\": [\n\t\t\"凼\",\n\t\t\"氹\"\n\t],\n\t\"草\": [\n\t\t\"艸\",\n\t\t\"草\"\n\t],\n\t\"剳\": [\n\t\t\"箚\",\n\t\t\"剳\"\n\t],\n\t\"復\": [\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"複\": [\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"汙\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"汚\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"夥\": [\n\t\t\"伙\",\n\t\t\"夥\"\n\t],\n\t\"禦\": [\n\t\t\"御\",\n\t\t\"禦\"\n\t],\n\t\"郁\": [\n\t\t\"鬱\",\n\t\t\"郁\"\n\t],\n\t\"凌\": [\n\t\t\"淩\",\n\t\t\"凌\"\n\t],\n\t\"扎\": [\n\t\t\"紮\",\n\t\t\"扎\"\n\t],\n\t\"癡\": [\n\t\t\"痴\",\n\t\t\"癡\"\n\t],\n\t\"棲\": [\n\t\t\"栖\",\n\t\t\"棲\"\n\t],\n\t\"奔\": [\n\t\t\"犇\",\n\t\t\"奔\"\n\t],\n\t\"范\": [\n\t\t\"範\",\n\t\t\"范\"\n\t],\n\t\"姜\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"葁\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"朴\": [\n\t\t\"樸\",\n\t\t\"朴\"\n\t],\n\t\"谘\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"咨\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"捻\": [\n\t\t\"撚\",\n\t\t\"捻\"\n\t],\n\t\"餵\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"餧\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"𫗭\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"凈\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"净\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"慄\": [\n\t\t\"栗\",\n\t\t\"慄\"\n\t],\n\t\"輓\": [\n\t\t\"挽\",\n\t\t\"輓\"\n\t],\n\t\"竈\": [\n\t\t\"灶\",\n\t\t\"竈\"\n\t],\n\t\"缐\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"綫\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"线\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"尽\": [\n\t\t\"盡\",\n\t\t\"尽\",\n\t\t\"儘\"\n\t],\n\t\"霉\": [\n\t\t\"黴\",\n\t\t\"霉\"\n\t],\n\t\"週\": [\n\t\t\"周\",\n\t\t\"週\"\n\t],\n\t\"讃\": [\n\t\t\"讚\",\n\t\t\"讃\"\n\t],\n\t\"觀\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"观\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"覌\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"游\": [\n\t\t\"遊\",\n\t\t\"游\"\n\t],\n\t\"啓\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"啟\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"啔\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"厩\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"廐\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"廏\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"気\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"气\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"杰\": [\n\t\t\"傑\",\n\t\t\"杰\"\n\t],\n\t\"锻\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"煅\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"徴\": [\n\t\t\"徵\",\n\t\t\"徴\"\n\t],\n\t\"𫔮\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"閑\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"闲\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"赞\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"賛\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"桜\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"樱\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"狵\": [\n\t\t\"尨\",\n\t\t\"狵\"\n\t],\n\t\"圏\": [\n\t\t\"圈\",\n\t\t\"圏\"\n\t],\n\t\"兇\": [\n\t\t\"凶\",\n\t\t\"兇\"\n\t],\n\t\"濱\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"滨\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"烟\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"菸\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"黑\": [\n\t\t\"黒\",\n\t\t\"黑\"\n\t],\n\t\"乐\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"楽\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"藥\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"药\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"葯\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"𣛙\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"券\": [\n\t\t\"劵\",\n\t\t\"券\",\n\t\t\"卷\"\n\t],\n\t\"贰\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"弐\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"貮\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"𢎐\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"二\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"隸\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"隶\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"姬\": [\n\t\t\"姫\",\n\t\t\"姬\"\n\t],\n\t\"熏\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"薰\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"龥\": [\n\t\t\"籲\",\n\t\t\"龥\"\n\t],\n\t\"啮\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"𪘂\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"囓\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"噛\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"嚙\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"碱\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"硷\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"穂\": [\n\t\t\"穗\",\n\t\t\"穂\"\n\t],\n\t\"廃\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"废\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"跖\": [\n\t\t\"蹠\",\n\t\t\"跖\"\n\t],\n\t\"咤\": [\n\t\t\"吒\",\n\t\t\"咤\"\n\t],\n\t\"鏟\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"铲\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"刬\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"剗\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"劈\": [\n\t\t\"擗\",\n\t\t\"劈\"\n\t],\n\t\"覈\": [\n\t\t\"核\",\n\t\t\"覈\"\n\t],\n\t\"唇\": [\n\t\t\"脣\",\n\t\t\"唇\"\n\t],\n\t\"昇\": [\n\t\t\"升\",\n\t\t\"昇\"\n\t],\n\t\"盤\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"盘\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"渓\": [\n\t\t\"溪\",\n\t\t\"渓\"\n\t],\n\t\"嵠\": [\n\t\t\"谿\",\n\t\t\"嵠\"\n\t],\n\t\"摺\": [\n\t\t\"折\",\n\t\t\"摺\"\n\t],\n\t\"佑\": [\n\t\t\"祐\",\n\t\t\"佑\"\n\t],\n\t\"罋\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"甕\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"踪\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"踨\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"暱\": [\n\t\t\"昵\",\n\t\t\"暱\"\n\t],\n\t\"佈\": [\n\t\t\"布\",\n\t\t\"佈\"\n\t],\n\t\"为\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"爲\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"繃\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"绷\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"痹\": [\n\t\t\"痺\",\n\t\t\"痹\"\n\t],\n\t\"痳\": [\n\t\t\"痲\",\n\t\t\"痳\"\n\t],\n\t\"僱\": [\n\t\t\"雇\",\n\t\t\"僱\"\n\t],\n\t\"叙\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"敍\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"蕩\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"荡\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"勳\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"勋\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"勲\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"墙\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"墻\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"尔\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"尓\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"焔\": [\n\t\t\"焰\",\n\t\t\"焔\"\n\t],\n\t\"黙\": [\n\t\t\"默\",\n\t\t\"黙\"\n\t],\n\t\"压\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"圧\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"迪\": [\n\t\t\"廸\",\n\t\t\"迪\"\n\t],\n\t\"晓\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"暁\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"覇\": [\n\t\t\"霸\",\n\t\t\"覇\"\n\t],\n\t\"靈\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"灵\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"涙\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"淚\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"犠\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"犧\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"耤\": [\n\t\t\"藉\",\n\t\t\"耤\"\n\t],\n\t\"吨\": [\n\t\t\"噸\",\n\t\t\"吨\"\n\t],\n\t\"倶\": [\n\t\t\"俱\",\n\t\t\"倶\"\n\t],\n\t\"糉\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"糭\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"曏\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"嚮\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"淒\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"凄\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"鰐\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"鳄\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"顏\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"顔\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"沖\": [\n\t\t\"衝\",\n\t\t\"沖\",\n\t\t\"冲\"\n\t],\n\t\"梁\": [\n\t\t\"樑\",\n\t\t\"梁\"\n\t],\n\t\"沙\": [\n\t\t\"砂\",\n\t\t\"沙\"\n\t],\n\t\"碳\": [\n\t\t\"炭\",\n\t\t\"碳\"\n\t],\n\t\"絲\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"丝\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"檐\": [\n\t\t\"簷\",\n\t\t\"檐\"\n\t],\n\t\"湧\": [\n\t\t\"涌\",\n\t\t\"湧\"\n\t],\n\t\"两\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"兩\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"傢\": [\n\t\t\"家\",\n\t\t\"傢\"\n\t],\n\t\"你\": [\n\t\t\"妳\",\n\t\t\"你\"\n\t],\n\t\"他\": [\n\t\t\"她\",\n\t\t\"他\"\n\t],\n\t\"籐\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"籘\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"嘻\": [\n\t\t\"嬉\",\n\t\t\"嘻\"\n\t],\n\t\"亙\": [\n\t\t\"亘\",\n\t\t\"亙\"\n\t],\n\t\"恒\": [\n\t\t\"恆\",\n\t\t\"恒\"\n\t],\n\t\"鶫\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"鸫\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"姐\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"姊\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"刴\": [\n\t\t\"剁\",\n\t\t\"刴\"\n\t],\n\t\"洩\": [\n\t\t\"泄\",\n\t\t\"洩\"\n\t],\n\t\"铺\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"鋪\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"舗\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"効\": [\n\t\t\"效\",\n\t\t\"効\"\n\t],\n\t\"喩\": [\n\t\t\"喻\",\n\t\t\"喩\"\n\t],\n\t\"挿\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"揷\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"鋭\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"锐\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"権\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"权\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"經\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"经\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"歡\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"欢\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"嬢\": [\n\t\t\"嬢\",\n\t\t\"孃\"\n\t],\n\t\"濟\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"济\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"収\": [\n\t\t\"収\",\n\t\t\"收\"\n\t],\n\t\"緑\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"绿\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"啞\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"哑\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"勦\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"𠞰\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"禍\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"祸\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"營\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"营\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"產\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"产\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"查\": [\n\t\t\"查\",\n\t\t\"査\"\n\t],\n\t\"繪\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"绘\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"懷\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"怀\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"釋\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"释\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"藏\": [\n\t\t\"藏\",\n\t\t\"蔵\"\n\t],\n\t\"娛\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"娱\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"燒\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"烧\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"擴\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"扩\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"賤\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"贱\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"錢\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"钱\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"雜\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"杂\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"聽\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"听\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"帶\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"带\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"阅\": [\n\t\t\"閲\",\n\t\t\"阅\"\n\t],\n\t\"覽\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"览\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"惡\": [\n\t\t\"惡\",\n\t\t\"悪\",\n\t\t\"恶\"\n\t],\n\t\"亞\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"亚\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"冰\": [\n\t\t\"冰\",\n\t\t\"氷\"\n\t],\n\t\"県\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"縣\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"粛\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"肃\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"專\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"专\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"樣\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"样\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"關\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"关\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"検\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"检\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"侮\": [\n\t\t\"侮\",\n\t\t\"侮\"\n\t],\n\t\"沈\": [\n\t\t\"沉\",\n\t\t\"沈\"\n\t],\n\t\"嘗\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"尝\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"榨\": [\n\t\t\"搾\",\n\t\t\"榨\"\n\t],\n\t\"獲\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"穫\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"缰\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"韁\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"贗\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"赝\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"呆\": [\n\t\t\"呆\"\n\t],\n\t\"盃\": [\n\t\t\"杯\",\n\t\t\"盃\"\n\t],\n\t\"咒\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"詋\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"笺\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"箋\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"牋\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"𠀤\": [\n\t\t\"竝\",\n\t\t\"𠀤\"\n\t],\n\t\"徬\": [\n\t\t\"彷\",\n\t\t\"徬\"\n\t],\n\t\"𫎬\": [\n\t\t\"贑\",\n\t\t\"𫎬\"\n\t],\n\t\"崕\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"厓\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"巖\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"巗\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"巌\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"漓\": [\n\t\t\"灕\",\n\t\t\"漓\"\n\t],\n\t\"黏\": [\n\t\t\"粘\",\n\t\t\"黏\"\n\t],\n\t\"嫺\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"嫻\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"嘩\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"譁\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"抜\": [\n\t\t\"拔\",\n\t\t\"抜\"\n\t],\n\t\"溼\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"濕\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"稲\": [\n\t\t\"稻\",\n\t\t\"稲\"\n\t],\n\t\"椭\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"橢\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"每\": [\n\t\t\"毎\",\n\t\t\"每\"\n\t],\n\t\"箆\": [\n\t\t\"篦\",\n\t\t\"箆\"\n\t],\n\t\"驒\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"驔\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"勐\": [\n\t\t\"猛\",\n\t\t\"勐\"\n\t],\n\t\"告\": [\n\t\t\"吿\",\n\t\t\"告\"\n\t],\n\t\"刄\": [\n\t\t\"刃\",\n\t\t\"刄\"\n\t],\n\t\"敎\": [\n\t\t\"教\",\n\t\t\"敎\"\n\t],\n\t\"蜊\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"蠣\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"歩\": [\n\t\t\"步\",\n\t\t\"歩\"\n\t],\n\t\"刦\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"刧\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"刼\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"錘\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"锤\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"搥\": [\n\t\t\"搥\"\n\t]\n};\n\nexport const _table_cn: ISimpleTable = {\n\t\"羅\": \"罗\",\n\t\"惡\": \"恶\",\n\t\"蘇\": \"苏\",\n\t\"館\": \"馆\"\n};\n\n", "\n\nexport const _table_tw = {\n\t\"罗\": \"羅\",\n\t\"恶\": \"惡\",\n\t\"苏\": \"蘇\",\n\t\"馆\": \"館\"\n} as const;\n\n/**\n * 此表內只有符合 KEY 值時才會觸發\n */\nexport const table_jp_core = {\n\t\"の\": [\n\t\t\"の\",\n\t\t\"之\",\n\t\t\"的\"\n\t],\n\t\"と\": [\n\t\t\"と\",\n\t\t\"與\",\n\t\t\"与\"\n\t],\n\t\"画\": [\n\t\t\"划\",\n\t\t\"画\",\n\t\t\"劃\",\n\t\t\"畫\"\n\t],\n\t\"闘\": [\n\t\t\"斗\"\n\t],\n\t\"鬥\": [\n\t\t\"斗\"\n\t],\n\t\"鬭\": [\n\t\t\"斗\"\n\t],\n\t\"鬪\": [\n\t\t\"斗\"\n\t],\n\t\"闇\": [\n\t\t\"暗\"\n\t],\n\t\"図\": [\n\t\t\"図\",\n\t\t\"圖\",\n\t\t\"图\"\n\t],\n\t\"当\": [\n\t\t\"当\",\n\t\t\"噹\",\n\t\t\"當\",\n\t\t\"儅\"\n\t],\n\t\"閤\": [\n\t\t\"合\"\n\t],\n\t\"阁\": [\n\t\t\"合\"\n\t],\n\t\"罗\": [\n\t\t\"羅\",\n\t\t\"罗\",\n\t\t\"儸\",\n\t\t\"㑩\",\n\t\t\"囉\",\n\t\t\"啰\"\n\t],\n\t\"干\": [\n\t\t\"幹\",\n\t\t\"乾\",\n\t\t\"干\"\n\t],\n\t\"幹\": [\n\t\t\"幹\",\n\t\t\"干\"\n\t],\n\t\"乾\": [\n\t\t\"干\",\n\t\t\"乾\",\n\t\t\"亁\",\n\t\t\"乹\"\n\t],\n\t\"亁\": [\n\t\t\"乾\",\n\t\t\"亁\",\n\t\t\"乹\"\n\t],\n\t\"乹\": [\n\t\t\"乾\",\n\t\t\"亁\",\n\t\t\"乹\"\n\t],\n\t\"历\": [\n\t\t\"历\",\n\t\t\"歴\",\n\t\t\"歷\",\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"歴\": [\n\t\t\"历\"\n\t],\n\t\"歷\": [\n\t\t\"历\"\n\t],\n\t\"暦\": [\n\t\t\"历\"\n\t],\n\t\"曆\": [\n\t\t\"历\"\n\t],\n\t\"呻\": [\n\t\t\"呻\",\n\t\t\"申\"\n\t],\n\t\"覆\": [\n\t\t\"覆\",\n\t\t\"复\"\n\t],\n\t\"复\": [\n\t\t\"覆\"\n\t],\n\t\"勉\": [\n\t\t\"免\"\n\t],\n\t\"勉\": [\n\t\t\"免\"\n\t],\n\t\"甦\": [\n\t\t\"甦\",\n\t\t\"蘇\",\n\t\t\"苏\"\n\t],\n\t\"忧\": [\n\t\t\"憂\",\n\t\t\"優\"\n\t],\n\t\"鹹\": [\n\t\t\"咸\",\n\t\t\"鹹\"\n\t],\n\t\"准\": [\n\t\t\"準\",\n\t\t\"准\"\n\t],\n\t\"準\": [\n\t\t\"準\",\n\t\t\"准\"\n\t],\n\t\"袮\": [\n\t\t\"袮\",\n\t\t\"祢\"\n\t],\n\t\"儘\": [\n\t\t\"儘\",\n\t\t\"侭\"\n\t],\n\t\"侭\": [\n\t\t\"儘\",\n\t\t\"侭\"\n\t],\n\t\"脏\": [\n\t\t\"脏\",\n\t\t\"髒\",\n\t\t\"臟\"\n\t],\n\t\"发\": [\n\t\t\"髮\",\n\t\t\"髪\",\n\t\t\"发\"\n\t],\n\t\"髮\": [\n\t\t\"發\",\n\t\t\"发\"\n\t],\n\t\"慾\": [\n\t\t\"慾\",\n\t\t\"欲\"\n\t],\n\t\"讚\": [\n\t\t\"讃\",\n\t\t\"讚\",\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"冲\": [\n\t\t\"冲\",\n\t\t\"沖\",\n\t\t\"衝\"\n\t],\n\t\"面\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"鬚\": [\n\t\t\"鬚\",\n\t\t\"須\",\n\t\t\"须\"\n\t],\n\t\"揹\": [\n\t\t\"揹\",\n\t\t\"背\"\n\t],\n\t\"捲\": [\n\t\t\"捲\",\n\t\t\"卷\",\n\t\t\"巻\"\n\t],\n\t\"卷\": [\n\t\t\"捲\",\n\t\t\"卷\",\n\t\t\"巻\",\n\t\t\"劵\",\n\t\t\"券\"\n\t],\n\t\"巻\": [\n\t\t\"捲\",\n\t\t\"卷\",\n\t\t\"巻\",\n\t\t\"劵\",\n\t\t\"券\"\n\t],\n\t\"苏\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"甦\"\n\t],\n\t\"瀏\": [\n\t\t\"瀏\",\n\t\t\"浏\",\n\t\t\"刘\"\n\t],\n\t\"浏\": [\n\t\t\"瀏\",\n\t\t\"浏\",\n\t\t\"刘\"\n\t],\n\t\"吁\": [\n\t\t\"籲\",\n\t\t\"吁\"\n\t],\n\t\"囉\": [\n\t\t\"囉\",\n\t\t\"啰\",\n\t\t\"罗\",\n\t\t\"羅\"\n\t],\n\t\"啰\": [\n\t\t\"囉\",\n\t\t\"啰\",\n\t\t\"罗\",\n\t\t\"羅\"\n\t],\n\t\"修\": [\n\t\t\"修\",\n\t\t\"俢\"\n\t],\n\t\"犟\": [\n\t\t\"犟\",\n\t\t\"強\",\n\t\t\"强\"\n\t],\n\t\"嗬\": [\n\t\t\"嗬\",\n\t\t\"呵\"\n\t],\n\t\"唿\": [\n\t\t\"唿\",\n\t\t\"呼\"\n\t],\n\t\"媮\": [\n\t\t\"媮\",\n\t\t\"偷\"\n\t],\n\t\"采\": [\n\t\t\"采\",\n\t\t\"採\"\n\t],\n\t\"彩\": [\n\t\t\"彩\",\n\t\t\"采\"\n\t],\n\t\"𠩺\": [\n\t\t\"𠩺\",\n\t\t\"釐\"\n\t],\n\t\"恶\": [\n\t\t\"恶\",\n\t\t\"噁\",\n\t\t\"惡\"\n\t],\n\t\"炰\": [\n\t\t\"炰\",\n\t\t\"炮\"\n\t],\n\t\"辟\": [\n\t\t\"辟\",\n\t\t\"闢\",\n\t\t\"避\"\n\t],\n\t\"避\": [\n\t\t\"辟\",\n\t\t\"避\"\n\t],\n\t\"闢\": [\n\t\t\"辟\",\n\t\t\"闢\"\n\t],\n\t\"滷\": [\n\t\t\"魯\",\n\t\t\"鲁\"\n\t],\n\t\"鹵\": [\n\t\t\"魯\",\n\t\t\"鲁\"\n\t],\n\t\"卤\": [\n\t\t\"魯\",\n\t\t\"鲁\"\n\t],\n\t\"儓\": [\n\t\t\"儓\",\n\t\t\"檯\"\n\t],\n\t\"檯\": [\n\t\t\"儓\",\n\t\t\"檯\"\n\t],\n\t\"台\": [\n\t\t\"台\",\n\t\t\"檯\",\n\t\t\"臺\",\n\t\t\"颱\"\n\t],\n\t\"練\": [\n\t\t\"炼\"\n\t],\n\t\"练\": [\n\t\t\"炼\"\n\t],\n\t\"繫\": [\n\t\t\"系\"\n\t],\n\t\"繋\": [\n\t\t\"系\"\n\t],\n\t\"糓\": [\n\t\t\"谷\"\n\t],\n\t\"穀\": [\n\t\t\"谷\"\n\t],\n\t\"版\": [\n\t\t\"板\"\n\t],\n\t\"祕\": [\n\t\t\"密\"\n\t],\n\t\"秘\": [\n\t\t\"密\"\n\t],\n\t\"汇\": [\n\t\t\"彙\",\n\t\t\"匯\"\n\t],\n\t\"倂\": [\n\t\t\"倂\",\n\t\t\"併\"\n\t],\n\t\"併\": [\n\t\t\"倂\",\n\t\t\"併\"\n\t],\n\t\"幷\": [\n\t\t\"并\"\n\t],\n\t\"并\": [\n\t\t\"幷\"\n\t],\n\t\"矇\": [\n\t\t\"蒙\"\n\t],\n\t\"濛\": [\n\t\t\"蒙\"\n\t],\n\t\"懞\": [\n\t\t\"蒙\"\n\t],\n\t\"煇\": [\n\t\t\"煇\",\n\t\t\"辉\",\n\t\t\"𪸩\"\n\t],\n\t\"𪸩\": [\n\t\t\"煇\",\n\t\t\"辉\",\n\t\t\"𪸩\"\n\t],\n\t\"签\": [\n\t\t\"籤\",\n\t\t\"簽\"\n\t],\n\t\"燻\": [\n\t\t\"燻\",\n\t\t\"熏\",\n\t\t\"薫\",\n\t\t\"薰\"\n\t]\n} as const;\n\n/**\n * 此表內符合以下任意值時會觸發\n */\nexport const table_plus_core = {\n\t\"劍\": [\n\t\t\"劍\",\n\t\t\"剑\",\n\t\t\"剣\",\n\t\t\"劎\",\n\t\t\"劒\",\n\t\t\"剱\",\n\t\t\"劔\"\n\t],\n\t\"砲\": [\n\t\t\"砲\",\n\t\t\"炮\"\n\t],\n\t\"偽\": [\n\t\t\"偽\",\n\t\t\"僞\"\n\t],\n\t\"內\": [\n\t\t\"內\",\n\t\t\"内\"\n\t],\n\t\"鬥\": [\n\t\t\"鬭\",\n\t\t\"鬥\",\n\t\t\"闘\",\n\t\t\"鬪\"\n\t],\n\t\"鶏\": [\n\t\t\"鶏\",\n\t\t\"鷄\",\n\t\t\"雞\",\n\t\t\"鸡\"\n\t],\n\t\"兎\": [\n\t\t\"兎\",\n\t\t\"兔\"\n\t],\n\t\"坏\": [\n\t\t\"坯\",\n\t\t\"坏\",\n\t\t\"壊\",\n\t\t\"壞\"\n\t],\n\t\"殻\": [\n\t\t\"殻\",\n\t\t\"殼\",\n\t\t\"壳\"\n\t],\n\t\"像\": [\n\t\t\"像\",\n\t\t\"象\"\n\t],\n\t\"蘇\": [\n\t\t\"苏\",\n\t\t\"蘇\",\n\t\t\"囌\"\n\t],\n\t\"館\": [\n\t\t\"館\",\n\t\t\"館\",\n\t\t\"舘\",\n\t\t\"馆\"\n\t],\n\t\"鳥\": [\n\t\t\"鳥\",\n\t\t\"鸟\",\n\t\t\"𫠓\"\n\t],\n\t\"視\": [\n\t\t\"視\",\n\t\t\"視\",\n\t\t\"视\",\n\t\t\"眎\"\n\t],\n\t\"険\": [\n\t\t\"険\",\n\t\t\"險\",\n\t\t\"险\",\n\t\t\"嶮\",\n\t\t\"崄\"\n\t],\n\t\"絶\": [\n\t\t\"絶\",\n\t\t\"絕\",\n\t\t\"绝\"\n\t],\n\t\"鉄\": [\n\t\t\"鉄\",\n\t\t\"鐵\",\n\t\t\"铁\",\n\t\t\"鐡\"\n\t],\n\t\"諸\": [\n\t\t\"諸\",\n\t\t\"諸\",\n\t\t\"诸\"\n\t],\n\t\"尋\": [\n\t\t\"尋\",\n\t\t\"寻\",\n\t\t\"𡬶\"\n\t],\n\t\"裡\": [\n\t\t\"裡\",\n\t\t\"裏\",\n\t\t\"里\"\n\t],\n\t\"鑑\": [\n\t\t\"鑑\",\n\t\t\"鉴\",\n\t\t\"鑒\"\n\t],\n\t\"麵\": [\n\t\t\"麵\",\n\t\t\"麪\",\n\t\t\"麺\"\n\t],\n\t\"歲\": [\n\t\t\"歲\",\n\t\t\"歳\",\n\t\t\"岁\"\n\t],\n\t\"鐘\": [\n\t\t\"鐘\",\n\t\t\"鍾\",\n\t\t\"钟\",\n\t\t\"锺\"\n\t],\n\t\"會\": [\n\t\t\"會\",\n\t\t\"会\",\n\t\t\"㑹\"\n\t],\n\t\"塗\": [\n\t\t\"塗\",\n\t\t\"凃\",\n\t\t\"涂\"\n\t],\n\t\"髮\": [\n\t\t\"髮\",\n\t\t\"髪\"\n\t],\n\t\"話\": [\n\t\t\"話\",\n\t\t\"话\",\n\t\t\"䛡\"\n\t],\n\t\"閤\": [\n\t\t\"閤\",\n\t\t\"阁\"\n\t],\n\t\"蔘\": [\n\t\t\"蔘\",\n\t\t\"參\",\n\t\t\"参\"\n\t],\n\t\"労\": [\n\t\t\"労\",\n\t\t\"勞\",\n\t\t\"劳\"\n\t],\n\t\"国\": [\n\t\t\"国\",\n\t\t\"囯\",\n\t\t\"國\"\n\t],\n\t\"罵\": [\n\t\t\"罵\",\n\t\t\"骂\",\n\t\t\"駡\"\n\t],\n\t\"対\": [\n\t\t\"対\",\n\t\t\"對\",\n\t\t\"对\"\n\t],\n\t\"鏽\": [\n\t\t\"鏽\",\n\t\t\"銹\",\n\t\t\"锈\"\n\t],\n\t\"駄\": [\n\t\t\"駄\",\n\t\t\"䭾\",\n\t\t\"馱\",\n\t\t\"驮\"\n\t],\n\t\"薩\": [\n\t\t\"薩\",\n\t\t\"萨\",\n\t\t\"蕯\"\n\t],\n\t\"単\": [\n\t\t\"単\",\n\t\t\"單\",\n\t\t\"单\"\n\t],\n\t\"継\": [\n\t\t\"継\",\n\t\t\"繼\",\n\t\t\"继\"\n\t],\n\t\"驗\": [\n\t\t\"驗\",\n\t\t\"验\",\n\t\t\"騐\",\n\t\t\"験\"\n\t],\n\t\"歴\": [\n\t\t\"歴\",\n\t\t\"歷\"\n\t],\n\t\"暦\": [\n\t\t\"暦\",\n\t\t\"曆\"\n\t],\n\t\"団\": [\n\t\t\"团\",\n\t\t\"団\",\n\t\t\"團\"\n\t],\n\t\"麼\": [\n\t\t\"麼\",\n\t\t\"麽\",\n\t\t\"庅\"\n\t],\n\t\"戰\": [\n\t\t\"戦\",\n\t\t\"戰\",\n\t\t\"战\"\n\t],\n\t\"乡\": [\n\t\t\"郷\",\n\t\t\"鄕\",\n\t\t\"鄉\",\n\t\t\"鄊\",\n\t\t\"乡\"\n\t],\n\t\"勉\": [\n\t\t\"勉\",\n\t\t\"勉\"\n\t],\n\t\"餘\": [\n\t\t\"餘\",\n\t\t\"馀\",\n\t\t\"余\"\n\t],\n\t\"網\": [\n\t\t\"網\",\n\t\t\"䋄\",\n\t\t\"䋞\",\n\t\t\"网\"\n\t],\n\t\"託\": [\n\t\t\"託\",\n\t\t\"讬\",\n\t\t\"托\"\n\t],\n\t\"纖\": [\n\t\t\"纖\",\n\t\t\"纤\",\n\t\t\"縴\",\n\t\t\"繊\"\n\t],\n\t\"鍊\": [\n\t\t\"鍊\",\n\t\t\"錬\",\n\t\t\"𫔀\",\n\t\t\"炼\",\n\t\t\"煉\"\n\t],\n\t\"擊\": [\n\t\t\"撃\",\n\t\t\"擊\",\n\t\t\"击\"\n\t],\n\t\"實\": [\n\t\t\"實\",\n\t\t\"実\",\n\t\t\"实\",\n\t\t\"寔\"\n\t],\n\t\"於\": [\n\t\t\"於\",\n\t\t\"扵\"\n\t],\n\t\"證\": [\n\t\t\"證\",\n\t\t\"証\",\n\t\t\"证\"\n\t],\n\t\"據\": [\n\t\t\"據\",\n\t\t\"据\",\n\t\t\"拠\"\n\t],\n\t\"處\": [\n\t\t\"處\",\n\t\t\"处\",\n\t\t\"䖏\",\n\t\t\"処\"\n\t],\n\t\"瞪\": [\n\t\t\"瞪\",\n\t\t\"瞠\",\n\t\t\"眙\"\n\t],\n\t\"肢\": [\n\t\t\"肢\",\n\t\t\"胑\"\n\t],\n\t\"肉\": [\n\t\t\"肉\",\n\t\t\"宍\",\n\t\t\"𠕎\"\n\t],\n\t\"憂\": [\n\t\t\"憂\",\n\t\t\"𢝊\",\n\t\t\"𢚧\",\n\t\t\"𢟜\",\n\t\t\"懮\",\n\t\t\"𨗫\"\n\t],\n\t\"繫\": [\n\t\t\"繫\",\n\t\t\"繋\"\n\t],\n\t\"廻\": [\n\t\t\"廻\",\n\t\t\"迴\"\n\t],\n\t\"録\": [\n\t\t\"録\",\n\t\t\"錄\",\n\t\t\"录\"\n\t],\n\t\"鎗\": [\n\t\t\"鎗\",\n\t\t\"槍\",\n\t\t\"枪\"\n\t],\n\t\"悠\": [\n\t\t\"悠\",\n\t\t\"滺\"\n\t],\n\t\"壶\": [\n\t\t\"壶\",\n\t\t\"壺\",\n\t\t\"壷\"\n\t],\n\t\"茲\": [\n\t\t\"茲\",\n\t\t\"兹\",\n\t\t\"玆\"\n\t],\n\t\"蓋\": [\n\t\t\"蓋\",\n\t\t\"盖\",\n\t\t\"葢\"\n\t],\n\t\"蹟\": [\n\t\t\"蹟\",\n\t\t\"跡\",\n\t\t\"迹\"\n\t],\n\t\"癒\": [\n\t\t\"癒\",\n\t\t\"瘉\"\n\t],\n\t\"辺\": [\n\t\t\"辺\",\n\t\t\"邊\",\n\t\t\"边\",\n\t\t\"邉\"\n\t],\n\t\"準\": [\n\t\t\"準\",\n\t\t\"凖\"\n\t],\n\t\"衛\": [\n\t\t\"衛\",\n\t\t\"衞\",\n\t\t\"卫\"\n\t],\n\t\"晚\": [\n\t\t\"晚\",\n\t\t\"晩\"\n\t],\n\t\"裸\": [\n\t\t\"裸\",\n\t\t\"躶\"\n\t],\n\t\"亀\": [\n\t\t\"亀\",\n\t\t\"龜\",\n\t\t\"龟\",\n\t\t\"𪚧\",\n\t\t\"𪚿\",\n\t\t\"𠃾\"\n\t],\n\t\"凼\": [\n\t\t\"凼\",\n\t\t\"氹\"\n\t],\n\t\"艸\": [\n\t\t\"艸\",\n\t\t\"草\"\n\t],\n\t\"箚\": [\n\t\t\"箚\",\n\t\t\"剳\"\n\t],\n\t\"复\": [\n\t\t\"复\",\n\t\t\"復\",\n\t\t\"複\"\n\t],\n\t\"污\": [\n\t\t\"污\",\n\t\t\"汙\",\n\t\t\"汚\"\n\t],\n\t\"伙\": [\n\t\t\"伙\",\n\t\t\"夥\"\n\t],\n\t\"御\": [\n\t\t\"御\",\n\t\t\"禦\"\n\t],\n\t\"鬱\": [\n\t\t\"鬱\",\n\t\t\"郁\"\n\t],\n\t\"淩\": [\n\t\t\"淩\",\n\t\t\"凌\"\n\t],\n\t\"紮\": [\n\t\t\"紮\",\n\t\t\"扎\"\n\t],\n\t\"痴\": [\n\t\t\"痴\",\n\t\t\"癡\"\n\t],\n\t\"栖\": [\n\t\t\"栖\",\n\t\t\"棲\"\n\t],\n\t\"犇\": [\n\t\t\"犇\",\n\t\t\"奔\"\n\t],\n\t\"範\": [\n\t\t\"範\",\n\t\t\"范\"\n\t],\n\t\"薑\": [\n\t\t\"薑\",\n\t\t\"姜\",\n\t\t\"葁\"\n\t],\n\t\"樸\": [\n\t\t\"樸\",\n\t\t\"朴\"\n\t],\n\t\"諮\": [\n\t\t\"諮\",\n\t\t\"谘\",\n\t\t\"咨\"\n\t],\n\t\"撚\": [\n\t\t\"撚\",\n\t\t\"捻\"\n\t],\n\t\"喂\": [\n\t\t\"喂\",\n\t\t\"餵\",\n\t\t\"餧\",\n\t\t\"𫗭\"\n\t],\n\t\"淨\": [\n\t\t\"淨\",\n\t\t\"凈\",\n\t\t\"净\"\n\t],\n\t\"栗\": [\n\t\t\"栗\",\n\t\t\"慄\"\n\t],\n\t\"挽\": [\n\t\t\"挽\",\n\t\t\"輓\"\n\t],\n\t\"灶\": [\n\t\t\"灶\",\n\t\t\"竈\"\n\t],\n\t\"線\": [\n\t\t\"線\",\n\t\t\"缐\",\n\t\t\"綫\",\n\t\t\"线\"\n\t],\n\t\"盡\": [\n\t\t\"盡\",\n\t\t\"尽\",\n\t\t\"儘\"\n\t],\n\t\"黴\": [\n\t\t\"黴\",\n\t\t\"霉\"\n\t],\n\t\"周\": [\n\t\t\"周\",\n\t\t\"週\"\n\t],\n\t\"並\": [\n\t\t\"並\",\n\t\t\"并\",\n\t\t\"併\"\n\t],\n\t\"讚\": [\n\t\t\"讚\",\n\t\t\"讃\"\n\t],\n\t\"観\": [\n\t\t\"観\",\n\t\t\"觀\",\n\t\t\"观\",\n\t\t\"覌\"\n\t],\n\t\"遊\": [\n\t\t\"遊\",\n\t\t\"游\"\n\t],\n\t\"启\": [\n\t\t\"启\",\n\t\t\"啓\",\n\t\t\"啟\",\n\t\t\"啔\"\n\t],\n\t\"廄\": [\n\t\t\"廄\",\n\t\t\"厩\",\n\t\t\"廐\",\n\t\t\"廏\"\n\t],\n\t\"氣\": [\n\t\t\"気\",\n\t\t\"氣\",\n\t\t\"气\"\n\t],\n\t\"欲\": [\n\t\t\"慾\",\n\t\t\"欲\"\n\t],\n\t\"傑\": [\n\t\t\"傑\",\n\t\t\"杰\"\n\t],\n\t\"鍛\": [\n\t\t\"鍛\",\n\t\t\"锻\",\n\t\t\"煅\"\n\t],\n\t\"徵\": [\n\t\t\"徵\",\n\t\t\"徴\"\n\t],\n\t\"閒\": [\n\t\t\"閒\",\n\t\t\"𫔮\",\n\t\t\"閑\",\n\t\t\"闲\"\n\t],\n\t\"贊\": [\n\t\t\"贊\",\n\t\t\"赞\",\n\t\t\"賛\"\n\t],\n\t\"櫻\": [\n\t\t\"櫻\",\n\t\t\"桜\",\n\t\t\"樱\"\n\t],\n\t\"尨\": [\n\t\t\"尨\",\n\t\t\"狵\"\n\t],\n\t\"圈\": [\n\t\t\"圈\",\n\t\t\"圏\"\n\t],\n\t\"凶\": [\n\t\t\"凶\",\n\t\t\"兇\"\n\t],\n\t\"浜\": [\n\t\t\"浜\",\n\t\t\"濱\",\n\t\t\"滨\"\n\t],\n\t\"煙\": [\n\t\t\"煙\",\n\t\t\"烟\",\n\t\t\"菸\"\n\t],\n\t\"黒\": [\n\t\t\"黒\",\n\t\t\"黑\"\n\t],\n\t\"樂\": [\n\t\t\"樂\",\n\t\t\"乐\",\n\t\t\"楽\"\n\t],\n\t\"薬\": [\n\t\t\"薬\",\n\t\t\"藥\",\n\t\t\"药\",\n\t\t\"葯\",\n\t\t\"𣛙\"\n\t],\n\t\"劵\": [\n\t\t\"劵\",\n\t\t\"券\",\n\t\t\"卷\"\n\t],\n\t\"貳\": [\n\t\t\"貳\",\n\t\t\"贰\",\n\t\t\"弐\",\n\t\t\"貮\",\n\t\t\"𢎐\",\n\t\t\"二\"\n\t],\n\t\"隷\": [\n\t\t\"隷\",\n\t\t\"隸\",\n\t\t\"隶\"\n\t],\n\t\"姫\": [\n\t\t\"姫\",\n\t\t\"姬\"\n\t],\n\t\"薫\": [\n\t\t\"薫\",\n\t\t\"熏\",\n\t\t\"薰\"\n\t],\n\t\"籲\": [\n\t\t\"籲\",\n\t\t\"龥\"\n\t],\n\t\"齧\": [\n\t\t\"齧\",\n\t\t\"啮\",\n\t\t\"𪘂\",\n\t\t\"囓\",\n\t\t\"噛\",\n\t\t\"嚙\"\n\t],\n\t\"鹼\": [\n\t\t\"鹼\",\n\t\t\"碱\",\n\t\t\"硷\"\n\t],\n\t\"咸\": [\n\t\t\"咸\",\n\t\t\"鹹\"\n\t],\n\t\"穗\": [\n\t\t\"穗\",\n\t\t\"穂\"\n\t],\n\t\"廢\": [\n\t\t\"廢\",\n\t\t\"廃\",\n\t\t\"废\"\n\t],\n\t\"蹠\": [\n\t\t\"蹠\",\n\t\t\"跖\"\n\t],\n\t\"吒\": [\n\t\t\"吒\",\n\t\t\"咤\"\n\t],\n\t\"剷\": [\n\t\t\"剷\",\n\t\t\"鏟\",\n\t\t\"铲\",\n\t\t\"刬\",\n\t\t\"剗\"\n\t],\n\t\"擗\": [\n\t\t\"擗\",\n\t\t\"劈\"\n\t],\n\t\"核\": [\n\t\t\"核\",\n\t\t\"覈\"\n\t],\n\t\"脣\": [\n\t\t\"脣\",\n\t\t\"唇\",\n\t\t\"唇\"\n\t],\n\t\"升\": [\n\t\t\"升\",\n\t\t\"昇\"\n\t],\n\t\"磐\": [\n\t\t\"磐\",\n\t\t\"盤\",\n\t\t\"盘\"\n\t],\n\t\"溪\": [\n\t\t\"溪\",\n\t\t\"渓\"\n\t],\n\t\"谿\": [\n\t\t\"谿\",\n\t\t\"嵠\"\n\t],\n\t\"折\": [\n\t\t\"折\",\n\t\t\"摺\"\n\t],\n\t\"祐\": [\n\t\t\"祐\",\n\t\t\"佑\"\n\t],\n\t\"瓮\": [\n\t\t\"瓮\",\n\t\t\"罋\",\n\t\t\"甕\"\n\t],\n\t\"蹤\": [\n\t\t\"蹤\",\n\t\t\"踪\",\n\t\t\"踨\"\n\t],\n\t\"暗\": [\n\t\t\"闇\",\n\t\t\"暗\"\n\t],\n\t\"昵\": [\n\t\t\"昵\",\n\t\t\"暱\"\n\t],\n\t\"布\": [\n\t\t\"布\",\n\t\t\"佈\"\n\t],\n\t\"為\": [\n\t\t\"為\",\n\t\t\"为\",\n\t\t\"爲\"\n\t],\n\t\"綳\": [\n\t\t\"綳\",\n\t\t\"繃\",\n\t\t\"绷\"\n\t],\n\t\"痺\": [\n\t\t\"痺\",\n\t\t\"痹\"\n\t],\n\t\"痲\": [\n\t\t\"痲\",\n\t\t\"痳\"\n\t],\n\t\"雇\": [\n\t\t\"雇\",\n\t\t\"僱\"\n\t],\n\t\"敘\": [\n\t\t\"敘\",\n\t\t\"叙\",\n\t\t\"敍\"\n\t],\n\t\"盪\": [\n\t\t\"盪\",\n\t\t\"蕩\",\n\t\t\"荡\"\n\t],\n\t\"勛\": [\n\t\t\"勛\",\n\t\t\"勳\",\n\t\t\"勋\",\n\t\t\"勲\"\n\t],\n\t\"祕\": [\n\t\t\"祕\",\n\t\t\"秘\"\n\t],\n\t\"牆\": [\n\t\t\"牆\",\n\t\t\"墙\",\n\t\t\"墻\"\n\t],\n\t\"爾\": [\n\t\t\"爾\",\n\t\t\"尔\",\n\t\t\"尓\"\n\t],\n\t\"焰\": [\n\t\t\"焰\",\n\t\t\"焔\"\n\t],\n\t\"默\": [\n\t\t\"默\",\n\t\t\"黙\"\n\t],\n\t\"壓\": [\n\t\t\"壓\",\n\t\t\"压\",\n\t\t\"圧\"\n\t],\n\t\"廸\": [\n\t\t\"廸\",\n\t\t\"迪\"\n\t],\n\t\"曉\": [\n\t\t\"曉\",\n\t\t\"晓\",\n\t\t\"暁\"\n\t],\n\t\"霸\": [\n\t\t\"霸\",\n\t\t\"覇\"\n\t],\n\t\"霊\": [\n\t\t\"霊\",\n\t\t\"靈\",\n\t\t\"灵\"\n\t],\n\t\"泪\": [\n\t\t\"泪\",\n\t\t\"涙\",\n\t\t\"淚\"\n\t],\n\t\"牺\": [\n\t\t\"牺\",\n\t\t\"犠\",\n\t\t\"犧\"\n\t],\n\t\"藉\": [\n\t\t\"藉\",\n\t\t\"耤\"\n\t],\n\t\"噸\": [\n\t\t\"噸\",\n\t\t\"吨\"\n\t],\n\t\"俱\": [\n\t\t\"俱\",\n\t\t\"倶\"\n\t],\n\t\"粽\": [\n\t\t\"粽\",\n\t\t\"糉\",\n\t\t\"糭\"\n\t],\n\t\"向\": [\n\t\t\"向\",\n\t\t\"曏\",\n\t\t\"嚮\"\n\t],\n\t\"悽\": [\n\t\t\"悽\",\n\t\t\"淒\",\n\t\t\"凄\"\n\t],\n\t\"鱷\": [\n\t\t\"鱷\",\n\t\t\"鰐\",\n\t\t\"鳄\"\n\t],\n\t\"滷\": [\n\t\t\"滷\",\n\t\t\"鹵\",\n\t\t\"卤\"\n\t],\n\t\"颜\": [\n\t\t\"颜\",\n\t\t\"顏\",\n\t\t\"顔\"\n\t],\n\t\"衝\": [\n\t\t\"衝\",\n\t\t\"沖\",\n\t\t\"冲\"\n\t],\n\t\"樑\": [\n\t\t\"樑\",\n\t\t\"梁\"\n\t],\n\t\"砂\": [\n\t\t\"砂\",\n\t\t\"沙\"\n\t],\n\t\"炭\": [\n\t\t\"炭\",\n\t\t\"碳\"\n\t],\n\t\"糸\": [\n\t\t\"糸\",\n\t\t\"絲\",\n\t\t\"丝\"\n\t],\n\t\"簷\": [\n\t\t\"簷\",\n\t\t\"檐\"\n\t],\n\t\"涌\": [\n\t\t\"涌\",\n\t\t\"湧\"\n\t],\n\t\"糓\": [\n\t\t\"穀\",\n\t\t\"糓\"\n\t],\n\t\"両\": [\n\t\t\"両\",\n\t\t\"两\",\n\t\t\"兩\"\n\t],\n\t\"家\": [\n\t\t\"家\",\n\t\t\"傢\"\n\t],\n\t\"妳\": [\n\t\t\"妳\",\n\t\t\"你\"\n\t],\n\t\"她\": [\n\t\t\"她\",\n\t\t\"他\"\n\t],\n\t\"藤\": [\n\t\t\"藤\",\n\t\t\"籐\",\n\t\t\"籘\"\n\t],\n\t\"嬉\": [\n\t\t\"嬉\",\n\t\t\"嘻\"\n\t],\n\t\"亘\": [\n\t\t\"亘\",\n\t\t\"亙\"\n\t],\n\t\"恆\": [\n\t\t\"恆\",\n\t\t\"恒\"\n\t],\n\t\"鶇\": [\n\t\t\"鶇\",\n\t\t\"鶫\",\n\t\t\"鸫\"\n\t],\n\t\"姉\": [\n\t\t\"姉\",\n\t\t\"姐\",\n\t\t\"姊\"\n\t],\n\t\"剁\": [\n\t\t\"剁\",\n\t\t\"刴\"\n\t],\n\t\"泄\": [\n\t\t\"泄\",\n\t\t\"洩\"\n\t],\n\t\"舖\": [\n\t\t\"舖\",\n\t\t\"铺\",\n\t\t\"鋪\",\n\t\t\"舗\"\n\t],\n\t\"效\": [\n\t\t\"效\",\n\t\t\"効\"\n\t],\n\t\"喻\": [\n\t\t\"喻\",\n\t\t\"喩\"\n\t],\n\t\"插\": [\n\t\t\"挿\",\n\t\t\"插\",\n\t\t\"揷\"\n\t],\n\t\"銳\": [\n\t\t\"銳\",\n\t\t\"鋭\",\n\t\t\"锐\"\n\t],\n\t\"權\": [\n\t\t\"權\",\n\t\t\"権\",\n\t\t\"权\"\n\t],\n\t\"経\": [\n\t\t\"経\",\n\t\t\"經\",\n\t\t\"经\"\n\t],\n\t\"歓\": [\n\t\t\"歓\",\n\t\t\"歡\",\n\t\t\"欢\"\n\t],\n\t\"孃\": [\n\t\t\"嬢\",\n\t\t\"孃\"\n\t],\n\t\"済\": [\n\t\t\"済\",\n\t\t\"濟\",\n\t\t\"济\"\n\t],\n\t\"收\": [\n\t\t\"収\",\n\t\t\"收\"\n\t],\n\t\"綠\": [\n\t\t\"綠\",\n\t\t\"緑\",\n\t\t\"绿\"\n\t],\n\t\"唖\": [\n\t\t\"唖\",\n\t\t\"啞\",\n\t\t\"哑\"\n\t],\n\t\"剿\": [\n\t\t\"剿\",\n\t\t\"勦\",\n\t\t\"𠞰\"\n\t],\n\t\"禍\": [\n\t\t\"禍\",\n\t\t\"禍\",\n\t\t\"祸\"\n\t],\n\t\"営\": [\n\t\t\"營\",\n\t\t\"営\",\n\t\t\"营\"\n\t],\n\t\"産\": [\n\t\t\"產\",\n\t\t\"産\",\n\t\t\"产\"\n\t],\n\t\"査\": [\n\t\t\"查\",\n\t\t\"査\"\n\t],\n\t\"絵\": [\n\t\t\"繪\",\n\t\t\"絵\",\n\t\t\"绘\"\n\t],\n\t\"懐\": [\n\t\t\"懷\",\n\t\t\"懐\",\n\t\t\"怀\"\n\t],\n\t\"釈\": [\n\t\t\"釋\",\n\t\t\"釈\",\n\t\t\"释\"\n\t],\n\t\"蔵\": [\n\t\t\"藏\",\n\t\t\"蔵\"\n\t],\n\t\"娯\": [\n\t\t\"娛\",\n\t\t\"娯\",\n\t\t\"娱\"\n\t],\n\t\"焼\": [\n\t\t\"燒\",\n\t\t\"焼\",\n\t\t\"烧\"\n\t],\n\t\"拡\": [\n\t\t\"擴\",\n\t\t\"拡\",\n\t\t\"扩\"\n\t],\n\t\"賎\": [\n\t\t\"賤\",\n\t\t\"賎\",\n\t\t\"贱\"\n\t],\n\t\"銭\": [\n\t\t\"錢\",\n\t\t\"銭\",\n\t\t\"钱\"\n\t],\n\t\"雑\": [\n\t\t\"雜\",\n\t\t\"雑\",\n\t\t\"杂\"\n\t],\n\t\"聴\": [\n\t\t\"聽\",\n\t\t\"聴\",\n\t\t\"听\"\n\t],\n\t\"帯\": [\n\t\t\"帶\",\n\t\t\"帯\",\n\t\t\"带\"\n\t],\n\t\"閲\": [\n\t\t\"閲\",\n\t\t\"阅\"\n\t],\n\t\"覧\": [\n\t\t\"覽\",\n\t\t\"覧\",\n\t\t\"览\"\n\t],\n\t\"悪\": [\n\t\t\"惡\",\n\t\t\"悪\",\n\t\t\"恶\"\n\t],\n\t\"亜\": [\n\t\t\"亞\",\n\t\t\"亜\",\n\t\t\"亚\"\n\t],\n\t\"氷\": [\n\t\t\"冰\",\n\t\t\"氷\"\n\t],\n\t\"县\": [\n\t\t\"県\",\n\t\t\"縣\",\n\t\t\"县\"\n\t],\n\t\"肅\": [\n\t\t\"粛\",\n\t\t\"肅\",\n\t\t\"肃\"\n\t],\n\t\"専\": [\n\t\t\"專\",\n\t\t\"専\",\n\t\t\"专\"\n\t],\n\t\"様\": [\n\t\t\"樣\",\n\t\t\"様\",\n\t\t\"样\"\n\t],\n\t\"関\": [\n\t\t\"關\",\n\t\t\"関\",\n\t\t\"关\"\n\t],\n\t\"檢\": [\n\t\t\"検\",\n\t\t\"檢\",\n\t\t\"检\"\n\t],\n\t\"侮\": [\n\t\t\"侮\",\n\t\t\"侮\"\n\t],\n\t\"沉\": [\n\t\t\"沉\",\n\t\t\"沈\"\n\t],\n\t\"嚐\": [\n\t\t\"嚐\",\n\t\t\"嘗\",\n\t\t\"尝\"\n\t],\n\t\"搾\": [\n\t\t\"搾\",\n\t\t\"榨\"\n\t],\n\t\"获\": [\n\t\t\"获\",\n\t\t\"獲\",\n\t\t\"穫\"\n\t],\n\t\"繮\": [\n\t\t\"繮\",\n\t\t\"缰\",\n\t\t\"韁\"\n\t],\n\t\"贋\": [\n\t\t\"贋\",\n\t\t\"贗\",\n\t\t\"赝\"\n\t],\n\t\"獃\": [\n\t\t\"呆\"\n\t],\n\t\"杯\": [\n\t\t\"杯\",\n\t\t\"盃\"\n\t],\n\t\"呪\": [\n\t\t\"呪\",\n\t\t\"咒\",\n\t\t\"詋\"\n\t],\n\t\"䇳\": [\n\t\t\"䇳\",\n\t\t\"笺\",\n\t\t\"箋\",\n\t\t\"牋\"\n\t],\n\t\"竝\": [\n\t\t\"竝\",\n\t\t\"𠀤\"\n\t],\n\t\"彷\": [\n\t\t\"彷\",\n\t\t\"徬\"\n\t],\n\t\"贑\": [\n\t\t\"贑\",\n\t\t\"𫎬\"\n\t],\n\t\"崖\": [\n\t\t\"崖\",\n\t\t\"崕\",\n\t\t\"厓\"\n\t],\n\t\"岩\": [\n\t\t\"岩\",\n\t\t\"巖\",\n\t\t\"巗\",\n\t\t\"巌\"\n\t],\n\t\"灕\": [\n\t\t\"灕\",\n\t\t\"漓\"\n\t],\n\t\"粘\": [\n\t\t\"粘\",\n\t\t\"黏\"\n\t],\n\t\"娴\": [\n\t\t\"娴\",\n\t\t\"嫺\",\n\t\t\"嫻\"\n\t],\n\t\"哗\": [\n\t\t\"哗\",\n\t\t\"嘩\",\n\t\t\"譁\"\n\t],\n\t\"拔\": [\n\t\t\"拔\",\n\t\t\"抜\"\n\t],\n\t\"湿\": [\n\t\t\"湿\",\n\t\t\"溼\",\n\t\t\"濕\"\n\t],\n\t\"稻\": [\n\t\t\"稻\",\n\t\t\"稲\"\n\t],\n\t\"楕\": [\n\t\t\"楕\",\n\t\t\"椭\",\n\t\t\"橢\"\n\t],\n\t\"毎\": [\n\t\t\"毎\",\n\t\t\"每\"\n\t],\n\t\"篦\": [\n\t\t\"篦\",\n\t\t\"箆\"\n\t],\n\t\"騨\": [\n\t\t\"騨\",\n\t\t\"驒\",\n\t\t\"驔\"\n\t],\n\t\"猛\": [\n\t\t\"猛\",\n\t\t\"勐\"\n\t],\n\t\"吿\": [\n\t\t\"吿\",\n\t\t\"告\"\n\t],\n\t\"刃\": [\n\t\t\"刃\",\n\t\t\"刄\"\n\t],\n\t\"教\": [\n\t\t\"教\",\n\t\t\"敎\"\n\t],\n\t\"蛎\": [\n\t\t\"蛎\",\n\t\t\"蜊\",\n\t\t\"蠣\"\n\t],\n\t\"步\": [\n\t\t\"步\",\n\t\t\"歩\"\n\t],\n\t\"劫\": [\n\t\t\"刦\",\n\t\t\"刧\",\n\t\t\"刼\",\n\t\t\"劫\"\n\t],\n\t\"鎚\": [\n\t\t\"鎚\",\n\t\t\"錘\",\n\t\t\"锤\"\n\t],\n\t\"捶\": [\n\t\t\"搥\"\n\t]\n} as const;\n\n", "import { _get } from './lib/util/core';\nimport { table_jp, _table_cn } from './lib/table';\nimport { _table_tw } from './lib/table/raw';\nimport { IOptions } from '@lazy-cjk/zh-convert/lib/types';\nimport { cn2tw, tw2cn } from '@lazy-cjk/zh-convert';\n\nexport function jp(char: string, options: IOptions = {}): string[]\n{\n\tlet a: string[] = [];\n\ta = _get(a, table_jp[char]);\n\n\treturn a;\n}\n\nexport function tw(char: string, options: IOptions = {}): string[]\n{\n\tlet a: string[] = [];\n\n\ta = _get(a, _table_tw[char], cn2tw(char, options));\n\n\t//console.log('cn2tw', char, a);\n\n\treturn a;\n}\n\nexport function cn(char: string, options: IOptions = {}): string[]\n{\n\tlet a: string[] = [];\n\n\ta = _get(a, _table_cn[char], tw2cn(char, options));\n\n\t//console.log('tw2cn', char, a);\n\n\treturn a;\n}\n\nexport default exports as typeof import('./index');\n", "import { array_unique } from 'array-hyper-unique';\nimport { _get as _get_core } from '@lazy-cjk/zh-table-alias/lib/util/core';\nimport libTable from '@lazy-cjk/zh-table-alias';\nimport { IOptions } from './types';\n\nexport function _get(a, value, ...values)\n{\n\ta = _get_core(a, value, ...values);\n\n\treturn array_unique(a).sort();\n}\n\nexport function _wrapFn(fn: string)\n{\n\treturn function (char: string, options: IOptions = {}): string[]\n\t{\n\t\tif (!char)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t{\n\t\t\treturn [char];\n\t\t}\n\n\t\tlet a = libTable[fn](char, options);\n\n\t\ta = array_unique(a);\n\t\ta.sort();\n\n\t\treturn a;\n\t}\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "\n\nimport { ITABLE_MAIN } from './types';\n\n/**\n * Code generated from @lazy-cjk/jp-table-comparison;\n * DO NOT EDIT.\n * @see {@link @lazy-cjk/jp-table-comparison}\n */\n\nexport const TABLE_KEYS = [\n\t\"jp\",\n\t\"zht\",\n\t\"zhs\"\n] as const;\n\n/**\n * Code generated from @lazy-cjk/jp-table-comparison;\n * DO NOT EDIT.\n * @see {@link @lazy-cjk/jp-table-comparison}\n */\n\nexport const TABLE: ITABLE_MAIN = {\n\t\"jp\": {\n\t\t\"会\": {\n\t\t\t\"jp\": \"会\",\n\t\t\t\"zht\": \"會\",\n\t\t\t\"zhs\": \"会\"\n\t\t},\n\t\t\"箋\": {\n\t\t\t\"jp\": \"箋\",\n\t\t\t\"zht\": \"箋\",\n\t\t\t\"zhs\": \"笺\"\n\t\t},\n\t\t\"網\": {\n\t\t\t\"jp\": \"網\",\n\t\t\t\"zht\": \"網\",\n\t\t\t\"zhs\": \"网\"\n\t\t},\n\t\t\"処\": {\n\t\t\t\"jp\": \"処\",\n\t\t\t\"zht\": \"處\",\n\t\t\t\"zhs\": \"处\"\n\t\t},\n\t\t\"話\": {\n\t\t\t\"jp\": \"話\",\n\t\t\t\"zht\": \"話\",\n\t\t\t\"zhs\": \"话\"\n\t\t},\n\t\t\"駄\": {\n\t\t\t\"jp\": \"駄\",\n\t\t\t\"zht\": \"馱\",\n\t\t\t\"zhs\": \"驮\"\n\t\t},\n\t\t\"馱\": {\n\t\t\t\"jp\": \"馱\",\n\t\t\t\"zht\": \"馱\",\n\t\t\t\"zhs\": \"驮\"\n\t\t},\n\t\t\"万\": {\n\t\t\t\"jp\": \"万\",\n\t\t\t\"zht\": \"萬\",\n\t\t\t\"zhs\": \"万\"\n\t\t},\n\t\t\"与\": {\n\t\t\t\"jp\": \"与\",\n\t\t\t\"zht\": \"與\",\n\t\t\t\"zhs\": \"与\"\n\t\t},\n\t\t\"醜\": {\n\t\t\t\"jp\": \"醜\",\n\t\t\t\"zht\": \"醜\",\n\t\t\t\"zhs\": \"丑\"\n\t\t},\n\t\t\"専\": {\n\t\t\t\"jp\": \"専\",\n\t\t\t\"zht\": \"專\",\n\t\t\t\"zhs\": \"专\"\n\t\t},\n\t\t\"業\": {\n\t\t\t\"jp\": \"業\",\n\t\t\t\"zht\": \"業\",\n\t\t\t\"zhs\": \"业\"\n\t\t},\n\t\t\"東\": {\n\t\t\t\"jp\": \"東\",\n\t\t\t\"zht\": \"東\",\n\t\t\t\"zhs\": \"东\"\n\t\t},\n\t\t\"絲\": {\n\t\t\t\"jp\": \"絲\",\n\t\t\t\"zht\": \"絲\",\n\t\t\t\"zhs\": \"丝\"\n\t\t},\n\t\t\"糸\": {\n\t\t\t\"jp\": \"糸\",\n\t\t\t\"zht\": \"絲\",\n\t\t\t\"zhs\": \"丝\"\n\t\t},\n\t\t\"両\": {\n\t\t\t\"jp\": \"両\",\n\t\t\t\"zht\": \"兩\",\n\t\t\t\"zhs\": \"两\"\n\t\t},\n\t\t\"厳\": {\n\t\t\t\"jp\": \"厳\",\n\t\t\t\"zht\": \"嚴\",\n\t\t\t\"zhs\": \"严\"\n\t\t},\n\t\t\"並\": {\n\t\t\t\"jp\": \"並\",\n\t\t\t\"zht\": \"並\",\n\t\t\t\"zhs\": \"并\"\n\t\t},\n\t\t\"喪\": {\n\t\t\t\"jp\": \"喪\",\n\t\t\t\"zht\": \"喪\",\n\t\t\t\"zhs\": \"丧\"\n\t\t},\n\t\t\"個\": {\n\t\t\t\"jp\": \"個\",\n\t\t\t\"zht\": \"個\",\n\t\t\t\"zhs\": \"个\"\n\t\t},\n\t\t\"豊\": {\n\t\t\t\"jp\": \"豊\",\n\t\t\t\"zht\": \"豐\",\n\t\t\t\"zhs\": \"丰\"\n\t\t},\n\t\t\"臨\": {\n\t\t\t\"jp\": \"臨\",\n\t\t\t\"zht\": \"臨\",\n\t\t\t\"zhs\": \"临\"\n\t\t},\n\t\t\"為\": {\n\t\t\t\"jp\": \"為\",\n\t\t\t\"zht\": \"為\",\n\t\t\t\"zhs\": \"为\"\n\t\t},\n\t\t\"麗\": {\n\t\t\t\"jp\": \"麗\",\n\t\t\t\"zht\": \"麗\",\n\t\t\t\"zhs\": \"丽\"\n\t\t},\n\t\t\"挙\": {\n\t\t\t\"jp\": \"挙\",\n\t\t\t\"zht\": \"舉\",\n\t\t\t\"zhs\": \"举\"\n\t\t},\n\t\t\"廼\": {\n\t\t\t\"jp\": \"廼\",\n\t\t\t\"zht\": \"迺\",\n\t\t\t\"zhs\": \"迺\"\n\t\t},\n\t\t\"義\": {\n\t\t\t\"jp\": \"義\",\n\t\t\t\"zht\": \"義\",\n\t\t\t\"zhs\": \"义\"\n\t\t},\n\t\t\"楽\": {\n\t\t\t\"jp\": \"楽\",\n\t\t\t\"zht\": \"樂\",\n\t\t\t\"zhs\": \"乐\"\n\t\t},\n\t\t\"乗\": {\n\t\t\t\"jp\": \"乗\",\n\t\t\t\"zht\": \"乘\",\n\t\t\t\"zhs\": \"乘\"\n\t\t},\n\t\t\"習\": {\n\t\t\t\"jp\": \"習\",\n\t\t\t\"zht\": \"習\",\n\t\t\t\"zhs\": \"习\"\n\t\t},\n\t\t\"郷\": {\n\t\t\t\"jp\": \"郷\",\n\t\t\t\"zht\": \"鄉\",\n\t\t\t\"zhs\": \"乡\"\n\t\t},\n\t\t\"書\": {\n\t\t\t\"jp\": \"書\",\n\t\t\t\"zht\": \"書\",\n\t\t\t\"zhs\": \"书\"\n\t\t},\n\t\t\"買\": {\n\t\t\t\"jp\": \"買\",\n\t\t\t\"zht\": \"買\",\n\t\t\t\"zhs\": \"买\"\n\t\t},\n\t\t\"乱\": {\n\t\t\t\"jp\": \"乱\",\n\t\t\t\"zht\": \"亂\",\n\t\t\t\"zhs\": \"乱\"\n\t\t},\n\t\t\"乾\": {\n\t\t\t\"jp\": \"乾\",\n\t\t\t\"zht\": \"乾\",\n\t\t\t\"zhs\": \"干\"\n\t\t},\n\t\t\"亀\": {\n\t\t\t\"jp\": \"亀\",\n\t\t\t\"zht\": \"龜\",\n\t\t\t\"zhs\": \"龟\"\n\t\t},\n\t\t\"予\": {\n\t\t\t\"jp\": \"予\",\n\t\t\t\"zht\": \"預\",\n\t\t\t\"zhs\": \"预\"\n\t\t},\n\t\t\"弐\": {\n\t\t\t\"jp\": \"弐\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"雲\": {\n\t\t\t\"jp\": \"雲\",\n\t\t\t\"zht\": \"雲\",\n\t\t\t\"zhs\": \"云\"\n\t\t},\n\t\t\"亜\": {\n\t\t\t\"jp\": \"亜\",\n\t\t\t\"zht\": \"亞\",\n\t\t\t\"zhs\": \"亚\"\n\t\t},\n\t\t\"産\": {\n\t\t\t\"jp\": \"産\",\n\t\t\t\"zht\": \"產\",\n\t\t\t\"zhs\": \"产\"\n\t\t},\n\t\t\"畝\": {\n\t\t\t\"jp\": \"畝\",\n\t\t\t\"zht\": \"畝\",\n\t\t\t\"zhs\": \"亩\"\n\t\t},\n\t\t\"親\": {\n\t\t\t\"jp\": \"親\",\n\t\t\t\"zht\": \"親\",\n\t\t\t\"zhs\": \"亲\"\n\t\t},\n\t\t\"億\": {\n\t\t\t\"jp\": \"億\",\n\t\t\t\"zht\": \"億\",\n\t\t\t\"zhs\": \"亿\"\n\t\t},\n\t\t\"僕\": {\n\t\t\t\"jp\": \"僕\",\n\t\t\t\"zht\": \"僕\",\n\t\t\t\"zhs\": \"仆\"\n\t\t},\n\t\t\"従\": {\n\t\t\t\"jp\": \"従\",\n\t\t\t\"zht\": \"從\",\n\t\t\t\"zhs\": \"从\"\n\t\t},\n\t\t\"仏\": {\n\t\t\t\"jp\": \"仏\",\n\t\t\t\"zht\": \"佛\",\n\t\t\t\"zhs\": \"佛\"\n\t\t},\n\t\t\"倉\": {\n\t\t\t\"jp\": \"倉\",\n\t\t\t\"zht\": \"倉\",\n\t\t\t\"zhs\": \"仓\"\n\t\t},\n\t\t\"儀\": {\n\t\t\t\"jp\": \"儀\",\n\t\t\t\"zht\": \"儀\",\n\t\t\t\"zhs\": \"仪\"\n\t\t},\n\t\t\"仮\": {\n\t\t\t\"jp\": \"仮\",\n\t\t\t\"zht\": \"假\",\n\t\t\t\"zhs\": \"假\"\n\t\t},\n\t\t\"価\": {\n\t\t\t\"jp\": \"価\",\n\t\t\t\"zht\": \"價\",\n\t\t\t\"zhs\": \"价\"\n\t\t},\n\t\t\"衆\": {\n\t\t\t\"jp\": \"衆\",\n\t\t\t\"zht\": \"眾\",\n\t\t\t\"zhs\": \"众\"\n\t\t},\n\t\t\"優\": {\n\t\t\t\"jp\": \"優\",\n\t\t\t\"zht\": \"優\",\n\t\t\t\"zhs\": \"优\"\n\t\t},\n\t\t\"伝\": {\n\t\t\t\"jp\": \"伝\",\n\t\t\t\"zht\": \"傳\",\n\t\t\t\"zhs\": \"传\"\n\t\t},\n\t\t\"傘\": {\n\t\t\t\"jp\": \"傘\",\n\t\t\t\"zht\": \"傘\",\n\t\t\t\"zhs\": \"伞\"\n\t\t},\n\t\t\"偉\": {\n\t\t\t\"jp\": \"偉\",\n\t\t\t\"zht\": \"偉\",\n\t\t\t\"zhs\": \"伟\"\n\t\t},\n\t\t\"傷\": {\n\t\t\t\"jp\": \"傷\",\n\t\t\t\"zht\": \"傷\",\n\t\t\t\"zhs\": \"伤\"\n\t\t},\n\t\t\"倫\": {\n\t\t\t\"jp\": \"倫\",\n\t\t\t\"zht\": \"倫\",\n\t\t\t\"zhs\": \"伦\"\n\t\t},\n\t\t\"偽\": {\n\t\t\t\"jp\": \"偽\",\n\t\t\t\"zht\": \"偽\",\n\t\t\t\"zhs\": \"伪\"\n\t\t},\n\t\t\"体\": {\n\t\t\t\"jp\": \"体\",\n\t\t\t\"zht\": \"體\",\n\t\t\t\"zhs\": \"体\"\n\t\t},\n\t\t\"余\": {\n\t\t\t\"jp\": \"余\",\n\t\t\t\"zht\": \"餘\",\n\t\t\t\"zhs\": \"余\"\n\t\t},\n\t\t\"来\": {\n\t\t\t\"jp\": \"来\",\n\t\t\t\"zht\": \"來\",\n\t\t\t\"zhs\": \"来\"\n\t\t},\n\t\t\"偵\": {\n\t\t\t\"jp\": \"偵\",\n\t\t\t\"zht\": \"偵\",\n\t\t\t\"zhs\": \"侦\"\n\t\t},\n\t\t\"側\": {\n\t\t\t\"jp\": \"側\",\n\t\t\t\"zht\": \"側\",\n\t\t\t\"zhs\": \"侧\"\n\t\t},\n\t\t\"倹\": {\n\t\t\t\"jp\": \"倹\",\n\t\t\t\"zht\": \"儉\",\n\t\t\t\"zhs\": \"俭\"\n\t\t},\n\t\t\"倶\": {\n\t\t\t\"jp\": \"倶\",\n\t\t\t\"zht\": \"俱\",\n\t\t\t\"zhs\": \"俱\"\n\t\t},\n\t\t\"債\": {\n\t\t\t\"jp\": \"債\",\n\t\t\t\"zht\": \"債\",\n\t\t\t\"zhs\": \"债\"\n\t\t},\n\t\t\"傾\": {\n\t\t\t\"jp\": \"傾\",\n\t\t\t\"zht\": \"傾\",\n\t\t\t\"zhs\": \"倾\"\n\t\t},\n\t\t\"償\": {\n\t\t\t\"jp\": \"償\",\n\t\t\t\"zht\": \"償\",\n\t\t\t\"zhs\": \"偿\"\n\t\t},\n\t\t\"傑\": {\n\t\t\t\"jp\": \"傑\",\n\t\t\t\"zht\": \"傑\",\n\t\t\t\"zhs\": \"杰\"\n\t\t},\n\t\t\"備\": {\n\t\t\t\"jp\": \"備\",\n\t\t\t\"zht\": \"備\",\n\t\t\t\"zhs\": \"备\"\n\t\t},\n\t\t\"当\": {\n\t\t\t\"jp\": \"当\",\n\t\t\t\"zht\": \"當\",\n\t\t\t\"zhs\": \"当\"\n\t\t},\n\t\t\"尽\": {\n\t\t\t\"jp\": \"尽\",\n\t\t\t\"zht\": \"盡\",\n\t\t\t\"zhs\": \"尽\"\n\t\t},\n\t\t\"児\": {\n\t\t\t\"jp\": \"児\",\n\t\t\t\"zht\": \"兒\",\n\t\t\t\"zhs\": \"儿\"\n\t\t},\n\t\t\"党\": {\n\t\t\t\"jp\": \"党\",\n\t\t\t\"zht\": \"黨\",\n\t\t\t\"zhs\": \"党\"\n\t\t},\n\t\t\"内\": {\n\t\t\t\"jp\": \"内\",\n\t\t\t\"zht\": \"內\",\n\t\t\t\"zhs\": \"内\"\n\t\t},\n\t\t\"関\": {\n\t\t\t\"jp\": \"関\",\n\t\t\t\"zht\": \"關\",\n\t\t\t\"zhs\": \"关\"\n\t\t},\n\t\t\"興\": {\n\t\t\t\"jp\": \"興\",\n\t\t\t\"zht\": \"興\",\n\t\t\t\"zhs\": \"兴\"\n\t\t},\n\t\t\"養\": {\n\t\t\t\"jp\": \"養\",\n\t\t\t\"zht\": \"養\",\n\t\t\t\"zhs\": \"养\"\n\t\t},\n\t\t\"獣\": {\n\t\t\t\"jp\": \"獣\",\n\t\t\t\"zht\": \"獸\",\n\t\t\t\"zhs\": \"兽\"\n\t\t},\n\t\t\"円\": {\n\t\t\t\"jp\": \"円\",\n\t\t\t\"zht\": \"圓\",\n\t\t\t\"zhs\": \"圆\"\n\t\t},\n\t\t\"写\": {\n\t\t\t\"jp\": \"写\",\n\t\t\t\"zht\": \"寫\",\n\t\t\t\"zhs\": \"写\"\n\t\t},\n\t\t\"軍\": {\n\t\t\t\"jp\": \"軍\",\n\t\t\t\"zht\": \"軍\",\n\t\t\t\"zhs\": \"军\"\n\t\t},\n\t\t\"農\": {\n\t\t\t\"jp\": \"農\",\n\t\t\t\"zht\": \"農\",\n\t\t\t\"zhs\": \"农\"\n\t\t},\n\t\t\"冨\": {\n\t\t\t\"jp\": \"冨\",\n\t\t\t\"zht\": \"富\",\n\t\t\t\"zhs\": \"富\"\n\t\t},\n\t\t\"氷\": {\n\t\t\t\"jp\": \"氷\",\n\t\t\t\"zht\": \"冰\",\n\t\t\t\"zhs\": \"冰\"\n\t\t},\n\t\t\"衝\": {\n\t\t\t\"jp\": \"衝\",\n\t\t\t\"zht\": \"衝\",\n\t\t\t\"zhs\": \"冲\"\n\t\t},\n\t\t\"決\": {\n\t\t\t\"jp\": \"決\",\n\t\t\t\"zht\": \"決\",\n\t\t\t\"zhs\": \"决\"\n\t\t},\n\t\t\"凍\": {\n\t\t\t\"jp\": \"凍\",\n\t\t\t\"zht\": \"凍\",\n\t\t\t\"zhs\": \"冻\"\n\t\t},\n\t\t\"塗\": {\n\t\t\t\"jp\": \"塗\",\n\t\t\t\"zht\": \"塗\",\n\t\t\t\"zhs\": \"涂\"\n\t\t},\n\t\t\"凄\": {\n\t\t\t\"jp\": \"凄\",\n\t\t\t\"zht\": \"淒\",\n\t\t\t\"zhs\": \"凄\"\n\t\t},\n\t\t\"准\": {\n\t\t\t\"jp\": \"准\",\n\t\t\t\"zht\": \"準\",\n\t\t\t\"zhs\": \"准\"\n\t\t},\n\t\t\"準\": {\n\t\t\t\"jp\": \"準\",\n\t\t\t\"zht\": \"準\",\n\t\t\t\"zhs\": \"准\"\n\t\t},\n\t\t\"幾\": {\n\t\t\t\"jp\": \"幾\",\n\t\t\t\"zht\": \"幾\",\n\t\t\t\"zhs\": \"几\"\n\t\t},\n\t\t\"撃\": {\n\t\t\t\"jp\": \"撃\",\n\t\t\t\"zht\": \"擊\",\n\t\t\t\"zhs\": \"击\"\n\t\t},\n\t\t\"画\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"劃\",\n\t\t\t\"zhs\": \"划\"\n\t\t},\n\t\t\"則\": {\n\t\t\t\"jp\": \"則\",\n\t\t\t\"zht\": \"則\",\n\t\t\t\"zhs\": \"则\"\n\t\t},\n\t\t\"剛\": {\n\t\t\t\"jp\": \"剛\",\n\t\t\t\"zht\": \"剛\",\n\t\t\t\"zhs\": \"刚\"\n\t\t},\n\t\t\"創\": {\n\t\t\t\"jp\": \"創\",\n\t\t\t\"zht\": \"創\",\n\t\t\t\"zhs\": \"创\"\n\t\t},\n\t\t\"別\": {\n\t\t\t\"jp\": \"別\",\n\t\t\t\"zht\": \"別\",\n\t\t\t\"zhs\": \"别\"\n\t\t},\n\t\t\"製\": {\n\t\t\t\"jp\": \"製\",\n\t\t\t\"zht\": \"製\",\n\t\t\t\"zhs\": \"制\"\n\t\t},\n\t\t\"券\": {\n\t\t\t\"jp\": \"券\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"巻\": {\n\t\t\t\"jp\": \"巻\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"刹\": {\n\t\t\t\"jp\": \"刹\",\n\t\t\t\"zht\": \"剎\",\n\t\t\t\"zhs\": \"刹\"\n\t\t},\n\t\t\"剤\": {\n\t\t\t\"jp\": \"剤\",\n\t\t\t\"zht\": \"劑\",\n\t\t\t\"zhs\": \"剂\"\n\t\t},\n\t\t\"剣\": {\n\t\t\t\"jp\": \"剣\",\n\t\t\t\"zht\": \"劍\",\n\t\t\t\"zhs\": \"剑\"\n\t\t},\n\t\t\"劇\": {\n\t\t\t\"jp\": \"劇\",\n\t\t\t\"zht\": \"劇\",\n\t\t\t\"zhs\": \"剧\"\n\t\t},\n\t\t\"剰\": {\n\t\t\t\"jp\": \"剰\",\n\t\t\t\"zht\": \"剩\",\n\t\t\t\"zhs\": \"剩\"\n\t\t},\n\t\t\"勧\": {\n\t\t\t\"jp\": \"勧\",\n\t\t\t\"zht\": \"勸\",\n\t\t\t\"zhs\": \"劝\"\n\t\t},\n\t\t\"務\": {\n\t\t\t\"jp\": \"務\",\n\t\t\t\"zht\": \"務\",\n\t\t\t\"zhs\": \"务\"\n\t\t},\n\t\t\"動\": {\n\t\t\t\"jp\": \"動\",\n\t\t\t\"zht\": \"動\",\n\t\t\t\"zhs\": \"动\"\n\t\t},\n\t\t\"励\": {\n\t\t\t\"jp\": \"励\",\n\t\t\t\"zht\": \"勵\",\n\t\t\t\"zhs\": \"励\"\n\t\t},\n\t\t\"労\": {\n\t\t\t\"jp\": \"労\",\n\t\t\t\"zht\": \"勞\",\n\t\t\t\"zhs\": \"劳\"\n\t\t},\n\t\t\"効\": {\n\t\t\t\"jp\": \"効\",\n\t\t\t\"zht\": \"效\",\n\t\t\t\"zhs\": null\n\t\t},\n\t\t\"勢\": {\n\t\t\t\"jp\": \"勢\",\n\t\t\t\"zht\": \"勢\",\n\t\t\t\"zhs\": \"势\"\n\t\t},\n\t\t\"勲\": {\n\t\t\t\"jp\": \"勲\",\n\t\t\t\"zht\": \"勳\",\n\t\t\t\"zhs\": \"勋\"\n\t\t},\n\t\t\"勝\": {\n\t\t\t\"jp\": \"勝\",\n\t\t\t\"zht\": \"勝\",\n\t\t\t\"zhs\": \"胜\"\n\t\t},\n\t\t\"区\": {\n\t\t\t\"jp\": \"区\",\n\t\t\t\"zht\": \"區\",\n\t\t\t\"zhs\": \"区\"\n\t\t},\n\t\t\"医\": {\n\t\t\t\"jp\": \"医\",\n\t\t\t\"zht\": \"醫\",\n\t\t\t\"zhs\": \"医\"\n\t\t},\n\t\t\"華\": {\n\t\t\t\"jp\": \"華\",\n\t\t\t\"zht\": \"華\",\n\t\t\t\"zhs\": \"华\"\n\t\t},\n\t\t\"協\": {\n\t\t\t\"jp\": \"協\",\n\t\t\t\"zht\": \"協\",\n\t\t\t\"zhs\": \"协\"\n\t\t},\n\t\t\"単\": {\n\t\t\t\"jp\": \"単\",\n\t\t\t\"zht\": \"單\",\n\t\t\t\"zhs\": \"单\"\n\t\t},\n\t\t\"売\": {\n\t\t\t\"jp\": \"売\",\n\t\t\t\"zht\": \"賣\",\n\t\t\t\"zhs\": \"卖\"\n\t\t},\n\t\t\"衛\": {\n\t\t\t\"jp\": \"衛\",\n\t\t\t\"zht\": \"衛\",\n\t\t\t\"zhs\": \"卫\"\n\t\t},\n\t\t\"庁\": {\n\t\t\t\"jp\": \"庁\",\n\t\t\t\"zht\": \"廳\",\n\t\t\t\"zhs\": \"厅\"\n\t\t},\n\t\t\"歴\": {\n\t\t\t\"jp\": \"歴\",\n\t\t\t\"zht\": \"歷\",\n\t\t\t\"zhs\": \"历\"\n\t\t},\n\t\t\"暦\": {\n\t\t\t\"jp\": \"暦\",\n\t\t\t\"zht\": \"曆\",\n\t\t\t\"zhs\": \"历\"\n\t\t},\n\t\t\"圧\": {\n\t\t\t\"jp\": \"圧\",\n\t\t\t\"zht\": \"壓\",\n\t\t\t\"zhs\": \"压\"\n\t\t},\n\t\t\"県\": {\n\t\t\t\"jp\": \"県\",\n\t\t\t\"zht\": \"縣\",\n\t\t\t\"zhs\": \"县\"\n\t\t},\n\t\t\"参\": {\n\t\t\t\"jp\": \"参\",\n\t\t\t\"zht\": \"參\",\n\t\t\t\"zhs\": \"参\"\n\t\t},\n\t\t\"双\": {\n\t\t\t\"jp\": \"双\",\n\t\t\t\"zht\": \"雙\",\n\t\t\t\"zhs\": \"双\"\n\t\t},\n\t\t\"収\": {\n\t\t\t\"jp\": \"収\",\n\t\t\t\"zht\": \"收\",\n\t\t\t\"zhs\": \"收\"\n\t\t},\n\t\t\"発\": {\n\t\t\t\"jp\": \"発\",\n\t\t\t\"zht\": \"發\",\n\t\t\t\"zhs\": \"发\"\n\t\t},\n\t\t\"変\": {\n\t\t\t\"jp\": \"変\",\n\t\t\t\"zht\": \"變\",\n\t\t\t\"zhs\": \"变\"\n\t\t},\n\t\t\"畳\": {\n\t\t\t\"jp\": \"畳\",\n\t\t\t\"zht\": \"疊\",\n\t\t\t\"zhs\": \"叠\"\n\t\t},\n\t\t\"号\": {\n\t\t\t\"jp\": \"号\",\n\t\t\t\"zht\": \"號\",\n\t\t\t\"zhs\": \"号\"\n\t\t},\n\t\t\"嘆\": {\n\t\t\t\"jp\": \"嘆\",\n\t\t\t\"zht\": \"嘆\",\n\t\t\t\"zhs\": \"叹\"\n\t\t},\n\t\t\"嚇\": {\n\t\t\t\"jp\": \"嚇\",\n\t\t\t\"zht\": \"嚇\",\n\t\t\t\"zhs\": \"吓\"\n\t\t},\n\t\t\"聴\": {\n\t\t\t\"jp\": \"聴\",\n\t\t\t\"zht\": \"聽\",\n\t\t\t\"zhs\": \"听\"\n\t\t},\n\t\t\"啓\": {\n\t\t\t\"jp\": \"啓\",\n\t\t\t\"zht\": \"啟\",\n\t\t\t\"zhs\": \"启\"\n\t\t},\n\t\t\"員\": {\n\t\t\t\"jp\": \"員\",\n\t\t\t\"zht\": \"員\",\n\t\t\t\"zhs\": \"员\"\n\t\t},\n\t\t\"諮\": {\n\t\t\t\"jp\": \"諮\",\n\t\t\t\"zht\": \"諮\",\n\t\t\t\"zhs\": \"谘\"\n\t\t},\n\t\t\"鹹\": {\n\t\t\t\"jp\": \"鹹\",\n\t\t\t\"zht\": \"鹹\",\n\t\t\t\"zhs\": \"咸\"\n\t\t},\n\t\t\"響\": {\n\t\t\t\"jp\": \"響\",\n\t\t\t\"zht\": \"響\",\n\t\t\t\"zhs\": \"响\"\n\t\t},\n\t\t\"問\": {\n\t\t\t\"jp\": \"問\",\n\t\t\t\"zht\": \"問\",\n\t\t\t\"zhs\": \"问\"\n\t\t},\n\t\t\"営\": {\n\t\t\t\"jp\": \"営\",\n\t\t\t\"zht\": \"營\",\n\t\t\t\"zhs\": \"营\"\n\t\t},\n\t\t\"噴\": {\n\t\t\t\"jp\": \"噴\",\n\t\t\t\"zht\": \"噴\",\n\t\t\t\"zhs\": \"喷\"\n\t\t},\n\t\t\"嘱\": {\n\t\t\t\"jp\": \"嘱\",\n\t\t\t\"zht\": \"囑\",\n\t\t\t\"zhs\": \"嘱\"\n\t\t},\n\t\t\"蘇\": {\n\t\t\t\"jp\": \"蘇\",\n\t\t\t\"zht\": \"蘇\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"団\": {\n\t\t\t\"jp\": \"団\",\n\t\t\t\"zht\": \"團\",\n\t\t\t\"zhs\": \"团\"\n\t\t},\n\t\t\"園\": {\n\t\t\t\"jp\": \"園\",\n\t\t\t\"zht\": \"園\",\n\t\t\t\"zhs\": \"园\"\n\t\t},\n\t\t\"国\": {\n\t\t\t\"jp\": \"国\",\n\t\t\t\"zht\": \"國\",\n\t\t\t\"zhs\": \"国\"\n\t\t},\n\t\t\"囲\": {\n\t\t\t\"jp\": \"囲\",\n\t\t\t\"zht\": \"圍\",\n\t\t\t\"zhs\": \"围\"\n\t\t},\n\t\t\"図\": {\n\t\t\t\"jp\": \"図\",\n\t\t\t\"zht\": \"圖\",\n\t\t\t\"zhs\": \"图\"\n\t\t},\n\t\t\"圏\": {\n\t\t\t\"jp\": \"圏\",\n\t\t\t\"zht\": \"圈\",\n\t\t\t\"zhs\": \"圈\"\n\t\t},\n\t\t\"聖\": {\n\t\t\t\"jp\": \"聖\",\n\t\t\t\"zht\": \"聖\",\n\t\t\t\"zhs\": \"圣\"\n\t\t},\n\t\t\"場\": {\n\t\t\t\"jp\": \"場\",\n\t\t\t\"zht\": \"場\",\n\t\t\t\"zhs\": \"场\"\n\t\t},\n\t\t\"壊\": {\n\t\t\t\"jp\": \"壊\",\n\t\t\t\"zht\": \"壞\",\n\t\t\t\"zhs\": \"坏\"\n\t\t},\n\t\t\"塊\": {\n\t\t\t\"jp\": \"塊\",\n\t\t\t\"zht\": \"塊\",\n\t\t\t\"zhs\": \"块\"\n\t\t},\n\t\t\"堅\": {\n\t\t\t\"jp\": \"堅\",\n\t\t\t\"zht\": \"堅\",\n\t\t\t\"zhs\": \"坚\"\n\t\t},\n\t\t\"壇\": {\n\t\t\t\"jp\": \"壇\",\n\t\t\t\"zht\": \"壇\",\n\t\t\t\"zhs\": \"坛\"\n\t\t},\n\t\t\"墳\": {\n\t\t\t\"jp\": \"墳\",\n\t\t\t\"zht\": \"墳\",\n\t\t\t\"zhs\": \"坟\"\n\t\t},\n\t\t\"墜\": {\n\t\t\t\"jp\": \"墜\",\n\t\t\t\"zht\": \"墜\",\n\t\t\t\"zhs\": \"坠\"\n\t\t},\n\t\t\"塁\": {\n\t\t\t\"jp\": \"塁\",\n\t\t\t\"zht\": \"壘\",\n\t\t\t\"zhs\": \"垒\"\n\t\t},\n\t\t\"墾\": {\n\t\t\t\"jp\": \"墾\",\n\t\t\t\"zht\": \"墾\",\n\t\t\t\"zhs\": \"垦\"\n\t\t},\n\t\t\"執\": {\n\t\t\t\"jp\": \"執\",\n\t\t\t\"zht\": \"執\",\n\t\t\t\"zhs\": \"执\"\n\t\t},\n\t\t\"堕\": {\n\t\t\t\"jp\": \"堕\",\n\t\t\t\"zht\": \"墮\",\n\t\t\t\"zhs\": \"堕\"\n\t\t},\n\t\t\"報\": {\n\t\t\t\"jp\": \"報\",\n\t\t\t\"zht\": \"報\",\n\t\t\t\"zhs\": \"报\"\n\t\t},\n\t\t\"塩\": {\n\t\t\t\"jp\": \"塩\",\n\t\t\t\"zht\": \"鹽\",\n\t\t\t\"zhs\": \"盐\"\n\t\t},\n\t\t\"増\": {\n\t\t\t\"jp\": \"増\",\n\t\t\t\"zht\": \"增\",\n\t\t\t\"zhs\": \"增\"\n\t\t},\n\t\t\"壌\": {\n\t\t\t\"jp\": \"壌\",\n\t\t\t\"zht\": \"壤\",\n\t\t\t\"zhs\": \"壤\"\n\t\t},\n\t\t\"壮\": {\n\t\t\t\"jp\": \"壮\",\n\t\t\t\"zht\": \"壯\",\n\t\t\t\"zhs\": \"壮\"\n\t\t},\n\t\t\"声\": {\n\t\t\t\"jp\": \"声\",\n\t\t\t\"zht\": \"聲\",\n\t\t\t\"zhs\": \"声\"\n\t\t},\n\t\t\"壱\": {\n\t\t\t\"jp\": \"壱\",\n\t\t\t\"zht\": \"壹\",\n\t\t\t\"zhs\": \"壹\"\n\t\t},\n\t\t\"殻\": {\n\t\t\t\"jp\": \"殻\",\n\t\t\t\"zht\": \"殻\",\n\t\t\t\"zhs\": \"壳\"\n\t\t},\n\t\t\"殼\": {\n\t\t\t\"jp\": \"殼\",\n\t\t\t\"zht\": \"殼\",\n\t\t\t\"zhs\": \"壳\"\n\t\t},\n\t\t\"寿\": {\n\t\t\t\"jp\": \"寿\",\n\t\t\t\"zht\": \"壽\",\n\t\t\t\"zhs\": \"寿\"\n\t\t},\n\t\t\"復\": {\n\t\t\t\"jp\": \"復\",\n\t\t\t\"zht\": \"復\",\n\t\t\t\"zhs\": \"复\"\n\t\t},\n\t\t\"複\": {\n\t\t\t\"jp\": \"複\",\n\t\t\t\"zht\": \"複\",\n\t\t\t\"zhs\": \"复\"\n\t\t},\n\t\t\"夢\": {\n\t\t\t\"jp\": \"夢\",\n\t\t\t\"zht\": \"夢\",\n\t\t\t\"zhs\": \"梦\"\n\t\t},\n\t\t\"頭\": {\n\t\t\t\"jp\": \"頭\",\n\t\t\t\"zht\": \"頭\",\n\t\t\t\"zhs\": \"头\"\n\t\t},\n\t\t\"誇\": {\n\t\t\t\"jp\": \"誇\",\n\t\t\t\"zht\": \"誇\",\n\t\t\t\"zhs\": \"夸\"\n\t\t},\n\t\t\"奪\": {\n\t\t\t\"jp\": \"奪\",\n\t\t\t\"zht\": \"奪\",\n\t\t\t\"zhs\": \"夺\"\n\t\t},\n\t\t\"奮\": {\n\t\t\t\"jp\": \"奮\",\n\t\t\t\"zht\": \"奮\",\n\t\t\t\"zhs\": \"奋\"\n\t\t},\n\t\t\"奨\": {\n\t\t\t\"jp\": \"奨\",\n\t\t\t\"zht\": \"獎\",\n\t\t\t\"zhs\": \"奖\"\n\t\t},\n\t\t\"粧\": {\n\t\t\t\"jp\": \"粧\",\n\t\t\t\"zht\": \"妝\",\n\t\t\t\"zhs\": \"妆\"\n\t\t},\n\t\t\"婦\": {\n\t\t\t\"jp\": \"婦\",\n\t\t\t\"zht\": \"婦\",\n\t\t\t\"zhs\": \"妇\"\n\t\t},\n\t\t\"姉\": {\n\t\t\t\"jp\": \"姉\",\n\t\t\t\"zht\": \"姐\",\n\t\t\t\"zhs\": \"姐\"\n\t\t},\n\t\t\"姫\": {\n\t\t\t\"jp\": \"姫\",\n\t\t\t\"zht\": \"姬\",\n\t\t\t\"zhs\": \"姬\"\n\t\t},\n\t\t\"嬢\": {\n\t\t\t\"jp\": \"嬢\",\n\t\t\t\"zht\": \"孃\",\n\t\t\t\"zhs\": \"娘\"\n\t\t},\n\t\t\"娯\": {\n\t\t\t\"jp\": \"娯\",\n\t\t\t\"zht\": \"娛\",\n\t\t\t\"zhs\": \"娱\"\n\t\t},\n\t\t\"孫\": {\n\t\t\t\"jp\": \"孫\",\n\t\t\t\"zht\": \"孫\",\n\t\t\t\"zhs\": \"孙\"\n\t\t},\n\t\t\"学\": {\n\t\t\t\"jp\": \"学\",\n\t\t\t\"zht\": \"學\",\n\t\t\t\"zhs\": \"学\"\n\t\t},\n\t\t\"寧\": {\n\t\t\t\"jp\": \"寧\",\n\t\t\t\"zht\": \"寧\",\n\t\t\t\"zhs\": \"宁\"\n\t\t},\n\t\t\"宝\": {\n\t\t\t\"jp\": \"宝\",\n\t\t\t\"zht\": \"寶\",\n\t\t\t\"zhs\": \"宝\"\n\t\t},\n\t\t\"実\": {\n\t\t\t\"jp\": \"実\",\n\t\t\t\"zht\": \"實\",\n\t\t\t\"zhs\": \"实\"\n\t\t},\n\t\t\"審\": {\n\t\t\t\"jp\": \"審\",\n\t\t\t\"zht\": \"審\",\n\t\t\t\"zhs\": \"审\"\n\t\t},\n\t\t\"憲\": {\n\t\t\t\"jp\": \"憲\",\n\t\t\t\"zht\": \"憲\",\n\t\t\t\"zhs\": \"宪\"\n\t\t},\n\t\t\"宮\": {\n\t\t\t\"jp\": \"宮\",\n\t\t\t\"zht\": \"宮\",\n\t\t\t\"zhs\": \"宫\"\n\t\t},\n\t\t\"寬\": {\n\t\t\t\"jp\": \"寬\",\n\t\t\t\"zht\": \"寬\",\n\t\t\t\"zhs\": \"宽\"\n\t\t},\n\t\t\"賓\": {\n\t\t\t\"jp\": \"賓\",\n\t\t\t\"zht\": \"賓\",\n\t\t\t\"zhs\": \"宾\"\n\t\t},\n\t\t\"秘\": {\n\t\t\t\"jp\": \"秘\",\n\t\t\t\"zht\": \"祕\",\n\t\t\t\"zhs\": \"秘\"\n\t\t},\n\t\t\"寛\": {\n\t\t\t\"jp\": \"寛\",\n\t\t\t\"zht\": \"寬\",\n\t\t\t\"zhs\": \"宽\"\n\t\t},\n\t\t\"寝\": {\n\t\t\t\"jp\": \"寝\",\n\t\t\t\"zht\": \"寢\",\n\t\t\t\"zhs\": \"寝\"\n\t\t},\n\t\t\"対\": {\n\t\t\t\"jp\": \"対\",\n\t\t\t\"zht\": \"對\",\n\t\t\t\"zhs\": \"对\"\n\t\t},\n\t\t\"尋\": {\n\t\t\t\"jp\": \"尋\",\n\t\t\t\"zht\": \"尋\",\n\t\t\t\"zhs\": \"寻\"\n\t\t},\n\t\t\"導\": {\n\t\t\t\"jp\": \"導\",\n\t\t\t\"zht\": \"導\",\n\t\t\t\"zhs\": \"导\"\n\t\t},\n\t\t\"将\": {\n\t\t\t\"jp\": \"将\",\n\t\t\t\"zht\": \"將\",\n\t\t\t\"zhs\": \"将\"\n\t\t},\n\t\t\"層\": {\n\t\t\t\"jp\": \"層\",\n\t\t\t\"zht\": \"層\",\n\t\t\t\"zhs\": \"层\"\n\t\t},\n\t\t\"属\": {\n\t\t\t\"jp\": \"属\",\n\t\t\t\"zht\": \"屬\",\n\t\t\t\"zhs\": \"属\"\n\t\t},\n\t\t\"歳\": {\n\t\t\t\"jp\": \"歳\",\n\t\t\t\"zht\": \"歲\",\n\t\t\t\"zhs\": \"岁\"\n\t\t},\n\t\t\"島\": {\n\t\t\t\"jp\": \"島\",\n\t\t\t\"zht\": \"島\",\n\t\t\t\"zhs\": \"岛\"\n\t\t},\n\t\t\"巌\": {\n\t\t\t\"jp\": \"巌\",\n\t\t\t\"zht\": \"巖\",\n\t\t\t\"zhs\": \"巖\"\n\t\t},\n\t\t\"峡\": {\n\t\t\t\"jp\": \"峡\",\n\t\t\t\"zht\": \"峽\",\n\t\t\t\"zhs\": \"峡\"\n\t\t},\n\t\t\"険\": {\n\t\t\t\"jp\": \"険\",\n\t\t\t\"zht\": \"險\",\n\t\t\t\"zhs\": \"险\"\n\t\t},\n\t\t\"幣\": {\n\t\t\t\"jp\": \"幣\",\n\t\t\t\"zht\": \"幣\",\n\t\t\t\"zhs\": \"币\"\n\t\t},\n\t\t\"帥\": {\n\t\t\t\"jp\": \"帥\",\n\t\t\t\"zht\": \"帥\",\n\t\t\t\"zhs\": \"帅\"\n\t\t},\n\t\t\"師\": {\n\t\t\t\"jp\": \"師\",\n\t\t\t\"zht\": \"師\",\n\t\t\t\"zhs\": \"师\"\n\t\t},\n\t\t\"帳\": {\n\t\t\t\"jp\": \"帳\",\n\t\t\t\"zht\": \"帳\",\n\t\t\t\"zhs\": \"帐\"\n\t\t},\n\t\t\"帶\": {\n\t\t\t\"jp\": \"帶\",\n\t\t\t\"zht\": \"帶\",\n\t\t\t\"zhs\": \"带\"\n\t\t},\n\t\t\"帯\": {\n\t\t\t\"jp\": \"帯\",\n\t\t\t\"zht\": \"帶\",\n\t\t\t\"zhs\": \"带\"\n\t\t},\n\t\t\"帰\": {\n\t\t\t\"jp\": \"帰\",\n\t\t\t\"zht\": \"歸\",\n\t\t\t\"zhs\": \"归\"\n\t\t},\n\t\t\"幹\": {\n\t\t\t\"jp\": \"幹\",\n\t\t\t\"zht\": \"幹\",\n\t\t\t\"zhs\": \"干\"\n\t\t},\n\t\t\"広\": {\n\t\t\t\"jp\": \"広\",\n\t\t\t\"zht\": \"廣\",\n\t\t\t\"zhs\": \"广\"\n\t\t},\n\t\t\"庄\": {\n\t\t\t\"jp\": \"庄\",\n\t\t\t\"zht\": \"莊\",\n\t\t\t\"zhs\": \"庄\"\n\t\t},\n\t\t\"慶\": {\n\t\t\t\"jp\": \"慶\",\n\t\t\t\"zht\": \"慶\",\n\t\t\t\"zhs\": \"庆\"\n\t\t},\n\t\t\"庫\": {\n\t\t\t\"jp\": \"庫\",\n\t\t\t\"zht\": \"庫\",\n\t\t\t\"zhs\": \"库\"\n\t\t},\n\t\t\"応\": {\n\t\t\t\"jp\": \"応\",\n\t\t\t\"zht\": \"應\",\n\t\t\t\"zhs\": \"应\"\n\t\t},\n\t\t\"廃\": {\n\t\t\t\"jp\": \"廃\",\n\t\t\t\"zht\": \"廢\",\n\t\t\t\"zhs\": \"废\"\n\t\t},\n\t\t\"開\": {\n\t\t\t\"jp\": \"開\",\n\t\t\t\"zht\": \"開\",\n\t\t\t\"zhs\": \"开\"\n\t\t},\n\t\t\"弁\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"異\": {\n\t\t\t\"jp\": \"異\",\n\t\t\t\"zht\": \"異\",\n\t\t\t\"zhs\": \"异\"\n\t\t},\n\t\t\"棄\": {\n\t\t\t\"jp\": \"棄\",\n\t\t\t\"zht\": \"棄\",\n\t\t\t\"zhs\": \"弃\"\n\t\t},\n\t\t\"弍\": {\n\t\t\t\"jp\": \"弍\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"張\": {\n\t\t\t\"jp\": \"張\",\n\t\t\t\"zht\": \"張\",\n\t\t\t\"zhs\": \"张\"\n\t\t},\n\t\t\"弥\": {\n\t\t\t\"jp\": \"弥\",\n\t\t\t\"zht\": \"彌\",\n\t\t\t\"zhs\": \"弥\"\n\t\t},\n\t\t\"強\": {\n\t\t\t\"jp\": \"強\",\n\t\t\t\"zht\": \"強\",\n\t\t\t\"zhs\": \"强\"\n\t\t},\n\t\t\"弾\": {\n\t\t\t\"jp\": \"弾\",\n\t\t\t\"zht\": \"彈\",\n\t\t\t\"zhs\": \"弹\"\n\t\t},\n\t\t\"録\": {\n\t\t\t\"jp\": \"録\",\n\t\t\t\"zht\": \"錄\",\n\t\t\t\"zhs\": \"录\"\n\t\t},\n\t\t\"彦\": {\n\t\t\t\"jp\": \"彦\",\n\t\t\t\"zht\": \"彥\",\n\t\t\t\"zhs\": \"彥\"\n\t\t},\n\t\t\"徹\": {\n\t\t\t\"jp\": \"徹\",\n\t\t\t\"zht\": \"徹\",\n\t\t\t\"zhs\": \"彻\"\n\t\t},\n\t\t\"徴\": {\n\t\t\t\"jp\": \"徴\",\n\t\t\t\"zht\": \"徵\",\n\t\t\t\"zhs\": \"征\"\n\t\t},\n\t\t\"径\": {\n\t\t\t\"jp\": \"径\",\n\t\t\t\"zht\": \"徑\",\n\t\t\t\"zhs\": \"径\"\n\t\t},\n\t\t\"徳\": {\n\t\t\t\"jp\": \"徳\",\n\t\t\t\"zht\": \"德\",\n\t\t\t\"zhs\": \"德\"\n\t\t},\n\t\t\"憶\": {\n\t\t\t\"jp\": \"憶\",\n\t\t\t\"zht\": \"憶\",\n\t\t\t\"zhs\": \"忆\"\n\t\t},\n\t\t\"誌\": {\n\t\t\t\"jp\": \"誌\",\n\t\t\t\"zht\": \"誌\",\n\t\t\t\"zhs\": \"志\"\n\t\t},\n\t\t\"憂\": {\n\t\t\t\"jp\": \"憂\",\n\t\t\t\"zht\": \"憂\",\n\t\t\t\"zhs\": \"忧\"\n\t\t},\n\t\t\"懐\": {\n\t\t\t\"jp\": \"懐\",\n\t\t\t\"zht\": \"懷\",\n\t\t\t\"zhs\": \"怀\"\n\t\t},\n\t\t\"態\": {\n\t\t\t\"jp\": \"態\",\n\t\t\t\"zht\": \"態\",\n\t\t\t\"zhs\": \"态\"\n\t\t},\n\t\t\"総\": {\n\t\t\t\"jp\": \"総\",\n\t\t\t\"zht\": \"總\",\n\t\t\t\"zhs\": \"总\"\n\t\t},\n\t\t\"恒\": {\n\t\t\t\"jp\": \"恒\",\n\t\t\t\"zht\": \"恆\",\n\t\t\t\"zhs\": \"恒\"\n\t\t},\n\t\t\"恋\": {\n\t\t\t\"jp\": \"恋\",\n\t\t\t\"zht\": \"戀\",\n\t\t\t\"zhs\": \"恋\"\n\t\t},\n\t\t\"懇\": {\n\t\t\t\"jp\": \"懇\",\n\t\t\t\"zht\": \"懇\",\n\t\t\t\"zhs\": \"恳\"\n\t\t},\n\t\t\"恵\": {\n\t\t\t\"jp\": \"恵\",\n\t\t\t\"zht\": \"惠\",\n\t\t\t\"zhs\": \"惠\"\n\t\t},\n\t\t\"悪\": {\n\t\t\t\"jp\": \"悪\",\n\t\t\t\"zht\": \"惡\",\n\t\t\t\"zhs\": \"恶\"\n\t\t},\n\t\t\"悩\": {\n\t\t\t\"jp\": \"悩\",\n\t\t\t\"zht\": \"惱\",\n\t\t\t\"zhs\": \"恼\"\n\t\t},\n\t\t\"悦\": {\n\t\t\t\"jp\": \"悦\",\n\t\t\t\"zht\": \"悅\",\n\t\t\t\"zhs\": \"悅\"\n\t\t},\n\t\t\"懸\": {\n\t\t\t\"jp\": \"懸\",\n\t\t\t\"zht\": \"懸\",\n\t\t\t\"zhs\": \"悬\"\n\t\t},\n\t\t\"驚\": {\n\t\t\t\"jp\": \"驚\",\n\t\t\t\"zht\": \"驚\",\n\t\t\t\"zhs\": \"惊\"\n\t\t},\n\t\t\"惨\": {\n\t\t\t\"jp\": \"惨\",\n\t\t\t\"zht\": \"慘\",\n\t\t\t\"zhs\": \"惨\"\n\t\t},\n\t\t\"懲\": {\n\t\t\t\"jp\": \"懲\",\n\t\t\t\"zht\": \"懲\",\n\t\t\t\"zhs\": \"惩\"\n\t\t},\n\t\t\"愛\": {\n\t\t\t\"jp\": \"愛\",\n\t\t\t\"zht\": \"愛\",\n\t\t\t\"zhs\": \"爱\"\n\t\t},\n\t\t\"憤\": {\n\t\t\t\"jp\": \"憤\",\n\t\t\t\"zht\": \"憤\",\n\t\t\t\"zhs\": \"愤\"\n\t\t},\n\t\t\"願\": {\n\t\t\t\"jp\": \"願\",\n\t\t\t\"zht\": \"願\",\n\t\t\t\"zhs\": \"愿\"\n\t\t},\n\t\t\"慮\": {\n\t\t\t\"jp\": \"慮\",\n\t\t\t\"zht\": \"慮\",\n\t\t\t\"zhs\": \"虑\"\n\t\t},\n\t\t\"戯\": {\n\t\t\t\"jp\": \"戯\",\n\t\t\t\"zht\": \"戲\",\n\t\t\t\"zhs\": \"戏\"\n\t\t},\n\t\t\"戦\": {\n\t\t\t\"jp\": \"戦\",\n\t\t\t\"zht\": \"戰\",\n\t\t\t\"zhs\": \"战\"\n\t\t},\n\t\t\"戸\": {\n\t\t\t\"jp\": \"戸\",\n\t\t\t\"zht\": \"戶\",\n\t\t\t\"zhs\": \"户\"\n\t\t},\n\t\t\"払\": {\n\t\t\t\"jp\": \"払\",\n\t\t\t\"zht\": \"拂\",\n\t\t\t\"zhs\": \"拂\"\n\t\t},\n\t\t\"拡\": {\n\t\t\t\"jp\": \"拡\",\n\t\t\t\"zht\": \"擴\",\n\t\t\t\"zhs\": \"扩\"\n\t\t},\n\t\t\"掃\": {\n\t\t\t\"jp\": \"掃\",\n\t\t\t\"zht\": \"掃\",\n\t\t\t\"zhs\": \"扫\"\n\t\t},\n\t\t\"揚\": {\n\t\t\t\"jp\": \"揚\",\n\t\t\t\"zht\": \"揚\",\n\t\t\t\"zhs\": \"扬\"\n\t\t},\n\t\t\"抜\": {\n\t\t\t\"jp\": \"抜\",\n\t\t\t\"zht\": \"拔\",\n\t\t\t\"zhs\": null\n\t\t},\n\t\t\"択\": {\n\t\t\t\"jp\": \"択\",\n\t\t\t\"zht\": \"擇\",\n\t\t\t\"zhs\": \"择\"\n\t\t},\n\t\t\"護\": {\n\t\t\t\"jp\": \"護\",\n\t\t\t\"zht\": \"護\",\n\t\t\t\"zhs\": \"护\"\n\t\t},\n\t\t\"担\": {\n\t\t\t\"jp\": \"担\",\n\t\t\t\"zht\": \"擔\",\n\t\t\t\"zhs\": \"担\"\n\t\t},\n\t\t\"拝\": {\n\t\t\t\"jp\": \"拝\",\n\t\t\t\"zht\": \"拜\",\n\t\t\t\"zhs\": \"拜\"\n\t\t},\n\t\t\"擬\": {\n\t\t\t\"jp\": \"擬\",\n\t\t\t\"zht\": \"擬\",\n\t\t\t\"zhs\": \"拟\"\n\t\t},\n\t\t\"拠\": {\n\t\t\t\"jp\": \"拠\",\n\t\t\t\"zht\": \"據\",\n\t\t\t\"zhs\": \"据\"\n\t\t},\n\t\t\"擁\": {\n\t\t\t\"jp\": \"擁\",\n\t\t\t\"zht\": \"擁\",\n\t\t\t\"zhs\": \"拥\"\n\t\t},\n\t\t\"挟\": {\n\t\t\t\"jp\": \"挟\",\n\t\t\t\"zht\": \"挾\",\n\t\t\t\"zhs\": \"挟\"\n\t\t},\n\t\t\"揮\": {\n\t\t\t\"jp\": \"揮\",\n\t\t\t\"zht\": \"揮\",\n\t\t\t\"zhs\": \"挥\"\n\t\t},\n\t\t\"揷\": {\n\t\t\t\"jp\": \"揷\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"挿\": {\n\t\t\t\"jp\": \"挿\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"損\": {\n\t\t\t\"jp\": \"損\",\n\t\t\t\"zht\": \"損\",\n\t\t\t\"zhs\": \"损\"\n\t\t},\n\t\t\"捨\": {\n\t\t\t\"jp\": \"捨\",\n\t\t\t\"zht\": \"捨\",\n\t\t\t\"zhs\": \"舍\"\n\t\t},\n\t\t\"掲\": {\n\t\t\t\"jp\": \"掲\",\n\t\t\t\"zht\": \"揭\",\n\t\t\t\"zhs\": \"揭\"\n\t\t},\n\t\t\"掴\": {\n\t\t\t\"jp\": \"掴\",\n\t\t\t\"zht\": \"摑\",\n\t\t\t\"zhs\": \"掴\"\n\t\t},\n\t\t\"揺\": {\n\t\t\t\"jp\": \"揺\",\n\t\t\t\"zht\": \"搖\",\n\t\t\t\"zhs\": \"摇\"\n\t\t},\n\t\t\"摂\": {\n\t\t\t\"jp\": \"摂\",\n\t\t\t\"zht\": \"攝\",\n\t\t\t\"zhs\": \"摄\"\n\t\t},\n\t\t\"撮\": {\n\t\t\t\"jp\": \"撮\",\n\t\t\t\"zht\": \"攝\",\n\t\t\t\"zhs\": \"摄\"\n\t\t},\n\t\t\"敵\": {\n\t\t\t\"jp\": \"敵\",\n\t\t\t\"zht\": \"敵\",\n\t\t\t\"zhs\": \"敌\"\n\t\t},\n\t\t\"敗\": {\n\t\t\t\"jp\": \"敗\",\n\t\t\t\"zht\": \"敗\",\n\t\t\t\"zhs\": \"败\"\n\t\t},\n\t\t\"数\": {\n\t\t\t\"jp\": \"数\",\n\t\t\t\"zht\": \"數\",\n\t\t\t\"zhs\": \"数\"\n\t\t},\n\t\t\"斉\": {\n\t\t\t\"jp\": \"斉\",\n\t\t\t\"zht\": \"齊\",\n\t\t\t\"zhs\": \"齐\"\n\t\t},\n\t\t\"斎\": {\n\t\t\t\"jp\": \"斎\",\n\t\t\t\"zht\": \"齋\",\n\t\t\t\"zhs\": \"斋\"\n\t\t},\n\t\t\"闘\": {\n\t\t\t\"jp\": \"闘\",\n\t\t\t\"zht\": \"鬥\",\n\t\t\t\"zhs\": \"斗\"\n\t\t},\n\t\t\"鬪\": {\n\t\t\t\"jp\": \"鬪\",\n\t\t\t\"zht\": \"鬥\",\n\t\t\t\"zhs\": \"斗\"\n\t\t},\n\t\t\"断\": {\n\t\t\t\"jp\": \"断\",\n\t\t\t\"zht\": \"斷\",\n\t\t\t\"zhs\": \"断\"\n\t\t},\n\t\t\"旧\": {\n\t\t\t\"jp\": \"旧\",\n\t\t\t\"zht\": \"舊\",\n\t\t\t\"zhs\": \"旧\"\n\t\t},\n\t\t\"時\": {\n\t\t\t\"jp\": \"時\",\n\t\t\t\"zht\": \"時\",\n\t\t\t\"zhs\": \"时\"\n\t\t},\n\t\t\"曇\": {\n\t\t\t\"jp\": \"曇\",\n\t\t\t\"zht\": \"曇\",\n\t\t\t\"zhs\": \"昙\"\n\t\t},\n\t\t\"昼\": {\n\t\t\t\"jp\": \"昼\",\n\t\t\t\"zht\": \"晝\",\n\t\t\t\"zhs\": \"昼\"\n\t\t},\n\t\t\"顕\": {\n\t\t\t\"jp\": \"顕\",\n\t\t\t\"zht\": \"顯\",\n\t\t\t\"zhs\": \"显\"\n\t\t},\n\t\t\"暁\": {\n\t\t\t\"jp\": \"暁\",\n\t\t\t\"zht\": \"曉\",\n\t\t\t\"zhs\": \"晓\"\n\t\t},\n\t\t\"晩\": {\n\t\t\t\"jp\": \"晩\",\n\t\t\t\"zht\": \"晚\",\n\t\t\t\"zhs\": \"晚\"\n\t\t},\n\t\t\"暫\": {\n\t\t\t\"jp\": \"暫\",\n\t\t\t\"zht\": \"暫\",\n\t\t\t\"zhs\": \"暂\"\n\t\t},\n\t\t\"曽\": {\n\t\t\t\"jp\": \"曽\",\n\t\t\t\"zht\": \"曾\",\n\t\t\t\"zhs\": \"曾\"\n\t\t},\n\t\t\"術\": {\n\t\t\t\"jp\": \"術\",\n\t\t\t\"zht\": \"術\",\n\t\t\t\"zhs\": \"术\"\n\t\t},\n\t\t\"樸\": {\n\t\t\t\"jp\": \"樸\",\n\t\t\t\"zht\": \"樸\",\n\t\t\t\"zhs\": \"朴\"\n\t\t},\n\t\t\"機\": {\n\t\t\t\"jp\": \"機\",\n\t\t\t\"zht\": \"機\",\n\t\t\t\"zhs\": \"机\"\n\t\t},\n\t\t\"殺\": {\n\t\t\t\"jp\": \"殺\",\n\t\t\t\"zht\": \"殺\",\n\t\t\t\"zhs\": \"杀\"\n\t\t},\n\t\t\"雑\": {\n\t\t\t\"jp\": \"雑\",\n\t\t\t\"zht\": \"雜\",\n\t\t\t\"zhs\": \"杂\"\n\t\t},\n\t\t\"権\": {\n\t\t\t\"jp\": \"権\",\n\t\t\t\"zht\": \"權\",\n\t\t\t\"zhs\": \"权\"\n\t\t},\n\t\t\"条\": {\n\t\t\t\"jp\": \"条\",\n\t\t\t\"zht\": \"條\",\n\t\t\t\"zhs\": \"条\"\n\t\t},\n\t\t\"極\": {\n\t\t\t\"jp\": \"極\",\n\t\t\t\"zht\": \"極\",\n\t\t\t\"zhs\": \"极\"\n\t\t},\n\t\t\"枢\": {\n\t\t\t\"jp\": \"枢\",\n\t\t\t\"zht\": \"樞\",\n\t\t\t\"zhs\": \"枢\"\n\t\t},\n\t\t\"槍\": {\n\t\t\t\"jp\": \"槍\",\n\t\t\t\"zht\": \"槍\",\n\t\t\t\"zhs\": \"枪\"\n\t\t},\n\t\t\"査\": {\n\t\t\t\"jp\": \"査\",\n\t\t\t\"zht\": \"查\",\n\t\t\t\"zhs\": \"查\"\n\t\t},\n\t\t\"栄\": {\n\t\t\t\"jp\": \"栄\",\n\t\t\t\"zht\": \"榮\",\n\t\t\t\"zhs\": \"荣\"\n\t\t},\n\t\t\"標\": {\n\t\t\t\"jp\": \"標\",\n\t\t\t\"zht\": \"標\",\n\t\t\t\"zhs\": \"标\"\n\t\t},\n\t\t\"桟\": {\n\t\t\t\"jp\": \"桟\",\n\t\t\t\"zht\": \"棧\",\n\t\t\t\"zhs\": \"栈\"\n\t\t},\n\t\t\"棟\": {\n\t\t\t\"jp\": \"棟\",\n\t\t\t\"zht\": \"棟\",\n\t\t\t\"zhs\": \"栋\"\n\t\t},\n\t\t\"欄\": {\n\t\t\t\"jp\": \"欄\",\n\t\t\t\"zht\": \"欄\",\n\t\t\t\"zhs\": \"栏\"\n\t\t},\n\t\t\"樹\": {\n\t\t\t\"jp\": \"樹\",\n\t\t\t\"zht\": \"樹\",\n\t\t\t\"zhs\": \"树\"\n\t\t},\n\t\t\"様\": {\n\t\t\t\"jp\": \"様\",\n\t\t\t\"zht\": \"樣\",\n\t\t\t\"zhs\": \"样\"\n\t\t},\n\t\t\"桜\": {\n\t\t\t\"jp\": \"桜\",\n\t\t\t\"zht\": \"櫻\",\n\t\t\t\"zhs\": \"樱\"\n\t\t},\n\t\t\"橋\": {\n\t\t\t\"jp\": \"橋\",\n\t\t\t\"zht\": \"橋\",\n\t\t\t\"zhs\": \"桥\"\n\t\t},\n\t\t\"検\": {\n\t\t\t\"jp\": \"検\",\n\t\t\t\"zht\": \"檢\",\n\t\t\t\"zhs\": \"检\"\n\t\t},\n\t\t\"楼\": {\n\t\t\t\"jp\": \"楼\",\n\t\t\t\"zht\": \"樓\",\n\t\t\t\"zhs\": \"楼\"\n\t\t},\n\t\t\"歓\": {\n\t\t\t\"jp\": \"歓\",\n\t\t\t\"zht\": \"歡\",\n\t\t\t\"zhs\": \"欢\"\n\t\t},\n\t\t\"欧\": {\n\t\t\t\"jp\": \"欧\",\n\t\t\t\"zht\": \"歐\",\n\t\t\t\"zhs\": \"欧\"\n\t\t},\n\t\t\"歩\": {\n\t\t\t\"jp\": \"歩\",\n\t\t\t\"zht\": \"步\",\n\t\t\t\"zhs\": \"步\"\n\t\t},\n\t\t\"歯\": {\n\t\t\t\"jp\": \"歯\",\n\t\t\t\"zht\": \"齒\",\n\t\t\t\"zhs\": \"齿\"\n\t\t},\n\t\t\"残\": {\n\t\t\t\"jp\": \"残\",\n\t\t\t\"zht\": \"殘\",\n\t\t\t\"zhs\": \"残\"\n\t\t},\n\t\t\"殴\": {\n\t\t\t\"jp\": \"殴\",\n\t\t\t\"zht\": \"毆\",\n\t\t\t\"zhs\": \"殴\"\n\t\t},\n\t\t\"気\": {\n\t\t\t\"jp\": \"気\",\n\t\t\t\"zht\": \"氣\",\n\t\t\t\"zhs\": \"气\"\n\t\t},\n\t\t\"漢\": {\n\t\t\t\"jp\": \"漢\",\n\t\t\t\"zht\": \"漢\",\n\t\t\t\"zhs\": \"汉\"\n\t\t},\n\t\t\"湯\": {\n\t\t\t\"jp\": \"湯\",\n\t\t\t\"zht\": \"湯\",\n\t\t\t\"zhs\": \"汤\"\n\t\t},\n\t\t\"溝\": {\n\t\t\t\"jp\": \"溝\",\n\t\t\t\"zht\": \"溝\",\n\t\t\t\"zhs\": \"沟\"\n\t\t},\n\t\t\"沢\": {\n\t\t\t\"jp\": \"沢\",\n\t\t\t\"zht\": \"澤\",\n\t\t\t\"zhs\": \"泽\"\n\t\t},\n\t\t\"涙\": {\n\t\t\t\"jp\": \"涙\",\n\t\t\t\"zht\": \"淚\",\n\t\t\t\"zhs\": \"泪\"\n\t\t},\n\t\t\"滝\": {\n\t\t\t\"jp\": \"滝\",\n\t\t\t\"zht\": \"瀧\",\n\t\t\t\"zhs\": \"泷\"\n\t\t},\n\t\t\"潔\": {\n\t\t\t\"jp\": \"潔\",\n\t\t\t\"zht\": \"潔\",\n\t\t\t\"zhs\": \"洁\"\n\t\t},\n\t\t\"浅\": {\n\t\t\t\"jp\": \"浅\",\n\t\t\t\"zht\": \"淺\",\n\t\t\t\"zhs\": \"浅\"\n\t\t},\n\t\t\"濁\": {\n\t\t\t\"jp\": \"濁\",\n\t\t\t\"zht\": \"濁\",\n\t\t\t\"zhs\": \"浊\"\n\t\t},\n\t\t\"測\": {\n\t\t\t\"jp\": \"測\",\n\t\t\t\"zht\": \"測\",\n\t\t\t\"zhs\": \"测\"\n\t\t},\n\t\t\"済\": {\n\t\t\t\"jp\": \"済\",\n\t\t\t\"zht\": \"濟\",\n\t\t\t\"zhs\": \"济\"\n\t\t},\n\t\t\"濃\": {\n\t\t\t\"jp\": \"濃\",\n\t\t\t\"zht\": \"濃\",\n\t\t\t\"zhs\": \"浓\"\n\t\t},\n\t\t\"浜\": {\n\t\t\t\"jp\": \"浜\",\n\t\t\t\"zht\": \"濱\",\n\t\t\t\"zhs\": \"滨\"\n\t\t},\n\t\t\"渋\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"渦\": {\n\t\t\t\"jp\": \"渦\",\n\t\t\t\"zht\": \"渦\",\n\t\t\t\"zhs\": \"涡\"\n\t\t},\n\t\t\"潤\": {\n\t\t\t\"jp\": \"潤\",\n\t\t\t\"zht\": \"潤\",\n\t\t\t\"zhs\": \"润\"\n\t\t},\n\t\t\"漬\": {\n\t\t\t\"jp\": \"漬\",\n\t\t\t\"zht\": \"漬\",\n\t\t\t\"zhs\": \"渍\"\n\t\t},\n\t\t\"漸\": {\n\t\t\t\"jp\": \"漸\",\n\t\t\t\"zht\": \"漸\",\n\t\t\t\"zhs\": \"渐\"\n\t\t},\n\t\t\"渓\": {\n\t\t\t\"jp\": \"渓\",\n\t\t\t\"zht\": \"溪\",\n\t\t\t\"zhs\": \"溪\"\n\t\t},\n\t\t\"漁\": {\n\t\t\t\"jp\": \"漁\",\n\t\t\t\"zht\": \"漁\",\n\t\t\t\"zhs\": \"渔\"\n\t\t},\n\t\t\"湾\": {\n\t\t\t\"jp\": \"湾\",\n\t\t\t\"zht\": \"灣\",\n\t\t\t\"zhs\": \"湾\"\n\t\t},\n\t\t\"湿\": {\n\t\t\t\"jp\": \"湿\",\n\t\t\t\"zht\": \"濕\",\n\t\t\t\"zhs\": \"湿\"\n\t\t},\n\t\t\"満\": {\n\t\t\t\"jp\": \"満\",\n\t\t\t\"zht\": \"滿\",\n\t\t\t\"zhs\": \"满\"\n\t\t},\n\t\t\"滅\": {\n\t\t\t\"jp\": \"滅\",\n\t\t\t\"zht\": \"滅\",\n\t\t\t\"zhs\": \"灭\"\n\t\t},\n\t\t\"滞\": {\n\t\t\t\"jp\": \"滞\",\n\t\t\t\"zht\": \"滯\",\n\t\t\t\"zhs\": \"滞\"\n\t\t},\n\t\t\"濫\": {\n\t\t\t\"jp\": \"濫\",\n\t\t\t\"zht\": \"濫\",\n\t\t\t\"zhs\": \"滥\"\n\t\t},\n\t\t\"瀬\": {\n\t\t\t\"jp\": \"瀬\",\n\t\t\t\"zht\": \"瀨\",\n\t\t\t\"zhs\": \"濑\"\n\t\t},\n\t\t\"灯\": {\n\t\t\t\"jp\": \"灯\",\n\t\t\t\"zht\": \"燈\",\n\t\t\t\"zhs\": \"灯\"\n\t\t},\n\t\t\"霊\": {\n\t\t\t\"jp\": \"霊\",\n\t\t\t\"zht\": \"靈\",\n\t\t\t\"zhs\": \"灵\"\n\t\t},\n\t\t\"炉\": {\n\t\t\t\"jp\": \"炉\",\n\t\t\t\"zht\": \"爐\",\n\t\t\t\"zhs\": \"炉\"\n\t\t},\n\t\t\"点\": {\n\t\t\t\"jp\": \"点\",\n\t\t\t\"zht\": \"點\",\n\t\t\t\"zhs\": \"点\"\n\t\t},\n\t\t\"錬\": {\n\t\t\t\"jp\": \"錬\",\n\t\t\t\"zht\": \"鍊\",\n\t\t\t\"zhs\": \"炼\"\n\t\t},\n\t\t\"練\": {\n\t\t\t\"jp\": \"練\",\n\t\t\t\"zht\": \"練\",\n\t\t\t\"zhs\": \"练\"\n\t\t},\n\t\t\"煙\": {\n\t\t\t\"jp\": \"煙\",\n\t\t\t\"zht\": \"煙\",\n\t\t\t\"zhs\": \"烟\"\n\t\t},\n\t\t\"煩\": {\n\t\t\t\"jp\": \"煩\",\n\t\t\t\"zht\": \"煩\",\n\t\t\t\"zhs\": \"烦\"\n\t\t},\n\t\t\"焼\": {\n\t\t\t\"jp\": \"焼\",\n\t\t\t\"zht\": \"燒\",\n\t\t\t\"zhs\": \"烧\"\n\t\t},\n\t\t\"熱\": {\n\t\t\t\"jp\": \"熱\",\n\t\t\t\"zht\": \"熱\",\n\t\t\t\"zhs\": \"热\"\n\t\t},\n\t\t\"焔\": {\n\t\t\t\"jp\": \"焔\",\n\t\t\t\"zht\": \"焰\",\n\t\t\t\"zhs\": \"焰\"\n\t\t},\n\t\t\"鍛\": {\n\t\t\t\"jp\": \"鍛\",\n\t\t\t\"zht\": \"鍛\",\n\t\t\t\"zhs\": \"锻\"\n\t\t},\n\t\t\"犠\": {\n\t\t\t\"jp\": \"犠\",\n\t\t\t\"zht\": \"犧\",\n\t\t\t\"zhs\": \"牺\"\n\t\t},\n\t\t\"状\": {\n\t\t\t\"jp\": \"状\",\n\t\t\t\"zht\": \"狀\",\n\t\t\t\"zhs\": \"状\"\n\t\t},\n\t\t\"猶\": {\n\t\t\t\"jp\": \"猶\",\n\t\t\t\"zht\": \"猶\",\n\t\t\t\"zhs\": \"犹\"\n\t\t},\n\t\t\"独\": {\n\t\t\t\"jp\": \"独\",\n\t\t\t\"zht\": \"獨\",\n\t\t\t\"zhs\": \"独\"\n\t\t},\n\t\t\"狭\": {\n\t\t\t\"jp\": \"狭\",\n\t\t\t\"zht\": \"狹\",\n\t\t\t\"zhs\": \"狭\"\n\t\t},\n\t\t\"獄\": {\n\t\t\t\"jp\": \"獄\",\n\t\t\t\"zht\": \"獄\",\n\t\t\t\"zhs\": \"狱\"\n\t\t},\n\t\t\"猟\": {\n\t\t\t\"jp\": \"猟\",\n\t\t\t\"zht\": \"獵\",\n\t\t\t\"zhs\": \"猎\"\n\t\t},\n\t\t\"猫\": {\n\t\t\t\"jp\": \"猫\",\n\t\t\t\"zht\": \"貓\",\n\t\t\t\"zhs\": \"猫\"\n\t\t},\n\t\t\"献\": {\n\t\t\t\"jp\": \"献\",\n\t\t\t\"zht\": \"獻\",\n\t\t\t\"zhs\": \"献\"\n\t\t},\n\t\t\"獲\": {\n\t\t\t\"jp\": \"獲\",\n\t\t\t\"zht\": \"獲\",\n\t\t\t\"zhs\": \"获\"\n\t\t},\n\t\t\"穫\": {\n\t\t\t\"jp\": \"穫\",\n\t\t\t\"zht\": \"穫\",\n\t\t\t\"zhs\": \"获\"\n\t\t},\n\t\t\"環\": {\n\t\t\t\"jp\": \"環\",\n\t\t\t\"zht\": \"環\",\n\t\t\t\"zhs\": \"环\"\n\t\t},\n\t\t\"現\": {\n\t\t\t\"jp\": \"現\",\n\t\t\t\"zht\": \"現\",\n\t\t\t\"zhs\": \"现\"\n\t\t},\n\t\t\"璽\": {\n\t\t\t\"jp\": \"璽\",\n\t\t\t\"zht\": \"璽\",\n\t\t\t\"zhs\": \"玺\"\n\t\t},\n\t\t\"甦\": {\n\t\t\t\"jp\": \"甦\",\n\t\t\t\"zht\": \"甦\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"電\": {\n\t\t\t\"jp\": \"電\",\n\t\t\t\"zht\": \"電\",\n\t\t\t\"zhs\": \"电\"\n\t\t},\n\t\t\"療\": {\n\t\t\t\"jp\": \"療\",\n\t\t\t\"zht\": \"療\",\n\t\t\t\"zhs\": \"疗\"\n\t\t},\n\t\t\"監\": {\n\t\t\t\"jp\": \"監\",\n\t\t\t\"zht\": \"監\",\n\t\t\t\"zhs\": \"监\"\n\t\t},\n\t\t\"蓋\": {\n\t\t\t\"jp\": \"蓋\",\n\t\t\t\"zht\": \"蓋\",\n\t\t\t\"zhs\": \"盖\"\n\t\t},\n\t\t\"盤\": {\n\t\t\t\"jp\": \"盤\",\n\t\t\t\"zht\": \"盤\",\n\t\t\t\"zhs\": \"盘\"\n\t\t},\n\t\t\"視\": {\n\t\t\t\"jp\": \"視\",\n\t\t\t\"zht\": \"視\",\n\t\t\t\"zhs\": \"视\"\n\t\t},\n\t\t\"着\": {\n\t\t\t\"jp\": \"着\",\n\t\t\t\"zht\": \"著\",\n\t\t\t\"zhs\": \"著\"\n\t\t},\n\t\t\"矯\": {\n\t\t\t\"jp\": \"矯\",\n\t\t\t\"zht\": \"矯\",\n\t\t\t\"zhs\": \"矫\"\n\t\t},\n\t\t\"鉱\": {\n\t\t\t\"jp\": \"鉱\",\n\t\t\t\"zht\": \"礦\",\n\t\t\t\"zhs\": \"矿\"\n\t\t},\n\t\t\"砕\": {\n\t\t\t\"jp\": \"砕\",\n\t\t\t\"zht\": \"碎\",\n\t\t\t\"zhs\": \"碎\"\n\t\t},\n\t\t\"礎\": {\n\t\t\t\"jp\": \"礎\",\n\t\t\t\"zht\": \"礎\",\n\t\t\t\"zhs\": \"础\"\n\t\t},\n\t\t\"確\": {\n\t\t\t\"jp\": \"確\",\n\t\t\t\"zht\": \"確\",\n\t\t\t\"zhs\": \"确\"\n\t\t},\n\t\t\"礼\": {\n\t\t\t\"jp\": \"礼\",\n\t\t\t\"zht\": \"禮\",\n\t\t\t\"zhs\": \"礼\"\n\t\t},\n\t\t\"禍\": {\n\t\t\t\"jp\": \"禍\",\n\t\t\t\"zht\": \"禍\",\n\t\t\t\"zhs\": \"祸\"\n\t\t},\n\t\t\"禅\": {\n\t\t\t\"jp\": \"禅\",\n\t\t\t\"zht\": \"禪\",\n\t\t\t\"zhs\": \"禅\"\n\t\t},\n\t\t\"離\": {\n\t\t\t\"jp\": \"離\",\n\t\t\t\"zht\": \"離\",\n\t\t\t\"zhs\": \"离\"\n\t\t},\n\t\t\"種\": {\n\t\t\t\"jp\": \"種\",\n\t\t\t\"zht\": \"種\",\n\t\t\t\"zhs\": \"种\"\n\t\t},\n\t\t\"積\": {\n\t\t\t\"jp\": \"積\",\n\t\t\t\"zht\": \"積\",\n\t\t\t\"zhs\": \"积\"\n\t\t},\n\t\t\"称\": {\n\t\t\t\"jp\": \"称\",\n\t\t\t\"zht\": \"稱\",\n\t\t\t\"zhs\": \"称\"\n\t\t},\n\t\t\"稲\": {\n\t\t\t\"jp\": \"稲\",\n\t\t\t\"zht\": \"稻\",\n\t\t\t\"zhs\": \"稻\"\n\t\t},\n\t\t\"穏\": {\n\t\t\t\"jp\": \"穏\",\n\t\t\t\"zht\": \"穩\",\n\t\t\t\"zhs\": \"稳\"\n\t\t},\n\t\t\"穀\": {\n\t\t\t\"jp\": \"穀\",\n\t\t\t\"zht\": \"穀\",\n\t\t\t\"zhs\": \"谷\"\n\t\t},\n\t\t\"穂\": {\n\t\t\t\"jp\": \"穂\",\n\t\t\t\"zht\": \"穗\",\n\t\t\t\"zhs\": \"穗\"\n\t\t},\n\t\t\"窮\": {\n\t\t\t\"jp\": \"窮\",\n\t\t\t\"zht\": \"窮\",\n\t\t\t\"zhs\": \"穷\"\n\t\t},\n\t\t\"窃\": {\n\t\t\t\"jp\": \"窃\",\n\t\t\t\"zht\": \"竊\",\n\t\t\t\"zhs\": \"窃\"\n\t\t},\n\t\t\"窓\": {\n\t\t\t\"jp\": \"窓\",\n\t\t\t\"zht\": \"窗\",\n\t\t\t\"zhs\": \"窗\"\n\t\t},\n\t\t\"竜\": {\n\t\t\t\"jp\": \"竜\",\n\t\t\t\"zht\": \"龍\",\n\t\t\t\"zhs\": \"龙\"\n\t\t},\n\t\t\"競\": {\n\t\t\t\"jp\": \"競\",\n\t\t\t\"zht\": \"競\",\n\t\t\t\"zhs\": \"竞\"\n\t\t},\n\t\t\"篤\": {\n\t\t\t\"jp\": \"篤\",\n\t\t\t\"zht\": \"篤\",\n\t\t\t\"zhs\": \"笃\"\n\t\t},\n\t\t\"筆\": {\n\t\t\t\"jp\": \"筆\",\n\t\t\t\"zht\": \"筆\",\n\t\t\t\"zhs\": \"笔\"\n\t\t},\n\t\t\"築\": {\n\t\t\t\"jp\": \"築\",\n\t\t\t\"zht\": \"築\",\n\t\t\t\"zhs\": \"筑\"\n\t\t},\n\t\t\"簡\": {\n\t\t\t\"jp\": \"簡\",\n\t\t\t\"zht\": \"簡\",\n\t\t\t\"zhs\": \"简\"\n\t\t},\n\t\t\"箇\": {\n\t\t\t\"jp\": \"箇\",\n\t\t\t\"zht\": \"個\",\n\t\t\t\"zhs\": \"个\"\n\t\t},\n\t\t\"節\": {\n\t\t\t\"jp\": \"節\",\n\t\t\t\"zht\": \"節\",\n\t\t\t\"zhs\": \"节\"\n\t\t},\n\t\t\"範\": {\n\t\t\t\"jp\": \"範\",\n\t\t\t\"zht\": \"範\",\n\t\t\t\"zhs\": \"范\"\n\t\t},\n\t\t\"類\": {\n\t\t\t\"jp\": \"類\",\n\t\t\t\"zht\": \"類\",\n\t\t\t\"zhs\": \"类\"\n\t\t},\n\t\t\"粋\": {\n\t\t\t\"jp\": \"粋\",\n\t\t\t\"zht\": \"粹\",\n\t\t\t\"zhs\": \"粹\"\n\t\t},\n\t\t\"粛\": {\n\t\t\t\"jp\": \"粛\",\n\t\t\t\"zht\": \"肅\",\n\t\t\t\"zhs\": \"肃\"\n\t\t},\n\t\t\"糧\": {\n\t\t\t\"jp\": \"糧\",\n\t\t\t\"zht\": \"糧\",\n\t\t\t\"zhs\": \"粮\"\n\t\t},\n\t\t\"糾\": {\n\t\t\t\"jp\": \"糾\",\n\t\t\t\"zht\": \"糾\",\n\t\t\t\"zhs\": \"纠\"\n\t\t},\n\t\t\"紀\": {\n\t\t\t\"jp\": \"紀\",\n\t\t\t\"zht\": \"紀\",\n\t\t\t\"zhs\": \"纪\"\n\t\t},\n\t\t\"約\": {\n\t\t\t\"jp\": \"約\",\n\t\t\t\"zht\": \"約\",\n\t\t\t\"zhs\": \"约\"\n\t\t},\n\t\t\"紅\": {\n\t\t\t\"jp\": \"紅\",\n\t\t\t\"zht\": \"紅\",\n\t\t\t\"zhs\": \"红\"\n\t\t},\n\t\t\"紋\": {\n\t\t\t\"jp\": \"紋\",\n\t\t\t\"zht\": \"紋\",\n\t\t\t\"zhs\": \"纹\"\n\t\t},\n\t\t\"納\": {\n\t\t\t\"jp\": \"納\",\n\t\t\t\"zht\": \"納\",\n\t\t\t\"zhs\": \"纳\"\n\t\t},\n\t\t\"純\": {\n\t\t\t\"jp\": \"純\",\n\t\t\t\"zht\": \"純\",\n\t\t\t\"zhs\": \"纯\"\n\t\t},\n\t\t\"紙\": {\n\t\t\t\"jp\": \"紙\",\n\t\t\t\"zht\": \"紙\",\n\t\t\t\"zhs\": \"纸\"\n\t\t},\n\t\t\"級\": {\n\t\t\t\"jp\": \"級\",\n\t\t\t\"zht\": \"級\",\n\t\t\t\"zhs\": \"级\"\n\t\t},\n\t\t\"紛\": {\n\t\t\t\"jp\": \"紛\",\n\t\t\t\"zht\": \"紛\",\n\t\t\t\"zhs\": \"纷\"\n\t\t},\n\t\t\"紡\": {\n\t\t\t\"jp\": \"紡\",\n\t\t\t\"zht\": \"紡\",\n\t\t\t\"zhs\": \"纺\"\n\t\t},\n\t\t\"緊\": {\n\t\t\t\"jp\": \"緊\",\n\t\t\t\"zht\": \"緊\",\n\t\t\t\"zhs\": \"紧\"\n\t\t},\n\t\t\"細\": {\n\t\t\t\"jp\": \"細\",\n\t\t\t\"zht\": \"細\",\n\t\t\t\"zhs\": \"细\"\n\t\t},\n\t\t\"紳\": {\n\t\t\t\"jp\": \"紳\",\n\t\t\t\"zht\": \"紳\",\n\t\t\t\"zhs\": \"绅\"\n\t\t},\n\t\t\"紹\": {\n\t\t\t\"jp\": \"紹\",\n\t\t\t\"zht\": \"紹\",\n\t\t\t\"zhs\": \"绍\"\n\t\t},\n\t\t\"紺\": {\n\t\t\t\"jp\": \"紺\",\n\t\t\t\"zht\": \"紺\",\n\t\t\t\"zhs\": \"绀\"\n\t\t},\n\t\t\"終\": {\n\t\t\t\"jp\": \"終\",\n\t\t\t\"zht\": \"終\",\n\t\t\t\"zhs\": \"终\"\n\t\t},\n\t\t\"組\": {\n\t\t\t\"jp\": \"組\",\n\t\t\t\"zht\": \"組\",\n\t\t\t\"zhs\": \"组\"\n\t\t},\n\t\t\"経\": {\n\t\t\t\"jp\": \"経\",\n\t\t\t\"zht\": \"經\",\n\t\t\t\"zhs\": \"经\"\n\t\t},\n\t\t\"結\": {\n\t\t\t\"jp\": \"結\",\n\t\t\t\"zht\": \"結\",\n\t\t\t\"zhs\": \"结\"\n\t\t},\n\t\t\"絶\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絶\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"絞\": {\n\t\t\t\"jp\": \"絞\",\n\t\t\t\"zht\": \"絞\",\n\t\t\t\"zhs\": \"绞\"\n\t\t},\n\t\t\"絡\": {\n\t\t\t\"jp\": \"絡\",\n\t\t\t\"zht\": \"絡\",\n\t\t\t\"zhs\": \"络\"\n\t\t},\n\t\t\"給\": {\n\t\t\t\"jp\": \"給\",\n\t\t\t\"zht\": \"給\",\n\t\t\t\"zhs\": \"给\"\n\t\t},\n\t\t\"統\": {\n\t\t\t\"jp\": \"統\",\n\t\t\t\"zht\": \"統\",\n\t\t\t\"zhs\": \"统\"\n\t\t},\n\t\t\"絵\": {\n\t\t\t\"jp\": \"絵\",\n\t\t\t\"zht\": \"繪\",\n\t\t\t\"zhs\": \"绘\"\n\t\t},\n\t\t\"絹\": {\n\t\t\t\"jp\": \"絹\",\n\t\t\t\"zht\": \"絹\",\n\t\t\t\"zhs\": \"绢\"\n\t\t},\n\t\t\"継\": {\n\t\t\t\"jp\": \"継\",\n\t\t\t\"zht\": \"繼\",\n\t\t\t\"zhs\": \"继\"\n\t\t},\n\t\t\"続\": {\n\t\t\t\"jp\": \"続\",\n\t\t\t\"zht\": \"續\",\n\t\t\t\"zhs\": \"续\"\n\t\t},\n\t\t\"緑\": {\n\t\t\t\"jp\": \"緑\",\n\t\t\t\"zht\": \"綠\",\n\t\t\t\"zhs\": \"绿\"\n\t\t},\n\t\t\"線\": {\n\t\t\t\"jp\": \"線\",\n\t\t\t\"zht\": \"線\",\n\t\t\t\"zhs\": \"线\"\n\t\t},\n\t\t\"維\": {\n\t\t\t\"jp\": \"維\",\n\t\t\t\"zht\": \"維\",\n\t\t\t\"zhs\": \"维\"\n\t\t},\n\t\t\"綱\": {\n\t\t\t\"jp\": \"綱\",\n\t\t\t\"zht\": \"綱\",\n\t\t\t\"zhs\": \"纲\"\n\t\t},\n\t\t\"綿\": {\n\t\t\t\"jp\": \"綿\",\n\t\t\t\"zht\": \"綿\",\n\t\t\t\"zhs\": \"绵\"\n\t\t},\n\t\t\"緒\": {\n\t\t\t\"jp\": \"緒\",\n\t\t\t\"zht\": \"緒\",\n\t\t\t\"zhs\": \"绪\"\n\t\t},\n\t\t\"締\": {\n\t\t\t\"jp\": \"締\",\n\t\t\t\"zht\": \"締\",\n\t\t\t\"zhs\": \"缔\"\n\t\t},\n\t\t\"縁\": {\n\t\t\t\"jp\": \"縁\",\n\t\t\t\"zht\": \"緣\",\n\t\t\t\"zhs\": \"缘\"\n\t\t},\n\t\t\"編\": {\n\t\t\t\"jp\": \"編\",\n\t\t\t\"zht\": \"編\",\n\t\t\t\"zhs\": \"编\"\n\t\t},\n\t\t\"緩\": {\n\t\t\t\"jp\": \"緩\",\n\t\t\t\"zht\": \"緩\",\n\t\t\t\"zhs\": \"缓\"\n\t\t},\n\t\t\"緯\": {\n\t\t\t\"jp\": \"緯\",\n\t\t\t\"zht\": \"緯\",\n\t\t\t\"zhs\": \"纬\"\n\t\t},\n\t\t\"縄\": {\n\t\t\t\"jp\": \"縄\",\n\t\t\t\"zht\": \"繩\",\n\t\t\t\"zhs\": \"绳\"\n\t\t},\n\t\t\"縛\": {\n\t\t\t\"jp\": \"縛\",\n\t\t\t\"zht\": \"縛\",\n\t\t\t\"zhs\": \"缚\"\n\t\t},\n\t\t\"縦\": {\n\t\t\t\"jp\": \"縦\",\n\t\t\t\"zht\": \"縱\",\n\t\t\t\"zhs\": \"纵\"\n\t\t},\n\t\t\"縫\": {\n\t\t\t\"jp\": \"縫\",\n\t\t\t\"zht\": \"縫\",\n\t\t\t\"zhs\": \"缝\"\n\t\t},\n\t\t\"縮\": {\n\t\t\t\"jp\": \"縮\",\n\t\t\t\"zht\": \"縮\",\n\t\t\t\"zhs\": \"缩\"\n\t\t},\n\t\t\"繊\": {\n\t\t\t\"jp\": \"繊\",\n\t\t\t\"zht\": \"纖\",\n\t\t\t\"zhs\": \"纤\"\n\t\t},\n\t\t\"績\": {\n\t\t\t\"jp\": \"績\",\n\t\t\t\"zht\": \"績\",\n\t\t\t\"zhs\": \"绩\"\n\t\t},\n\t\t\"織\": {\n\t\t\t\"jp\": \"織\",\n\t\t\t\"zht\": \"織\",\n\t\t\t\"zhs\": \"织\"\n\t\t},\n\t\t\"繕\": {\n\t\t\t\"jp\": \"繕\",\n\t\t\t\"zht\": \"繕\",\n\t\t\t\"zhs\": \"缮\"\n\t\t},\n\t\t\"繭\": {\n\t\t\t\"jp\": \"繭\",\n\t\t\t\"zht\": \"繭\",\n\t\t\t\"zhs\": \"茧\"\n\t\t},\n\t\t\"繰\": {\n\t\t\t\"jp\": \"繰\",\n\t\t\t\"zht\": \"繰\",\n\t\t\t\"zhs\": \"缲\"\n\t\t},\n\t\t\"缶\": {\n\t\t\t\"jp\": \"缶\",\n\t\t\t\"zht\": \"罐\",\n\t\t\t\"zhs\": \"罐\"\n\t\t},\n\t\t\"鉢\": {\n\t\t\t\"jp\": \"鉢\",\n\t\t\t\"zht\": \"鉢\",\n\t\t\t\"zhs\": \"钵\"\n\t\t},\n\t\t\"羅\": {\n\t\t\t\"jp\": \"羅\",\n\t\t\t\"zht\": \"羅\",\n\t\t\t\"zhs\": \"罗\"\n\t\t},\n\t\t\"罸\": {\n\t\t\t\"jp\": \"罸\",\n\t\t\t\"zht\": \"罰\",\n\t\t\t\"zhs\": \"罚\"\n\t\t},\n\t\t\"罷\": {\n\t\t\t\"jp\": \"罷\",\n\t\t\t\"zht\": \"罷\",\n\t\t\t\"zhs\": \"罢\"\n\t\t},\n\t\t\"罵\": {\n\t\t\t\"jp\": \"罵\",\n\t\t\t\"zht\": \"罵\",\n\t\t\t\"zhs\": \"骂\"\n\t\t},\n\t\t\"職\": {\n\t\t\t\"jp\": \"職\",\n\t\t\t\"zht\": \"職\",\n\t\t\t\"zhs\": \"职\"\n\t\t},\n\t\t\"聞\": {\n\t\t\t\"jp\": \"聞\",\n\t\t\t\"zht\": \"聞\",\n\t\t\t\"zhs\": \"闻\"\n\t\t},\n\t\t\"聡\": {\n\t\t\t\"jp\": \"聡\",\n\t\t\t\"zht\": \"聰\",\n\t\t\t\"zhs\": \"聪\"\n\t\t},\n\t\t\"腸\": {\n\t\t\t\"jp\": \"腸\",\n\t\t\t\"zht\": \"腸\",\n\t\t\t\"zhs\": \"肠\"\n\t\t},\n\t\t\"膚\": {\n\t\t\t\"jp\": \"膚\",\n\t\t\t\"zht\": \"膚\",\n\t\t\t\"zhs\": \"肤\"\n\t\t},\n\t\t\"脹\": {\n\t\t\t\"jp\": \"脹\",\n\t\t\t\"zht\": \"脹\",\n\t\t\t\"zhs\": \"胀\"\n\t\t},\n\t\t\"脅\": {\n\t\t\t\"jp\": \"脅\",\n\t\t\t\"zht\": \"脅\",\n\t\t\t\"zhs\": \"胁\"\n\t\t},\n\t\t\"胆\": {\n\t\t\t\"jp\": \"胆\",\n\t\t\t\"zht\": \"膽\",\n\t\t\t\"zhs\": \"胆\"\n\t\t},\n\t\t\"臓\": {\n\t\t\t\"jp\": \"臓\",\n\t\t\t\"zht\": \"臟\",\n\t\t\t\"zhs\": \"脏\"\n\t\t},\n\t\t\"脳\": {\n\t\t\t\"jp\": \"脳\",\n\t\t\t\"zht\": \"腦\",\n\t\t\t\"zhs\": \"脑\"\n\t\t},\n\t\t\"脚\": {\n\t\t\t\"jp\": \"脚\",\n\t\t\t\"zht\": \"腳\",\n\t\t\t\"zhs\": \"脚\"\n\t\t},\n\t\t\"騰\": {\n\t\t\t\"jp\": \"騰\",\n\t\t\t\"zht\": \"騰\",\n\t\t\t\"zhs\": \"腾\"\n\t\t},\n\t\t\"舗\": {\n\t\t\t\"jp\": \"舗\",\n\t\t\t\"zht\": \"舖\",\n\t\t\t\"zhs\": \"铺\"\n\t\t},\n\t\t\"館\": {\n\t\t\t\"jp\": \"館\",\n\t\t\t\"zht\": \"館\",\n\t\t\t\"zhs\": \"馆\"\n\t\t},\n\t\t\"艦\": {\n\t\t\t\"jp\": \"艦\",\n\t\t\t\"zht\": \"艦\",\n\t\t\t\"zhs\": \"舰\"\n\t\t},\n\t\t\"芸\": {\n\t\t\t\"jp\": \"芸\",\n\t\t\t\"zht\": \"藝\",\n\t\t\t\"zhs\": \"艺\"\n\t\t},\n\t\t\"茎\": {\n\t\t\t\"jp\": \"茎\",\n\t\t\t\"zht\": \"莖\",\n\t\t\t\"zhs\": \"茎\"\n\t\t},\n\t\t\"薦\": {\n\t\t\t\"jp\": \"薦\",\n\t\t\t\"zht\": \"薦\",\n\t\t\t\"zhs\": \"荐\"\n\t\t},\n\t\t\"荘\": {\n\t\t\t\"jp\": \"荘\",\n\t\t\t\"zht\": \"莊\",\n\t\t\t\"zhs\": \"庄\"\n\t\t},\n\t\t\"薬\": {\n\t\t\t\"jp\": \"薬\",\n\t\t\t\"zht\": \"藥\",\n\t\t\t\"zhs\": \"药\"\n\t\t},\n\t\t\"蛍\": {\n\t\t\t\"jp\": \"蛍\",\n\t\t\t\"zht\": \"螢\",\n\t\t\t\"zhs\": \"萤\"\n\t\t},\n\t\t\"蒋\": {\n\t\t\t\"jp\": \"蒋\",\n\t\t\t\"zht\": \"蔣\",\n\t\t\t\"zhs\": \"蒋\"\n\t\t},\n\t\t\"蔵\": {\n\t\t\t\"jp\": \"蔵\",\n\t\t\t\"zht\": \"藏\",\n\t\t\t\"zhs\": \"藏\"\n\t\t},\n\t\t\"虜\": {\n\t\t\t\"jp\": \"虜\",\n\t\t\t\"zht\": \"虜\",\n\t\t\t\"zhs\": \"虏\"\n\t\t},\n\t\t\"虚\": {\n\t\t\t\"jp\": \"虚\",\n\t\t\t\"zht\": \"虛\",\n\t\t\t\"zhs\": \"虚\"\n\t\t},\n\t\t\"虫\": {\n\t\t\t\"jp\": \"虫\",\n\t\t\t\"zht\": \"蟲\",\n\t\t\t\"zhs\": \"虫\"\n\t\t},\n\t\t\"蝕\": {\n\t\t\t\"jp\": \"蝕\",\n\t\t\t\"zht\": \"蝕\",\n\t\t\t\"zhs\": \"蚀\"\n\t\t},\n\t\t\"蚕\": {\n\t\t\t\"jp\": \"蚕\",\n\t\t\t\"zht\": \"蠶\",\n\t\t\t\"zhs\": \"蚕\"\n\t\t},\n\t\t\"蛮\": {\n\t\t\t\"jp\": \"蛮\",\n\t\t\t\"zht\": \"蠻\",\n\t\t\t\"zhs\": \"蛮\"\n\t\t},\n\t\t\"補\": {\n\t\t\t\"jp\": \"補\",\n\t\t\t\"zht\": \"補\",\n\t\t\t\"zhs\": \"补\"\n\t\t},\n\t\t\"襲\": {\n\t\t\t\"jp\": \"襲\",\n\t\t\t\"zht\": \"襲\",\n\t\t\t\"zhs\": \"袭\"\n\t\t},\n\t\t\"装\": {\n\t\t\t\"jp\": \"装\",\n\t\t\t\"zht\": \"裝\",\n\t\t\t\"zhs\": \"装\"\n\t\t},\n\t\t\"裏\": {\n\t\t\t\"jp\": \"裏\",\n\t\t\t\"zht\": \"裡\",\n\t\t\t\"zhs\": \"里\"\n\t\t},\n\t\t\"覇\": {\n\t\t\t\"jp\": \"覇\",\n\t\t\t\"zht\": \"霸\",\n\t\t\t\"zhs\": \"霸\"\n\t\t},\n\t\t\"見\": {\n\t\t\t\"jp\": \"見\",\n\t\t\t\"zht\": \"見\",\n\t\t\t\"zhs\": \"见\"\n\t\t},\n\t\t\"観\": {\n\t\t\t\"jp\": \"観\",\n\t\t\t\"zht\": \"觀\",\n\t\t\t\"zhs\": \"观\"\n\t\t},\n\t\t\"規\": {\n\t\t\t\"jp\": \"規\",\n\t\t\t\"zht\": \"規\",\n\t\t\t\"zhs\": \"规\"\n\t\t},\n\t\t\"覚\": {\n\t\t\t\"jp\": \"覚\",\n\t\t\t\"zht\": \"覺\",\n\t\t\t\"zhs\": \"觉\"\n\t\t},\n\t\t\"覧\": {\n\t\t\t\"jp\": \"覧\",\n\t\t\t\"zht\": \"覽\",\n\t\t\t\"zhs\": \"览\"\n\t\t},\n\t\t\"触\": {\n\t\t\t\"jp\": \"触\",\n\t\t\t\"zht\": \"觸\",\n\t\t\t\"zhs\": \"触\"\n\t\t},\n\t\t\"訂\": {\n\t\t\t\"jp\": \"訂\",\n\t\t\t\"zht\": \"訂\",\n\t\t\t\"zhs\": \"订\"\n\t\t},\n\t\t\"計\": {\n\t\t\t\"jp\": \"計\",\n\t\t\t\"zht\": \"計\",\n\t\t\t\"zhs\": \"计\"\n\t\t},\n\t\t\"討\": {\n\t\t\t\"jp\": \"討\",\n\t\t\t\"zht\": \"討\",\n\t\t\t\"zhs\": \"讨\"\n\t\t},\n\t\t\"訓\": {\n\t\t\t\"jp\": \"訓\",\n\t\t\t\"zht\": \"訓\",\n\t\t\t\"zhs\": \"训\"\n\t\t},\n\t\t\"記\": {\n\t\t\t\"jp\": \"記\",\n\t\t\t\"zht\": \"記\",\n\t\t\t\"zhs\": \"记\"\n\t\t},\n\t\t\"訟\": {\n\t\t\t\"jp\": \"訟\",\n\t\t\t\"zht\": \"訟\",\n\t\t\t\"zhs\": \"讼\"\n\t\t},\n\t\t\"訪\": {\n\t\t\t\"jp\": \"訪\",\n\t\t\t\"zht\": \"訪\",\n\t\t\t\"zhs\": \"访\"\n\t\t},\n\t\t\"設\": {\n\t\t\t\"jp\": \"設\",\n\t\t\t\"zht\": \"設\",\n\t\t\t\"zhs\": \"设\"\n\t\t},\n\t\t\"許\": {\n\t\t\t\"jp\": \"許\",\n\t\t\t\"zht\": \"許\",\n\t\t\t\"zhs\": \"许\"\n\t\t},\n\t\t\"訳\": {\n\t\t\t\"jp\": \"訳\",\n\t\t\t\"zht\": \"譯\",\n\t\t\t\"zhs\": \"译\"\n\t\t},\n\t\t\"訴\": {\n\t\t\t\"jp\": \"訴\",\n\t\t\t\"zht\": \"訴\",\n\t\t\t\"zhs\": \"诉\"\n\t\t},\n\t\t\"診\": {\n\t\t\t\"jp\": \"診\",\n\t\t\t\"zht\": \"診\",\n\t\t\t\"zhs\": \"诊\"\n\t\t},\n\t\t\"証\": {\n\t\t\t\"jp\": \"証\",\n\t\t\t\"zht\": \"證\",\n\t\t\t\"zhs\": \"证\"\n\t\t},\n\t\t\"詐\": {\n\t\t\t\"jp\": \"詐\",\n\t\t\t\"zht\": \"詐\",\n\t\t\t\"zhs\": \"诈\"\n\t\t},\n\t\t\"詔\": {\n\t\t\t\"jp\": \"詔\",\n\t\t\t\"zht\": \"詔\",\n\t\t\t\"zhs\": \"诏\"\n\t\t},\n\t\t\"評\": {\n\t\t\t\"jp\": \"評\",\n\t\t\t\"zht\": \"評\",\n\t\t\t\"zhs\": \"评\"\n\t\t},\n\t\t\"詛\": {\n\t\t\t\"jp\": \"詛\",\n\t\t\t\"zht\": \"詛\",\n\t\t\t\"zhs\": \"诅\"\n\t\t},\n\t\t\"詞\": {\n\t\t\t\"jp\": \"詞\",\n\t\t\t\"zht\": \"詞\",\n\t\t\t\"zhs\": \"词\"\n\t\t},\n\t\t\"試\": {\n\t\t\t\"jp\": \"試\",\n\t\t\t\"zht\": \"試\",\n\t\t\t\"zhs\": \"试\"\n\t\t},\n\t\t\"詩\": {\n\t\t\t\"jp\": \"詩\",\n\t\t\t\"zht\": \"詩\",\n\t\t\t\"zhs\": \"诗\"\n\t\t},\n\t\t\"詰\": {\n\t\t\t\"jp\": \"詰\",\n\t\t\t\"zht\": \"詰\",\n\t\t\t\"zhs\": \"诘\"\n\t\t},\n\t\t\"該\": {\n\t\t\t\"jp\": \"該\",\n\t\t\t\"zht\": \"該\",\n\t\t\t\"zhs\": \"该\"\n\t\t},\n\t\t\"詳\": {\n\t\t\t\"jp\": \"詳\",\n\t\t\t\"zht\": \"詳\",\n\t\t\t\"zhs\": \"详\"\n\t\t},\n\t\t\"誉\": {\n\t\t\t\"jp\": \"誉\",\n\t\t\t\"zht\": \"譽\",\n\t\t\t\"zhs\": \"誉\"\n\t\t},\n\t\t\"謄\": {\n\t\t\t\"jp\": \"謄\",\n\t\t\t\"zht\": \"謄\",\n\t\t\t\"zhs\": \"誊\"\n\t\t},\n\t\t\"認\": {\n\t\t\t\"jp\": \"認\",\n\t\t\t\"zht\": \"認\",\n\t\t\t\"zhs\": \"认\"\n\t\t},\n\t\t\"誕\": {\n\t\t\t\"jp\": \"誕\",\n\t\t\t\"zht\": \"誕\",\n\t\t\t\"zhs\": \"诞\"\n\t\t},\n\t\t\"誘\": {\n\t\t\t\"jp\": \"誘\",\n\t\t\t\"zht\": \"誘\",\n\t\t\t\"zhs\": \"诱\"\n\t\t},\n\t\t\"語\": {\n\t\t\t\"jp\": \"語\",\n\t\t\t\"zht\": \"語\",\n\t\t\t\"zhs\": \"语\"\n\t\t},\n\t\t\"誠\": {\n\t\t\t\"jp\": \"誠\",\n\t\t\t\"zht\": \"誠\",\n\t\t\t\"zhs\": \"诚\"\n\t\t},\n\t\t\"誤\": {\n\t\t\t\"jp\": \"誤\",\n\t\t\t\"zht\": \"誤\",\n\t\t\t\"zhs\": \"误\"\n\t\t},\n\t\t\"説\": {\n\t\t\t\"jp\": \"説\",\n\t\t\t\"zht\": \"說\",\n\t\t\t\"zhs\": \"说\"\n\t\t},\n\t\t\"読\": {\n\t\t\t\"jp\": \"読\",\n\t\t\t\"zht\": \"讀\",\n\t\t\t\"zhs\": \"读\"\n\t\t},\n\t\t\"誰\": {\n\t\t\t\"jp\": \"誰\",\n\t\t\t\"zht\": \"誰\",\n\t\t\t\"zhs\": \"谁\"\n\t\t},\n\t\t\"課\": {\n\t\t\t\"jp\": \"課\",\n\t\t\t\"zht\": \"課\",\n\t\t\t\"zhs\": \"课\"\n\t\t},\n\t\t\"調\": {\n\t\t\t\"jp\": \"調\",\n\t\t\t\"zht\": \"調\",\n\t\t\t\"zhs\": \"调\"\n\t\t},\n\t\t\"談\": {\n\t\t\t\"jp\": \"談\",\n\t\t\t\"zht\": \"談\",\n\t\t\t\"zhs\": \"谈\"\n\t\t},\n\t\t\"請\": {\n\t\t\t\"jp\": \"請\",\n\t\t\t\"zht\": \"請\",\n\t\t\t\"zhs\": \"请\"\n\t\t},\n\t\t\"論\": {\n\t\t\t\"jp\": \"論\",\n\t\t\t\"zht\": \"論\",\n\t\t\t\"zhs\": \"论\"\n\t\t},\n\t\t\"諭\": {\n\t\t\t\"jp\": \"諭\",\n\t\t\t\"zht\": \"諭\",\n\t\t\t\"zhs\": \"谕\"\n\t\t},\n\t\t\"諸\": {\n\t\t\t\"jp\": \"諸\",\n\t\t\t\"zht\": \"諸\",\n\t\t\t\"zhs\": \"诸\"\n\t\t},\n\t\t\"諾\": {\n\t\t\t\"jp\": \"諾\",\n\t\t\t\"zht\": \"諾\",\n\t\t\t\"zhs\": \"诺\"\n\t\t},\n\t\t\"謀\": {\n\t\t\t\"jp\": \"謀\",\n\t\t\t\"zht\": \"謀\",\n\t\t\t\"zhs\": \"谋\"\n\t\t},\n\t\t\"謁\": {\n\t\t\t\"jp\": \"謁\",\n\t\t\t\"zht\": \"謁\",\n\t\t\t\"zhs\": \"谒\"\n\t\t},\n\t\t\"謎\": {\n\t\t\t\"jp\": \"謎\",\n\t\t\t\"zht\": \"謎\",\n\t\t\t\"zhs\": \"谜\"\n\t\t},\n\t\t\"謙\": {\n\t\t\t\"jp\": \"謙\",\n\t\t\t\"zht\": \"謙\",\n\t\t\t\"zhs\": \"谦\"\n\t\t},\n\t\t\"講\": {\n\t\t\t\"jp\": \"講\",\n\t\t\t\"zht\": \"講\",\n\t\t\t\"zhs\": \"讲\"\n\t\t},\n\t\t\"謝\": {\n\t\t\t\"jp\": \"謝\",\n\t\t\t\"zht\": \"謝\",\n\t\t\t\"zhs\": \"谢\"\n\t\t},\n\t\t\"謡\": {\n\t\t\t\"jp\": \"謡\",\n\t\t\t\"zht\": \"謠\",\n\t\t\t\"zhs\": \"谣\"\n\t\t},\n\t\t\"謹\": {\n\t\t\t\"jp\": \"謹\",\n\t\t\t\"zht\": \"謹\",\n\t\t\t\"zhs\": \"谨\"\n\t\t},\n\t\t\"識\": {\n\t\t\t\"jp\": \"識\",\n\t\t\t\"zht\": \"識\",\n\t\t\t\"zhs\": \"识\"\n\t\t},\n\t\t\"譜\": {\n\t\t\t\"jp\": \"譜\",\n\t\t\t\"zht\": \"譜\",\n\t\t\t\"zhs\": \"谱\"\n\t\t},\n\t\t\"議\": {\n\t\t\t\"jp\": \"議\",\n\t\t\t\"zht\": \"議\",\n\t\t\t\"zhs\": \"议\"\n\t\t},\n\t\t\"譲\": {\n\t\t\t\"jp\": \"譲\",\n\t\t\t\"zht\": \"讓\",\n\t\t\t\"zhs\": \"让\"\n\t\t},\n\t\t\"貝\": {\n\t\t\t\"jp\": \"貝\",\n\t\t\t\"zht\": \"貝\",\n\t\t\t\"zhs\": \"贝\"\n\t\t},\n\t\t\"貞\": {\n\t\t\t\"jp\": \"貞\",\n\t\t\t\"zht\": \"貞\",\n\t\t\t\"zhs\": \"贞\"\n\t\t},\n\t\t\"負\": {\n\t\t\t\"jp\": \"負\",\n\t\t\t\"zht\": \"負\",\n\t\t\t\"zhs\": \"负\"\n\t\t},\n\t\t\"財\": {\n\t\t\t\"jp\": \"財\",\n\t\t\t\"zht\": \"財\",\n\t\t\t\"zhs\": \"财\"\n\t\t},\n\t\t\"貢\": {\n\t\t\t\"jp\": \"貢\",\n\t\t\t\"zht\": \"貢\",\n\t\t\t\"zhs\": \"贡\"\n\t\t},\n\t\t\"貧\": {\n\t\t\t\"jp\": \"貧\",\n\t\t\t\"zht\": \"貧\",\n\t\t\t\"zhs\": \"贫\"\n\t\t},\n\t\t\"貨\": {\n\t\t\t\"jp\": \"貨\",\n\t\t\t\"zht\": \"貨\",\n\t\t\t\"zhs\": \"货\"\n\t\t},\n\t\t\"販\": {\n\t\t\t\"jp\": \"販\",\n\t\t\t\"zht\": \"販\",\n\t\t\t\"zhs\": \"贩\"\n\t\t},\n\t\t\"貪\": {\n\t\t\t\"jp\": \"貪\",\n\t\t\t\"zht\": \"貪\",\n\t\t\t\"zhs\": \"贪\"\n\t\t},\n\t\t\"責\": {\n\t\t\t\"jp\": \"責\",\n\t\t\t\"zht\": \"責\",\n\t\t\t\"zhs\": \"责\"\n\t\t},\n\t\t\"貯\": {\n\t\t\t\"jp\": \"貯\",\n\t\t\t\"zht\": \"貯\",\n\t\t\t\"zhs\": \"贮\"\n\t\t},\n\t\t\"貴\": {\n\t\t\t\"jp\": \"貴\",\n\t\t\t\"zht\": \"貴\",\n\t\t\t\"zhs\": \"贵\"\n\t\t},\n\t\t\"貸\": {\n\t\t\t\"jp\": \"貸\",\n\t\t\t\"zht\": \"貸\",\n\t\t\t\"zhs\": \"贷\"\n\t\t},\n\t\t\"費\": {\n\t\t\t\"jp\": \"費\",\n\t\t\t\"zht\": \"費\",\n\t\t\t\"zhs\": \"费\"\n\t\t},\n\t\t\"貿\": {\n\t\t\t\"jp\": \"貿\",\n\t\t\t\"zht\": \"貿\",\n\t\t\t\"zhs\": \"贸\"\n\t\t},\n\t\t\"賀\": {\n\t\t\t\"jp\": \"賀\",\n\t\t\t\"zht\": \"賀\",\n\t\t\t\"zhs\": \"贺\"\n\t\t},\n\t\t\"賃\": {\n\t\t\t\"jp\": \"賃\",\n\t\t\t\"zht\": \"賃\",\n\t\t\t\"zhs\": \"赁\"\n\t\t},\n\t\t\"賄\": {\n\t\t\t\"jp\": \"賄\",\n\t\t\t\"zht\": \"賄\",\n\t\t\t\"zhs\": \"贿\"\n\t\t},\n\t\t\"資\": {\n\t\t\t\"jp\": \"資\",\n\t\t\t\"zht\": \"資\",\n\t\t\t\"zhs\": \"资\"\n\t\t},\n\t\t\"賊\": {\n\t\t\t\"jp\": \"賊\",\n\t\t\t\"zht\": \"賊\",\n\t\t\t\"zhs\": \"贼\"\n\t\t},\n\t\t\"賎\": {\n\t\t\t\"jp\": \"賎\",\n\t\t\t\"zht\": \"賤\",\n\t\t\t\"zhs\": \"贱\"\n\t\t},\n\t\t\"賛\": {\n\t\t\t\"jp\": \"賛\",\n\t\t\t\"zht\": \"贊\",\n\t\t\t\"zhs\": \"赞\"\n\t\t},\n\t\t\"賜\": {\n\t\t\t\"jp\": \"賜\",\n\t\t\t\"zht\": \"賜\",\n\t\t\t\"zhs\": \"赐\"\n\t\t},\n\t\t\"賞\": {\n\t\t\t\"jp\": \"賞\",\n\t\t\t\"zht\": \"賞\",\n\t\t\t\"zhs\": \"赏\"\n\t\t},\n\t\t\"賠\": {\n\t\t\t\"jp\": \"賠\",\n\t\t\t\"zht\": \"賠\",\n\t\t\t\"zhs\": \"赔\"\n\t\t},\n\t\t\"賢\": {\n\t\t\t\"jp\": \"賢\",\n\t\t\t\"zht\": \"賢\",\n\t\t\t\"zhs\": \"贤\"\n\t\t},\n\t\t\"賦\": {\n\t\t\t\"jp\": \"賦\",\n\t\t\t\"zht\": \"賦\",\n\t\t\t\"zhs\": \"赋\"\n\t\t},\n\t\t\"質\": {\n\t\t\t\"jp\": \"質\",\n\t\t\t\"zht\": \"質\",\n\t\t\t\"zhs\": \"质\"\n\t\t},\n\t\t\"頼\": {\n\t\t\t\"jp\": \"頼\",\n\t\t\t\"zht\": \"賴\",\n\t\t\t\"zhs\": \"赖\"\n\t\t},\n\t\t\"贈\": {\n\t\t\t\"jp\": \"贈\",\n\t\t\t\"zht\": \"贈\",\n\t\t\t\"zhs\": \"赠\"\n\t\t},\n\t\t\"贓\": {\n\t\t\t\"jp\": \"贓\",\n\t\t\t\"zht\": \"贓\",\n\t\t\t\"zhs\": \"赃\"\n\t\t},\n\t\t\"躍\": {\n\t\t\t\"jp\": \"躍\",\n\t\t\t\"zht\": \"躍\",\n\t\t\t\"zhs\": \"跃\"\n\t\t},\n\t\t\"践\": {\n\t\t\t\"jp\": \"践\",\n\t\t\t\"zht\": \"踐\",\n\t\t\t\"zhs\": \"践\"\n\t\t},\n\t\t\"踪\": {\n\t\t\t\"jp\": \"踪\",\n\t\t\t\"zht\": \"蹤\",\n\t\t\t\"zhs\": \"踪\"\n\t\t},\n\t\t\"車\": {\n\t\t\t\"jp\": \"車\",\n\t\t\t\"zht\": \"車\",\n\t\t\t\"zhs\": \"车\"\n\t\t},\n\t\t\"軌\": {\n\t\t\t\"jp\": \"軌\",\n\t\t\t\"zht\": \"軌\",\n\t\t\t\"zhs\": \"轨\"\n\t\t},\n\t\t\"軒\": {\n\t\t\t\"jp\": \"軒\",\n\t\t\t\"zht\": \"軒\",\n\t\t\t\"zhs\": \"轩\"\n\t\t},\n\t\t\"軟\": {\n\t\t\t\"jp\": \"軟\",\n\t\t\t\"zht\": \"軟\",\n\t\t\t\"zhs\": \"软\"\n\t\t},\n\t\t\"転\": {\n\t\t\t\"jp\": \"転\",\n\t\t\t\"zht\": \"轉\",\n\t\t\t\"zhs\": \"转\"\n\t\t},\n\t\t\"軸\": {\n\t\t\t\"jp\": \"軸\",\n\t\t\t\"zht\": \"軸\",\n\t\t\t\"zhs\": \"轴\"\n\t\t},\n\t\t\"軽\": {\n\t\t\t\"jp\": \"軽\",\n\t\t\t\"zht\": \"輕\",\n\t\t\t\"zhs\": \"轻\"\n\t\t},\n\t\t\"較\": {\n\t\t\t\"jp\": \"較\",\n\t\t\t\"zht\": \"較\",\n\t\t\t\"zhs\": \"较\"\n\t\t},\n\t\t\"載\": {\n\t\t\t\"jp\": \"載\",\n\t\t\t\"zht\": \"載\",\n\t\t\t\"zhs\": \"载\"\n\t\t},\n\t\t\"輝\": {\n\t\t\t\"jp\": \"輝\",\n\t\t\t\"zht\": \"輝\",\n\t\t\t\"zhs\": \"辉\"\n\t\t},\n\t\t\"輩\": {\n\t\t\t\"jp\": \"輩\",\n\t\t\t\"zht\": \"輩\",\n\t\t\t\"zhs\": \"辈\"\n\t\t},\n\t\t\"輪\": {\n\t\t\t\"jp\": \"輪\",\n\t\t\t\"zht\": \"輪\",\n\t\t\t\"zhs\": \"轮\"\n\t\t},\n\t\t\"輸\": {\n\t\t\t\"jp\": \"輸\",\n\t\t\t\"zht\": \"輸\",\n\t\t\t\"zhs\": \"输\"\n\t\t},\n\t\t\"轄\": {\n\t\t\t\"jp\": \"轄\",\n\t\t\t\"zht\": \"轄\",\n\t\t\t\"zhs\": \"辖\"\n\t\t},\n\t\t\"辞\": {\n\t\t\t\"jp\": \"辞\",\n\t\t\t\"zht\": \"辭\",\n\t\t\t\"zhs\": \"辞\"\n\t\t},\n\t\t\"辺\": {\n\t\t\t\"jp\": \"辺\",\n\t\t\t\"zht\": \"邊\",\n\t\t\t\"zhs\": \"边\"\n\t\t},\n\t\t\"達\": {\n\t\t\t\"jp\": \"達\",\n\t\t\t\"zht\": \"達\",\n\t\t\t\"zhs\": \"达\"\n\t\t},\n\t\t\"遷\": {\n\t\t\t\"jp\": \"遷\",\n\t\t\t\"zht\": \"遷\",\n\t\t\t\"zhs\": \"迁\"\n\t\t},\n\t\t\"過\": {\n\t\t\t\"jp\": \"過\",\n\t\t\t\"zht\": \"過\",\n\t\t\t\"zhs\": \"过\"\n\t\t},\n\t\t\"運\": {\n\t\t\t\"jp\": \"運\",\n\t\t\t\"zht\": \"運\",\n\t\t\t\"zhs\": \"运\"\n\t\t},\n\t\t\"還\": {\n\t\t\t\"jp\": \"還\",\n\t\t\t\"zht\": \"還\",\n\t\t\t\"zhs\": \"还\"\n\t\t},\n\t\t\"進\": {\n\t\t\t\"jp\": \"進\",\n\t\t\t\"zht\": \"進\",\n\t\t\t\"zhs\": \"进\"\n\t\t},\n\t\t\"遠\": {\n\t\t\t\"jp\": \"遠\",\n\t\t\t\"zht\": \"遠\",\n\t\t\t\"zhs\": \"远\"\n\t\t},\n\t\t\"違\": {\n\t\t\t\"jp\": \"違\",\n\t\t\t\"zht\": \"違\",\n\t\t\t\"zhs\": \"违\"\n\t\t},\n\t\t\"連\": {\n\t\t\t\"jp\": \"連\",\n\t\t\t\"zht\": \"連\",\n\t\t\t\"zhs\": \"连\"\n\t\t},\n\t\t\"遅\": {\n\t\t\t\"jp\": \"遅\",\n\t\t\t\"zht\": \"遲\",\n\t\t\t\"zhs\": \"迟\"\n\t\t},\n\t\t\"適\": {\n\t\t\t\"jp\": \"適\",\n\t\t\t\"zht\": \"適\",\n\t\t\t\"zhs\": \"适\"\n\t\t},\n\t\t\"選\": {\n\t\t\t\"jp\": \"選\",\n\t\t\t\"zht\": \"選\",\n\t\t\t\"zhs\": \"选\"\n\t\t},\n\t\t\"逓\": {\n\t\t\t\"jp\": \"逓\",\n\t\t\t\"zht\": \"遞\",\n\t\t\t\"zhs\": \"递\"\n\t\t},\n\t\t\"遺\": {\n\t\t\t\"jp\": \"遺\",\n\t\t\t\"zht\": \"遺\",\n\t\t\t\"zhs\": \"遗\"\n\t\t},\n\t\t\"遥\": {\n\t\t\t\"jp\": \"遥\",\n\t\t\t\"zht\": \"遙\",\n\t\t\t\"zhs\": \"遥\"\n\t\t},\n\t\t\"郵\": {\n\t\t\t\"jp\": \"郵\",\n\t\t\t\"zht\": \"郵\",\n\t\t\t\"zhs\": \"邮\"\n\t\t},\n\t\t\"隣\": {\n\t\t\t\"jp\": \"隣\",\n\t\t\t\"zht\": \"鄰\",\n\t\t\t\"zhs\": \"邻\"\n\t\t},\n\t\t\"酔\": {\n\t\t\t\"jp\": \"酔\",\n\t\t\t\"zht\": \"醉\",\n\t\t\t\"zhs\": \"醉\"\n\t\t},\n\t\t\"醸\": {\n\t\t\t\"jp\": \"醸\",\n\t\t\t\"zht\": \"釀\",\n\t\t\t\"zhs\": \"酿\"\n\t\t},\n\t\t\"釈\": {\n\t\t\t\"jp\": \"釈\",\n\t\t\t\"zht\": \"釋\",\n\t\t\t\"zhs\": \"释\"\n\t\t},\n\t\t\"針\": {\n\t\t\t\"jp\": \"針\",\n\t\t\t\"zht\": \"針\",\n\t\t\t\"zhs\": \"针\"\n\t\t},\n\t\t\"釣\": {\n\t\t\t\"jp\": \"釣\",\n\t\t\t\"zht\": \"釣\",\n\t\t\t\"zhs\": \"钓\"\n\t\t},\n\t\t\"鈍\": {\n\t\t\t\"jp\": \"鈍\",\n\t\t\t\"zht\": \"鈍\",\n\t\t\t\"zhs\": \"钝\"\n\t\t},\n\t\t\"鈴\": {\n\t\t\t\"jp\": \"鈴\",\n\t\t\t\"zht\": \"鈴\",\n\t\t\t\"zhs\": \"铃\"\n\t\t},\n\t\t\"鉄\": {\n\t\t\t\"jp\": \"鉄\",\n\t\t\t\"zht\": \"鐵\",\n\t\t\t\"zhs\": \"铁\"\n\t\t},\n\t\t\"鉛\": {\n\t\t\t\"jp\": \"鉛\",\n\t\t\t\"zht\": \"鉛\",\n\t\t\t\"zhs\": \"铅\"\n\t\t},\n\t\t\"鑑\": {\n\t\t\t\"jp\": \"鑑\",\n\t\t\t\"zht\": \"鑑\",\n\t\t\t\"zhs\": \"鉴\"\n\t\t},\n\t\t\"銀\": {\n\t\t\t\"jp\": \"銀\",\n\t\t\t\"zht\": \"銀\",\n\t\t\t\"zhs\": \"银\"\n\t\t},\n\t\t\"銃\": {\n\t\t\t\"jp\": \"銃\",\n\t\t\t\"zht\": \"銃\",\n\t\t\t\"zhs\": \"铳\"\n\t\t},\n\t\t\"銅\": {\n\t\t\t\"jp\": \"銅\",\n\t\t\t\"zht\": \"銅\",\n\t\t\t\"zhs\": \"铜\"\n\t\t},\n\t\t\"銑\": {\n\t\t\t\"jp\": \"銑\",\n\t\t\t\"zht\": \"銑\",\n\t\t\t\"zhs\": \"铣\"\n\t\t},\n\t\t\"銘\": {\n\t\t\t\"jp\": \"銘\",\n\t\t\t\"zht\": \"銘\",\n\t\t\t\"zhs\": \"铭\"\n\t\t},\n\t\t\"銭\": {\n\t\t\t\"jp\": \"銭\",\n\t\t\t\"zht\": \"錢\",\n\t\t\t\"zhs\": \"钱\"\n\t\t},\n\t\t\"鋭\": {\n\t\t\t\"jp\": \"鋭\",\n\t\t\t\"zht\": \"鋭\",\n\t\t\t\"zhs\": \"锐\"\n\t\t},\n\t\t\"鋳\": {\n\t\t\t\"jp\": \"鋳\",\n\t\t\t\"zht\": \"鑄\",\n\t\t\t\"zhs\": \"铸\"\n\t\t},\n\t\t\"鋼\": {\n\t\t\t\"jp\": \"鋼\",\n\t\t\t\"zht\": \"鋼\",\n\t\t\t\"zhs\": \"钢\"\n\t\t},\n\t\t\"錘\": {\n\t\t\t\"jp\": \"錘\",\n\t\t\t\"zht\": \"錘\",\n\t\t\t\"zhs\": \"锤\"\n\t\t},\n\t\t\"錠\": {\n\t\t\t\"jp\": \"錠\",\n\t\t\t\"zht\": \"錠\",\n\t\t\t\"zhs\": \"锭\"\n\t\t},\n\t\t\"錯\": {\n\t\t\t\"jp\": \"錯\",\n\t\t\t\"zht\": \"錯\",\n\t\t\t\"zhs\": \"错\"\n\t\t},\n\t\t\"鍾\": {\n\t\t\t\"jp\": \"鍾\",\n\t\t\t\"zht\": \"鍾\",\n\t\t\t\"zhs\": \"钟\"\n\t\t},\n\t\t\"鎖\": {\n\t\t\t\"jp\": \"鎖\",\n\t\t\t\"zht\": \"鎖\",\n\t\t\t\"zhs\": \"锁\"\n\t\t},\n\t\t\"鎮\": {\n\t\t\t\"jp\": \"鎮\",\n\t\t\t\"zht\": \"鎮\",\n\t\t\t\"zhs\": \"镇\"\n\t\t},\n\t\t\"鏡\": {\n\t\t\t\"jp\": \"鏡\",\n\t\t\t\"zht\": \"鏡\",\n\t\t\t\"zhs\": \"镜\"\n\t\t},\n\t\t\"長\": {\n\t\t\t\"jp\": \"長\",\n\t\t\t\"zht\": \"長\",\n\t\t\t\"zhs\": \"长\"\n\t\t},\n\t\t\"門\": {\n\t\t\t\"jp\": \"門\",\n\t\t\t\"zht\": \"門\",\n\t\t\t\"zhs\": \"门\"\n\t\t},\n\t\t\"閉\": {\n\t\t\t\"jp\": \"閉\",\n\t\t\t\"zht\": \"閉\",\n\t\t\t\"zhs\": \"闭\"\n\t\t},\n\t\t\"閑\": {\n\t\t\t\"jp\": \"閑\",\n\t\t\t\"zht\": \"閒\",\n\t\t\t\"zhs\": \"闲\"\n\t\t},\n\t\t\"間\": {\n\t\t\t\"jp\": \"間\",\n\t\t\t\"zht\": \"間\",\n\t\t\t\"zhs\": \"间\"\n\t\t},\n\t\t\"閣\": {\n\t\t\t\"jp\": \"閣\",\n\t\t\t\"zht\": \"閣\",\n\t\t\t\"zhs\": \"阁\"\n\t\t},\n\t\t\"閥\": {\n\t\t\t\"jp\": \"閥\",\n\t\t\t\"zht\": \"閥\",\n\t\t\t\"zhs\": \"阀\"\n\t\t},\n\t\t\"閲\": {\n\t\t\t\"jp\": \"閲\",\n\t\t\t\"zht\": \"閲\",\n\t\t\t\"zhs\": \"阅\"\n\t\t},\n\t\t\"隊\": {\n\t\t\t\"jp\": \"隊\",\n\t\t\t\"zht\": \"隊\",\n\t\t\t\"zhs\": \"队\"\n\t\t},\n\t\t\"陽\": {\n\t\t\t\"jp\": \"陽\",\n\t\t\t\"zht\": \"陽\",\n\t\t\t\"zhs\": \"阳\"\n\t\t},\n\t\t\"陰\": {\n\t\t\t\"jp\": \"陰\",\n\t\t\t\"zht\": \"陰\",\n\t\t\t\"zhs\": \"阴\"\n\t\t},\n\t\t\"陣\": {\n\t\t\t\"jp\": \"陣\",\n\t\t\t\"zht\": \"陣\",\n\t\t\t\"zhs\": \"阵\"\n\t\t},\n\t\t\"階\": {\n\t\t\t\"jp\": \"階\",\n\t\t\t\"zht\": \"階\",\n\t\t\t\"zhs\": \"阶\"\n\t\t},\n\t\t\"際\": {\n\t\t\t\"jp\": \"際\",\n\t\t\t\"zht\": \"際\",\n\t\t\t\"zhs\": \"际\"\n\t\t},\n\t\t\"陸\": {\n\t\t\t\"jp\": \"陸\",\n\t\t\t\"zht\": \"陸\",\n\t\t\t\"zhs\": \"陆\"\n\t\t},\n\t\t\"陳\": {\n\t\t\t\"jp\": \"陳\",\n\t\t\t\"zht\": \"陳\",\n\t\t\t\"zhs\": \"陈\"\n\t\t},\n\t\t\"陥\": {\n\t\t\t\"jp\": \"陥\",\n\t\t\t\"zht\": \"陷\",\n\t\t\t\"zhs\": \"陷\"\n\t\t},\n\t\t\"随\": {\n\t\t\t\"jp\": \"随\",\n\t\t\t\"zht\": \"隨\",\n\t\t\t\"zhs\": \"随\"\n\t\t},\n\t\t\"隠\": {\n\t\t\t\"jp\": \"隠\",\n\t\t\t\"zht\": \"隱\",\n\t\t\t\"zhs\": \"隐\"\n\t\t},\n\t\t\"隷\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隷\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"難\": {\n\t\t\t\"jp\": \"難\",\n\t\t\t\"zht\": \"難\",\n\t\t\t\"zhs\": \"难\"\n\t\t},\n\t\t\"鶏\": {\n\t\t\t\"jp\": \"鶏\",\n\t\t\t\"zht\": \"雞\",\n\t\t\t\"zhs\": \"鸡\"\n\t\t},\n\t\t\"霧\": {\n\t\t\t\"jp\": \"霧\",\n\t\t\t\"zht\": \"霧\",\n\t\t\t\"zhs\": \"雾\"\n\t\t},\n\t\t\"静\": {\n\t\t\t\"jp\": \"静\",\n\t\t\t\"zht\": \"靜\",\n\t\t\t\"zhs\": \"静\"\n\t\t},\n\t\t\"頂\": {\n\t\t\t\"jp\": \"頂\",\n\t\t\t\"zht\": \"頂\",\n\t\t\t\"zhs\": \"顶\"\n\t\t},\n\t\t\"項\": {\n\t\t\t\"jp\": \"項\",\n\t\t\t\"zht\": \"項\",\n\t\t\t\"zhs\": \"项\"\n\t\t},\n\t\t\"順\": {\n\t\t\t\"jp\": \"順\",\n\t\t\t\"zht\": \"順\",\n\t\t\t\"zhs\": \"顺\"\n\t\t},\n\t\t\"預\": {\n\t\t\t\"jp\": \"預\",\n\t\t\t\"zht\": \"預\",\n\t\t\t\"zhs\": \"预\"\n\t\t},\n\t\t\"頑\": {\n\t\t\t\"jp\": \"頑\",\n\t\t\t\"zht\": \"頑\",\n\t\t\t\"zhs\": \"顽\"\n\t\t},\n\t\t\"頒\": {\n\t\t\t\"jp\": \"頒\",\n\t\t\t\"zht\": \"頒\",\n\t\t\t\"zhs\": \"颁\"\n\t\t},\n\t\t\"領\": {\n\t\t\t\"jp\": \"領\",\n\t\t\t\"zht\": \"領\",\n\t\t\t\"zhs\": \"领\"\n\t\t},\n\t\t\"頻\": {\n\t\t\t\"jp\": \"頻\",\n\t\t\t\"zht\": \"頻\",\n\t\t\t\"zhs\": \"频\"\n\t\t},\n\t\t\"題\": {\n\t\t\t\"jp\": \"題\",\n\t\t\t\"zht\": \"題\",\n\t\t\t\"zhs\": \"题\"\n\t\t},\n\t\t\"額\": {\n\t\t\t\"jp\": \"額\",\n\t\t\t\"zht\": \"額\",\n\t\t\t\"zhs\": \"额\"\n\t\t},\n\t\t\"顔\": {\n\t\t\t\"jp\": \"顔\",\n\t\t\t\"zht\": \"顏\",\n\t\t\t\"zhs\": \"颜\"\n\t\t},\n\t\t\"風\": {\n\t\t\t\"jp\": \"風\",\n\t\t\t\"zht\": \"風\",\n\t\t\t\"zhs\": \"风\"\n\t\t},\n\t\t\"飛\": {\n\t\t\t\"jp\": \"飛\",\n\t\t\t\"zht\": \"飛\",\n\t\t\t\"zhs\": \"飞\"\n\t\t},\n\t\t\"飢\": {\n\t\t\t\"jp\": \"飢\",\n\t\t\t\"zht\": \"饑\",\n\t\t\t\"zhs\": \"饥\"\n\t\t},\n\t\t\"飯\": {\n\t\t\t\"jp\": \"飯\",\n\t\t\t\"zht\": \"飯\",\n\t\t\t\"zhs\": \"饭\"\n\t\t},\n\t\t\"飲\": {\n\t\t\t\"jp\": \"飲\",\n\t\t\t\"zht\": \"飲\",\n\t\t\t\"zhs\": \"饮\"\n\t\t},\n\t\t\"飼\": {\n\t\t\t\"jp\": \"飼\",\n\t\t\t\"zht\": \"飼\",\n\t\t\t\"zhs\": \"饲\"\n\t\t},\n\t\t\"飽\": {\n\t\t\t\"jp\": \"飽\",\n\t\t\t\"zht\": \"飽\",\n\t\t\t\"zhs\": \"饱\"\n\t\t},\n\t\t\"飾\": {\n\t\t\t\"jp\": \"飾\",\n\t\t\t\"zht\": \"飾\",\n\t\t\t\"zhs\": \"饰\"\n\t\t},\n\t\t\"餓\": {\n\t\t\t\"jp\": \"餓\",\n\t\t\t\"zht\": \"餓\",\n\t\t\t\"zhs\": \"饿\"\n\t\t},\n\t\t\"馬\": {\n\t\t\t\"jp\": \"馬\",\n\t\t\t\"zht\": \"馬\",\n\t\t\t\"zhs\": \"马\"\n\t\t},\n\t\t\"駅\": {\n\t\t\t\"jp\": \"駅\",\n\t\t\t\"zht\": \"驛\",\n\t\t\t\"zhs\": \"驿\"\n\t\t},\n\t\t\"駆\": {\n\t\t\t\"jp\": \"駆\",\n\t\t\t\"zht\": \"驅\",\n\t\t\t\"zhs\": \"驱\"\n\t\t},\n\t\t\"駐\": {\n\t\t\t\"jp\": \"駐\",\n\t\t\t\"zht\": \"駐\",\n\t\t\t\"zhs\": \"驻\"\n\t\t},\n\t\t\"騎\": {\n\t\t\t\"jp\": \"騎\",\n\t\t\t\"zht\": \"騎\",\n\t\t\t\"zhs\": \"骑\"\n\t\t},\n\t\t\"験\": {\n\t\t\t\"jp\": \"験\",\n\t\t\t\"zht\": \"驗\",\n\t\t\t\"zhs\": \"验\"\n\t\t},\n\t\t\"騒\": {\n\t\t\t\"jp\": \"騒\",\n\t\t\t\"zht\": \"騷\",\n\t\t\t\"zhs\": \"骚\"\n\t\t},\n\t\t\"騨\": {\n\t\t\t\"jp\": \"騨\",\n\t\t\t\"zht\": \"驔\",\n\t\t\t\"zhs\": \"驔\"\n\t\t},\n\t\t\"髄\": {\n\t\t\t\"jp\": \"髄\",\n\t\t\t\"zht\": \"髓\",\n\t\t\t\"zhs\": \"髓\"\n\t\t},\n\t\t\"髪\": {\n\t\t\t\"jp\": \"髪\",\n\t\t\t\"zht\": \"髮\",\n\t\t\t\"zhs\": null\n\t\t},\n\t\t\"魚\": {\n\t\t\t\"jp\": \"魚\",\n\t\t\t\"zht\": \"魚\",\n\t\t\t\"zhs\": \"鱼\"\n\t\t},\n\t\t\"魯\": {\n\t\t\t\"jp\": \"魯\",\n\t\t\t\"zht\": \"魯\",\n\t\t\t\"zhs\": \"鲁\"\n\t\t},\n\t\t\"鮮\": {\n\t\t\t\"jp\": \"鮮\",\n\t\t\t\"zht\": \"鮮\",\n\t\t\t\"zhs\": \"鲜\"\n\t\t},\n\t\t\"鯨\": {\n\t\t\t\"jp\": \"鯨\",\n\t\t\t\"zht\": \"鯨\",\n\t\t\t\"zhs\": \"鲸\"\n\t\t},\n\t\t\"鳥\": {\n\t\t\t\"jp\": \"鳥\",\n\t\t\t\"zht\": \"鳥\",\n\t\t\t\"zhs\": \"鸟\"\n\t\t},\n\t\t\"鳴\": {\n\t\t\t\"jp\": \"鳴\",\n\t\t\t\"zht\": \"鳴\",\n\t\t\t\"zhs\": \"鸣\"\n\t\t},\n\t\t\"鶫\": {\n\t\t\t\"jp\": \"鶫\",\n\t\t\t\"zht\": \"鶇\",\n\t\t\t\"zhs\": \"鸫\"\n\t\t},\n\t\t\"鶇\": {\n\t\t\t\"jp\": \"鶇\",\n\t\t\t\"zht\": \"鶇\",\n\t\t\t\"zhs\": \"鸫\"\n\t\t},\n\t\t\"麦\": {\n\t\t\t\"jp\": \"麦\",\n\t\t\t\"zht\": \"麥\",\n\t\t\t\"zhs\": \"麦\"\n\t\t},\n\t\t\"黄\": {\n\t\t\t\"jp\": \"黄\",\n\t\t\t\"zht\": \"黃\",\n\t\t\t\"zhs\": \"黄\"\n\t\t},\n\t\t\"黒\": {\n\t\t\t\"jp\": \"黒\",\n\t\t\t\"zht\": \"黑\",\n\t\t\t\"zhs\": \"黑\"\n\t\t},\n\t\t\"黙\": {\n\t\t\t\"jp\": \"黙\",\n\t\t\t\"zht\": \"默\",\n\t\t\t\"zhs\": \"默\"\n\t\t},\n\t\t\"齢\": {\n\t\t\t\"jp\": \"齢\",\n\t\t\t\"zht\": \"齡\",\n\t\t\t\"zhs\": \"龄\"\n\t\t}\n\t},\n\t\"zht\": {\n\t\t\"會\": {\n\t\t\t\"jp\": \"会\",\n\t\t\t\"zht\": \"會\",\n\t\t\t\"zhs\": \"会\"\n\t\t},\n\t\t\"箋\": {\n\t\t\t\"jp\": \"箋\",\n\t\t\t\"zht\": \"箋\",\n\t\t\t\"zhs\": \"笺\"\n\t\t},\n\t\t\"網\": {\n\t\t\t\"jp\": \"網\",\n\t\t\t\"zht\": \"網\",\n\t\t\t\"zhs\": \"网\"\n\t\t},\n\t\t\"處\": {\n\t\t\t\"jp\": \"処\",\n\t\t\t\"zht\": \"處\",\n\t\t\t\"zhs\": \"处\"\n\t\t},\n\t\t\"話\": {\n\t\t\t\"jp\": \"話\",\n\t\t\t\"zht\": \"話\",\n\t\t\t\"zhs\": \"话\"\n\t\t},\n\t\t\"馱\": {\n\t\t\t\"jp\": \"駄\",\n\t\t\t\"zht\": \"馱\",\n\t\t\t\"zhs\": \"驮\"\n\t\t},\n\t\t\"萬\": {\n\t\t\t\"jp\": \"万\",\n\t\t\t\"zht\": \"萬\",\n\t\t\t\"zhs\": \"万\"\n\t\t},\n\t\t\"與\": {\n\t\t\t\"jp\": \"与\",\n\t\t\t\"zht\": \"與\",\n\t\t\t\"zhs\": \"与\"\n\t\t},\n\t\t\"醜\": {\n\t\t\t\"jp\": \"醜\",\n\t\t\t\"zht\": \"醜\",\n\t\t\t\"zhs\": \"丑\"\n\t\t},\n\t\t\"專\": {\n\t\t\t\"jp\": \"専\",\n\t\t\t\"zht\": \"專\",\n\t\t\t\"zhs\": \"专\"\n\t\t},\n\t\t\"業\": {\n\t\t\t\"jp\": \"業\",\n\t\t\t\"zht\": \"業\",\n\t\t\t\"zhs\": \"业\"\n\t\t},\n\t\t\"東\": {\n\t\t\t\"jp\": \"東\",\n\t\t\t\"zht\": \"東\",\n\t\t\t\"zhs\": \"东\"\n\t\t},\n\t\t\"絲\": {\n\t\t\t\"jp\": \"絲\",\n\t\t\t\"zht\": \"絲\",\n\t\t\t\"zhs\": \"丝\"\n\t\t},\n\t\t\"兩\": {\n\t\t\t\"jp\": \"両\",\n\t\t\t\"zht\": \"兩\",\n\t\t\t\"zhs\": \"两\"\n\t\t},\n\t\t\"嚴\": {\n\t\t\t\"jp\": \"厳\",\n\t\t\t\"zht\": \"嚴\",\n\t\t\t\"zhs\": \"严\"\n\t\t},\n\t\t\"並\": {\n\t\t\t\"jp\": \"並\",\n\t\t\t\"zht\": \"並\",\n\t\t\t\"zhs\": \"并\"\n\t\t},\n\t\t\"喪\": {\n\t\t\t\"jp\": \"喪\",\n\t\t\t\"zht\": \"喪\",\n\t\t\t\"zhs\": \"丧\"\n\t\t},\n\t\t\"個\": {\n\t\t\t\"jp\": \"個\",\n\t\t\t\"zht\": \"個\",\n\t\t\t\"zhs\": \"个\"\n\t\t},\n\t\t\"豐\": {\n\t\t\t\"jp\": \"豊\",\n\t\t\t\"zht\": \"豐\",\n\t\t\t\"zhs\": \"丰\"\n\t\t},\n\t\t\"臨\": {\n\t\t\t\"jp\": \"臨\",\n\t\t\t\"zht\": \"臨\",\n\t\t\t\"zhs\": \"临\"\n\t\t},\n\t\t\"為\": {\n\t\t\t\"jp\": \"為\",\n\t\t\t\"zht\": \"為\",\n\t\t\t\"zhs\": \"为\"\n\t\t},\n\t\t\"麗\": {\n\t\t\t\"jp\": \"麗\",\n\t\t\t\"zht\": \"麗\",\n\t\t\t\"zhs\": \"丽\"\n\t\t},\n\t\t\"舉\": {\n\t\t\t\"jp\": \"挙\",\n\t\t\t\"zht\": \"舉\",\n\t\t\t\"zhs\": \"举\"\n\t\t},\n\t\t\"迺\": {\n\t\t\t\"jp\": \"廼\",\n\t\t\t\"zht\": \"迺\",\n\t\t\t\"zhs\": \"迺\"\n\t\t},\n\t\t\"義\": {\n\t\t\t\"jp\": \"義\",\n\t\t\t\"zht\": \"義\",\n\t\t\t\"zhs\": \"义\"\n\t\t},\n\t\t\"樂\": {\n\t\t\t\"jp\": \"楽\",\n\t\t\t\"zht\": \"樂\",\n\t\t\t\"zhs\": \"乐\"\n\t\t},\n\t\t\"乘\": {\n\t\t\t\"jp\": \"乗\",\n\t\t\t\"zht\": \"乘\",\n\t\t\t\"zhs\": \"乘\"\n\t\t},\n\t\t\"習\": {\n\t\t\t\"jp\": \"習\",\n\t\t\t\"zht\": \"習\",\n\t\t\t\"zhs\": \"习\"\n\t\t},\n\t\t\"鄉\": {\n\t\t\t\"jp\": \"郷\",\n\t\t\t\"zht\": \"鄉\",\n\t\t\t\"zhs\": \"乡\"\n\t\t},\n\t\t\"書\": {\n\t\t\t\"jp\": \"書\",\n\t\t\t\"zht\": \"書\",\n\t\t\t\"zhs\": \"书\"\n\t\t},\n\t\t\"買\": {\n\t\t\t\"jp\": \"買\",\n\t\t\t\"zht\": \"買\",\n\t\t\t\"zhs\": \"买\"\n\t\t},\n\t\t\"亂\": {\n\t\t\t\"jp\": \"乱\",\n\t\t\t\"zht\": \"亂\",\n\t\t\t\"zhs\": \"乱\"\n\t\t},\n\t\t\"乾\": {\n\t\t\t\"jp\": \"乾\",\n\t\t\t\"zht\": \"乾\",\n\t\t\t\"zhs\": \"干\"\n\t\t},\n\t\t\"龜\": {\n\t\t\t\"jp\": \"亀\",\n\t\t\t\"zht\": \"龜\",\n\t\t\t\"zhs\": \"龟\"\n\t\t},\n\t\t\"預\": {\n\t\t\t\"jp\": \"予\",\n\t\t\t\"zht\": \"預\",\n\t\t\t\"zhs\": \"预\"\n\t\t},\n\t\t\"貳\": {\n\t\t\t\"jp\": \"弐\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"雲\": {\n\t\t\t\"jp\": \"雲\",\n\t\t\t\"zht\": \"雲\",\n\t\t\t\"zhs\": \"云\"\n\t\t},\n\t\t\"亞\": {\n\t\t\t\"jp\": \"亜\",\n\t\t\t\"zht\": \"亞\",\n\t\t\t\"zhs\": \"亚\"\n\t\t},\n\t\t\"產\": {\n\t\t\t\"jp\": \"産\",\n\t\t\t\"zht\": \"產\",\n\t\t\t\"zhs\": \"产\"\n\t\t},\n\t\t\"畝\": {\n\t\t\t\"jp\": \"畝\",\n\t\t\t\"zht\": \"畝\",\n\t\t\t\"zhs\": \"亩\"\n\t\t},\n\t\t\"親\": {\n\t\t\t\"jp\": \"親\",\n\t\t\t\"zht\": \"親\",\n\t\t\t\"zhs\": \"亲\"\n\t\t},\n\t\t\"億\": {\n\t\t\t\"jp\": \"億\",\n\t\t\t\"zht\": \"億\",\n\t\t\t\"zhs\": \"亿\"\n\t\t},\n\t\t\"僕\": {\n\t\t\t\"jp\": \"僕\",\n\t\t\t\"zht\": \"僕\",\n\t\t\t\"zhs\": \"仆\"\n\t\t},\n\t\t\"從\": {\n\t\t\t\"jp\": \"従\",\n\t\t\t\"zht\": \"從\",\n\t\t\t\"zhs\": \"从\"\n\t\t},\n\t\t\"佛\": {\n\t\t\t\"jp\": \"仏\",\n\t\t\t\"zht\": \"佛\",\n\t\t\t\"zhs\": \"佛\"\n\t\t},\n\t\t\"倉\": {\n\t\t\t\"jp\": \"倉\",\n\t\t\t\"zht\": \"倉\",\n\t\t\t\"zhs\": \"仓\"\n\t\t},\n\t\t\"儀\": {\n\t\t\t\"jp\": \"儀\",\n\t\t\t\"zht\": \"儀\",\n\t\t\t\"zhs\": \"仪\"\n\t\t},\n\t\t\"假\": {\n\t\t\t\"jp\": \"仮\",\n\t\t\t\"zht\": \"假\",\n\t\t\t\"zhs\": \"假\"\n\t\t},\n\t\t\"價\": {\n\t\t\t\"jp\": \"価\",\n\t\t\t\"zht\": \"價\",\n\t\t\t\"zhs\": \"价\"\n\t\t},\n\t\t\"眾\": {\n\t\t\t\"jp\": \"衆\",\n\t\t\t\"zht\": \"眾\",\n\t\t\t\"zhs\": \"众\"\n\t\t},\n\t\t\"優\": {\n\t\t\t\"jp\": \"優\",\n\t\t\t\"zht\": \"優\",\n\t\t\t\"zhs\": \"优\"\n\t\t},\n\t\t\"傳\": {\n\t\t\t\"jp\": \"伝\",\n\t\t\t\"zht\": \"傳\",\n\t\t\t\"zhs\": \"传\"\n\t\t},\n\t\t\"傘\": {\n\t\t\t\"jp\": \"傘\",\n\t\t\t\"zht\": \"傘\",\n\t\t\t\"zhs\": \"伞\"\n\t\t},\n\t\t\"偉\": {\n\t\t\t\"jp\": \"偉\",\n\t\t\t\"zht\": \"偉\",\n\t\t\t\"zhs\": \"伟\"\n\t\t},\n\t\t\"傷\": {\n\t\t\t\"jp\": \"傷\",\n\t\t\t\"zht\": \"傷\",\n\t\t\t\"zhs\": \"伤\"\n\t\t},\n\t\t\"倫\": {\n\t\t\t\"jp\": \"倫\",\n\t\t\t\"zht\": \"倫\",\n\t\t\t\"zhs\": \"伦\"\n\t\t},\n\t\t\"偽\": {\n\t\t\t\"jp\": \"偽\",\n\t\t\t\"zht\": \"偽\",\n\t\t\t\"zhs\": \"伪\"\n\t\t},\n\t\t\"體\": {\n\t\t\t\"jp\": \"体\",\n\t\t\t\"zht\": \"體\",\n\t\t\t\"zhs\": \"体\"\n\t\t},\n\t\t\"餘\": {\n\t\t\t\"jp\": \"余\",\n\t\t\t\"zht\": \"餘\",\n\t\t\t\"zhs\": \"余\"\n\t\t},\n\t\t\"來\": {\n\t\t\t\"jp\": \"来\",\n\t\t\t\"zht\": \"來\",\n\t\t\t\"zhs\": \"来\"\n\t\t},\n\t\t\"偵\": {\n\t\t\t\"jp\": \"偵\",\n\t\t\t\"zht\": \"偵\",\n\t\t\t\"zhs\": \"侦\"\n\t\t},\n\t\t\"側\": {\n\t\t\t\"jp\": \"側\",\n\t\t\t\"zht\": \"側\",\n\t\t\t\"zhs\": \"侧\"\n\t\t},\n\t\t\"儉\": {\n\t\t\t\"jp\": \"倹\",\n\t\t\t\"zht\": \"儉\",\n\t\t\t\"zhs\": \"俭\"\n\t\t},\n\t\t\"俱\": {\n\t\t\t\"jp\": \"倶\",\n\t\t\t\"zht\": \"俱\",\n\t\t\t\"zhs\": \"俱\"\n\t\t},\n\t\t\"債\": {\n\t\t\t\"jp\": \"債\",\n\t\t\t\"zht\": \"債\",\n\t\t\t\"zhs\": \"债\"\n\t\t},\n\t\t\"傾\": {\n\t\t\t\"jp\": \"傾\",\n\t\t\t\"zht\": \"傾\",\n\t\t\t\"zhs\": \"倾\"\n\t\t},\n\t\t\"償\": {\n\t\t\t\"jp\": \"償\",\n\t\t\t\"zht\": \"償\",\n\t\t\t\"zhs\": \"偿\"\n\t\t},\n\t\t\"傑\": {\n\t\t\t\"jp\": \"傑\",\n\t\t\t\"zht\": \"傑\",\n\t\t\t\"zhs\": \"杰\"\n\t\t},\n\t\t\"備\": {\n\t\t\t\"jp\": \"備\",\n\t\t\t\"zht\": \"備\",\n\t\t\t\"zhs\": \"备\"\n\t\t},\n\t\t\"當\": {\n\t\t\t\"jp\": \"当\",\n\t\t\t\"zht\": \"當\",\n\t\t\t\"zhs\": \"当\"\n\t\t},\n\t\t\"盡\": {\n\t\t\t\"jp\": \"尽\",\n\t\t\t\"zht\": \"盡\",\n\t\t\t\"zhs\": \"尽\"\n\t\t},\n\t\t\"兒\": {\n\t\t\t\"jp\": \"児\",\n\t\t\t\"zht\": \"兒\",\n\t\t\t\"zhs\": \"儿\"\n\t\t},\n\t\t\"黨\": {\n\t\t\t\"jp\": \"党\",\n\t\t\t\"zht\": \"黨\",\n\t\t\t\"zhs\": \"党\"\n\t\t},\n\t\t\"內\": {\n\t\t\t\"jp\": \"内\",\n\t\t\t\"zht\": \"內\",\n\t\t\t\"zhs\": \"内\"\n\t\t},\n\t\t\"關\": {\n\t\t\t\"jp\": \"関\",\n\t\t\t\"zht\": \"關\",\n\t\t\t\"zhs\": \"关\"\n\t\t},\n\t\t\"興\": {\n\t\t\t\"jp\": \"興\",\n\t\t\t\"zht\": \"興\",\n\t\t\t\"zhs\": \"兴\"\n\t\t},\n\t\t\"養\": {\n\t\t\t\"jp\": \"養\",\n\t\t\t\"zht\": \"養\",\n\t\t\t\"zhs\": \"养\"\n\t\t},\n\t\t\"獸\": {\n\t\t\t\"jp\": \"獣\",\n\t\t\t\"zht\": \"獸\",\n\t\t\t\"zhs\": \"兽\"\n\t\t},\n\t\t\"圓\": {\n\t\t\t\"jp\": \"円\",\n\t\t\t\"zht\": \"圓\",\n\t\t\t\"zhs\": \"圆\"\n\t\t},\n\t\t\"寫\": {\n\t\t\t\"jp\": \"写\",\n\t\t\t\"zht\": \"寫\",\n\t\t\t\"zhs\": \"写\"\n\t\t},\n\t\t\"軍\": {\n\t\t\t\"jp\": \"軍\",\n\t\t\t\"zht\": \"軍\",\n\t\t\t\"zhs\": \"军\"\n\t\t},\n\t\t\"農\": {\n\t\t\t\"jp\": \"農\",\n\t\t\t\"zht\": \"農\",\n\t\t\t\"zhs\": \"农\"\n\t\t},\n\t\t\"富\": {\n\t\t\t\"jp\": \"冨\",\n\t\t\t\"zht\": \"富\",\n\t\t\t\"zhs\": \"富\"\n\t\t},\n\t\t\"冰\": {\n\t\t\t\"jp\": \"氷\",\n\t\t\t\"zht\": \"冰\",\n\t\t\t\"zhs\": \"冰\"\n\t\t},\n\t\t\"衝\": {\n\t\t\t\"jp\": \"衝\",\n\t\t\t\"zht\": \"衝\",\n\t\t\t\"zhs\": \"冲\"\n\t\t},\n\t\t\"決\": {\n\t\t\t\"jp\": \"決\",\n\t\t\t\"zht\": \"決\",\n\t\t\t\"zhs\": \"决\"\n\t\t},\n\t\t\"凍\": {\n\t\t\t\"jp\": \"凍\",\n\t\t\t\"zht\": \"凍\",\n\t\t\t\"zhs\": \"冻\"\n\t\t},\n\t\t\"塗\": {\n\t\t\t\"jp\": \"塗\",\n\t\t\t\"zht\": \"塗\",\n\t\t\t\"zhs\": \"涂\"\n\t\t},\n\t\t\"淒\": {\n\t\t\t\"jp\": \"凄\",\n\t\t\t\"zht\": \"淒\",\n\t\t\t\"zhs\": \"凄\"\n\t\t},\n\t\t\"悽\": {\n\t\t\t\"jp\": \"凄\",\n\t\t\t\"zht\": \"悽\",\n\t\t\t\"zhs\": \"凄\"\n\t\t},\n\t\t\"準\": {\n\t\t\t\"jp\": \"准\",\n\t\t\t\"zht\": \"準\",\n\t\t\t\"zhs\": \"准\"\n\t\t},\n\t\t\"幾\": {\n\t\t\t\"jp\": \"幾\",\n\t\t\t\"zht\": \"幾\",\n\t\t\t\"zhs\": \"几\"\n\t\t},\n\t\t\"擊\": {\n\t\t\t\"jp\": \"撃\",\n\t\t\t\"zht\": \"擊\",\n\t\t\t\"zhs\": \"击\"\n\t\t},\n\t\t\"劃\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"劃\",\n\t\t\t\"zhs\": \"划\"\n\t\t},\n\t\t\"畫\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"畫\",\n\t\t\t\"zhs\": \"画\"\n\t\t},\n\t\t\"則\": {\n\t\t\t\"jp\": \"則\",\n\t\t\t\"zht\": \"則\",\n\t\t\t\"zhs\": \"则\"\n\t\t},\n\t\t\"剛\": {\n\t\t\t\"jp\": \"剛\",\n\t\t\t\"zht\": \"剛\",\n\t\t\t\"zhs\": \"刚\"\n\t\t},\n\t\t\"創\": {\n\t\t\t\"jp\": \"創\",\n\t\t\t\"zht\": \"創\",\n\t\t\t\"zhs\": \"创\"\n\t\t},\n\t\t\"別\": {\n\t\t\t\"jp\": \"別\",\n\t\t\t\"zht\": \"別\",\n\t\t\t\"zhs\": \"别\"\n\t\t},\n\t\t\"製\": {\n\t\t\t\"jp\": \"製\",\n\t\t\t\"zht\": \"製\",\n\t\t\t\"zhs\": \"制\"\n\t\t},\n\t\t\"卷\": {\n\t\t\t\"jp\": \"券\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"剎\": {\n\t\t\t\"jp\": \"刹\",\n\t\t\t\"zht\": \"剎\",\n\t\t\t\"zhs\": \"刹\"\n\t\t},\n\t\t\"劑\": {\n\t\t\t\"jp\": \"剤\",\n\t\t\t\"zht\": \"劑\",\n\t\t\t\"zhs\": \"剂\"\n\t\t},\n\t\t\"劍\": {\n\t\t\t\"jp\": \"剣\",\n\t\t\t\"zht\": \"劍\",\n\t\t\t\"zhs\": \"剑\"\n\t\t},\n\t\t\"劇\": {\n\t\t\t\"jp\": \"劇\",\n\t\t\t\"zht\": \"劇\",\n\t\t\t\"zhs\": \"剧\"\n\t\t},\n\t\t\"剩\": {\n\t\t\t\"jp\": \"剰\",\n\t\t\t\"zht\": \"剩\",\n\t\t\t\"zhs\": \"剩\"\n\t\t},\n\t\t\"勸\": {\n\t\t\t\"jp\": \"勧\",\n\t\t\t\"zht\": \"勸\",\n\t\t\t\"zhs\": \"劝\"\n\t\t},\n\t\t\"務\": {\n\t\t\t\"jp\": \"務\",\n\t\t\t\"zht\": \"務\",\n\t\t\t\"zhs\": \"务\"\n\t\t},\n\t\t\"動\": {\n\t\t\t\"jp\": \"動\",\n\t\t\t\"zht\": \"動\",\n\t\t\t\"zhs\": \"动\"\n\t\t},\n\t\t\"勵\": {\n\t\t\t\"jp\": \"励\",\n\t\t\t\"zht\": \"勵\",\n\t\t\t\"zhs\": \"励\"\n\t\t},\n\t\t\"勞\": {\n\t\t\t\"jp\": \"労\",\n\t\t\t\"zht\": \"勞\",\n\t\t\t\"zhs\": \"劳\"\n\t\t},\n\t\t\"效\": {\n\t\t\t\"jp\": \"効\",\n\t\t\t\"zht\": \"效\",\n\t\t\t\"zhs\": null\n\t\t},\n\t\t\"勢\": {\n\t\t\t\"jp\": \"勢\",\n\t\t\t\"zht\": \"勢\",\n\t\t\t\"zhs\": \"势\"\n\t\t},\n\t\t\"勳\": {\n\t\t\t\"jp\": \"勲\",\n\t\t\t\"zht\": \"勳\",\n\t\t\t\"zhs\": \"勋\"\n\t\t},\n\t\t\"勝\": {\n\t\t\t\"jp\": \"勝\",\n\t\t\t\"zht\": \"勝\",\n\t\t\t\"zhs\": \"胜\"\n\t\t},\n\t\t\"區\": {\n\t\t\t\"jp\": \"区\",\n\t\t\t\"zht\": \"區\",\n\t\t\t\"zhs\": \"区\"\n\t\t},\n\t\t\"醫\": {\n\t\t\t\"jp\": \"医\",\n\t\t\t\"zht\": \"醫\",\n\t\t\t\"zhs\": \"医\"\n\t\t},\n\t\t\"華\": {\n\t\t\t\"jp\": \"華\",\n\t\t\t\"zht\": \"華\",\n\t\t\t\"zhs\": \"华\"\n\t\t},\n\t\t\"協\": {\n\t\t\t\"jp\": \"協\",\n\t\t\t\"zht\": \"協\",\n\t\t\t\"zhs\": \"协\"\n\t\t},\n\t\t\"單\": {\n\t\t\t\"jp\": \"単\",\n\t\t\t\"zht\": \"單\",\n\t\t\t\"zhs\": \"单\"\n\t\t},\n\t\t\"賣\": {\n\t\t\t\"jp\": \"売\",\n\t\t\t\"zht\": \"賣\",\n\t\t\t\"zhs\": \"卖\"\n\t\t},\n\t\t\"衛\": {\n\t\t\t\"jp\": \"衛\",\n\t\t\t\"zht\": \"衛\",\n\t\t\t\"zhs\": \"卫\"\n\t\t},\n\t\t\"廳\": {\n\t\t\t\"jp\": \"庁\",\n\t\t\t\"zht\": \"廳\",\n\t\t\t\"zhs\": \"厅\"\n\t\t},\n\t\t\"歷\": {\n\t\t\t\"jp\": \"歴\",\n\t\t\t\"zht\": \"歷\",\n\t\t\t\"zhs\": \"历\"\n\t\t},\n\t\t\"曆\": {\n\t\t\t\"jp\": \"暦\",\n\t\t\t\"zht\": \"曆\",\n\t\t\t\"zhs\": \"历\"\n\t\t},\n\t\t\"壓\": {\n\t\t\t\"jp\": \"圧\",\n\t\t\t\"zht\": \"壓\",\n\t\t\t\"zhs\": \"压\"\n\t\t},\n\t\t\"縣\": {\n\t\t\t\"jp\": \"県\",\n\t\t\t\"zht\": \"縣\",\n\t\t\t\"zhs\": \"县\"\n\t\t},\n\t\t\"參\": {\n\t\t\t\"jp\": \"参\",\n\t\t\t\"zht\": \"參\",\n\t\t\t\"zhs\": \"参\"\n\t\t},\n\t\t\"雙\": {\n\t\t\t\"jp\": \"双\",\n\t\t\t\"zht\": \"雙\",\n\t\t\t\"zhs\": \"双\"\n\t\t},\n\t\t\"收\": {\n\t\t\t\"jp\": \"収\",\n\t\t\t\"zht\": \"收\",\n\t\t\t\"zhs\": \"收\"\n\t\t},\n\t\t\"發\": {\n\t\t\t\"jp\": \"発\",\n\t\t\t\"zht\": \"發\",\n\t\t\t\"zhs\": \"发\"\n\t\t},\n\t\t\"變\": {\n\t\t\t\"jp\": \"変\",\n\t\t\t\"zht\": \"變\",\n\t\t\t\"zhs\": \"变\"\n\t\t},\n\t\t\"疊\": {\n\t\t\t\"jp\": \"畳\",\n\t\t\t\"zht\": \"疊\",\n\t\t\t\"zhs\": \"叠\"\n\t\t},\n\t\t\"號\": {\n\t\t\t\"jp\": \"号\",\n\t\t\t\"zht\": \"號\",\n\t\t\t\"zhs\": \"号\"\n\t\t},\n\t\t\"嘆\": {\n\t\t\t\"jp\": \"嘆\",\n\t\t\t\"zht\": \"嘆\",\n\t\t\t\"zhs\": \"叹\"\n\t\t},\n\t\t\"嚇\": {\n\t\t\t\"jp\": \"嚇\",\n\t\t\t\"zht\": \"嚇\",\n\t\t\t\"zhs\": \"吓\"\n\t\t},\n\t\t\"聽\": {\n\t\t\t\"jp\": \"聴\",\n\t\t\t\"zht\": \"聽\",\n\t\t\t\"zhs\": \"听\"\n\t\t},\n\t\t\"啟\": {\n\t\t\t\"jp\": \"啓\",\n\t\t\t\"zht\": \"啟\",\n\t\t\t\"zhs\": \"启\"\n\t\t},\n\t\t\"員\": {\n\t\t\t\"jp\": \"員\",\n\t\t\t\"zht\": \"員\",\n\t\t\t\"zhs\": \"员\"\n\t\t},\n\t\t\"諮\": {\n\t\t\t\"jp\": \"諮\",\n\t\t\t\"zht\": \"諮\",\n\t\t\t\"zhs\": \"谘\"\n\t\t},\n\t\t\"鹹\": {\n\t\t\t\"jp\": \"鹹\",\n\t\t\t\"zht\": \"鹹\",\n\t\t\t\"zhs\": \"咸\"\n\t\t},\n\t\t\"響\": {\n\t\t\t\"jp\": \"響\",\n\t\t\t\"zht\": \"響\",\n\t\t\t\"zhs\": \"响\"\n\t\t},\n\t\t\"問\": {\n\t\t\t\"jp\": \"問\",\n\t\t\t\"zht\": \"問\",\n\t\t\t\"zhs\": \"问\"\n\t\t},\n\t\t\"營\": {\n\t\t\t\"jp\": \"営\",\n\t\t\t\"zht\": \"營\",\n\t\t\t\"zhs\": \"营\"\n\t\t},\n\t\t\"噴\": {\n\t\t\t\"jp\": \"噴\",\n\t\t\t\"zht\": \"噴\",\n\t\t\t\"zhs\": \"喷\"\n\t\t},\n\t\t\"囑\": {\n\t\t\t\"jp\": \"嘱\",\n\t\t\t\"zht\": \"囑\",\n\t\t\t\"zhs\": \"嘱\"\n\t\t},\n\t\t\"蘇\": {\n\t\t\t\"jp\": \"蘇\",\n\t\t\t\"zht\": \"蘇\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"團\": {\n\t\t\t\"jp\": \"団\",\n\t\t\t\"zht\": \"團\",\n\t\t\t\"zhs\": \"团\"\n\t\t},\n\t\t\"園\": {\n\t\t\t\"jp\": \"園\",\n\t\t\t\"zht\": \"園\",\n\t\t\t\"zhs\": \"园\"\n\t\t},\n\t\t\"國\": {\n\t\t\t\"jp\": \"国\",\n\t\t\t\"zht\": \"國\",\n\t\t\t\"zhs\": \"国\"\n\t\t},\n\t\t\"圍\": {\n\t\t\t\"jp\": \"囲\",\n\t\t\t\"zht\": \"圍\",\n\t\t\t\"zhs\": \"围\"\n\t\t},\n\t\t\"圖\": {\n\t\t\t\"jp\": \"図\",\n\t\t\t\"zht\": \"圖\",\n\t\t\t\"zhs\": \"图\"\n\t\t},\n\t\t\"圈\": {\n\t\t\t\"jp\": \"圏\",\n\t\t\t\"zht\": \"圈\",\n\t\t\t\"zhs\": \"圈\"\n\t\t},\n\t\t\"聖\": {\n\t\t\t\"jp\": \"聖\",\n\t\t\t\"zht\": \"聖\",\n\t\t\t\"zhs\": \"圣\"\n\t\t},\n\t\t\"場\": {\n\t\t\t\"jp\": \"場\",\n\t\t\t\"zht\": \"場\",\n\t\t\t\"zhs\": \"场\"\n\t\t},\n\t\t\"壞\": {\n\t\t\t\"jp\": \"壊\",\n\t\t\t\"zht\": \"壞\",\n\t\t\t\"zhs\": \"坏\"\n\t\t},\n\t\t\"塊\": {\n\t\t\t\"jp\": \"塊\",\n\t\t\t\"zht\": \"塊\",\n\t\t\t\"zhs\": \"块\"\n\t\t},\n\t\t\"堅\": {\n\t\t\t\"jp\": \"堅\",\n\t\t\t\"zht\": \"堅\",\n\t\t\t\"zhs\": \"坚\"\n\t\t},\n\t\t\"壇\": {\n\t\t\t\"jp\": \"壇\",\n\t\t\t\"zht\": \"壇\",\n\t\t\t\"zhs\": \"坛\"\n\t\t},\n\t\t\"墳\": {\n\t\t\t\"jp\": \"墳\",\n\t\t\t\"zht\": \"墳\",\n\t\t\t\"zhs\": \"坟\"\n\t\t},\n\t\t\"墜\": {\n\t\t\t\"jp\": \"墜\",\n\t\t\t\"zht\": \"墜\",\n\t\t\t\"zhs\": \"坠\"\n\t\t},\n\t\t\"壘\": {\n\t\t\t\"jp\": \"塁\",\n\t\t\t\"zht\": \"壘\",\n\t\t\t\"zhs\": \"垒\"\n\t\t},\n\t\t\"墾\": {\n\t\t\t\"jp\": \"墾\",\n\t\t\t\"zht\": \"墾\",\n\t\t\t\"zhs\": \"垦\"\n\t\t},\n\t\t\"執\": {\n\t\t\t\"jp\": \"執\",\n\t\t\t\"zht\": \"執\",\n\t\t\t\"zhs\": \"执\"\n\t\t},\n\t\t\"墮\": {\n\t\t\t\"jp\": \"堕\",\n\t\t\t\"zht\": \"墮\",\n\t\t\t\"zhs\": \"堕\"\n\t\t},\n\t\t\"報\": {\n\t\t\t\"jp\": \"報\",\n\t\t\t\"zht\": \"報\",\n\t\t\t\"zhs\": \"报\"\n\t\t},\n\t\t\"鹽\": {\n\t\t\t\"jp\": \"塩\",\n\t\t\t\"zht\": \"鹽\",\n\t\t\t\"zhs\": \"盐\"\n\t\t},\n\t\t\"增\": {\n\t\t\t\"jp\": \"増\",\n\t\t\t\"zht\": \"增\",\n\t\t\t\"zhs\": \"增\"\n\t\t},\n\t\t\"壤\": {\n\t\t\t\"jp\": \"壌\",\n\t\t\t\"zht\": \"壤\",\n\t\t\t\"zhs\": \"壤\"\n\t\t},\n\t\t\"壯\": {\n\t\t\t\"jp\": \"壮\",\n\t\t\t\"zht\": \"壯\",\n\t\t\t\"zhs\": \"壮\"\n\t\t},\n\t\t\"聲\": {\n\t\t\t\"jp\": \"声\",\n\t\t\t\"zht\": \"聲\",\n\t\t\t\"zhs\": \"声\"\n\t\t},\n\t\t\"壹\": {\n\t\t\t\"jp\": \"壱\",\n\t\t\t\"zht\": \"壹\",\n\t\t\t\"zhs\": \"壹\"\n\t\t},\n\t\t\"殻\": {\n\t\t\t\"jp\": \"殻\",\n\t\t\t\"zht\": \"殻\",\n\t\t\t\"zhs\": \"壳\"\n\t\t},\n\t\t\"殼\": {\n\t\t\t\"jp\": \"殼\",\n\t\t\t\"zht\": \"殼\",\n\t\t\t\"zhs\": \"壳\"\n\t\t},\n\t\t\"壽\": {\n\t\t\t\"jp\": \"寿\",\n\t\t\t\"zht\": \"壽\",\n\t\t\t\"zhs\": \"寿\"\n\t\t},\n\t\t\"復\": {\n\t\t\t\"jp\": \"復\",\n\t\t\t\"zht\": \"復\",\n\t\t\t\"zhs\": \"复\"\n\t\t},\n\t\t\"複\": {\n\t\t\t\"jp\": \"複\",\n\t\t\t\"zht\": \"複\",\n\t\t\t\"zhs\": \"复\"\n\t\t},\n\t\t\"夢\": {\n\t\t\t\"jp\": \"夢\",\n\t\t\t\"zht\": \"夢\",\n\t\t\t\"zhs\": \"梦\"\n\t\t},\n\t\t\"頭\": {\n\t\t\t\"jp\": \"頭\",\n\t\t\t\"zht\": \"頭\",\n\t\t\t\"zhs\": \"头\"\n\t\t},\n\t\t\"誇\": {\n\t\t\t\"jp\": \"誇\",\n\t\t\t\"zht\": \"誇\",\n\t\t\t\"zhs\": \"夸\"\n\t\t},\n\t\t\"奪\": {\n\t\t\t\"jp\": \"奪\",\n\t\t\t\"zht\": \"奪\",\n\t\t\t\"zhs\": \"夺\"\n\t\t},\n\t\t\"奮\": {\n\t\t\t\"jp\": \"奮\",\n\t\t\t\"zht\": \"奮\",\n\t\t\t\"zhs\": \"奋\"\n\t\t},\n\t\t\"獎\": {\n\t\t\t\"jp\": \"奨\",\n\t\t\t\"zht\": \"獎\",\n\t\t\t\"zhs\": \"奖\"\n\t\t},\n\t\t\"妝\": {\n\t\t\t\"jp\": \"粧\",\n\t\t\t\"zht\": \"妝\",\n\t\t\t\"zhs\": \"妆\"\n\t\t},\n\t\t\"婦\": {\n\t\t\t\"jp\": \"婦\",\n\t\t\t\"zht\": \"婦\",\n\t\t\t\"zhs\": \"妇\"\n\t\t},\n\t\t\"姐\": {\n\t\t\t\"jp\": \"姉\",\n\t\t\t\"zht\": \"姐\",\n\t\t\t\"zhs\": \"姐\"\n\t\t},\n\t\t\"姬\": {\n\t\t\t\"jp\": \"姫\",\n\t\t\t\"zht\": \"姬\",\n\t\t\t\"zhs\": \"姬\"\n\t\t},\n\t\t\"孃\": {\n\t\t\t\"jp\": \"嬢\",\n\t\t\t\"zht\": \"孃\",\n\t\t\t\"zhs\": \"娘\"\n\t\t},\n\t\t\"娛\": {\n\t\t\t\"jp\": \"娯\",\n\t\t\t\"zht\": \"娛\",\n\t\t\t\"zhs\": \"娱\"\n\t\t},\n\t\t\"孫\": {\n\t\t\t\"jp\": \"孫\",\n\t\t\t\"zht\": \"孫\",\n\t\t\t\"zhs\": \"孙\"\n\t\t},\n\t\t\"學\": {\n\t\t\t\"jp\": \"学\",\n\t\t\t\"zht\": \"學\",\n\t\t\t\"zhs\": \"学\"\n\t\t},\n\t\t\"寧\": {\n\t\t\t\"jp\": \"寧\",\n\t\t\t\"zht\": \"寧\",\n\t\t\t\"zhs\": \"宁\"\n\t\t},\n\t\t\"寶\": {\n\t\t\t\"jp\": \"宝\",\n\t\t\t\"zht\": \"寶\",\n\t\t\t\"zhs\": \"宝\"\n\t\t},\n\t\t\"實\": {\n\t\t\t\"jp\": \"実\",\n\t\t\t\"zht\": \"實\",\n\t\t\t\"zhs\": \"实\"\n\t\t},\n\t\t\"審\": {\n\t\t\t\"jp\": \"審\",\n\t\t\t\"zht\": \"審\",\n\t\t\t\"zhs\": \"审\"\n\t\t},\n\t\t\"憲\": {\n\t\t\t\"jp\": \"憲\",\n\t\t\t\"zht\": \"憲\",\n\t\t\t\"zhs\": \"宪\"\n\t\t},\n\t\t\"宮\": {\n\t\t\t\"jp\": \"宮\",\n\t\t\t\"zht\": \"宮\",\n\t\t\t\"zhs\": \"宫\"\n\t\t},\n\t\t\"寬\": {\n\t\t\t\"jp\": \"寬\",\n\t\t\t\"zht\": \"寬\",\n\t\t\t\"zhs\": \"宽\"\n\t\t},\n\t\t\"賓\": {\n\t\t\t\"jp\": \"賓\",\n\t\t\t\"zht\": \"賓\",\n\t\t\t\"zhs\": \"宾\"\n\t\t},\n\t\t\"祕\": {\n\t\t\t\"jp\": \"秘\",\n\t\t\t\"zht\": \"祕\",\n\t\t\t\"zhs\": \"秘\"\n\t\t},\n\t\t\"寢\": {\n\t\t\t\"jp\": \"寝\",\n\t\t\t\"zht\": \"寢\",\n\t\t\t\"zhs\": \"寝\"\n\t\t},\n\t\t\"對\": {\n\t\t\t\"jp\": \"対\",\n\t\t\t\"zht\": \"對\",\n\t\t\t\"zhs\": \"对\"\n\t\t},\n\t\t\"尋\": {\n\t\t\t\"jp\": \"尋\",\n\t\t\t\"zht\": \"尋\",\n\t\t\t\"zhs\": \"寻\"\n\t\t},\n\t\t\"導\": {\n\t\t\t\"jp\": \"導\",\n\t\t\t\"zht\": \"導\",\n\t\t\t\"zhs\": \"导\"\n\t\t},\n\t\t\"將\": {\n\t\t\t\"jp\": \"将\",\n\t\t\t\"zht\": \"將\",\n\t\t\t\"zhs\": \"将\"\n\t\t},\n\t\t\"層\": {\n\t\t\t\"jp\": \"層\",\n\t\t\t\"zht\": \"層\",\n\t\t\t\"zhs\": \"层\"\n\t\t},\n\t\t\"屬\": {\n\t\t\t\"jp\": \"属\",\n\t\t\t\"zht\": \"屬\",\n\t\t\t\"zhs\": \"属\"\n\t\t},\n\t\t\"歲\": {\n\t\t\t\"jp\": \"歳\",\n\t\t\t\"zht\": \"歲\",\n\t\t\t\"zhs\": \"岁\"\n\t\t},\n\t\t\"島\": {\n\t\t\t\"jp\": \"島\",\n\t\t\t\"zht\": \"島\",\n\t\t\t\"zhs\": \"岛\"\n\t\t},\n\t\t\"巖\": {\n\t\t\t\"jp\": \"巌\",\n\t\t\t\"zht\": \"巖\",\n\t\t\t\"zhs\": \"巖\"\n\t\t},\n\t\t\"峽\": {\n\t\t\t\"jp\": \"峡\",\n\t\t\t\"zht\": \"峽\",\n\t\t\t\"zhs\": \"峡\"\n\t\t},\n\t\t\"險\": {\n\t\t\t\"jp\": \"険\",\n\t\t\t\"zht\": \"險\",\n\t\t\t\"zhs\": \"险\"\n\t\t},\n\t\t\"幣\": {\n\t\t\t\"jp\": \"幣\",\n\t\t\t\"zht\": \"幣\",\n\t\t\t\"zhs\": \"币\"\n\t\t},\n\t\t\"帥\": {\n\t\t\t\"jp\": \"帥\",\n\t\t\t\"zht\": \"帥\",\n\t\t\t\"zhs\": \"帅\"\n\t\t},\n\t\t\"師\": {\n\t\t\t\"jp\": \"師\",\n\t\t\t\"zht\": \"師\",\n\t\t\t\"zhs\": \"师\"\n\t\t},\n\t\t\"帳\": {\n\t\t\t\"jp\": \"帳\",\n\t\t\t\"zht\": \"帳\",\n\t\t\t\"zhs\": \"帐\"\n\t\t},\n\t\t\"帶\": {\n\t\t\t\"jp\": \"帶\",\n\t\t\t\"zht\": \"帶\",\n\t\t\t\"zhs\": \"带\"\n\t\t},\n\t\t\"歸\": {\n\t\t\t\"jp\": \"帰\",\n\t\t\t\"zht\": \"歸\",\n\t\t\t\"zhs\": \"归\"\n\t\t},\n\t\t\"幹\": {\n\t\t\t\"jp\": \"幹\",\n\t\t\t\"zht\": \"幹\",\n\t\t\t\"zhs\": \"干\"\n\t\t},\n\t\t\"廣\": {\n\t\t\t\"jp\": \"広\",\n\t\t\t\"zht\": \"廣\",\n\t\t\t\"zhs\": \"广\"\n\t\t},\n\t\t\"莊\": {\n\t\t\t\"jp\": \"庄\",\n\t\t\t\"zht\": \"莊\",\n\t\t\t\"zhs\": \"庄\"\n\t\t},\n\t\t\"慶\": {\n\t\t\t\"jp\": \"慶\",\n\t\t\t\"zht\": \"慶\",\n\t\t\t\"zhs\": \"庆\"\n\t\t},\n\t\t\"庫\": {\n\t\t\t\"jp\": \"庫\",\n\t\t\t\"zht\": \"庫\",\n\t\t\t\"zhs\": \"库\"\n\t\t},\n\t\t\"應\": {\n\t\t\t\"jp\": \"応\",\n\t\t\t\"zht\": \"應\",\n\t\t\t\"zhs\": \"应\"\n\t\t},\n\t\t\"廢\": {\n\t\t\t\"jp\": \"廃\",\n\t\t\t\"zht\": \"廢\",\n\t\t\t\"zhs\": \"废\"\n\t\t},\n\t\t\"開\": {\n\t\t\t\"jp\": \"開\",\n\t\t\t\"zht\": \"開\",\n\t\t\t\"zhs\": \"开\"\n\t\t},\n\t\t\"辨\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"瓣\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"瓣\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"辯\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辯\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"異\": {\n\t\t\t\"jp\": \"異\",\n\t\t\t\"zht\": \"異\",\n\t\t\t\"zhs\": \"异\"\n\t\t},\n\t\t\"棄\": {\n\t\t\t\"jp\": \"棄\",\n\t\t\t\"zht\": \"棄\",\n\t\t\t\"zhs\": \"弃\"\n\t\t},\n\t\t\"張\": {\n\t\t\t\"jp\": \"張\",\n\t\t\t\"zht\": \"張\",\n\t\t\t\"zhs\": \"张\"\n\t\t},\n\t\t\"彌\": {\n\t\t\t\"jp\": \"弥\",\n\t\t\t\"zht\": \"彌\",\n\t\t\t\"zhs\": \"弥\"\n\t\t},\n\t\t\"強\": {\n\t\t\t\"jp\": \"強\",\n\t\t\t\"zht\": \"強\",\n\t\t\t\"zhs\": \"强\"\n\t\t},\n\t\t\"彈\": {\n\t\t\t\"jp\": \"弾\",\n\t\t\t\"zht\": \"彈\",\n\t\t\t\"zhs\": \"弹\"\n\t\t},\n\t\t\"錄\": {\n\t\t\t\"jp\": \"録\",\n\t\t\t\"zht\": \"錄\",\n\t\t\t\"zhs\": \"录\"\n\t\t},\n\t\t\"彥\": {\n\t\t\t\"jp\": \"彦\",\n\t\t\t\"zht\": \"彥\",\n\t\t\t\"zhs\": \"彥\"\n\t\t},\n\t\t\"徹\": {\n\t\t\t\"jp\": \"徹\",\n\t\t\t\"zht\": \"徹\",\n\t\t\t\"zhs\": \"彻\"\n\t\t},\n\t\t\"徵\": {\n\t\t\t\"jp\": \"徴\",\n\t\t\t\"zht\": \"徵\",\n\t\t\t\"zhs\": \"征\"\n\t\t},\n\t\t\"徑\": {\n\t\t\t\"jp\": \"径\",\n\t\t\t\"zht\": \"徑\",\n\t\t\t\"zhs\": \"径\"\n\t\t},\n\t\t\"德\": {\n\t\t\t\"jp\": \"徳\",\n\t\t\t\"zht\": \"德\",\n\t\t\t\"zhs\": \"德\"\n\t\t},\n\t\t\"憶\": {\n\t\t\t\"jp\": \"憶\",\n\t\t\t\"zht\": \"憶\",\n\t\t\t\"zhs\": \"忆\"\n\t\t},\n\t\t\"誌\": {\n\t\t\t\"jp\": \"誌\",\n\t\t\t\"zht\": \"誌\",\n\t\t\t\"zhs\": \"志\"\n\t\t},\n\t\t\"憂\": {\n\t\t\t\"jp\": \"憂\",\n\t\t\t\"zht\": \"憂\",\n\t\t\t\"zhs\": \"忧\"\n\t\t},\n\t\t\"懷\": {\n\t\t\t\"jp\": \"懐\",\n\t\t\t\"zht\": \"懷\",\n\t\t\t\"zhs\": \"怀\"\n\t\t},\n\t\t\"態\": {\n\t\t\t\"jp\": \"態\",\n\t\t\t\"zht\": \"態\",\n\t\t\t\"zhs\": \"态\"\n\t\t},\n\t\t\"總\": {\n\t\t\t\"jp\": \"総\",\n\t\t\t\"zht\": \"總\",\n\t\t\t\"zhs\": \"总\"\n\t\t},\n\t\t\"恆\": {\n\t\t\t\"jp\": \"恒\",\n\t\t\t\"zht\": \"恆\",\n\t\t\t\"zhs\": \"恒\"\n\t\t},\n\t\t\"戀\": {\n\t\t\t\"jp\": \"恋\",\n\t\t\t\"zht\": \"戀\",\n\t\t\t\"zhs\": \"恋\"\n\t\t},\n\t\t\"懇\": {\n\t\t\t\"jp\": \"懇\",\n\t\t\t\"zht\": \"懇\",\n\t\t\t\"zhs\": \"恳\"\n\t\t},\n\t\t\"惠\": {\n\t\t\t\"jp\": \"恵\",\n\t\t\t\"zht\": \"惠\",\n\t\t\t\"zhs\": \"惠\"\n\t\t},\n\t\t\"惡\": {\n\t\t\t\"jp\": \"悪\",\n\t\t\t\"zht\": \"惡\",\n\t\t\t\"zhs\": \"恶\"\n\t\t},\n\t\t\"惱\": {\n\t\t\t\"jp\": \"悩\",\n\t\t\t\"zht\": \"惱\",\n\t\t\t\"zhs\": \"恼\"\n\t\t},\n\t\t\"悅\": {\n\t\t\t\"jp\": \"悦\",\n\t\t\t\"zht\": \"悅\",\n\t\t\t\"zhs\": \"悅\"\n\t\t},\n\t\t\"懸\": {\n\t\t\t\"jp\": \"懸\",\n\t\t\t\"zht\": \"懸\",\n\t\t\t\"zhs\": \"悬\"\n\t\t},\n\t\t\"驚\": {\n\t\t\t\"jp\": \"驚\",\n\t\t\t\"zht\": \"驚\",\n\t\t\t\"zhs\": \"惊\"\n\t\t},\n\t\t\"慘\": {\n\t\t\t\"jp\": \"惨\",\n\t\t\t\"zht\": \"慘\",\n\t\t\t\"zhs\": \"惨\"\n\t\t},\n\t\t\"懲\": {\n\t\t\t\"jp\": \"懲\",\n\t\t\t\"zht\": \"懲\",\n\t\t\t\"zhs\": \"惩\"\n\t\t},\n\t\t\"愛\": {\n\t\t\t\"jp\": \"愛\",\n\t\t\t\"zht\": \"愛\",\n\t\t\t\"zhs\": \"爱\"\n\t\t},\n\t\t\"憤\": {\n\t\t\t\"jp\": \"憤\",\n\t\t\t\"zht\": \"憤\",\n\t\t\t\"zhs\": \"愤\"\n\t\t},\n\t\t\"願\": {\n\t\t\t\"jp\": \"願\",\n\t\t\t\"zht\": \"願\",\n\t\t\t\"zhs\": \"愿\"\n\t\t},\n\t\t\"慮\": {\n\t\t\t\"jp\": \"慮\",\n\t\t\t\"zht\": \"慮\",\n\t\t\t\"zhs\": \"虑\"\n\t\t},\n\t\t\"戲\": {\n\t\t\t\"jp\": \"戯\",\n\t\t\t\"zht\": \"戲\",\n\t\t\t\"zhs\": \"戏\"\n\t\t},\n\t\t\"戰\": {\n\t\t\t\"jp\": \"戦\",\n\t\t\t\"zht\": \"戰\",\n\t\t\t\"zhs\": \"战\"\n\t\t},\n\t\t\"戶\": {\n\t\t\t\"jp\": \"戸\",\n\t\t\t\"zht\": \"戶\",\n\t\t\t\"zhs\": \"户\"\n\t\t},\n\t\t\"拂\": {\n\t\t\t\"jp\": \"払\",\n\t\t\t\"zht\": \"拂\",\n\t\t\t\"zhs\": \"拂\"\n\t\t},\n\t\t\"擴\": {\n\t\t\t\"jp\": \"拡\",\n\t\t\t\"zht\": \"擴\",\n\t\t\t\"zhs\": \"扩\"\n\t\t},\n\t\t\"掃\": {\n\t\t\t\"jp\": \"掃\",\n\t\t\t\"zht\": \"掃\",\n\t\t\t\"zhs\": \"扫\"\n\t\t},\n\t\t\"揚\": {\n\t\t\t\"jp\": \"揚\",\n\t\t\t\"zht\": \"揚\",\n\t\t\t\"zhs\": \"扬\"\n\t\t},\n\t\t\"拔\": {\n\t\t\t\"jp\": \"抜\",\n\t\t\t\"zht\": \"拔\",\n\t\t\t\"zhs\": null\n\t\t},\n\t\t\"擇\": {\n\t\t\t\"jp\": \"択\",\n\t\t\t\"zht\": \"擇\",\n\t\t\t\"zhs\": \"择\"\n\t\t},\n\t\t\"護\": {\n\t\t\t\"jp\": \"護\",\n\t\t\t\"zht\": \"護\",\n\t\t\t\"zhs\": \"护\"\n\t\t},\n\t\t\"擔\": {\n\t\t\t\"jp\": \"担\",\n\t\t\t\"zht\": \"擔\",\n\t\t\t\"zhs\": \"担\"\n\t\t},\n\t\t\"拜\": {\n\t\t\t\"jp\": \"拝\",\n\t\t\t\"zht\": \"拜\",\n\t\t\t\"zhs\": \"拜\"\n\t\t},\n\t\t\"擬\": {\n\t\t\t\"jp\": \"擬\",\n\t\t\t\"zht\": \"擬\",\n\t\t\t\"zhs\": \"拟\"\n\t\t},\n\t\t\"據\": {\n\t\t\t\"jp\": \"拠\",\n\t\t\t\"zht\": \"據\",\n\t\t\t\"zhs\": \"据\"\n\t\t},\n\t\t\"擁\": {\n\t\t\t\"jp\": \"擁\",\n\t\t\t\"zht\": \"擁\",\n\t\t\t\"zhs\": \"拥\"\n\t\t},\n\t\t\"挾\": {\n\t\t\t\"jp\": \"挟\",\n\t\t\t\"zht\": \"挾\",\n\t\t\t\"zhs\": \"挟\"\n\t\t},\n\t\t\"揮\": {\n\t\t\t\"jp\": \"揮\",\n\t\t\t\"zht\": \"揮\",\n\t\t\t\"zhs\": \"挥\"\n\t\t},\n\t\t\"插\": {\n\t\t\t\"jp\": \"揷\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"損\": {\n\t\t\t\"jp\": \"損\",\n\t\t\t\"zht\": \"損\",\n\t\t\t\"zhs\": \"损\"\n\t\t},\n\t\t\"捨\": {\n\t\t\t\"jp\": \"捨\",\n\t\t\t\"zht\": \"捨\",\n\t\t\t\"zhs\": \"舍\"\n\t\t},\n\t\t\"揭\": {\n\t\t\t\"jp\": \"掲\",\n\t\t\t\"zht\": \"揭\",\n\t\t\t\"zhs\": \"揭\"\n\t\t},\n\t\t\"摑\": {\n\t\t\t\"jp\": \"掴\",\n\t\t\t\"zht\": \"摑\",\n\t\t\t\"zhs\": \"掴\"\n\t\t},\n\t\t\"搖\": {\n\t\t\t\"jp\": \"揺\",\n\t\t\t\"zht\": \"搖\",\n\t\t\t\"zhs\": \"摇\"\n\t\t},\n\t\t\"攝\": {\n\t\t\t\"jp\": \"摂\",\n\t\t\t\"zht\": \"攝\",\n\t\t\t\"zhs\": \"摄\"\n\t\t},\n\t\t\"敵\": {\n\t\t\t\"jp\": \"敵\",\n\t\t\t\"zht\": \"敵\",\n\t\t\t\"zhs\": \"敌\"\n\t\t},\n\t\t\"敗\": {\n\t\t\t\"jp\": \"敗\",\n\t\t\t\"zht\": \"敗\",\n\t\t\t\"zhs\": \"败\"\n\t\t},\n\t\t\"數\": {\n\t\t\t\"jp\": \"数\",\n\t\t\t\"zht\": \"數\",\n\t\t\t\"zhs\": \"数\"\n\t\t},\n\t\t\"齊\": {\n\t\t\t\"jp\": \"斉\",\n\t\t\t\"zht\": \"齊\",\n\t\t\t\"zhs\": \"齐\"\n\t\t},\n\t\t\"齋\": {\n\t\t\t\"jp\": \"斎\",\n\t\t\t\"zht\": \"齋\",\n\t\t\t\"zhs\": \"斋\"\n\t\t},\n\t\t\"鬥\": {\n\t\t\t\"jp\": \"闘\",\n\t\t\t\"zht\": \"鬥\",\n\t\t\t\"zhs\": \"斗\"\n\t\t},\n\t\t\"斷\": {\n\t\t\t\"jp\": \"断\",\n\t\t\t\"zht\": \"斷\",\n\t\t\t\"zhs\": \"断\"\n\t\t},\n\t\t\"舊\": {\n\t\t\t\"jp\": \"旧\",\n\t\t\t\"zht\": \"舊\",\n\t\t\t\"zhs\": \"旧\"\n\t\t},\n\t\t\"時\": {\n\t\t\t\"jp\": \"時\",\n\t\t\t\"zht\": \"時\",\n\t\t\t\"zhs\": \"时\"\n\t\t},\n\t\t\"曇\": {\n\t\t\t\"jp\": \"曇\",\n\t\t\t\"zht\": \"曇\",\n\t\t\t\"zhs\": \"昙\"\n\t\t},\n\t\t\"晝\": {\n\t\t\t\"jp\": \"昼\",\n\t\t\t\"zht\": \"晝\",\n\t\t\t\"zhs\": \"昼\"\n\t\t},\n\t\t\"顯\": {\n\t\t\t\"jp\": \"顕\",\n\t\t\t\"zht\": \"顯\",\n\t\t\t\"zhs\": \"显\"\n\t\t},\n\t\t\"曉\": {\n\t\t\t\"jp\": \"暁\",\n\t\t\t\"zht\": \"曉\",\n\t\t\t\"zhs\": \"晓\"\n\t\t},\n\t\t\"晚\": {\n\t\t\t\"jp\": \"晩\",\n\t\t\t\"zht\": \"晚\",\n\t\t\t\"zhs\": \"晚\"\n\t\t},\n\t\t\"暫\": {\n\t\t\t\"jp\": \"暫\",\n\t\t\t\"zht\": \"暫\",\n\t\t\t\"zhs\": \"暂\"\n\t\t},\n\t\t\"曾\": {\n\t\t\t\"jp\": \"曽\",\n\t\t\t\"zht\": \"曾\",\n\t\t\t\"zhs\": \"曾\"\n\t\t},\n\t\t\"術\": {\n\t\t\t\"jp\": \"術\",\n\t\t\t\"zht\": \"術\",\n\t\t\t\"zhs\": \"术\"\n\t\t},\n\t\t\"樸\": {\n\t\t\t\"jp\": \"樸\",\n\t\t\t\"zht\": \"樸\",\n\t\t\t\"zhs\": \"朴\"\n\t\t},\n\t\t\"機\": {\n\t\t\t\"jp\": \"機\",\n\t\t\t\"zht\": \"機\",\n\t\t\t\"zhs\": \"机\"\n\t\t},\n\t\t\"殺\": {\n\t\t\t\"jp\": \"殺\",\n\t\t\t\"zht\": \"殺\",\n\t\t\t\"zhs\": \"杀\"\n\t\t},\n\t\t\"雜\": {\n\t\t\t\"jp\": \"雑\",\n\t\t\t\"zht\": \"雜\",\n\t\t\t\"zhs\": \"杂\"\n\t\t},\n\t\t\"權\": {\n\t\t\t\"jp\": \"権\",\n\t\t\t\"zht\": \"權\",\n\t\t\t\"zhs\": \"权\"\n\t\t},\n\t\t\"條\": {\n\t\t\t\"jp\": \"条\",\n\t\t\t\"zht\": \"條\",\n\t\t\t\"zhs\": \"条\"\n\t\t},\n\t\t\"極\": {\n\t\t\t\"jp\": \"極\",\n\t\t\t\"zht\": \"極\",\n\t\t\t\"zhs\": \"极\"\n\t\t},\n\t\t\"樞\": {\n\t\t\t\"jp\": \"枢\",\n\t\t\t\"zht\": \"樞\",\n\t\t\t\"zhs\": \"枢\"\n\t\t},\n\t\t\"槍\": {\n\t\t\t\"jp\": \"槍\",\n\t\t\t\"zht\": \"槍\",\n\t\t\t\"zhs\": \"枪\"\n\t\t},\n\t\t\"查\": {\n\t\t\t\"jp\": \"査\",\n\t\t\t\"zht\": \"查\",\n\t\t\t\"zhs\": \"查\"\n\t\t},\n\t\t\"榮\": {\n\t\t\t\"jp\": \"栄\",\n\t\t\t\"zht\": \"榮\",\n\t\t\t\"zhs\": \"荣\"\n\t\t},\n\t\t\"標\": {\n\t\t\t\"jp\": \"標\",\n\t\t\t\"zht\": \"標\",\n\t\t\t\"zhs\": \"标\"\n\t\t},\n\t\t\"棧\": {\n\t\t\t\"jp\": \"桟\",\n\t\t\t\"zht\": \"棧\",\n\t\t\t\"zhs\": \"栈\"\n\t\t},\n\t\t\"棟\": {\n\t\t\t\"jp\": \"棟\",\n\t\t\t\"zht\": \"棟\",\n\t\t\t\"zhs\": \"栋\"\n\t\t},\n\t\t\"欄\": {\n\t\t\t\"jp\": \"欄\",\n\t\t\t\"zht\": \"欄\",\n\t\t\t\"zhs\": \"栏\"\n\t\t},\n\t\t\"樹\": {\n\t\t\t\"jp\": \"樹\",\n\t\t\t\"zht\": \"樹\",\n\t\t\t\"zhs\": \"树\"\n\t\t},\n\t\t\"樣\": {\n\t\t\t\"jp\": \"様\",\n\t\t\t\"zht\": \"樣\",\n\t\t\t\"zhs\": \"样\"\n\t\t},\n\t\t\"櫻\": {\n\t\t\t\"jp\": \"桜\",\n\t\t\t\"zht\": \"櫻\",\n\t\t\t\"zhs\": \"樱\"\n\t\t},\n\t\t\"橋\": {\n\t\t\t\"jp\": \"橋\",\n\t\t\t\"zht\": \"橋\",\n\t\t\t\"zhs\": \"桥\"\n\t\t},\n\t\t\"檢\": {\n\t\t\t\"jp\": \"検\",\n\t\t\t\"zht\": \"檢\",\n\t\t\t\"zhs\": \"检\"\n\t\t},\n\t\t\"樓\": {\n\t\t\t\"jp\": \"楼\",\n\t\t\t\"zht\": \"樓\",\n\t\t\t\"zhs\": \"楼\"\n\t\t},\n\t\t\"歡\": {\n\t\t\t\"jp\": \"歓\",\n\t\t\t\"zht\": \"歡\",\n\t\t\t\"zhs\": \"欢\"\n\t\t},\n\t\t\"歐\": {\n\t\t\t\"jp\": \"欧\",\n\t\t\t\"zht\": \"歐\",\n\t\t\t\"zhs\": \"欧\"\n\t\t},\n\t\t\"步\": {\n\t\t\t\"jp\": \"歩\",\n\t\t\t\"zht\": \"步\",\n\t\t\t\"zhs\": \"步\"\n\t\t},\n\t\t\"齒\": {\n\t\t\t\"jp\": \"歯\",\n\t\t\t\"zht\": \"齒\",\n\t\t\t\"zhs\": \"齿\"\n\t\t},\n\t\t\"殘\": {\n\t\t\t\"jp\": \"残\",\n\t\t\t\"zht\": \"殘\",\n\t\t\t\"zhs\": \"残\"\n\t\t},\n\t\t\"毆\": {\n\t\t\t\"jp\": \"殴\",\n\t\t\t\"zht\": \"毆\",\n\t\t\t\"zhs\": \"殴\"\n\t\t},\n\t\t\"氣\": {\n\t\t\t\"jp\": \"気\",\n\t\t\t\"zht\": \"氣\",\n\t\t\t\"zhs\": \"气\"\n\t\t},\n\t\t\"漢\": {\n\t\t\t\"jp\": \"漢\",\n\t\t\t\"zht\": \"漢\",\n\t\t\t\"zhs\": \"汉\"\n\t\t},\n\t\t\"湯\": {\n\t\t\t\"jp\": \"湯\",\n\t\t\t\"zht\": \"湯\",\n\t\t\t\"zhs\": \"汤\"\n\t\t},\n\t\t\"溝\": {\n\t\t\t\"jp\": \"溝\",\n\t\t\t\"zht\": \"溝\",\n\t\t\t\"zhs\": \"沟\"\n\t\t},\n\t\t\"澤\": {\n\t\t\t\"jp\": \"沢\",\n\t\t\t\"zht\": \"澤\",\n\t\t\t\"zhs\": \"泽\"\n\t\t},\n\t\t\"淚\": {\n\t\t\t\"jp\": \"涙\",\n\t\t\t\"zht\": \"淚\",\n\t\t\t\"zhs\": \"泪\"\n\t\t},\n\t\t\"瀧\": {\n\t\t\t\"jp\": \"滝\",\n\t\t\t\"zht\": \"瀧\",\n\t\t\t\"zhs\": \"泷\"\n\t\t},\n\t\t\"潔\": {\n\t\t\t\"jp\": \"潔\",\n\t\t\t\"zht\": \"潔\",\n\t\t\t\"zhs\": \"洁\"\n\t\t},\n\t\t\"淺\": {\n\t\t\t\"jp\": \"浅\",\n\t\t\t\"zht\": \"淺\",\n\t\t\t\"zhs\": \"浅\"\n\t\t},\n\t\t\"濁\": {\n\t\t\t\"jp\": \"濁\",\n\t\t\t\"zht\": \"濁\",\n\t\t\t\"zhs\": \"浊\"\n\t\t},\n\t\t\"測\": {\n\t\t\t\"jp\": \"測\",\n\t\t\t\"zht\": \"測\",\n\t\t\t\"zhs\": \"测\"\n\t\t},\n\t\t\"濟\": {\n\t\t\t\"jp\": \"済\",\n\t\t\t\"zht\": \"濟\",\n\t\t\t\"zhs\": \"济\"\n\t\t},\n\t\t\"濃\": {\n\t\t\t\"jp\": \"濃\",\n\t\t\t\"zht\": \"濃\",\n\t\t\t\"zhs\": \"浓\"\n\t\t},\n\t\t\"濱\": {\n\t\t\t\"jp\": \"浜\",\n\t\t\t\"zht\": \"濱\",\n\t\t\t\"zhs\": \"滨\"\n\t\t},\n\t\t\"涉\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"澀\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"澀\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"渦\": {\n\t\t\t\"jp\": \"渦\",\n\t\t\t\"zht\": \"渦\",\n\t\t\t\"zhs\": \"涡\"\n\t\t},\n\t\t\"潤\": {\n\t\t\t\"jp\": \"潤\",\n\t\t\t\"zht\": \"潤\",\n\t\t\t\"zhs\": \"润\"\n\t\t},\n\t\t\"漬\": {\n\t\t\t\"jp\": \"漬\",\n\t\t\t\"zht\": \"漬\",\n\t\t\t\"zhs\": \"渍\"\n\t\t},\n\t\t\"漸\": {\n\t\t\t\"jp\": \"漸\",\n\t\t\t\"zht\": \"漸\",\n\t\t\t\"zhs\": \"渐\"\n\t\t},\n\t\t\"溪\": {\n\t\t\t\"jp\": \"渓\",\n\t\t\t\"zht\": \"溪\",\n\t\t\t\"zhs\": \"溪\"\n\t\t},\n\t\t\"漁\": {\n\t\t\t\"jp\": \"漁\",\n\t\t\t\"zht\": \"漁\",\n\t\t\t\"zhs\": \"渔\"\n\t\t},\n\t\t\"灣\": {\n\t\t\t\"jp\": \"湾\",\n\t\t\t\"zht\": \"灣\",\n\t\t\t\"zhs\": \"湾\"\n\t\t},\n\t\t\"濕\": {\n\t\t\t\"jp\": \"湿\",\n\t\t\t\"zht\": \"濕\",\n\t\t\t\"zhs\": \"湿\"\n\t\t},\n\t\t\"滿\": {\n\t\t\t\"jp\": \"満\",\n\t\t\t\"zht\": \"滿\",\n\t\t\t\"zhs\": \"满\"\n\t\t},\n\t\t\"滅\": {\n\t\t\t\"jp\": \"滅\",\n\t\t\t\"zht\": \"滅\",\n\t\t\t\"zhs\": \"灭\"\n\t\t},\n\t\t\"滯\": {\n\t\t\t\"jp\": \"滞\",\n\t\t\t\"zht\": \"滯\",\n\t\t\t\"zhs\": \"滞\"\n\t\t},\n\t\t\"濫\": {\n\t\t\t\"jp\": \"濫\",\n\t\t\t\"zht\": \"濫\",\n\t\t\t\"zhs\": \"滥\"\n\t\t},\n\t\t\"瀨\": {\n\t\t\t\"jp\": \"瀬\",\n\t\t\t\"zht\": \"瀨\",\n\t\t\t\"zhs\": \"濑\"\n\t\t},\n\t\t\"燈\": {\n\t\t\t\"jp\": \"灯\",\n\t\t\t\"zht\": \"燈\",\n\t\t\t\"zhs\": \"灯\"\n\t\t},\n\t\t\"靈\": {\n\t\t\t\"jp\": \"霊\",\n\t\t\t\"zht\": \"靈\",\n\t\t\t\"zhs\": \"灵\"\n\t\t},\n\t\t\"爐\": {\n\t\t\t\"jp\": \"炉\",\n\t\t\t\"zht\": \"爐\",\n\t\t\t\"zhs\": \"炉\"\n\t\t},\n\t\t\"點\": {\n\t\t\t\"jp\": \"点\",\n\t\t\t\"zht\": \"點\",\n\t\t\t\"zhs\": \"点\"\n\t\t},\n\t\t\"鍊\": {\n\t\t\t\"jp\": \"錬\",\n\t\t\t\"zht\": \"鍊\",\n\t\t\t\"zhs\": \"炼\"\n\t\t},\n\t\t\"練\": {\n\t\t\t\"jp\": \"練\",\n\t\t\t\"zht\": \"練\",\n\t\t\t\"zhs\": \"练\"\n\t\t},\n\t\t\"煙\": {\n\t\t\t\"jp\": \"煙\",\n\t\t\t\"zht\": \"煙\",\n\t\t\t\"zhs\": \"烟\"\n\t\t},\n\t\t\"煩\": {\n\t\t\t\"jp\": \"煩\",\n\t\t\t\"zht\": \"煩\",\n\t\t\t\"zhs\": \"烦\"\n\t\t},\n\t\t\"燒\": {\n\t\t\t\"jp\": \"焼\",\n\t\t\t\"zht\": \"燒\",\n\t\t\t\"zhs\": \"烧\"\n\t\t},\n\t\t\"熱\": {\n\t\t\t\"jp\": \"熱\",\n\t\t\t\"zht\": \"熱\",\n\t\t\t\"zhs\": \"热\"\n\t\t},\n\t\t\"焰\": {\n\t\t\t\"jp\": \"焔\",\n\t\t\t\"zht\": \"焰\",\n\t\t\t\"zhs\": \"焰\"\n\t\t},\n\t\t\"鍛\": {\n\t\t\t\"jp\": \"鍛\",\n\t\t\t\"zht\": \"鍛\",\n\t\t\t\"zhs\": \"锻\"\n\t\t},\n\t\t\"犧\": {\n\t\t\t\"jp\": \"犠\",\n\t\t\t\"zht\": \"犧\",\n\t\t\t\"zhs\": \"牺\"\n\t\t},\n\t\t\"狀\": {\n\t\t\t\"jp\": \"状\",\n\t\t\t\"zht\": \"狀\",\n\t\t\t\"zhs\": \"状\"\n\t\t},\n\t\t\"猶\": {\n\t\t\t\"jp\": \"猶\",\n\t\t\t\"zht\": \"猶\",\n\t\t\t\"zhs\": \"犹\"\n\t\t},\n\t\t\"獨\": {\n\t\t\t\"jp\": \"独\",\n\t\t\t\"zht\": \"獨\",\n\t\t\t\"zhs\": \"独\"\n\t\t},\n\t\t\"狹\": {\n\t\t\t\"jp\": \"狭\",\n\t\t\t\"zht\": \"狹\",\n\t\t\t\"zhs\": \"狭\"\n\t\t},\n\t\t\"獄\": {\n\t\t\t\"jp\": \"獄\",\n\t\t\t\"zht\": \"獄\",\n\t\t\t\"zhs\": \"狱\"\n\t\t},\n\t\t\"獵\": {\n\t\t\t\"jp\": \"猟\",\n\t\t\t\"zht\": \"獵\",\n\t\t\t\"zhs\": \"猎\"\n\t\t},\n\t\t\"貓\": {\n\t\t\t\"jp\": \"猫\",\n\t\t\t\"zht\": \"貓\",\n\t\t\t\"zhs\": \"猫\"\n\t\t},\n\t\t\"獻\": {\n\t\t\t\"jp\": \"献\",\n\t\t\t\"zht\": \"獻\",\n\t\t\t\"zhs\": \"献\"\n\t\t},\n\t\t\"獲\": {\n\t\t\t\"jp\": \"獲\",\n\t\t\t\"zht\": \"獲\",\n\t\t\t\"zhs\": \"获\"\n\t\t},\n\t\t\"穫\": {\n\t\t\t\"jp\": \"穫\",\n\t\t\t\"zht\": \"穫\",\n\t\t\t\"zhs\": \"获\"\n\t\t},\n\t\t\"環\": {\n\t\t\t\"jp\": \"環\",\n\t\t\t\"zht\": \"環\",\n\t\t\t\"zhs\": \"环\"\n\t\t},\n\t\t\"現\": {\n\t\t\t\"jp\": \"現\",\n\t\t\t\"zht\": \"現\",\n\t\t\t\"zhs\": \"现\"\n\t\t},\n\t\t\"璽\": {\n\t\t\t\"jp\": \"璽\",\n\t\t\t\"zht\": \"璽\",\n\t\t\t\"zhs\": \"玺\"\n\t\t},\n\t\t\"甦\": {\n\t\t\t\"jp\": \"甦\",\n\t\t\t\"zht\": \"甦\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"電\": {\n\t\t\t\"jp\": \"電\",\n\t\t\t\"zht\": \"電\",\n\t\t\t\"zhs\": \"电\"\n\t\t},\n\t\t\"療\": {\n\t\t\t\"jp\": \"療\",\n\t\t\t\"zht\": \"療\",\n\t\t\t\"zhs\": \"疗\"\n\t\t},\n\t\t\"監\": {\n\t\t\t\"jp\": \"監\",\n\t\t\t\"zht\": \"監\",\n\t\t\t\"zhs\": \"监\"\n\t\t},\n\t\t\"蓋\": {\n\t\t\t\"jp\": \"蓋\",\n\t\t\t\"zht\": \"蓋\",\n\t\t\t\"zhs\": \"盖\"\n\t\t},\n\t\t\"盤\": {\n\t\t\t\"jp\": \"盤\",\n\t\t\t\"zht\": \"盤\",\n\t\t\t\"zhs\": \"盘\"\n\t\t},\n\t\t\"視\": {\n\t\t\t\"jp\": \"視\",\n\t\t\t\"zht\": \"視\",\n\t\t\t\"zhs\": \"视\"\n\t\t},\n\t\t\"著\": {\n\t\t\t\"jp\": \"着\",\n\t\t\t\"zht\": \"著\",\n\t\t\t\"zhs\": \"著\"\n\t\t},\n\t\t\"矯\": {\n\t\t\t\"jp\": \"矯\",\n\t\t\t\"zht\": \"矯\",\n\t\t\t\"zhs\": \"矫\"\n\t\t},\n\t\t\"礦\": {\n\t\t\t\"jp\": \"鉱\",\n\t\t\t\"zht\": \"礦\",\n\t\t\t\"zhs\": \"矿\"\n\t\t},\n\t\t\"碎\": {\n\t\t\t\"jp\": \"砕\",\n\t\t\t\"zht\": \"碎\",\n\t\t\t\"zhs\": \"碎\"\n\t\t},\n\t\t\"礎\": {\n\t\t\t\"jp\": \"礎\",\n\t\t\t\"zht\": \"礎\",\n\t\t\t\"zhs\": \"础\"\n\t\t},\n\t\t\"確\": {\n\t\t\t\"jp\": \"確\",\n\t\t\t\"zht\": \"確\",\n\t\t\t\"zhs\": \"确\"\n\t\t},\n\t\t\"禮\": {\n\t\t\t\"jp\": \"礼\",\n\t\t\t\"zht\": \"禮\",\n\t\t\t\"zhs\": \"礼\"\n\t\t},\n\t\t\"禍\": {\n\t\t\t\"jp\": \"禍\",\n\t\t\t\"zht\": \"禍\",\n\t\t\t\"zhs\": \"祸\"\n\t\t},\n\t\t\"禪\": {\n\t\t\t\"jp\": \"禅\",\n\t\t\t\"zht\": \"禪\",\n\t\t\t\"zhs\": \"禅\"\n\t\t},\n\t\t\"離\": {\n\t\t\t\"jp\": \"離\",\n\t\t\t\"zht\": \"離\",\n\t\t\t\"zhs\": \"离\"\n\t\t},\n\t\t\"種\": {\n\t\t\t\"jp\": \"種\",\n\t\t\t\"zht\": \"種\",\n\t\t\t\"zhs\": \"种\"\n\t\t},\n\t\t\"積\": {\n\t\t\t\"jp\": \"積\",\n\t\t\t\"zht\": \"積\",\n\t\t\t\"zhs\": \"积\"\n\t\t},\n\t\t\"稱\": {\n\t\t\t\"jp\": \"称\",\n\t\t\t\"zht\": \"稱\",\n\t\t\t\"zhs\": \"称\"\n\t\t},\n\t\t\"稻\": {\n\t\t\t\"jp\": \"稲\",\n\t\t\t\"zht\": \"稻\",\n\t\t\t\"zhs\": \"稻\"\n\t\t},\n\t\t\"穩\": {\n\t\t\t\"jp\": \"穏\",\n\t\t\t\"zht\": \"穩\",\n\t\t\t\"zhs\": \"稳\"\n\t\t},\n\t\t\"穀\": {\n\t\t\t\"jp\": \"穀\",\n\t\t\t\"zht\": \"穀\",\n\t\t\t\"zhs\": \"谷\"\n\t\t},\n\t\t\"穗\": {\n\t\t\t\"jp\": \"穂\",\n\t\t\t\"zht\": \"穗\",\n\t\t\t\"zhs\": \"穗\"\n\t\t},\n\t\t\"窮\": {\n\t\t\t\"jp\": \"窮\",\n\t\t\t\"zht\": \"窮\",\n\t\t\t\"zhs\": \"穷\"\n\t\t},\n\t\t\"竊\": {\n\t\t\t\"jp\": \"窃\",\n\t\t\t\"zht\": \"竊\",\n\t\t\t\"zhs\": \"窃\"\n\t\t},\n\t\t\"窗\": {\n\t\t\t\"jp\": \"窓\",\n\t\t\t\"zht\": \"窗\",\n\t\t\t\"zhs\": \"窗\"\n\t\t},\n\t\t\"龍\": {\n\t\t\t\"jp\": \"竜\",\n\t\t\t\"zht\": \"龍\",\n\t\t\t\"zhs\": \"龙\"\n\t\t},\n\t\t\"競\": {\n\t\t\t\"jp\": \"競\",\n\t\t\t\"zht\": \"競\",\n\t\t\t\"zhs\": \"竞\"\n\t\t},\n\t\t\"篤\": {\n\t\t\t\"jp\": \"篤\",\n\t\t\t\"zht\": \"篤\",\n\t\t\t\"zhs\": \"笃\"\n\t\t},\n\t\t\"筆\": {\n\t\t\t\"jp\": \"筆\",\n\t\t\t\"zht\": \"筆\",\n\t\t\t\"zhs\": \"笔\"\n\t\t},\n\t\t\"築\": {\n\t\t\t\"jp\": \"築\",\n\t\t\t\"zht\": \"築\",\n\t\t\t\"zhs\": \"筑\"\n\t\t},\n\t\t\"簡\": {\n\t\t\t\"jp\": \"簡\",\n\t\t\t\"zht\": \"簡\",\n\t\t\t\"zhs\": \"简\"\n\t\t},\n\t\t\"節\": {\n\t\t\t\"jp\": \"節\",\n\t\t\t\"zht\": \"節\",\n\t\t\t\"zhs\": \"节\"\n\t\t},\n\t\t\"範\": {\n\t\t\t\"jp\": \"範\",\n\t\t\t\"zht\": \"範\",\n\t\t\t\"zhs\": \"范\"\n\t\t},\n\t\t\"類\": {\n\t\t\t\"jp\": \"類\",\n\t\t\t\"zht\": \"類\",\n\t\t\t\"zhs\": \"类\"\n\t\t},\n\t\t\"粹\": {\n\t\t\t\"jp\": \"粋\",\n\t\t\t\"zht\": \"粹\",\n\t\t\t\"zhs\": \"粹\"\n\t\t},\n\t\t\"肅\": {\n\t\t\t\"jp\": \"粛\",\n\t\t\t\"zht\": \"肅\",\n\t\t\t\"zhs\": \"肃\"\n\t\t},\n\t\t\"糧\": {\n\t\t\t\"jp\": \"糧\",\n\t\t\t\"zht\": \"糧\",\n\t\t\t\"zhs\": \"粮\"\n\t\t},\n\t\t\"糾\": {\n\t\t\t\"jp\": \"糾\",\n\t\t\t\"zht\": \"糾\",\n\t\t\t\"zhs\": \"纠\"\n\t\t},\n\t\t\"紀\": {\n\t\t\t\"jp\": \"紀\",\n\t\t\t\"zht\": \"紀\",\n\t\t\t\"zhs\": \"纪\"\n\t\t},\n\t\t\"約\": {\n\t\t\t\"jp\": \"約\",\n\t\t\t\"zht\": \"約\",\n\t\t\t\"zhs\": \"约\"\n\t\t},\n\t\t\"紅\": {\n\t\t\t\"jp\": \"紅\",\n\t\t\t\"zht\": \"紅\",\n\t\t\t\"zhs\": \"红\"\n\t\t},\n\t\t\"紋\": {\n\t\t\t\"jp\": \"紋\",\n\t\t\t\"zht\": \"紋\",\n\t\t\t\"zhs\": \"纹\"\n\t\t},\n\t\t\"納\": {\n\t\t\t\"jp\": \"納\",\n\t\t\t\"zht\": \"納\",\n\t\t\t\"zhs\": \"纳\"\n\t\t},\n\t\t\"純\": {\n\t\t\t\"jp\": \"純\",\n\t\t\t\"zht\": \"純\",\n\t\t\t\"zhs\": \"纯\"\n\t\t},\n\t\t\"紙\": {\n\t\t\t\"jp\": \"紙\",\n\t\t\t\"zht\": \"紙\",\n\t\t\t\"zhs\": \"纸\"\n\t\t},\n\t\t\"級\": {\n\t\t\t\"jp\": \"級\",\n\t\t\t\"zht\": \"級\",\n\t\t\t\"zhs\": \"级\"\n\t\t},\n\t\t\"紛\": {\n\t\t\t\"jp\": \"紛\",\n\t\t\t\"zht\": \"紛\",\n\t\t\t\"zhs\": \"纷\"\n\t\t},\n\t\t\"紡\": {\n\t\t\t\"jp\": \"紡\",\n\t\t\t\"zht\": \"紡\",\n\t\t\t\"zhs\": \"纺\"\n\t\t},\n\t\t\"緊\": {\n\t\t\t\"jp\": \"緊\",\n\t\t\t\"zht\": \"緊\",\n\t\t\t\"zhs\": \"紧\"\n\t\t},\n\t\t\"細\": {\n\t\t\t\"jp\": \"細\",\n\t\t\t\"zht\": \"細\",\n\t\t\t\"zhs\": \"细\"\n\t\t},\n\t\t\"紳\": {\n\t\t\t\"jp\": \"紳\",\n\t\t\t\"zht\": \"紳\",\n\t\t\t\"zhs\": \"绅\"\n\t\t},\n\t\t\"紹\": {\n\t\t\t\"jp\": \"紹\",\n\t\t\t\"zht\": \"紹\",\n\t\t\t\"zhs\": \"绍\"\n\t\t},\n\t\t\"紺\": {\n\t\t\t\"jp\": \"紺\",\n\t\t\t\"zht\": \"紺\",\n\t\t\t\"zhs\": \"绀\"\n\t\t},\n\t\t\"終\": {\n\t\t\t\"jp\": \"終\",\n\t\t\t\"zht\": \"終\",\n\t\t\t\"zhs\": \"终\"\n\t\t},\n\t\t\"組\": {\n\t\t\t\"jp\": \"組\",\n\t\t\t\"zht\": \"組\",\n\t\t\t\"zhs\": \"组\"\n\t\t},\n\t\t\"經\": {\n\t\t\t\"jp\": \"経\",\n\t\t\t\"zht\": \"經\",\n\t\t\t\"zhs\": \"经\"\n\t\t},\n\t\t\"結\": {\n\t\t\t\"jp\": \"結\",\n\t\t\t\"zht\": \"結\",\n\t\t\t\"zhs\": \"结\"\n\t\t},\n\t\t\"絶\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絶\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"絕\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絕\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"絞\": {\n\t\t\t\"jp\": \"絞\",\n\t\t\t\"zht\": \"絞\",\n\t\t\t\"zhs\": \"绞\"\n\t\t},\n\t\t\"絡\": {\n\t\t\t\"jp\": \"絡\",\n\t\t\t\"zht\": \"絡\",\n\t\t\t\"zhs\": \"络\"\n\t\t},\n\t\t\"給\": {\n\t\t\t\"jp\": \"給\",\n\t\t\t\"zht\": \"給\",\n\t\t\t\"zhs\": \"给\"\n\t\t},\n\t\t\"統\": {\n\t\t\t\"jp\": \"統\",\n\t\t\t\"zht\": \"統\",\n\t\t\t\"zhs\": \"统\"\n\t\t},\n\t\t\"繪\": {\n\t\t\t\"jp\": \"絵\",\n\t\t\t\"zht\": \"繪\",\n\t\t\t\"zhs\": \"绘\"\n\t\t},\n\t\t\"絹\": {\n\t\t\t\"jp\": \"絹\",\n\t\t\t\"zht\": \"絹\",\n\t\t\t\"zhs\": \"绢\"\n\t\t},\n\t\t\"繼\": {\n\t\t\t\"jp\": \"継\",\n\t\t\t\"zht\": \"繼\",\n\t\t\t\"zhs\": \"继\"\n\t\t},\n\t\t\"續\": {\n\t\t\t\"jp\": \"続\",\n\t\t\t\"zht\": \"續\",\n\t\t\t\"zhs\": \"续\"\n\t\t},\n\t\t\"綠\": {\n\t\t\t\"jp\": \"緑\",\n\t\t\t\"zht\": \"綠\",\n\t\t\t\"zhs\": \"绿\"\n\t\t},\n\t\t\"線\": {\n\t\t\t\"jp\": \"線\",\n\t\t\t\"zht\": \"線\",\n\t\t\t\"zhs\": \"线\"\n\t\t},\n\t\t\"維\": {\n\t\t\t\"jp\": \"維\",\n\t\t\t\"zht\": \"維\",\n\t\t\t\"zhs\": \"维\"\n\t\t},\n\t\t\"綱\": {\n\t\t\t\"jp\": \"綱\",\n\t\t\t\"zht\": \"綱\",\n\t\t\t\"zhs\": \"纲\"\n\t\t},\n\t\t\"綿\": {\n\t\t\t\"jp\": \"綿\",\n\t\t\t\"zht\": \"綿\",\n\t\t\t\"zhs\": \"绵\"\n\t\t},\n\t\t\"緒\": {\n\t\t\t\"jp\": \"緒\",\n\t\t\t\"zht\": \"緒\",\n\t\t\t\"zhs\": \"绪\"\n\t\t},\n\t\t\"締\": {\n\t\t\t\"jp\": \"締\",\n\t\t\t\"zht\": \"締\",\n\t\t\t\"zhs\": \"缔\"\n\t\t},\n\t\t\"緣\": {\n\t\t\t\"jp\": \"縁\",\n\t\t\t\"zht\": \"緣\",\n\t\t\t\"zhs\": \"缘\"\n\t\t},\n\t\t\"編\": {\n\t\t\t\"jp\": \"編\",\n\t\t\t\"zht\": \"編\",\n\t\t\t\"zhs\": \"编\"\n\t\t},\n\t\t\"緩\": {\n\t\t\t\"jp\": \"緩\",\n\t\t\t\"zht\": \"緩\",\n\t\t\t\"zhs\": \"缓\"\n\t\t},\n\t\t\"緯\": {\n\t\t\t\"jp\": \"緯\",\n\t\t\t\"zht\": \"緯\",\n\t\t\t\"zhs\": \"纬\"\n\t\t},\n\t\t\"繩\": {\n\t\t\t\"jp\": \"縄\",\n\t\t\t\"zht\": \"繩\",\n\t\t\t\"zhs\": \"绳\"\n\t\t},\n\t\t\"縛\": {\n\t\t\t\"jp\": \"縛\",\n\t\t\t\"zht\": \"縛\",\n\t\t\t\"zhs\": \"缚\"\n\t\t},\n\t\t\"縱\": {\n\t\t\t\"jp\": \"縦\",\n\t\t\t\"zht\": \"縱\",\n\t\t\t\"zhs\": \"纵\"\n\t\t},\n\t\t\"縫\": {\n\t\t\t\"jp\": \"縫\",\n\t\t\t\"zht\": \"縫\",\n\t\t\t\"zhs\": \"缝\"\n\t\t},\n\t\t\"縮\": {\n\t\t\t\"jp\": \"縮\",\n\t\t\t\"zht\": \"縮\",\n\t\t\t\"zhs\": \"缩\"\n\t\t},\n\t\t\"纖\": {\n\t\t\t\"jp\": \"繊\",\n\t\t\t\"zht\": \"纖\",\n\t\t\t\"zhs\": \"纤\"\n\t\t},\n\t\t\"績\": {\n\t\t\t\"jp\": \"績\",\n\t\t\t\"zht\": \"績\",\n\t\t\t\"zhs\": \"绩\"\n\t\t},\n\t\t\"織\": {\n\t\t\t\"jp\": \"織\",\n\t\t\t\"zht\": \"織\",\n\t\t\t\"zhs\": \"织\"\n\t\t},\n\t\t\"繕\": {\n\t\t\t\"jp\": \"繕\",\n\t\t\t\"zht\": \"繕\",\n\t\t\t\"zhs\": \"缮\"\n\t\t},\n\t\t\"繭\": {\n\t\t\t\"jp\": \"繭\",\n\t\t\t\"zht\": \"繭\",\n\t\t\t\"zhs\": \"茧\"\n\t\t},\n\t\t\"繰\": {\n\t\t\t\"jp\": \"繰\",\n\t\t\t\"zht\": \"繰\",\n\t\t\t\"zhs\": \"缲\"\n\t\t},\n\t\t\"罐\": {\n\t\t\t\"jp\": \"缶\",\n\t\t\t\"zht\": \"罐\",\n\t\t\t\"zhs\": \"罐\"\n\t\t},\n\t\t\"鉢\": {\n\t\t\t\"jp\": \"鉢\",\n\t\t\t\"zht\": \"鉢\",\n\t\t\t\"zhs\": \"钵\"\n\t\t},\n\t\t\"羅\": {\n\t\t\t\"jp\": \"羅\",\n\t\t\t\"zht\": \"羅\",\n\t\t\t\"zhs\": \"罗\"\n\t\t},\n\t\t\"罰\": {\n\t\t\t\"jp\": \"罸\",\n\t\t\t\"zht\": \"罰\",\n\t\t\t\"zhs\": \"罚\"\n\t\t},\n\t\t\"罷\": {\n\t\t\t\"jp\": \"罷\",\n\t\t\t\"zht\": \"罷\",\n\t\t\t\"zhs\": \"罢\"\n\t\t},\n\t\t\"罵\": {\n\t\t\t\"jp\": \"罵\",\n\t\t\t\"zht\": \"罵\",\n\t\t\t\"zhs\": \"骂\"\n\t\t},\n\t\t\"職\": {\n\t\t\t\"jp\": \"職\",\n\t\t\t\"zht\": \"職\",\n\t\t\t\"zhs\": \"职\"\n\t\t},\n\t\t\"聞\": {\n\t\t\t\"jp\": \"聞\",\n\t\t\t\"zht\": \"聞\",\n\t\t\t\"zhs\": \"闻\"\n\t\t},\n\t\t\"聰\": {\n\t\t\t\"jp\": \"聡\",\n\t\t\t\"zht\": \"聰\",\n\t\t\t\"zhs\": \"聪\"\n\t\t},\n\t\t\"腸\": {\n\t\t\t\"jp\": \"腸\",\n\t\t\t\"zht\": \"腸\",\n\t\t\t\"zhs\": \"肠\"\n\t\t},\n\t\t\"膚\": {\n\t\t\t\"jp\": \"膚\",\n\t\t\t\"zht\": \"膚\",\n\t\t\t\"zhs\": \"肤\"\n\t\t},\n\t\t\"脹\": {\n\t\t\t\"jp\": \"脹\",\n\t\t\t\"zht\": \"脹\",\n\t\t\t\"zhs\": \"胀\"\n\t\t},\n\t\t\"脅\": {\n\t\t\t\"jp\": \"脅\",\n\t\t\t\"zht\": \"脅\",\n\t\t\t\"zhs\": \"胁\"\n\t\t},\n\t\t\"膽\": {\n\t\t\t\"jp\": \"胆\",\n\t\t\t\"zht\": \"膽\",\n\t\t\t\"zhs\": \"胆\"\n\t\t},\n\t\t\"臟\": {\n\t\t\t\"jp\": \"臓\",\n\t\t\t\"zht\": \"臟\",\n\t\t\t\"zhs\": \"脏\"\n\t\t},\n\t\t\"腦\": {\n\t\t\t\"jp\": \"脳\",\n\t\t\t\"zht\": \"腦\",\n\t\t\t\"zhs\": \"脑\"\n\t\t},\n\t\t\"腳\": {\n\t\t\t\"jp\": \"脚\",\n\t\t\t\"zht\": \"腳\",\n\t\t\t\"zhs\": \"脚\"\n\t\t},\n\t\t\"騰\": {\n\t\t\t\"jp\": \"騰\",\n\t\t\t\"zht\": \"騰\",\n\t\t\t\"zhs\": \"腾\"\n\t\t},\n\t\t\"舖\": {\n\t\t\t\"jp\": \"舗\",\n\t\t\t\"zht\": \"舖\",\n\t\t\t\"zhs\": \"铺\"\n\t\t},\n\t\t\"館\": {\n\t\t\t\"jp\": \"館\",\n\t\t\t\"zht\": \"館\",\n\t\t\t\"zhs\": \"馆\"\n\t\t},\n\t\t\"艦\": {\n\t\t\t\"jp\": \"艦\",\n\t\t\t\"zht\": \"艦\",\n\t\t\t\"zhs\": \"舰\"\n\t\t},\n\t\t\"藝\": {\n\t\t\t\"jp\": \"芸\",\n\t\t\t\"zht\": \"藝\",\n\t\t\t\"zhs\": \"艺\"\n\t\t},\n\t\t\"莖\": {\n\t\t\t\"jp\": \"茎\",\n\t\t\t\"zht\": \"莖\",\n\t\t\t\"zhs\": \"茎\"\n\t\t},\n\t\t\"薦\": {\n\t\t\t\"jp\": \"薦\",\n\t\t\t\"zht\": \"薦\",\n\t\t\t\"zhs\": \"荐\"\n\t\t},\n\t\t\"藥\": {\n\t\t\t\"jp\": \"薬\",\n\t\t\t\"zht\": \"藥\",\n\t\t\t\"zhs\": \"药\"\n\t\t},\n\t\t\"螢\": {\n\t\t\t\"jp\": \"蛍\",\n\t\t\t\"zht\": \"螢\",\n\t\t\t\"zhs\": \"萤\"\n\t\t},\n\t\t\"蔣\": {\n\t\t\t\"jp\": \"蒋\",\n\t\t\t\"zht\": \"蔣\",\n\t\t\t\"zhs\": \"蒋\"\n\t\t},\n\t\t\"藏\": {\n\t\t\t\"jp\": \"蔵\",\n\t\t\t\"zht\": \"藏\",\n\t\t\t\"zhs\": \"藏\"\n\t\t},\n\t\t\"虜\": {\n\t\t\t\"jp\": \"虜\",\n\t\t\t\"zht\": \"虜\",\n\t\t\t\"zhs\": \"虏\"\n\t\t},\n\t\t\"虛\": {\n\t\t\t\"jp\": \"虚\",\n\t\t\t\"zht\": \"虛\",\n\t\t\t\"zhs\": \"虚\"\n\t\t},\n\t\t\"蟲\": {\n\t\t\t\"jp\": \"虫\",\n\t\t\t\"zht\": \"蟲\",\n\t\t\t\"zhs\": \"虫\"\n\t\t},\n\t\t\"蝕\": {\n\t\t\t\"jp\": \"蝕\",\n\t\t\t\"zht\": \"蝕\",\n\t\t\t\"zhs\": \"蚀\"\n\t\t},\n\t\t\"蠶\": {\n\t\t\t\"jp\": \"蚕\",\n\t\t\t\"zht\": \"蠶\",\n\t\t\t\"zhs\": \"蚕\"\n\t\t},\n\t\t\"蠻\": {\n\t\t\t\"jp\": \"蛮\",\n\t\t\t\"zht\": \"蠻\",\n\t\t\t\"zhs\": \"蛮\"\n\t\t},\n\t\t\"補\": {\n\t\t\t\"jp\": \"補\",\n\t\t\t\"zht\": \"補\",\n\t\t\t\"zhs\": \"补\"\n\t\t},\n\t\t\"襲\": {\n\t\t\t\"jp\": \"襲\",\n\t\t\t\"zht\": \"襲\",\n\t\t\t\"zhs\": \"袭\"\n\t\t},\n\t\t\"裝\": {\n\t\t\t\"jp\": \"装\",\n\t\t\t\"zht\": \"裝\",\n\t\t\t\"zhs\": \"装\"\n\t\t},\n\t\t\"裡\": {\n\t\t\t\"jp\": \"裏\",\n\t\t\t\"zht\": \"裡\",\n\t\t\t\"zhs\": \"里\"\n\t\t},\n\t\t\"霸\": {\n\t\t\t\"jp\": \"覇\",\n\t\t\t\"zht\": \"霸\",\n\t\t\t\"zhs\": \"霸\"\n\t\t},\n\t\t\"見\": {\n\t\t\t\"jp\": \"見\",\n\t\t\t\"zht\": \"見\",\n\t\t\t\"zhs\": \"见\"\n\t\t},\n\t\t\"觀\": {\n\t\t\t\"jp\": \"観\",\n\t\t\t\"zht\": \"觀\",\n\t\t\t\"zhs\": \"观\"\n\t\t},\n\t\t\"規\": {\n\t\t\t\"jp\": \"規\",\n\t\t\t\"zht\": \"規\",\n\t\t\t\"zhs\": \"规\"\n\t\t},\n\t\t\"覺\": {\n\t\t\t\"jp\": \"覚\",\n\t\t\t\"zht\": \"覺\",\n\t\t\t\"zhs\": \"觉\"\n\t\t},\n\t\t\"覽\": {\n\t\t\t\"jp\": \"覧\",\n\t\t\t\"zht\": \"覽\",\n\t\t\t\"zhs\": \"览\"\n\t\t},\n\t\t\"觸\": {\n\t\t\t\"jp\": \"触\",\n\t\t\t\"zht\": \"觸\",\n\t\t\t\"zhs\": \"触\"\n\t\t},\n\t\t\"訂\": {\n\t\t\t\"jp\": \"訂\",\n\t\t\t\"zht\": \"訂\",\n\t\t\t\"zhs\": \"订\"\n\t\t},\n\t\t\"計\": {\n\t\t\t\"jp\": \"計\",\n\t\t\t\"zht\": \"計\",\n\t\t\t\"zhs\": \"计\"\n\t\t},\n\t\t\"討\": {\n\t\t\t\"jp\": \"討\",\n\t\t\t\"zht\": \"討\",\n\t\t\t\"zhs\": \"讨\"\n\t\t},\n\t\t\"訓\": {\n\t\t\t\"jp\": \"訓\",\n\t\t\t\"zht\": \"訓\",\n\t\t\t\"zhs\": \"训\"\n\t\t},\n\t\t\"記\": {\n\t\t\t\"jp\": \"記\",\n\t\t\t\"zht\": \"記\",\n\t\t\t\"zhs\": \"记\"\n\t\t},\n\t\t\"訟\": {\n\t\t\t\"jp\": \"訟\",\n\t\t\t\"zht\": \"訟\",\n\t\t\t\"zhs\": \"讼\"\n\t\t},\n\t\t\"訪\": {\n\t\t\t\"jp\": \"訪\",\n\t\t\t\"zht\": \"訪\",\n\t\t\t\"zhs\": \"访\"\n\t\t},\n\t\t\"設\": {\n\t\t\t\"jp\": \"設\",\n\t\t\t\"zht\": \"設\",\n\t\t\t\"zhs\": \"设\"\n\t\t},\n\t\t\"許\": {\n\t\t\t\"jp\": \"許\",\n\t\t\t\"zht\": \"許\",\n\t\t\t\"zhs\": \"许\"\n\t\t},\n\t\t\"譯\": {\n\t\t\t\"jp\": \"訳\",\n\t\t\t\"zht\": \"譯\",\n\t\t\t\"zhs\": \"译\"\n\t\t},\n\t\t\"訴\": {\n\t\t\t\"jp\": \"訴\",\n\t\t\t\"zht\": \"訴\",\n\t\t\t\"zhs\": \"诉\"\n\t\t},\n\t\t\"診\": {\n\t\t\t\"jp\": \"診\",\n\t\t\t\"zht\": \"診\",\n\t\t\t\"zhs\": \"诊\"\n\t\t},\n\t\t\"證\": {\n\t\t\t\"jp\": \"証\",\n\t\t\t\"zht\": \"證\",\n\t\t\t\"zhs\": \"证\"\n\t\t},\n\t\t\"詐\": {\n\t\t\t\"jp\": \"詐\",\n\t\t\t\"zht\": \"詐\",\n\t\t\t\"zhs\": \"诈\"\n\t\t},\n\t\t\"詔\": {\n\t\t\t\"jp\": \"詔\",\n\t\t\t\"zht\": \"詔\",\n\t\t\t\"zhs\": \"诏\"\n\t\t},\n\t\t\"評\": {\n\t\t\t\"jp\": \"評\",\n\t\t\t\"zht\": \"評\",\n\t\t\t\"zhs\": \"评\"\n\t\t},\n\t\t\"詛\": {\n\t\t\t\"jp\": \"詛\",\n\t\t\t\"zht\": \"詛\",\n\t\t\t\"zhs\": \"诅\"\n\t\t},\n\t\t\"詞\": {\n\t\t\t\"jp\": \"詞\",\n\t\t\t\"zht\": \"詞\",\n\t\t\t\"zhs\": \"词\"\n\t\t},\n\t\t\"試\": {\n\t\t\t\"jp\": \"試\",\n\t\t\t\"zht\": \"試\",\n\t\t\t\"zhs\": \"试\"\n\t\t},\n\t\t\"詩\": {\n\t\t\t\"jp\": \"詩\",\n\t\t\t\"zht\": \"詩\",\n\t\t\t\"zhs\": \"诗\"\n\t\t},\n\t\t\"詰\": {\n\t\t\t\"jp\": \"詰\",\n\t\t\t\"zht\": \"詰\",\n\t\t\t\"zhs\": \"诘\"\n\t\t},\n\t\t\"該\": {\n\t\t\t\"jp\": \"該\",\n\t\t\t\"zht\": \"該\",\n\t\t\t\"zhs\": \"该\"\n\t\t},\n\t\t\"詳\": {\n\t\t\t\"jp\": \"詳\",\n\t\t\t\"zht\": \"詳\",\n\t\t\t\"zhs\": \"详\"\n\t\t},\n\t\t\"譽\": {\n\t\t\t\"jp\": \"誉\",\n\t\t\t\"zht\": \"譽\",\n\t\t\t\"zhs\": \"誉\"\n\t\t},\n\t\t\"謄\": {\n\t\t\t\"jp\": \"謄\",\n\t\t\t\"zht\": \"謄\",\n\t\t\t\"zhs\": \"誊\"\n\t\t},\n\t\t\"認\": {\n\t\t\t\"jp\": \"認\",\n\t\t\t\"zht\": \"認\",\n\t\t\t\"zhs\": \"认\"\n\t\t},\n\t\t\"誕\": {\n\t\t\t\"jp\": \"誕\",\n\t\t\t\"zht\": \"誕\",\n\t\t\t\"zhs\": \"诞\"\n\t\t},\n\t\t\"誘\": {\n\t\t\t\"jp\": \"誘\",\n\t\t\t\"zht\": \"誘\",\n\t\t\t\"zhs\": \"诱\"\n\t\t},\n\t\t\"語\": {\n\t\t\t\"jp\": \"語\",\n\t\t\t\"zht\": \"語\",\n\t\t\t\"zhs\": \"语\"\n\t\t},\n\t\t\"誠\": {\n\t\t\t\"jp\": \"誠\",\n\t\t\t\"zht\": \"誠\",\n\t\t\t\"zhs\": \"诚\"\n\t\t},\n\t\t\"誤\": {\n\t\t\t\"jp\": \"誤\",\n\t\t\t\"zht\": \"誤\",\n\t\t\t\"zhs\": \"误\"\n\t\t},\n\t\t\"說\": {\n\t\t\t\"jp\": \"説\",\n\t\t\t\"zht\": \"說\",\n\t\t\t\"zhs\": \"说\"\n\t\t},\n\t\t\"讀\": {\n\t\t\t\"jp\": \"読\",\n\t\t\t\"zht\": \"讀\",\n\t\t\t\"zhs\": \"读\"\n\t\t},\n\t\t\"誰\": {\n\t\t\t\"jp\": \"誰\",\n\t\t\t\"zht\": \"誰\",\n\t\t\t\"zhs\": \"谁\"\n\t\t},\n\t\t\"課\": {\n\t\t\t\"jp\": \"課\",\n\t\t\t\"zht\": \"課\",\n\t\t\t\"zhs\": \"课\"\n\t\t},\n\t\t\"調\": {\n\t\t\t\"jp\": \"調\",\n\t\t\t\"zht\": \"調\",\n\t\t\t\"zhs\": \"调\"\n\t\t},\n\t\t\"談\": {\n\t\t\t\"jp\": \"談\",\n\t\t\t\"zht\": \"談\",\n\t\t\t\"zhs\": \"谈\"\n\t\t},\n\t\t\"請\": {\n\t\t\t\"jp\": \"請\",\n\t\t\t\"zht\": \"請\",\n\t\t\t\"zhs\": \"请\"\n\t\t},\n\t\t\"論\": {\n\t\t\t\"jp\": \"論\",\n\t\t\t\"zht\": \"論\",\n\t\t\t\"zhs\": \"论\"\n\t\t},\n\t\t\"諭\": {\n\t\t\t\"jp\": \"諭\",\n\t\t\t\"zht\": \"諭\",\n\t\t\t\"zhs\": \"谕\"\n\t\t},\n\t\t\"諸\": {\n\t\t\t\"jp\": \"諸\",\n\t\t\t\"zht\": \"諸\",\n\t\t\t\"zhs\": \"诸\"\n\t\t},\n\t\t\"諾\": {\n\t\t\t\"jp\": \"諾\",\n\t\t\t\"zht\": \"諾\",\n\t\t\t\"zhs\": \"诺\"\n\t\t},\n\t\t\"謀\": {\n\t\t\t\"jp\": \"謀\",\n\t\t\t\"zht\": \"謀\",\n\t\t\t\"zhs\": \"谋\"\n\t\t},\n\t\t\"謁\": {\n\t\t\t\"jp\": \"謁\",\n\t\t\t\"zht\": \"謁\",\n\t\t\t\"zhs\": \"谒\"\n\t\t},\n\t\t\"謎\": {\n\t\t\t\"jp\": \"謎\",\n\t\t\t\"zht\": \"謎\",\n\t\t\t\"zhs\": \"谜\"\n\t\t},\n\t\t\"謙\": {\n\t\t\t\"jp\": \"謙\",\n\t\t\t\"zht\": \"謙\",\n\t\t\t\"zhs\": \"谦\"\n\t\t},\n\t\t\"講\": {\n\t\t\t\"jp\": \"講\",\n\t\t\t\"zht\": \"講\",\n\t\t\t\"zhs\": \"讲\"\n\t\t},\n\t\t\"謝\": {\n\t\t\t\"jp\": \"謝\",\n\t\t\t\"zht\": \"謝\",\n\t\t\t\"zhs\": \"谢\"\n\t\t},\n\t\t\"謠\": {\n\t\t\t\"jp\": \"謡\",\n\t\t\t\"zht\": \"謠\",\n\t\t\t\"zhs\": \"谣\"\n\t\t},\n\t\t\"謹\": {\n\t\t\t\"jp\": \"謹\",\n\t\t\t\"zht\": \"謹\",\n\t\t\t\"zhs\": \"谨\"\n\t\t},\n\t\t\"識\": {\n\t\t\t\"jp\": \"識\",\n\t\t\t\"zht\": \"識\",\n\t\t\t\"zhs\": \"识\"\n\t\t},\n\t\t\"譜\": {\n\t\t\t\"jp\": \"譜\",\n\t\t\t\"zht\": \"譜\",\n\t\t\t\"zhs\": \"谱\"\n\t\t},\n\t\t\"議\": {\n\t\t\t\"jp\": \"議\",\n\t\t\t\"zht\": \"議\",\n\t\t\t\"zhs\": \"议\"\n\t\t},\n\t\t\"讓\": {\n\t\t\t\"jp\": \"譲\",\n\t\t\t\"zht\": \"讓\",\n\t\t\t\"zhs\": \"让\"\n\t\t},\n\t\t\"貝\": {\n\t\t\t\"jp\": \"貝\",\n\t\t\t\"zht\": \"貝\",\n\t\t\t\"zhs\": \"贝\"\n\t\t},\n\t\t\"貞\": {\n\t\t\t\"jp\": \"貞\",\n\t\t\t\"zht\": \"貞\",\n\t\t\t\"zhs\": \"贞\"\n\t\t},\n\t\t\"負\": {\n\t\t\t\"jp\": \"負\",\n\t\t\t\"zht\": \"負\",\n\t\t\t\"zhs\": \"负\"\n\t\t},\n\t\t\"財\": {\n\t\t\t\"jp\": \"財\",\n\t\t\t\"zht\": \"財\",\n\t\t\t\"zhs\": \"财\"\n\t\t},\n\t\t\"貢\": {\n\t\t\t\"jp\": \"貢\",\n\t\t\t\"zht\": \"貢\",\n\t\t\t\"zhs\": \"贡\"\n\t\t},\n\t\t\"貧\": {\n\t\t\t\"jp\": \"貧\",\n\t\t\t\"zht\": \"貧\",\n\t\t\t\"zhs\": \"贫\"\n\t\t},\n\t\t\"貨\": {\n\t\t\t\"jp\": \"貨\",\n\t\t\t\"zht\": \"貨\",\n\t\t\t\"zhs\": \"货\"\n\t\t},\n\t\t\"販\": {\n\t\t\t\"jp\": \"販\",\n\t\t\t\"zht\": \"販\",\n\t\t\t\"zhs\": \"贩\"\n\t\t},\n\t\t\"貪\": {\n\t\t\t\"jp\": \"貪\",\n\t\t\t\"zht\": \"貪\",\n\t\t\t\"zhs\": \"贪\"\n\t\t},\n\t\t\"責\": {\n\t\t\t\"jp\": \"責\",\n\t\t\t\"zht\": \"責\",\n\t\t\t\"zhs\": \"责\"\n\t\t},\n\t\t\"貯\": {\n\t\t\t\"jp\": \"貯\",\n\t\t\t\"zht\": \"貯\",\n\t\t\t\"zhs\": \"贮\"\n\t\t},\n\t\t\"貴\": {\n\t\t\t\"jp\": \"貴\",\n\t\t\t\"zht\": \"貴\",\n\t\t\t\"zhs\": \"贵\"\n\t\t},\n\t\t\"貸\": {\n\t\t\t\"jp\": \"貸\",\n\t\t\t\"zht\": \"貸\",\n\t\t\t\"zhs\": \"贷\"\n\t\t},\n\t\t\"費\": {\n\t\t\t\"jp\": \"費\",\n\t\t\t\"zht\": \"費\",\n\t\t\t\"zhs\": \"费\"\n\t\t},\n\t\t\"貿\": {\n\t\t\t\"jp\": \"貿\",\n\t\t\t\"zht\": \"貿\",\n\t\t\t\"zhs\": \"贸\"\n\t\t},\n\t\t\"賀\": {\n\t\t\t\"jp\": \"賀\",\n\t\t\t\"zht\": \"賀\",\n\t\t\t\"zhs\": \"贺\"\n\t\t},\n\t\t\"賃\": {\n\t\t\t\"jp\": \"賃\",\n\t\t\t\"zht\": \"賃\",\n\t\t\t\"zhs\": \"赁\"\n\t\t},\n\t\t\"賄\": {\n\t\t\t\"jp\": \"賄\",\n\t\t\t\"zht\": \"賄\",\n\t\t\t\"zhs\": \"贿\"\n\t\t},\n\t\t\"資\": {\n\t\t\t\"jp\": \"資\",\n\t\t\t\"zht\": \"資\",\n\t\t\t\"zhs\": \"资\"\n\t\t},\n\t\t\"賊\": {\n\t\t\t\"jp\": \"賊\",\n\t\t\t\"zht\": \"賊\",\n\t\t\t\"zhs\": \"贼\"\n\t\t},\n\t\t\"賤\": {\n\t\t\t\"jp\": \"賎\",\n\t\t\t\"zht\": \"賤\",\n\t\t\t\"zhs\": \"贱\"\n\t\t},\n\t\t\"贊\": {\n\t\t\t\"jp\": \"賛\",\n\t\t\t\"zht\": \"贊\",\n\t\t\t\"zhs\": \"赞\"\n\t\t},\n\t\t\"賜\": {\n\t\t\t\"jp\": \"賜\",\n\t\t\t\"zht\": \"賜\",\n\t\t\t\"zhs\": \"赐\"\n\t\t},\n\t\t\"賞\": {\n\t\t\t\"jp\": \"賞\",\n\t\t\t\"zht\": \"賞\",\n\t\t\t\"zhs\": \"赏\"\n\t\t},\n\t\t\"賠\": {\n\t\t\t\"jp\": \"賠\",\n\t\t\t\"zht\": \"賠\",\n\t\t\t\"zhs\": \"赔\"\n\t\t},\n\t\t\"賢\": {\n\t\t\t\"jp\": \"賢\",\n\t\t\t\"zht\": \"賢\",\n\t\t\t\"zhs\": \"贤\"\n\t\t},\n\t\t\"賦\": {\n\t\t\t\"jp\": \"賦\",\n\t\t\t\"zht\": \"賦\",\n\t\t\t\"zhs\": \"赋\"\n\t\t},\n\t\t\"質\": {\n\t\t\t\"jp\": \"質\",\n\t\t\t\"zht\": \"質\",\n\t\t\t\"zhs\": \"质\"\n\t\t},\n\t\t\"賴\": {\n\t\t\t\"jp\": \"頼\",\n\t\t\t\"zht\": \"賴\",\n\t\t\t\"zhs\": \"赖\"\n\t\t},\n\t\t\"贈\": {\n\t\t\t\"jp\": \"贈\",\n\t\t\t\"zht\": \"贈\",\n\t\t\t\"zhs\": \"赠\"\n\t\t},\n\t\t\"贓\": {\n\t\t\t\"jp\": \"贓\",\n\t\t\t\"zht\": \"贓\",\n\t\t\t\"zhs\": \"赃\"\n\t\t},\n\t\t\"躍\": {\n\t\t\t\"jp\": \"躍\",\n\t\t\t\"zht\": \"躍\",\n\t\t\t\"zhs\": \"跃\"\n\t\t},\n\t\t\"踐\": {\n\t\t\t\"jp\": \"践\",\n\t\t\t\"zht\": \"踐\",\n\t\t\t\"zhs\": \"践\"\n\t\t},\n\t\t\"蹤\": {\n\t\t\t\"jp\": \"踪\",\n\t\t\t\"zht\": \"蹤\",\n\t\t\t\"zhs\": \"踪\"\n\t\t},\n\t\t\"車\": {\n\t\t\t\"jp\": \"車\",\n\t\t\t\"zht\": \"車\",\n\t\t\t\"zhs\": \"车\"\n\t\t},\n\t\t\"軌\": {\n\t\t\t\"jp\": \"軌\",\n\t\t\t\"zht\": \"軌\",\n\t\t\t\"zhs\": \"轨\"\n\t\t},\n\t\t\"軒\": {\n\t\t\t\"jp\": \"軒\",\n\t\t\t\"zht\": \"軒\",\n\t\t\t\"zhs\": \"轩\"\n\t\t},\n\t\t\"軟\": {\n\t\t\t\"jp\": \"軟\",\n\t\t\t\"zht\": \"軟\",\n\t\t\t\"zhs\": \"软\"\n\t\t},\n\t\t\"轉\": {\n\t\t\t\"jp\": \"転\",\n\t\t\t\"zht\": \"轉\",\n\t\t\t\"zhs\": \"转\"\n\t\t},\n\t\t\"軸\": {\n\t\t\t\"jp\": \"軸\",\n\t\t\t\"zht\": \"軸\",\n\t\t\t\"zhs\": \"轴\"\n\t\t},\n\t\t\"輕\": {\n\t\t\t\"jp\": \"軽\",\n\t\t\t\"zht\": \"輕\",\n\t\t\t\"zhs\": \"轻\"\n\t\t},\n\t\t\"較\": {\n\t\t\t\"jp\": \"較\",\n\t\t\t\"zht\": \"較\",\n\t\t\t\"zhs\": \"较\"\n\t\t},\n\t\t\"載\": {\n\t\t\t\"jp\": \"載\",\n\t\t\t\"zht\": \"載\",\n\t\t\t\"zhs\": \"载\"\n\t\t},\n\t\t\"輝\": {\n\t\t\t\"jp\": \"輝\",\n\t\t\t\"zht\": \"輝\",\n\t\t\t\"zhs\": \"辉\"\n\t\t},\n\t\t\"輩\": {\n\t\t\t\"jp\": \"輩\",\n\t\t\t\"zht\": \"輩\",\n\t\t\t\"zhs\": \"辈\"\n\t\t},\n\t\t\"輪\": {\n\t\t\t\"jp\": \"輪\",\n\t\t\t\"zht\": \"輪\",\n\t\t\t\"zhs\": \"轮\"\n\t\t},\n\t\t\"輸\": {\n\t\t\t\"jp\": \"輸\",\n\t\t\t\"zht\": \"輸\",\n\t\t\t\"zhs\": \"输\"\n\t\t},\n\t\t\"轄\": {\n\t\t\t\"jp\": \"轄\",\n\t\t\t\"zht\": \"轄\",\n\t\t\t\"zhs\": \"辖\"\n\t\t},\n\t\t\"辭\": {\n\t\t\t\"jp\": \"辞\",\n\t\t\t\"zht\": \"辭\",\n\t\t\t\"zhs\": \"辞\"\n\t\t},\n\t\t\"邊\": {\n\t\t\t\"jp\": \"辺\",\n\t\t\t\"zht\": \"邊\",\n\t\t\t\"zhs\": \"边\"\n\t\t},\n\t\t\"達\": {\n\t\t\t\"jp\": \"達\",\n\t\t\t\"zht\": \"達\",\n\t\t\t\"zhs\": \"达\"\n\t\t},\n\t\t\"遷\": {\n\t\t\t\"jp\": \"遷\",\n\t\t\t\"zht\": \"遷\",\n\t\t\t\"zhs\": \"迁\"\n\t\t},\n\t\t\"過\": {\n\t\t\t\"jp\": \"過\",\n\t\t\t\"zht\": \"過\",\n\t\t\t\"zhs\": \"过\"\n\t\t},\n\t\t\"運\": {\n\t\t\t\"jp\": \"運\",\n\t\t\t\"zht\": \"運\",\n\t\t\t\"zhs\": \"运\"\n\t\t},\n\t\t\"還\": {\n\t\t\t\"jp\": \"還\",\n\t\t\t\"zht\": \"還\",\n\t\t\t\"zhs\": \"还\"\n\t\t},\n\t\t\"進\": {\n\t\t\t\"jp\": \"進\",\n\t\t\t\"zht\": \"進\",\n\t\t\t\"zhs\": \"进\"\n\t\t},\n\t\t\"遠\": {\n\t\t\t\"jp\": \"遠\",\n\t\t\t\"zht\": \"遠\",\n\t\t\t\"zhs\": \"远\"\n\t\t},\n\t\t\"違\": {\n\t\t\t\"jp\": \"違\",\n\t\t\t\"zht\": \"違\",\n\t\t\t\"zhs\": \"违\"\n\t\t},\n\t\t\"連\": {\n\t\t\t\"jp\": \"連\",\n\t\t\t\"zht\": \"連\",\n\t\t\t\"zhs\": \"连\"\n\t\t},\n\t\t\"遲\": {\n\t\t\t\"jp\": \"遅\",\n\t\t\t\"zht\": \"遲\",\n\t\t\t\"zhs\": \"迟\"\n\t\t},\n\t\t\"適\": {\n\t\t\t\"jp\": \"適\",\n\t\t\t\"zht\": \"適\",\n\t\t\t\"zhs\": \"适\"\n\t\t},\n\t\t\"選\": {\n\t\t\t\"jp\": \"選\",\n\t\t\t\"zht\": \"選\",\n\t\t\t\"zhs\": \"选\"\n\t\t},\n\t\t\"遞\": {\n\t\t\t\"jp\": \"逓\",\n\t\t\t\"zht\": \"遞\",\n\t\t\t\"zhs\": \"递\"\n\t\t},\n\t\t\"遺\": {\n\t\t\t\"jp\": \"遺\",\n\t\t\t\"zht\": \"遺\",\n\t\t\t\"zhs\": \"遗\"\n\t\t},\n\t\t\"遙\": {\n\t\t\t\"jp\": \"遥\",\n\t\t\t\"zht\": \"遙\",\n\t\t\t\"zhs\": \"遥\"\n\t\t},\n\t\t\"郵\": {\n\t\t\t\"jp\": \"郵\",\n\t\t\t\"zht\": \"郵\",\n\t\t\t\"zhs\": \"邮\"\n\t\t},\n\t\t\"鄰\": {\n\t\t\t\"jp\": \"隣\",\n\t\t\t\"zht\": \"鄰\",\n\t\t\t\"zhs\": \"邻\"\n\t\t},\n\t\t\"醉\": {\n\t\t\t\"jp\": \"酔\",\n\t\t\t\"zht\": \"醉\",\n\t\t\t\"zhs\": \"醉\"\n\t\t},\n\t\t\"釀\": {\n\t\t\t\"jp\": \"醸\",\n\t\t\t\"zht\": \"釀\",\n\t\t\t\"zhs\": \"酿\"\n\t\t},\n\t\t\"釋\": {\n\t\t\t\"jp\": \"釈\",\n\t\t\t\"zht\": \"釋\",\n\t\t\t\"zhs\": \"释\"\n\t\t},\n\t\t\"針\": {\n\t\t\t\"jp\": \"針\",\n\t\t\t\"zht\": \"針\",\n\t\t\t\"zhs\": \"针\"\n\t\t},\n\t\t\"釣\": {\n\t\t\t\"jp\": \"釣\",\n\t\t\t\"zht\": \"釣\",\n\t\t\t\"zhs\": \"钓\"\n\t\t},\n\t\t\"鈍\": {\n\t\t\t\"jp\": \"鈍\",\n\t\t\t\"zht\": \"鈍\",\n\t\t\t\"zhs\": \"钝\"\n\t\t},\n\t\t\"鈴\": {\n\t\t\t\"jp\": \"鈴\",\n\t\t\t\"zht\": \"鈴\",\n\t\t\t\"zhs\": \"铃\"\n\t\t},\n\t\t\"鐵\": {\n\t\t\t\"jp\": \"鉄\",\n\t\t\t\"zht\": \"鐵\",\n\t\t\t\"zhs\": \"铁\"\n\t\t},\n\t\t\"鉛\": {\n\t\t\t\"jp\": \"鉛\",\n\t\t\t\"zht\": \"鉛\",\n\t\t\t\"zhs\": \"铅\"\n\t\t},\n\t\t\"鑑\": {\n\t\t\t\"jp\": \"鑑\",\n\t\t\t\"zht\": \"鑑\",\n\t\t\t\"zhs\": \"鉴\"\n\t\t},\n\t\t\"銀\": {\n\t\t\t\"jp\": \"銀\",\n\t\t\t\"zht\": \"銀\",\n\t\t\t\"zhs\": \"银\"\n\t\t},\n\t\t\"銃\": {\n\t\t\t\"jp\": \"銃\",\n\t\t\t\"zht\": \"銃\",\n\t\t\t\"zhs\": \"铳\"\n\t\t},\n\t\t\"銅\": {\n\t\t\t\"jp\": \"銅\",\n\t\t\t\"zht\": \"銅\",\n\t\t\t\"zhs\": \"铜\"\n\t\t},\n\t\t\"銑\": {\n\t\t\t\"jp\": \"銑\",\n\t\t\t\"zht\": \"銑\",\n\t\t\t\"zhs\": \"铣\"\n\t\t},\n\t\t\"銘\": {\n\t\t\t\"jp\": \"銘\",\n\t\t\t\"zht\": \"銘\",\n\t\t\t\"zhs\": \"铭\"\n\t\t},\n\t\t\"錢\": {\n\t\t\t\"jp\": \"銭\",\n\t\t\t\"zht\": \"錢\",\n\t\t\t\"zhs\": \"钱\"\n\t\t},\n\t\t\"鋭\": {\n\t\t\t\"jp\": \"鋭\",\n\t\t\t\"zht\": \"鋭\",\n\t\t\t\"zhs\": \"锐\"\n\t\t},\n\t\t\"鑄\": {\n\t\t\t\"jp\": \"鋳\",\n\t\t\t\"zht\": \"鑄\",\n\t\t\t\"zhs\": \"铸\"\n\t\t},\n\t\t\"鋼\": {\n\t\t\t\"jp\": \"鋼\",\n\t\t\t\"zht\": \"鋼\",\n\t\t\t\"zhs\": \"钢\"\n\t\t},\n\t\t\"錘\": {\n\t\t\t\"jp\": \"錘\",\n\t\t\t\"zht\": \"錘\",\n\t\t\t\"zhs\": \"锤\"\n\t\t},\n\t\t\"錠\": {\n\t\t\t\"jp\": \"錠\",\n\t\t\t\"zht\": \"錠\",\n\t\t\t\"zhs\": \"锭\"\n\t\t},\n\t\t\"錯\": {\n\t\t\t\"jp\": \"錯\",\n\t\t\t\"zht\": \"錯\",\n\t\t\t\"zhs\": \"错\"\n\t\t},\n\t\t\"鍾\": {\n\t\t\t\"jp\": \"鍾\",\n\t\t\t\"zht\": \"鍾\",\n\t\t\t\"zhs\": \"钟\"\n\t\t},\n\t\t\"鎖\": {\n\t\t\t\"jp\": \"鎖\",\n\t\t\t\"zht\": \"鎖\",\n\t\t\t\"zhs\": \"锁\"\n\t\t},\n\t\t\"鎮\": {\n\t\t\t\"jp\": \"鎮\",\n\t\t\t\"zht\": \"鎮\",\n\t\t\t\"zhs\": \"镇\"\n\t\t},\n\t\t\"鏡\": {\n\t\t\t\"jp\": \"鏡\",\n\t\t\t\"zht\": \"鏡\",\n\t\t\t\"zhs\": \"镜\"\n\t\t},\n\t\t\"長\": {\n\t\t\t\"jp\": \"長\",\n\t\t\t\"zht\": \"長\",\n\t\t\t\"zhs\": \"长\"\n\t\t},\n\t\t\"門\": {\n\t\t\t\"jp\": \"門\",\n\t\t\t\"zht\": \"門\",\n\t\t\t\"zhs\": \"门\"\n\t\t},\n\t\t\"閉\": {\n\t\t\t\"jp\": \"閉\",\n\t\t\t\"zht\": \"閉\",\n\t\t\t\"zhs\": \"闭\"\n\t\t},\n\t\t\"閒\": {\n\t\t\t\"jp\": \"閑\",\n\t\t\t\"zht\": \"閒\",\n\t\t\t\"zhs\": \"闲\"\n\t\t},\n\t\t\"間\": {\n\t\t\t\"jp\": \"間\",\n\t\t\t\"zht\": \"間\",\n\t\t\t\"zhs\": \"间\"\n\t\t},\n\t\t\"閣\": {\n\t\t\t\"jp\": \"閣\",\n\t\t\t\"zht\": \"閣\",\n\t\t\t\"zhs\": \"阁\"\n\t\t},\n\t\t\"閥\": {\n\t\t\t\"jp\": \"閥\",\n\t\t\t\"zht\": \"閥\",\n\t\t\t\"zhs\": \"阀\"\n\t\t},\n\t\t\"閲\": {\n\t\t\t\"jp\": \"閲\",\n\t\t\t\"zht\": \"閲\",\n\t\t\t\"zhs\": \"阅\"\n\t\t},\n\t\t\"隊\": {\n\t\t\t\"jp\": \"隊\",\n\t\t\t\"zht\": \"隊\",\n\t\t\t\"zhs\": \"队\"\n\t\t},\n\t\t\"陽\": {\n\t\t\t\"jp\": \"陽\",\n\t\t\t\"zht\": \"陽\",\n\t\t\t\"zhs\": \"阳\"\n\t\t},\n\t\t\"陰\": {\n\t\t\t\"jp\": \"陰\",\n\t\t\t\"zht\": \"陰\",\n\t\t\t\"zhs\": \"阴\"\n\t\t},\n\t\t\"陣\": {\n\t\t\t\"jp\": \"陣\",\n\t\t\t\"zht\": \"陣\",\n\t\t\t\"zhs\": \"阵\"\n\t\t},\n\t\t\"階\": {\n\t\t\t\"jp\": \"階\",\n\t\t\t\"zht\": \"階\",\n\t\t\t\"zhs\": \"阶\"\n\t\t},\n\t\t\"際\": {\n\t\t\t\"jp\": \"際\",\n\t\t\t\"zht\": \"際\",\n\t\t\t\"zhs\": \"际\"\n\t\t},\n\t\t\"陸\": {\n\t\t\t\"jp\": \"陸\",\n\t\t\t\"zht\": \"陸\",\n\t\t\t\"zhs\": \"陆\"\n\t\t},\n\t\t\"陳\": {\n\t\t\t\"jp\": \"陳\",\n\t\t\t\"zht\": \"陳\",\n\t\t\t\"zhs\": \"陈\"\n\t\t},\n\t\t\"陷\": {\n\t\t\t\"jp\": \"陥\",\n\t\t\t\"zht\": \"陷\",\n\t\t\t\"zhs\": \"陷\"\n\t\t},\n\t\t\"隨\": {\n\t\t\t\"jp\": \"随\",\n\t\t\t\"zht\": \"隨\",\n\t\t\t\"zhs\": \"随\"\n\t\t},\n\t\t\"隱\": {\n\t\t\t\"jp\": \"隠\",\n\t\t\t\"zht\": \"隱\",\n\t\t\t\"zhs\": \"隐\"\n\t\t},\n\t\t\"隷\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隷\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"隸\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隸\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"難\": {\n\t\t\t\"jp\": \"難\",\n\t\t\t\"zht\": \"難\",\n\t\t\t\"zhs\": \"难\"\n\t\t},\n\t\t\"雞\": {\n\t\t\t\"jp\": \"鶏\",\n\t\t\t\"zht\": \"雞\",\n\t\t\t\"zhs\": \"鸡\"\n\t\t},\n\t\t\"鷄\": {\n\t\t\t\"jp\": \"鶏\",\n\t\t\t\"zht\": \"鷄\",\n\t\t\t\"zhs\": \"鸡\"\n\t\t},\n\t\t\"霧\": {\n\t\t\t\"jp\": \"霧\",\n\t\t\t\"zht\": \"霧\",\n\t\t\t\"zhs\": \"雾\"\n\t\t},\n\t\t\"靜\": {\n\t\t\t\"jp\": \"静\",\n\t\t\t\"zht\": \"靜\",\n\t\t\t\"zhs\": \"静\"\n\t\t},\n\t\t\"頂\": {\n\t\t\t\"jp\": \"頂\",\n\t\t\t\"zht\": \"頂\",\n\t\t\t\"zhs\": \"顶\"\n\t\t},\n\t\t\"項\": {\n\t\t\t\"jp\": \"項\",\n\t\t\t\"zht\": \"項\",\n\t\t\t\"zhs\": \"项\"\n\t\t},\n\t\t\"順\": {\n\t\t\t\"jp\": \"順\",\n\t\t\t\"zht\": \"順\",\n\t\t\t\"zhs\": \"顺\"\n\t\t},\n\t\t\"頑\": {\n\t\t\t\"jp\": \"頑\",\n\t\t\t\"zht\": \"頑\",\n\t\t\t\"zhs\": \"顽\"\n\t\t},\n\t\t\"頒\": {\n\t\t\t\"jp\": \"頒\",\n\t\t\t\"zht\": \"頒\",\n\t\t\t\"zhs\": \"颁\"\n\t\t},\n\t\t\"領\": {\n\t\t\t\"jp\": \"領\",\n\t\t\t\"zht\": \"領\",\n\t\t\t\"zhs\": \"领\"\n\t\t},\n\t\t\"頻\": {\n\t\t\t\"jp\": \"頻\",\n\t\t\t\"zht\": \"頻\",\n\t\t\t\"zhs\": \"频\"\n\t\t},\n\t\t\"題\": {\n\t\t\t\"jp\": \"題\",\n\t\t\t\"zht\": \"題\",\n\t\t\t\"zhs\": \"题\"\n\t\t},\n\t\t\"額\": {\n\t\t\t\"jp\": \"額\",\n\t\t\t\"zht\": \"額\",\n\t\t\t\"zhs\": \"额\"\n\t\t},\n\t\t\"顏\": {\n\t\t\t\"jp\": \"顔\",\n\t\t\t\"zht\": \"顏\",\n\t\t\t\"zhs\": \"颜\"\n\t\t},\n\t\t\"風\": {\n\t\t\t\"jp\": \"風\",\n\t\t\t\"zht\": \"風\",\n\t\t\t\"zhs\": \"风\"\n\t\t},\n\t\t\"飛\": {\n\t\t\t\"jp\": \"飛\",\n\t\t\t\"zht\": \"飛\",\n\t\t\t\"zhs\": \"飞\"\n\t\t},\n\t\t\"饑\": {\n\t\t\t\"jp\": \"飢\",\n\t\t\t\"zht\": \"饑\",\n\t\t\t\"zhs\": \"饥\"\n\t\t},\n\t\t\"飯\": {\n\t\t\t\"jp\": \"飯\",\n\t\t\t\"zht\": \"飯\",\n\t\t\t\"zhs\": \"饭\"\n\t\t},\n\t\t\"飲\": {\n\t\t\t\"jp\": \"飲\",\n\t\t\t\"zht\": \"飲\",\n\t\t\t\"zhs\": \"饮\"\n\t\t},\n\t\t\"飼\": {\n\t\t\t\"jp\": \"飼\",\n\t\t\t\"zht\": \"飼\",\n\t\t\t\"zhs\": \"饲\"\n\t\t},\n\t\t\"飽\": {\n\t\t\t\"jp\": \"飽\",\n\t\t\t\"zht\": \"飽\",\n\t\t\t\"zhs\": \"饱\"\n\t\t},\n\t\t\"飾\": {\n\t\t\t\"jp\": \"飾\",\n\t\t\t\"zht\": \"飾\",\n\t\t\t\"zhs\": \"饰\"\n\t\t},\n\t\t\"餓\": {\n\t\t\t\"jp\": \"餓\",\n\t\t\t\"zht\": \"餓\",\n\t\t\t\"zhs\": \"饿\"\n\t\t},\n\t\t\"馬\": {\n\t\t\t\"jp\": \"馬\",\n\t\t\t\"zht\": \"馬\",\n\t\t\t\"zhs\": \"马\"\n\t\t},\n\t\t\"驛\": {\n\t\t\t\"jp\": \"駅\",\n\t\t\t\"zht\": \"驛\",\n\t\t\t\"zhs\": \"驿\"\n\t\t},\n\t\t\"驅\": {\n\t\t\t\"jp\": \"駆\",\n\t\t\t\"zht\": \"驅\",\n\t\t\t\"zhs\": \"驱\"\n\t\t},\n\t\t\"駐\": {\n\t\t\t\"jp\": \"駐\",\n\t\t\t\"zht\": \"駐\",\n\t\t\t\"zhs\": \"驻\"\n\t\t},\n\t\t\"騎\": {\n\t\t\t\"jp\": \"騎\",\n\t\t\t\"zht\": \"騎\",\n\t\t\t\"zhs\": \"骑\"\n\t\t},\n\t\t\"驗\": {\n\t\t\t\"jp\": \"験\",\n\t\t\t\"zht\": \"驗\",\n\t\t\t\"zhs\": \"验\"\n\t\t},\n\t\t\"騷\": {\n\t\t\t\"jp\": \"騒\",\n\t\t\t\"zht\": \"騷\",\n\t\t\t\"zhs\": \"骚\"\n\t\t},\n\t\t\"驔\": {\n\t\t\t\"jp\": \"騨\",\n\t\t\t\"zht\": \"驔\",\n\t\t\t\"zhs\": \"驔\"\n\t\t},\n\t\t\"髓\": {\n\t\t\t\"jp\": \"髄\",\n\t\t\t\"zht\": \"髓\",\n\t\t\t\"zhs\": \"髓\"\n\t\t},\n\t\t\"髮\": {\n\t\t\t\"jp\": \"髪\",\n\t\t\t\"zht\": \"髮\",\n\t\t\t\"zhs\": null\n\t\t},\n\t\t\"魚\": {\n\t\t\t\"jp\": \"魚\",\n\t\t\t\"zht\": \"魚\",\n\t\t\t\"zhs\": \"鱼\"\n\t\t},\n\t\t\"魯\": {\n\t\t\t\"jp\": \"魯\",\n\t\t\t\"zht\": \"魯\",\n\t\t\t\"zhs\": \"鲁\"\n\t\t},\n\t\t\"鮮\": {\n\t\t\t\"jp\": \"鮮\",\n\t\t\t\"zht\": \"鮮\",\n\t\t\t\"zhs\": \"鲜\"\n\t\t},\n\t\t\"鯨\": {\n\t\t\t\"jp\": \"鯨\",\n\t\t\t\"zht\": \"鯨\",\n\t\t\t\"zhs\": \"鲸\"\n\t\t},\n\t\t\"鳥\": {\n\t\t\t\"jp\": \"鳥\",\n\t\t\t\"zht\": \"鳥\",\n\t\t\t\"zhs\": \"鸟\"\n\t\t},\n\t\t\"鳴\": {\n\t\t\t\"jp\": \"鳴\",\n\t\t\t\"zht\": \"鳴\",\n\t\t\t\"zhs\": \"鸣\"\n\t\t},\n\t\t\"鶇\": {\n\t\t\t\"jp\": \"鶫\",\n\t\t\t\"zht\": \"鶇\",\n\t\t\t\"zhs\": \"鸫\"\n\t\t},\n\t\t\"麥\": {\n\t\t\t\"jp\": \"麦\",\n\t\t\t\"zht\": \"麥\",\n\t\t\t\"zhs\": \"麦\"\n\t\t},\n\t\t\"黃\": {\n\t\t\t\"jp\": \"黄\",\n\t\t\t\"zht\": \"黃\",\n\t\t\t\"zhs\": \"黄\"\n\t\t},\n\t\t\"黑\": {\n\t\t\t\"jp\": \"黒\",\n\t\t\t\"zht\": \"黑\",\n\t\t\t\"zhs\": \"黑\"\n\t\t},\n\t\t\"默\": {\n\t\t\t\"jp\": \"黙\",\n\t\t\t\"zht\": \"默\",\n\t\t\t\"zhs\": \"默\"\n\t\t},\n\t\t\"齡\": {\n\t\t\t\"jp\": \"齢\",\n\t\t\t\"zht\": \"齡\",\n\t\t\t\"zhs\": \"龄\"\n\t\t}\n\t},\n\t\"zhs\": {\n\t\t\"会\": {\n\t\t\t\"jp\": \"会\",\n\t\t\t\"zht\": \"會\",\n\t\t\t\"zhs\": \"会\"\n\t\t},\n\t\t\"笺\": {\n\t\t\t\"jp\": \"箋\",\n\t\t\t\"zht\": \"箋\",\n\t\t\t\"zhs\": \"笺\"\n\t\t},\n\t\t\"网\": {\n\t\t\t\"jp\": \"網\",\n\t\t\t\"zht\": \"網\",\n\t\t\t\"zhs\": \"网\"\n\t\t},\n\t\t\"处\": {\n\t\t\t\"jp\": \"処\",\n\t\t\t\"zht\": \"處\",\n\t\t\t\"zhs\": \"处\"\n\t\t},\n\t\t\"话\": {\n\t\t\t\"jp\": \"話\",\n\t\t\t\"zht\": \"話\",\n\t\t\t\"zhs\": \"话\"\n\t\t},\n\t\t\"驮\": {\n\t\t\t\"jp\": \"駄\",\n\t\t\t\"zht\": \"馱\",\n\t\t\t\"zhs\": \"驮\"\n\t\t},\n\t\t\"万\": {\n\t\t\t\"jp\": \"万\",\n\t\t\t\"zht\": \"萬\",\n\t\t\t\"zhs\": \"万\"\n\t\t},\n\t\t\"与\": {\n\t\t\t\"jp\": \"与\",\n\t\t\t\"zht\": \"與\",\n\t\t\t\"zhs\": \"与\"\n\t\t},\n\t\t\"丑\": {\n\t\t\t\"jp\": \"醜\",\n\t\t\t\"zht\": \"醜\",\n\t\t\t\"zhs\": \"丑\"\n\t\t},\n\t\t\"专\": {\n\t\t\t\"jp\": \"専\",\n\t\t\t\"zht\": \"專\",\n\t\t\t\"zhs\": \"专\"\n\t\t},\n\t\t\"业\": {\n\t\t\t\"jp\": \"業\",\n\t\t\t\"zht\": \"業\",\n\t\t\t\"zhs\": \"业\"\n\t\t},\n\t\t\"东\": {\n\t\t\t\"jp\": \"東\",\n\t\t\t\"zht\": \"東\",\n\t\t\t\"zhs\": \"东\"\n\t\t},\n\t\t\"丝\": {\n\t\t\t\"jp\": \"絲\",\n\t\t\t\"zht\": \"絲\",\n\t\t\t\"zhs\": \"丝\"\n\t\t},\n\t\t\"两\": {\n\t\t\t\"jp\": \"両\",\n\t\t\t\"zht\": \"兩\",\n\t\t\t\"zhs\": \"两\"\n\t\t},\n\t\t\"严\": {\n\t\t\t\"jp\": \"厳\",\n\t\t\t\"zht\": \"嚴\",\n\t\t\t\"zhs\": \"严\"\n\t\t},\n\t\t\"并\": {\n\t\t\t\"jp\": \"並\",\n\t\t\t\"zht\": \"並\",\n\t\t\t\"zhs\": \"并\"\n\t\t},\n\t\t\"丧\": {\n\t\t\t\"jp\": \"喪\",\n\t\t\t\"zht\": \"喪\",\n\t\t\t\"zhs\": \"丧\"\n\t\t},\n\t\t\"个\": {\n\t\t\t\"jp\": \"個\",\n\t\t\t\"zht\": \"個\",\n\t\t\t\"zhs\": \"个\"\n\t\t},\n\t\t\"丰\": {\n\t\t\t\"jp\": \"豊\",\n\t\t\t\"zht\": \"豐\",\n\t\t\t\"zhs\": \"丰\"\n\t\t},\n\t\t\"临\": {\n\t\t\t\"jp\": \"臨\",\n\t\t\t\"zht\": \"臨\",\n\t\t\t\"zhs\": \"临\"\n\t\t},\n\t\t\"为\": {\n\t\t\t\"jp\": \"為\",\n\t\t\t\"zht\": \"為\",\n\t\t\t\"zhs\": \"为\"\n\t\t},\n\t\t\"丽\": {\n\t\t\t\"jp\": \"麗\",\n\t\t\t\"zht\": \"麗\",\n\t\t\t\"zhs\": \"丽\"\n\t\t},\n\t\t\"举\": {\n\t\t\t\"jp\": \"挙\",\n\t\t\t\"zht\": \"舉\",\n\t\t\t\"zhs\": \"举\"\n\t\t},\n\t\t\"迺\": {\n\t\t\t\"jp\": \"廼\",\n\t\t\t\"zht\": \"迺\",\n\t\t\t\"zhs\": \"迺\"\n\t\t},\n\t\t\"义\": {\n\t\t\t\"jp\": \"義\",\n\t\t\t\"zht\": \"義\",\n\t\t\t\"zhs\": \"义\"\n\t\t},\n\t\t\"乐\": {\n\t\t\t\"jp\": \"楽\",\n\t\t\t\"zht\": \"樂\",\n\t\t\t\"zhs\": \"乐\"\n\t\t},\n\t\t\"乘\": {\n\t\t\t\"jp\": \"乗\",\n\t\t\t\"zht\": \"乘\",\n\t\t\t\"zhs\": \"乘\"\n\t\t},\n\t\t\"习\": {\n\t\t\t\"jp\": \"習\",\n\t\t\t\"zht\": \"習\",\n\t\t\t\"zhs\": \"习\"\n\t\t},\n\t\t\"乡\": {\n\t\t\t\"jp\": \"郷\",\n\t\t\t\"zht\": \"鄉\",\n\t\t\t\"zhs\": \"乡\"\n\t\t},\n\t\t\"书\": {\n\t\t\t\"jp\": \"書\",\n\t\t\t\"zht\": \"書\",\n\t\t\t\"zhs\": \"书\"\n\t\t},\n\t\t\"买\": {\n\t\t\t\"jp\": \"買\",\n\t\t\t\"zht\": \"買\",\n\t\t\t\"zhs\": \"买\"\n\t\t},\n\t\t\"乱\": {\n\t\t\t\"jp\": \"乱\",\n\t\t\t\"zht\": \"亂\",\n\t\t\t\"zhs\": \"乱\"\n\t\t},\n\t\t\"干\": {\n\t\t\t\"jp\": \"乾\",\n\t\t\t\"zht\": \"乾\",\n\t\t\t\"zhs\": \"干\"\n\t\t},\n\t\t\"龟\": {\n\t\t\t\"jp\": \"亀\",\n\t\t\t\"zht\": \"龜\",\n\t\t\t\"zhs\": \"龟\"\n\t\t},\n\t\t\"预\": {\n\t\t\t\"jp\": \"予\",\n\t\t\t\"zht\": \"預\",\n\t\t\t\"zhs\": \"预\"\n\t\t},\n\t\t\"贰\": {\n\t\t\t\"jp\": \"弐\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"云\": {\n\t\t\t\"jp\": \"雲\",\n\t\t\t\"zht\": \"雲\",\n\t\t\t\"zhs\": \"云\"\n\t\t},\n\t\t\"亚\": {\n\t\t\t\"jp\": \"亜\",\n\t\t\t\"zht\": \"亞\",\n\t\t\t\"zhs\": \"亚\"\n\t\t},\n\t\t\"产\": {\n\t\t\t\"jp\": \"産\",\n\t\t\t\"zht\": \"產\",\n\t\t\t\"zhs\": \"产\"\n\t\t},\n\t\t\"亩\": {\n\t\t\t\"jp\": \"畝\",\n\t\t\t\"zht\": \"畝\",\n\t\t\t\"zhs\": \"亩\"\n\t\t},\n\t\t\"亲\": {\n\t\t\t\"jp\": \"親\",\n\t\t\t\"zht\": \"親\",\n\t\t\t\"zhs\": \"亲\"\n\t\t},\n\t\t\"亿\": {\n\t\t\t\"jp\": \"億\",\n\t\t\t\"zht\": \"億\",\n\t\t\t\"zhs\": \"亿\"\n\t\t},\n\t\t\"仆\": {\n\t\t\t\"jp\": \"僕\",\n\t\t\t\"zht\": \"僕\",\n\t\t\t\"zhs\": \"仆\"\n\t\t},\n\t\t\"从\": {\n\t\t\t\"jp\": \"従\",\n\t\t\t\"zht\": \"從\",\n\t\t\t\"zhs\": \"从\"\n\t\t},\n\t\t\"佛\": {\n\t\t\t\"jp\": \"仏\",\n\t\t\t\"zht\": \"佛\",\n\t\t\t\"zhs\": \"佛\"\n\t\t},\n\t\t\"仓\": {\n\t\t\t\"jp\": \"倉\",\n\t\t\t\"zht\": \"倉\",\n\t\t\t\"zhs\": \"仓\"\n\t\t},\n\t\t\"仪\": {\n\t\t\t\"jp\": \"儀\",\n\t\t\t\"zht\": \"儀\",\n\t\t\t\"zhs\": \"仪\"\n\t\t},\n\t\t\"假\": {\n\t\t\t\"jp\": \"仮\",\n\t\t\t\"zht\": \"假\",\n\t\t\t\"zhs\": \"假\"\n\t\t},\n\t\t\"价\": {\n\t\t\t\"jp\": \"価\",\n\t\t\t\"zht\": \"價\",\n\t\t\t\"zhs\": \"价\"\n\t\t},\n\t\t\"众\": {\n\t\t\t\"jp\": \"衆\",\n\t\t\t\"zht\": \"眾\",\n\t\t\t\"zhs\": \"众\"\n\t\t},\n\t\t\"优\": {\n\t\t\t\"jp\": \"優\",\n\t\t\t\"zht\": \"優\",\n\t\t\t\"zhs\": \"优\"\n\t\t},\n\t\t\"传\": {\n\t\t\t\"jp\": \"伝\",\n\t\t\t\"zht\": \"傳\",\n\t\t\t\"zhs\": \"传\"\n\t\t},\n\t\t\"伞\": {\n\t\t\t\"jp\": \"傘\",\n\t\t\t\"zht\": \"傘\",\n\t\t\t\"zhs\": \"伞\"\n\t\t},\n\t\t\"伟\": {\n\t\t\t\"jp\": \"偉\",\n\t\t\t\"zht\": \"偉\",\n\t\t\t\"zhs\": \"伟\"\n\t\t},\n\t\t\"伤\": {\n\t\t\t\"jp\": \"傷\",\n\t\t\t\"zht\": \"傷\",\n\t\t\t\"zhs\": \"伤\"\n\t\t},\n\t\t\"伦\": {\n\t\t\t\"jp\": \"倫\",\n\t\t\t\"zht\": \"倫\",\n\t\t\t\"zhs\": \"伦\"\n\t\t},\n\t\t\"伪\": {\n\t\t\t\"jp\": \"偽\",\n\t\t\t\"zht\": \"偽\",\n\t\t\t\"zhs\": \"伪\"\n\t\t},\n\t\t\"体\": {\n\t\t\t\"jp\": \"体\",\n\t\t\t\"zht\": \"體\",\n\t\t\t\"zhs\": \"体\"\n\t\t},\n\t\t\"余\": {\n\t\t\t\"jp\": \"余\",\n\t\t\t\"zht\": \"餘\",\n\t\t\t\"zhs\": \"余\"\n\t\t},\n\t\t\"来\": {\n\t\t\t\"jp\": \"来\",\n\t\t\t\"zht\": \"來\",\n\t\t\t\"zhs\": \"来\"\n\t\t},\n\t\t\"侦\": {\n\t\t\t\"jp\": \"偵\",\n\t\t\t\"zht\": \"偵\",\n\t\t\t\"zhs\": \"侦\"\n\t\t},\n\t\t\"侧\": {\n\t\t\t\"jp\": \"側\",\n\t\t\t\"zht\": \"側\",\n\t\t\t\"zhs\": \"侧\"\n\t\t},\n\t\t\"俭\": {\n\t\t\t\"jp\": \"倹\",\n\t\t\t\"zht\": \"儉\",\n\t\t\t\"zhs\": \"俭\"\n\t\t},\n\t\t\"俱\": {\n\t\t\t\"jp\": \"倶\",\n\t\t\t\"zht\": \"俱\",\n\t\t\t\"zhs\": \"俱\"\n\t\t},\n\t\t\"债\": {\n\t\t\t\"jp\": \"債\",\n\t\t\t\"zht\": \"債\",\n\t\t\t\"zhs\": \"债\"\n\t\t},\n\t\t\"倾\": {\n\t\t\t\"jp\": \"傾\",\n\t\t\t\"zht\": \"傾\",\n\t\t\t\"zhs\": \"倾\"\n\t\t},\n\t\t\"偿\": {\n\t\t\t\"jp\": \"償\",\n\t\t\t\"zht\": \"償\",\n\t\t\t\"zhs\": \"偿\"\n\t\t},\n\t\t\"杰\": {\n\t\t\t\"jp\": \"傑\",\n\t\t\t\"zht\": \"傑\",\n\t\t\t\"zhs\": \"杰\"\n\t\t},\n\t\t\"备\": {\n\t\t\t\"jp\": \"備\",\n\t\t\t\"zht\": \"備\",\n\t\t\t\"zhs\": \"备\"\n\t\t},\n\t\t\"当\": {\n\t\t\t\"jp\": \"当\",\n\t\t\t\"zht\": \"當\",\n\t\t\t\"zhs\": \"当\"\n\t\t},\n\t\t\"尽\": {\n\t\t\t\"jp\": \"尽\",\n\t\t\t\"zht\": \"盡\",\n\t\t\t\"zhs\": \"尽\"\n\t\t},\n\t\t\"儿\": {\n\t\t\t\"jp\": \"児\",\n\t\t\t\"zht\": \"兒\",\n\t\t\t\"zhs\": \"儿\"\n\t\t},\n\t\t\"党\": {\n\t\t\t\"jp\": \"党\",\n\t\t\t\"zht\": \"黨\",\n\t\t\t\"zhs\": \"党\"\n\t\t},\n\t\t\"内\": {\n\t\t\t\"jp\": \"内\",\n\t\t\t\"zht\": \"內\",\n\t\t\t\"zhs\": \"内\"\n\t\t},\n\t\t\"关\": {\n\t\t\t\"jp\": \"関\",\n\t\t\t\"zht\": \"關\",\n\t\t\t\"zhs\": \"关\"\n\t\t},\n\t\t\"兴\": {\n\t\t\t\"jp\": \"興\",\n\t\t\t\"zht\": \"興\",\n\t\t\t\"zhs\": \"兴\"\n\t\t},\n\t\t\"养\": {\n\t\t\t\"jp\": \"養\",\n\t\t\t\"zht\": \"養\",\n\t\t\t\"zhs\": \"养\"\n\t\t},\n\t\t\"兽\": {\n\t\t\t\"jp\": \"獣\",\n\t\t\t\"zht\": \"獸\",\n\t\t\t\"zhs\": \"兽\"\n\t\t},\n\t\t\"圆\": {\n\t\t\t\"jp\": \"円\",\n\t\t\t\"zht\": \"圓\",\n\t\t\t\"zhs\": \"圆\"\n\t\t},\n\t\t\"写\": {\n\t\t\t\"jp\": \"写\",\n\t\t\t\"zht\": \"寫\",\n\t\t\t\"zhs\": \"写\"\n\t\t},\n\t\t\"军\": {\n\t\t\t\"jp\": \"軍\",\n\t\t\t\"zht\": \"軍\",\n\t\t\t\"zhs\": \"军\"\n\t\t},\n\t\t\"农\": {\n\t\t\t\"jp\": \"農\",\n\t\t\t\"zht\": \"農\",\n\t\t\t\"zhs\": \"农\"\n\t\t},\n\t\t\"富\": {\n\t\t\t\"jp\": \"冨\",\n\t\t\t\"zht\": \"富\",\n\t\t\t\"zhs\": \"富\"\n\t\t},\n\t\t\"冰\": {\n\t\t\t\"jp\": \"氷\",\n\t\t\t\"zht\": \"冰\",\n\t\t\t\"zhs\": \"冰\"\n\t\t},\n\t\t\"冲\": {\n\t\t\t\"jp\": \"衝\",\n\t\t\t\"zht\": \"衝\",\n\t\t\t\"zhs\": \"冲\"\n\t\t},\n\t\t\"决\": {\n\t\t\t\"jp\": \"決\",\n\t\t\t\"zht\": \"決\",\n\t\t\t\"zhs\": \"决\"\n\t\t},\n\t\t\"冻\": {\n\t\t\t\"jp\": \"凍\",\n\t\t\t\"zht\": \"凍\",\n\t\t\t\"zhs\": \"冻\"\n\t\t},\n\t\t\"涂\": {\n\t\t\t\"jp\": \"塗\",\n\t\t\t\"zht\": \"塗\",\n\t\t\t\"zhs\": \"涂\"\n\t\t},\n\t\t\"凄\": {\n\t\t\t\"jp\": \"凄\",\n\t\t\t\"zht\": \"淒\",\n\t\t\t\"zhs\": \"凄\"\n\t\t},\n\t\t\"准\": {\n\t\t\t\"jp\": \"准\",\n\t\t\t\"zht\": \"準\",\n\t\t\t\"zhs\": \"准\"\n\t\t},\n\t\t\"几\": {\n\t\t\t\"jp\": \"幾\",\n\t\t\t\"zht\": \"幾\",\n\t\t\t\"zhs\": \"几\"\n\t\t},\n\t\t\"击\": {\n\t\t\t\"jp\": \"撃\",\n\t\t\t\"zht\": \"擊\",\n\t\t\t\"zhs\": \"击\"\n\t\t},\n\t\t\"划\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"劃\",\n\t\t\t\"zhs\": \"划\"\n\t\t},\n\t\t\"画\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"畫\",\n\t\t\t\"zhs\": \"画\"\n\t\t},\n\t\t\"则\": {\n\t\t\t\"jp\": \"則\",\n\t\t\t\"zht\": \"則\",\n\t\t\t\"zhs\": \"则\"\n\t\t},\n\t\t\"刚\": {\n\t\t\t\"jp\": \"剛\",\n\t\t\t\"zht\": \"剛\",\n\t\t\t\"zhs\": \"刚\"\n\t\t},\n\t\t\"创\": {\n\t\t\t\"jp\": \"創\",\n\t\t\t\"zht\": \"創\",\n\t\t\t\"zhs\": \"创\"\n\t\t},\n\t\t\"别\": {\n\t\t\t\"jp\": \"別\",\n\t\t\t\"zht\": \"別\",\n\t\t\t\"zhs\": \"别\"\n\t\t},\n\t\t\"制\": {\n\t\t\t\"jp\": \"製\",\n\t\t\t\"zht\": \"製\",\n\t\t\t\"zhs\": \"制\"\n\t\t},\n\t\t\"卷\": {\n\t\t\t\"jp\": \"券\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"刹\": {\n\t\t\t\"jp\": \"刹\",\n\t\t\t\"zht\": \"剎\",\n\t\t\t\"zhs\": \"刹\"\n\t\t},\n\t\t\"剂\": {\n\t\t\t\"jp\": \"剤\",\n\t\t\t\"zht\": \"劑\",\n\t\t\t\"zhs\": \"剂\"\n\t\t},\n\t\t\"剑\": {\n\t\t\t\"jp\": \"剣\",\n\t\t\t\"zht\": \"劍\",\n\t\t\t\"zhs\": \"剑\"\n\t\t},\n\t\t\"剧\": {\n\t\t\t\"jp\": \"劇\",\n\t\t\t\"zht\": \"劇\",\n\t\t\t\"zhs\": \"剧\"\n\t\t},\n\t\t\"剩\": {\n\t\t\t\"jp\": \"剰\",\n\t\t\t\"zht\": \"剩\",\n\t\t\t\"zhs\": \"剩\"\n\t\t},\n\t\t\"劝\": {\n\t\t\t\"jp\": \"勧\",\n\t\t\t\"zht\": \"勸\",\n\t\t\t\"zhs\": \"劝\"\n\t\t},\n\t\t\"务\": {\n\t\t\t\"jp\": \"務\",\n\t\t\t\"zht\": \"務\",\n\t\t\t\"zhs\": \"务\"\n\t\t},\n\t\t\"动\": {\n\t\t\t\"jp\": \"動\",\n\t\t\t\"zht\": \"動\",\n\t\t\t\"zhs\": \"动\"\n\t\t},\n\t\t\"励\": {\n\t\t\t\"jp\": \"励\",\n\t\t\t\"zht\": \"勵\",\n\t\t\t\"zhs\": \"励\"\n\t\t},\n\t\t\"劳\": {\n\t\t\t\"jp\": \"労\",\n\t\t\t\"zht\": \"勞\",\n\t\t\t\"zhs\": \"劳\"\n\t\t},\n\t\t\"势\": {\n\t\t\t\"jp\": \"勢\",\n\t\t\t\"zht\": \"勢\",\n\t\t\t\"zhs\": \"势\"\n\t\t},\n\t\t\"勋\": {\n\t\t\t\"jp\": \"勲\",\n\t\t\t\"zht\": \"勳\",\n\t\t\t\"zhs\": \"勋\"\n\t\t},\n\t\t\"胜\": {\n\t\t\t\"jp\": \"勝\",\n\t\t\t\"zht\": \"勝\",\n\t\t\t\"zhs\": \"胜\"\n\t\t},\n\t\t\"区\": {\n\t\t\t\"jp\": \"区\",\n\t\t\t\"zht\": \"區\",\n\t\t\t\"zhs\": \"区\"\n\t\t},\n\t\t\"医\": {\n\t\t\t\"jp\": \"医\",\n\t\t\t\"zht\": \"醫\",\n\t\t\t\"zhs\": \"医\"\n\t\t},\n\t\t\"华\": {\n\t\t\t\"jp\": \"華\",\n\t\t\t\"zht\": \"華\",\n\t\t\t\"zhs\": \"华\"\n\t\t},\n\t\t\"协\": {\n\t\t\t\"jp\": \"協\",\n\t\t\t\"zht\": \"協\",\n\t\t\t\"zhs\": \"协\"\n\t\t},\n\t\t\"单\": {\n\t\t\t\"jp\": \"単\",\n\t\t\t\"zht\": \"單\",\n\t\t\t\"zhs\": \"单\"\n\t\t},\n\t\t\"卖\": {\n\t\t\t\"jp\": \"売\",\n\t\t\t\"zht\": \"賣\",\n\t\t\t\"zhs\": \"卖\"\n\t\t},\n\t\t\"卫\": {\n\t\t\t\"jp\": \"衛\",\n\t\t\t\"zht\": \"衛\",\n\t\t\t\"zhs\": \"卫\"\n\t\t},\n\t\t\"厅\": {\n\t\t\t\"jp\": \"庁\",\n\t\t\t\"zht\": \"廳\",\n\t\t\t\"zhs\": \"厅\"\n\t\t},\n\t\t\"历\": {\n\t\t\t\"jp\": \"歴\",\n\t\t\t\"zht\": \"歷\",\n\t\t\t\"zhs\": \"历\"\n\t\t},\n\t\t\"压\": {\n\t\t\t\"jp\": \"圧\",\n\t\t\t\"zht\": \"壓\",\n\t\t\t\"zhs\": \"压\"\n\t\t},\n\t\t\"县\": {\n\t\t\t\"jp\": \"県\",\n\t\t\t\"zht\": \"縣\",\n\t\t\t\"zhs\": \"县\"\n\t\t},\n\t\t\"参\": {\n\t\t\t\"jp\": \"参\",\n\t\t\t\"zht\": \"參\",\n\t\t\t\"zhs\": \"参\"\n\t\t},\n\t\t\"双\": {\n\t\t\t\"jp\": \"双\",\n\t\t\t\"zht\": \"雙\",\n\t\t\t\"zhs\": \"双\"\n\t\t},\n\t\t\"收\": {\n\t\t\t\"jp\": \"収\",\n\t\t\t\"zht\": \"收\",\n\t\t\t\"zhs\": \"收\"\n\t\t},\n\t\t\"发\": {\n\t\t\t\"jp\": \"発\",\n\t\t\t\"zht\": \"發\",\n\t\t\t\"zhs\": \"发\"\n\t\t},\n\t\t\"变\": {\n\t\t\t\"jp\": \"変\",\n\t\t\t\"zht\": \"變\",\n\t\t\t\"zhs\": \"变\"\n\t\t},\n\t\t\"叠\": {\n\t\t\t\"jp\": \"畳\",\n\t\t\t\"zht\": \"疊\",\n\t\t\t\"zhs\": \"叠\"\n\t\t},\n\t\t\"号\": {\n\t\t\t\"jp\": \"号\",\n\t\t\t\"zht\": \"號\",\n\t\t\t\"zhs\": \"号\"\n\t\t},\n\t\t\"叹\": {\n\t\t\t\"jp\": \"嘆\",\n\t\t\t\"zht\": \"嘆\",\n\t\t\t\"zhs\": \"叹\"\n\t\t},\n\t\t\"吓\": {\n\t\t\t\"jp\": \"嚇\",\n\t\t\t\"zht\": \"嚇\",\n\t\t\t\"zhs\": \"吓\"\n\t\t},\n\t\t\"听\": {\n\t\t\t\"jp\": \"聴\",\n\t\t\t\"zht\": \"聽\",\n\t\t\t\"zhs\": \"听\"\n\t\t},\n\t\t\"启\": {\n\t\t\t\"jp\": \"啓\",\n\t\t\t\"zht\": \"啟\",\n\t\t\t\"zhs\": \"启\"\n\t\t},\n\t\t\"员\": {\n\t\t\t\"jp\": \"員\",\n\t\t\t\"zht\": \"員\",\n\t\t\t\"zhs\": \"员\"\n\t\t},\n\t\t\"谘\": {\n\t\t\t\"jp\": \"諮\",\n\t\t\t\"zht\": \"諮\",\n\t\t\t\"zhs\": \"谘\"\n\t\t},\n\t\t\"咸\": {\n\t\t\t\"jp\": \"鹹\",\n\t\t\t\"zht\": \"鹹\",\n\t\t\t\"zhs\": \"咸\"\n\t\t},\n\t\t\"响\": {\n\t\t\t\"jp\": \"響\",\n\t\t\t\"zht\": \"響\",\n\t\t\t\"zhs\": \"响\"\n\t\t},\n\t\t\"问\": {\n\t\t\t\"jp\": \"問\",\n\t\t\t\"zht\": \"問\",\n\t\t\t\"zhs\": \"问\"\n\t\t},\n\t\t\"营\": {\n\t\t\t\"jp\": \"営\",\n\t\t\t\"zht\": \"營\",\n\t\t\t\"zhs\": \"营\"\n\t\t},\n\t\t\"喷\": {\n\t\t\t\"jp\": \"噴\",\n\t\t\t\"zht\": \"噴\",\n\t\t\t\"zhs\": \"喷\"\n\t\t},\n\t\t\"嘱\": {\n\t\t\t\"jp\": \"嘱\",\n\t\t\t\"zht\": \"囑\",\n\t\t\t\"zhs\": \"嘱\"\n\t\t},\n\t\t\"苏\": {\n\t\t\t\"jp\": \"蘇\",\n\t\t\t\"zht\": \"蘇\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"团\": {\n\t\t\t\"jp\": \"団\",\n\t\t\t\"zht\": \"團\",\n\t\t\t\"zhs\": \"团\"\n\t\t},\n\t\t\"园\": {\n\t\t\t\"jp\": \"園\",\n\t\t\t\"zht\": \"園\",\n\t\t\t\"zhs\": \"园\"\n\t\t},\n\t\t\"国\": {\n\t\t\t\"jp\": \"国\",\n\t\t\t\"zht\": \"國\",\n\t\t\t\"zhs\": \"国\"\n\t\t},\n\t\t\"围\": {\n\t\t\t\"jp\": \"囲\",\n\t\t\t\"zht\": \"圍\",\n\t\t\t\"zhs\": \"围\"\n\t\t},\n\t\t\"图\": {\n\t\t\t\"jp\": \"図\",\n\t\t\t\"zht\": \"圖\",\n\t\t\t\"zhs\": \"图\"\n\t\t},\n\t\t\"圈\": {\n\t\t\t\"jp\": \"圏\",\n\t\t\t\"zht\": \"圈\",\n\t\t\t\"zhs\": \"圈\"\n\t\t},\n\t\t\"圣\": {\n\t\t\t\"jp\": \"聖\",\n\t\t\t\"zht\": \"聖\",\n\t\t\t\"zhs\": \"圣\"\n\t\t},\n\t\t\"场\": {\n\t\t\t\"jp\": \"場\",\n\t\t\t\"zht\": \"場\",\n\t\t\t\"zhs\": \"场\"\n\t\t},\n\t\t\"坏\": {\n\t\t\t\"jp\": \"壊\",\n\t\t\t\"zht\": \"壞\",\n\t\t\t\"zhs\": \"坏\"\n\t\t},\n\t\t\"块\": {\n\t\t\t\"jp\": \"塊\",\n\t\t\t\"zht\": \"塊\",\n\t\t\t\"zhs\": \"块\"\n\t\t},\n\t\t\"坚\": {\n\t\t\t\"jp\": \"堅\",\n\t\t\t\"zht\": \"堅\",\n\t\t\t\"zhs\": \"坚\"\n\t\t},\n\t\t\"坛\": {\n\t\t\t\"jp\": \"壇\",\n\t\t\t\"zht\": \"壇\",\n\t\t\t\"zhs\": \"坛\"\n\t\t},\n\t\t\"坟\": {\n\t\t\t\"jp\": \"墳\",\n\t\t\t\"zht\": \"墳\",\n\t\t\t\"zhs\": \"坟\"\n\t\t},\n\t\t\"坠\": {\n\t\t\t\"jp\": \"墜\",\n\t\t\t\"zht\": \"墜\",\n\t\t\t\"zhs\": \"坠\"\n\t\t},\n\t\t\"垒\": {\n\t\t\t\"jp\": \"塁\",\n\t\t\t\"zht\": \"壘\",\n\t\t\t\"zhs\": \"垒\"\n\t\t},\n\t\t\"垦\": {\n\t\t\t\"jp\": \"墾\",\n\t\t\t\"zht\": \"墾\",\n\t\t\t\"zhs\": \"垦\"\n\t\t},\n\t\t\"执\": {\n\t\t\t\"jp\": \"執\",\n\t\t\t\"zht\": \"執\",\n\t\t\t\"zhs\": \"执\"\n\t\t},\n\t\t\"堕\": {\n\t\t\t\"jp\": \"堕\",\n\t\t\t\"zht\": \"墮\",\n\t\t\t\"zhs\": \"堕\"\n\t\t},\n\t\t\"报\": {\n\t\t\t\"jp\": \"報\",\n\t\t\t\"zht\": \"報\",\n\t\t\t\"zhs\": \"报\"\n\t\t},\n\t\t\"盐\": {\n\t\t\t\"jp\": \"塩\",\n\t\t\t\"zht\": \"鹽\",\n\t\t\t\"zhs\": \"盐\"\n\t\t},\n\t\t\"增\": {\n\t\t\t\"jp\": \"増\",\n\t\t\t\"zht\": \"增\",\n\t\t\t\"zhs\": \"增\"\n\t\t},\n\t\t\"壤\": {\n\t\t\t\"jp\": \"壌\",\n\t\t\t\"zht\": \"壤\",\n\t\t\t\"zhs\": \"壤\"\n\t\t},\n\t\t\"壮\": {\n\t\t\t\"jp\": \"壮\",\n\t\t\t\"zht\": \"壯\",\n\t\t\t\"zhs\": \"壮\"\n\t\t},\n\t\t\"声\": {\n\t\t\t\"jp\": \"声\",\n\t\t\t\"zht\": \"聲\",\n\t\t\t\"zhs\": \"声\"\n\t\t},\n\t\t\"壹\": {\n\t\t\t\"jp\": \"壱\",\n\t\t\t\"zht\": \"壹\",\n\t\t\t\"zhs\": \"壹\"\n\t\t},\n\t\t\"壳\": {\n\t\t\t\"jp\": \"殻\",\n\t\t\t\"zht\": \"殻\",\n\t\t\t\"zhs\": \"壳\"\n\t\t},\n\t\t\"寿\": {\n\t\t\t\"jp\": \"寿\",\n\t\t\t\"zht\": \"壽\",\n\t\t\t\"zhs\": \"寿\"\n\t\t},\n\t\t\"复\": {\n\t\t\t\"jp\": \"復\",\n\t\t\t\"zht\": \"復\",\n\t\t\t\"zhs\": \"复\"\n\t\t},\n\t\t\"梦\": {\n\t\t\t\"jp\": \"夢\",\n\t\t\t\"zht\": \"夢\",\n\t\t\t\"zhs\": \"梦\"\n\t\t},\n\t\t\"头\": {\n\t\t\t\"jp\": \"頭\",\n\t\t\t\"zht\": \"頭\",\n\t\t\t\"zhs\": \"头\"\n\t\t},\n\t\t\"夸\": {\n\t\t\t\"jp\": \"誇\",\n\t\t\t\"zht\": \"誇\",\n\t\t\t\"zhs\": \"夸\"\n\t\t},\n\t\t\"夺\": {\n\t\t\t\"jp\": \"奪\",\n\t\t\t\"zht\": \"奪\",\n\t\t\t\"zhs\": \"夺\"\n\t\t},\n\t\t\"奋\": {\n\t\t\t\"jp\": \"奮\",\n\t\t\t\"zht\": \"奮\",\n\t\t\t\"zhs\": \"奋\"\n\t\t},\n\t\t\"奖\": {\n\t\t\t\"jp\": \"奨\",\n\t\t\t\"zht\": \"獎\",\n\t\t\t\"zhs\": \"奖\"\n\t\t},\n\t\t\"妆\": {\n\t\t\t\"jp\": \"粧\",\n\t\t\t\"zht\": \"妝\",\n\t\t\t\"zhs\": \"妆\"\n\t\t},\n\t\t\"妇\": {\n\t\t\t\"jp\": \"婦\",\n\t\t\t\"zht\": \"婦\",\n\t\t\t\"zhs\": \"妇\"\n\t\t},\n\t\t\"姐\": {\n\t\t\t\"jp\": \"姉\",\n\t\t\t\"zht\": \"姐\",\n\t\t\t\"zhs\": \"姐\"\n\t\t},\n\t\t\"姬\": {\n\t\t\t\"jp\": \"姫\",\n\t\t\t\"zht\": \"姬\",\n\t\t\t\"zhs\": \"姬\"\n\t\t},\n\t\t\"娘\": {\n\t\t\t\"jp\": \"嬢\",\n\t\t\t\"zht\": \"孃\",\n\t\t\t\"zhs\": \"娘\"\n\t\t},\n\t\t\"娱\": {\n\t\t\t\"jp\": \"娯\",\n\t\t\t\"zht\": \"娛\",\n\t\t\t\"zhs\": \"娱\"\n\t\t},\n\t\t\"孙\": {\n\t\t\t\"jp\": \"孫\",\n\t\t\t\"zht\": \"孫\",\n\t\t\t\"zhs\": \"孙\"\n\t\t},\n\t\t\"学\": {\n\t\t\t\"jp\": \"学\",\n\t\t\t\"zht\": \"學\",\n\t\t\t\"zhs\": \"学\"\n\t\t},\n\t\t\"宁\": {\n\t\t\t\"jp\": \"寧\",\n\t\t\t\"zht\": \"寧\",\n\t\t\t\"zhs\": \"宁\"\n\t\t},\n\t\t\"宝\": {\n\t\t\t\"jp\": \"宝\",\n\t\t\t\"zht\": \"寶\",\n\t\t\t\"zhs\": \"宝\"\n\t\t},\n\t\t\"实\": {\n\t\t\t\"jp\": \"実\",\n\t\t\t\"zht\": \"實\",\n\t\t\t\"zhs\": \"实\"\n\t\t},\n\t\t\"审\": {\n\t\t\t\"jp\": \"審\",\n\t\t\t\"zht\": \"審\",\n\t\t\t\"zhs\": \"审\"\n\t\t},\n\t\t\"宪\": {\n\t\t\t\"jp\": \"憲\",\n\t\t\t\"zht\": \"憲\",\n\t\t\t\"zhs\": \"宪\"\n\t\t},\n\t\t\"宫\": {\n\t\t\t\"jp\": \"宮\",\n\t\t\t\"zht\": \"宮\",\n\t\t\t\"zhs\": \"宫\"\n\t\t},\n\t\t\"宽\": {\n\t\t\t\"jp\": \"寬\",\n\t\t\t\"zht\": \"寬\",\n\t\t\t\"zhs\": \"宽\"\n\t\t},\n\t\t\"宾\": {\n\t\t\t\"jp\": \"賓\",\n\t\t\t\"zht\": \"賓\",\n\t\t\t\"zhs\": \"宾\"\n\t\t},\n\t\t\"秘\": {\n\t\t\t\"jp\": \"秘\",\n\t\t\t\"zht\": \"祕\",\n\t\t\t\"zhs\": \"秘\"\n\t\t},\n\t\t\"寝\": {\n\t\t\t\"jp\": \"寝\",\n\t\t\t\"zht\": \"寢\",\n\t\t\t\"zhs\": \"寝\"\n\t\t},\n\t\t\"对\": {\n\t\t\t\"jp\": \"対\",\n\t\t\t\"zht\": \"對\",\n\t\t\t\"zhs\": \"对\"\n\t\t},\n\t\t\"寻\": {\n\t\t\t\"jp\": \"尋\",\n\t\t\t\"zht\": \"尋\",\n\t\t\t\"zhs\": \"寻\"\n\t\t},\n\t\t\"导\": {\n\t\t\t\"jp\": \"導\",\n\t\t\t\"zht\": \"導\",\n\t\t\t\"zhs\": \"导\"\n\t\t},\n\t\t\"将\": {\n\t\t\t\"jp\": \"将\",\n\t\t\t\"zht\": \"將\",\n\t\t\t\"zhs\": \"将\"\n\t\t},\n\t\t\"层\": {\n\t\t\t\"jp\": \"層\",\n\t\t\t\"zht\": \"層\",\n\t\t\t\"zhs\": \"层\"\n\t\t},\n\t\t\"属\": {\n\t\t\t\"jp\": \"属\",\n\t\t\t\"zht\": \"屬\",\n\t\t\t\"zhs\": \"属\"\n\t\t},\n\t\t\"岁\": {\n\t\t\t\"jp\": \"歳\",\n\t\t\t\"zht\": \"歲\",\n\t\t\t\"zhs\": \"岁\"\n\t\t},\n\t\t\"岛\": {\n\t\t\t\"jp\": \"島\",\n\t\t\t\"zht\": \"島\",\n\t\t\t\"zhs\": \"岛\"\n\t\t},\n\t\t\"巖\": {\n\t\t\t\"jp\": \"巌\",\n\t\t\t\"zht\": \"巖\",\n\t\t\t\"zhs\": \"巖\"\n\t\t},\n\t\t\"峡\": {\n\t\t\t\"jp\": \"峡\",\n\t\t\t\"zht\": \"峽\",\n\t\t\t\"zhs\": \"峡\"\n\t\t},\n\t\t\"险\": {\n\t\t\t\"jp\": \"険\",\n\t\t\t\"zht\": \"險\",\n\t\t\t\"zhs\": \"险\"\n\t\t},\n\t\t\"币\": {\n\t\t\t\"jp\": \"幣\",\n\t\t\t\"zht\": \"幣\",\n\t\t\t\"zhs\": \"币\"\n\t\t},\n\t\t\"帅\": {\n\t\t\t\"jp\": \"帥\",\n\t\t\t\"zht\": \"帥\",\n\t\t\t\"zhs\": \"帅\"\n\t\t},\n\t\t\"师\": {\n\t\t\t\"jp\": \"師\",\n\t\t\t\"zht\": \"師\",\n\t\t\t\"zhs\": \"师\"\n\t\t},\n\t\t\"帐\": {\n\t\t\t\"jp\": \"帳\",\n\t\t\t\"zht\": \"帳\",\n\t\t\t\"zhs\": \"帐\"\n\t\t},\n\t\t\"带\": {\n\t\t\t\"jp\": \"帶\",\n\t\t\t\"zht\": \"帶\",\n\t\t\t\"zhs\": \"带\"\n\t\t},\n\t\t\"归\": {\n\t\t\t\"jp\": \"帰\",\n\t\t\t\"zht\": \"歸\",\n\t\t\t\"zhs\": \"归\"\n\t\t},\n\t\t\"广\": {\n\t\t\t\"jp\": \"広\",\n\t\t\t\"zht\": \"廣\",\n\t\t\t\"zhs\": \"广\"\n\t\t},\n\t\t\"庄\": {\n\t\t\t\"jp\": \"庄\",\n\t\t\t\"zht\": \"莊\",\n\t\t\t\"zhs\": \"庄\"\n\t\t},\n\t\t\"庆\": {\n\t\t\t\"jp\": \"慶\",\n\t\t\t\"zht\": \"慶\",\n\t\t\t\"zhs\": \"庆\"\n\t\t},\n\t\t\"库\": {\n\t\t\t\"jp\": \"庫\",\n\t\t\t\"zht\": \"庫\",\n\t\t\t\"zhs\": \"库\"\n\t\t},\n\t\t\"应\": {\n\t\t\t\"jp\": \"応\",\n\t\t\t\"zht\": \"應\",\n\t\t\t\"zhs\": \"应\"\n\t\t},\n\t\t\"废\": {\n\t\t\t\"jp\": \"廃\",\n\t\t\t\"zht\": \"廢\",\n\t\t\t\"zhs\": \"废\"\n\t\t},\n\t\t\"开\": {\n\t\t\t\"jp\": \"開\",\n\t\t\t\"zht\": \"開\",\n\t\t\t\"zhs\": \"开\"\n\t\t},\n\t\t\"辨\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"瓣\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"瓣\"\n\t\t},\n\t\t\"辩\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辩\"\n\t\t},\n\t\t\"异\": {\n\t\t\t\"jp\": \"異\",\n\t\t\t\"zht\": \"異\",\n\t\t\t\"zhs\": \"异\"\n\t\t},\n\t\t\"弃\": {\n\t\t\t\"jp\": \"棄\",\n\t\t\t\"zht\": \"棄\",\n\t\t\t\"zhs\": \"弃\"\n\t\t},\n\t\t\"张\": {\n\t\t\t\"jp\": \"張\",\n\t\t\t\"zht\": \"張\",\n\t\t\t\"zhs\": \"张\"\n\t\t},\n\t\t\"弥\": {\n\t\t\t\"jp\": \"弥\",\n\t\t\t\"zht\": \"彌\",\n\t\t\t\"zhs\": \"弥\"\n\t\t},\n\t\t\"强\": {\n\t\t\t\"jp\": \"強\",\n\t\t\t\"zht\": \"強\",\n\t\t\t\"zhs\": \"强\"\n\t\t},\n\t\t\"弹\": {\n\t\t\t\"jp\": \"弾\",\n\t\t\t\"zht\": \"彈\",\n\t\t\t\"zhs\": \"弹\"\n\t\t},\n\t\t\"录\": {\n\t\t\t\"jp\": \"録\",\n\t\t\t\"zht\": \"錄\",\n\t\t\t\"zhs\": \"录\"\n\t\t},\n\t\t\"彥\": {\n\t\t\t\"jp\": \"彦\",\n\t\t\t\"zht\": \"彥\",\n\t\t\t\"zhs\": \"彥\"\n\t\t},\n\t\t\"彻\": {\n\t\t\t\"jp\": \"徹\",\n\t\t\t\"zht\": \"徹\",\n\t\t\t\"zhs\": \"彻\"\n\t\t},\n\t\t\"征\": {\n\t\t\t\"jp\": \"徴\",\n\t\t\t\"zht\": \"徵\",\n\t\t\t\"zhs\": \"征\"\n\t\t},\n\t\t\"径\": {\n\t\t\t\"jp\": \"径\",\n\t\t\t\"zht\": \"徑\",\n\t\t\t\"zhs\": \"径\"\n\t\t},\n\t\t\"德\": {\n\t\t\t\"jp\": \"徳\",\n\t\t\t\"zht\": \"德\",\n\t\t\t\"zhs\": \"德\"\n\t\t},\n\t\t\"忆\": {\n\t\t\t\"jp\": \"憶\",\n\t\t\t\"zht\": \"憶\",\n\t\t\t\"zhs\": \"忆\"\n\t\t},\n\t\t\"志\": {\n\t\t\t\"jp\": \"誌\",\n\t\t\t\"zht\": \"誌\",\n\t\t\t\"zhs\": \"志\"\n\t\t},\n\t\t\"忧\": {\n\t\t\t\"jp\": \"憂\",\n\t\t\t\"zht\": \"憂\",\n\t\t\t\"zhs\": \"忧\"\n\t\t},\n\t\t\"怀\": {\n\t\t\t\"jp\": \"懐\",\n\t\t\t\"zht\": \"懷\",\n\t\t\t\"zhs\": \"怀\"\n\t\t},\n\t\t\"态\": {\n\t\t\t\"jp\": \"態\",\n\t\t\t\"zht\": \"態\",\n\t\t\t\"zhs\": \"态\"\n\t\t},\n\t\t\"总\": {\n\t\t\t\"jp\": \"総\",\n\t\t\t\"zht\": \"總\",\n\t\t\t\"zhs\": \"总\"\n\t\t},\n\t\t\"恒\": {\n\t\t\t\"jp\": \"恒\",\n\t\t\t\"zht\": \"恆\",\n\t\t\t\"zhs\": \"恒\"\n\t\t},\n\t\t\"恋\": {\n\t\t\t\"jp\": \"恋\",\n\t\t\t\"zht\": \"戀\",\n\t\t\t\"zhs\": \"恋\"\n\t\t},\n\t\t\"恳\": {\n\t\t\t\"jp\": \"懇\",\n\t\t\t\"zht\": \"懇\",\n\t\t\t\"zhs\": \"恳\"\n\t\t},\n\t\t\"惠\": {\n\t\t\t\"jp\": \"恵\",\n\t\t\t\"zht\": \"惠\",\n\t\t\t\"zhs\": \"惠\"\n\t\t},\n\t\t\"恶\": {\n\t\t\t\"jp\": \"悪\",\n\t\t\t\"zht\": \"惡\",\n\t\t\t\"zhs\": \"恶\"\n\t\t},\n\t\t\"恼\": {\n\t\t\t\"jp\": \"悩\",\n\t\t\t\"zht\": \"惱\",\n\t\t\t\"zhs\": \"恼\"\n\t\t},\n\t\t\"悅\": {\n\t\t\t\"jp\": \"悦\",\n\t\t\t\"zht\": \"悅\",\n\t\t\t\"zhs\": \"悅\"\n\t\t},\n\t\t\"悬\": {\n\t\t\t\"jp\": \"懸\",\n\t\t\t\"zht\": \"懸\",\n\t\t\t\"zhs\": \"悬\"\n\t\t},\n\t\t\"惊\": {\n\t\t\t\"jp\": \"驚\",\n\t\t\t\"zht\": \"驚\",\n\t\t\t\"zhs\": \"惊\"\n\t\t},\n\t\t\"惨\": {\n\t\t\t\"jp\": \"惨\",\n\t\t\t\"zht\": \"慘\",\n\t\t\t\"zhs\": \"惨\"\n\t\t},\n\t\t\"惩\": {\n\t\t\t\"jp\": \"懲\",\n\t\t\t\"zht\": \"懲\",\n\t\t\t\"zhs\": \"惩\"\n\t\t},\n\t\t\"爱\": {\n\t\t\t\"jp\": \"愛\",\n\t\t\t\"zht\": \"愛\",\n\t\t\t\"zhs\": \"爱\"\n\t\t},\n\t\t\"愤\": {\n\t\t\t\"jp\": \"憤\",\n\t\t\t\"zht\": \"憤\",\n\t\t\t\"zhs\": \"愤\"\n\t\t},\n\t\t\"愿\": {\n\t\t\t\"jp\": \"願\",\n\t\t\t\"zht\": \"願\",\n\t\t\t\"zhs\": \"愿\"\n\t\t},\n\t\t\"虑\": {\n\t\t\t\"jp\": \"慮\",\n\t\t\t\"zht\": \"慮\",\n\t\t\t\"zhs\": \"虑\"\n\t\t},\n\t\t\"戏\": {\n\t\t\t\"jp\": \"戯\",\n\t\t\t\"zht\": \"戲\",\n\t\t\t\"zhs\": \"戏\"\n\t\t},\n\t\t\"战\": {\n\t\t\t\"jp\": \"戦\",\n\t\t\t\"zht\": \"戰\",\n\t\t\t\"zhs\": \"战\"\n\t\t},\n\t\t\"户\": {\n\t\t\t\"jp\": \"戸\",\n\t\t\t\"zht\": \"戶\",\n\t\t\t\"zhs\": \"户\"\n\t\t},\n\t\t\"拂\": {\n\t\t\t\"jp\": \"払\",\n\t\t\t\"zht\": \"拂\",\n\t\t\t\"zhs\": \"拂\"\n\t\t},\n\t\t\"扩\": {\n\t\t\t\"jp\": \"拡\",\n\t\t\t\"zht\": \"擴\",\n\t\t\t\"zhs\": \"扩\"\n\t\t},\n\t\t\"扫\": {\n\t\t\t\"jp\": \"掃\",\n\t\t\t\"zht\": \"掃\",\n\t\t\t\"zhs\": \"扫\"\n\t\t},\n\t\t\"扬\": {\n\t\t\t\"jp\": \"揚\",\n\t\t\t\"zht\": \"揚\",\n\t\t\t\"zhs\": \"扬\"\n\t\t},\n\t\t\"择\": {\n\t\t\t\"jp\": \"択\",\n\t\t\t\"zht\": \"擇\",\n\t\t\t\"zhs\": \"择\"\n\t\t},\n\t\t\"护\": {\n\t\t\t\"jp\": \"護\",\n\t\t\t\"zht\": \"護\",\n\t\t\t\"zhs\": \"护\"\n\t\t},\n\t\t\"担\": {\n\t\t\t\"jp\": \"担\",\n\t\t\t\"zht\": \"擔\",\n\t\t\t\"zhs\": \"担\"\n\t\t},\n\t\t\"拜\": {\n\t\t\t\"jp\": \"拝\",\n\t\t\t\"zht\": \"拜\",\n\t\t\t\"zhs\": \"拜\"\n\t\t},\n\t\t\"拟\": {\n\t\t\t\"jp\": \"擬\",\n\t\t\t\"zht\": \"擬\",\n\t\t\t\"zhs\": \"拟\"\n\t\t},\n\t\t\"据\": {\n\t\t\t\"jp\": \"拠\",\n\t\t\t\"zht\": \"據\",\n\t\t\t\"zhs\": \"据\"\n\t\t},\n\t\t\"拥\": {\n\t\t\t\"jp\": \"擁\",\n\t\t\t\"zht\": \"擁\",\n\t\t\t\"zhs\": \"拥\"\n\t\t},\n\t\t\"挟\": {\n\t\t\t\"jp\": \"挟\",\n\t\t\t\"zht\": \"挾\",\n\t\t\t\"zhs\": \"挟\"\n\t\t},\n\t\t\"挥\": {\n\t\t\t\"jp\": \"揮\",\n\t\t\t\"zht\": \"揮\",\n\t\t\t\"zhs\": \"挥\"\n\t\t},\n\t\t\"插\": {\n\t\t\t\"jp\": \"揷\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"损\": {\n\t\t\t\"jp\": \"損\",\n\t\t\t\"zht\": \"損\",\n\t\t\t\"zhs\": \"损\"\n\t\t},\n\t\t\"舍\": {\n\t\t\t\"jp\": \"捨\",\n\t\t\t\"zht\": \"捨\",\n\t\t\t\"zhs\": \"舍\"\n\t\t},\n\t\t\"揭\": {\n\t\t\t\"jp\": \"掲\",\n\t\t\t\"zht\": \"揭\",\n\t\t\t\"zhs\": \"揭\"\n\t\t},\n\t\t\"掴\": {\n\t\t\t\"jp\": \"掴\",\n\t\t\t\"zht\": \"摑\",\n\t\t\t\"zhs\": \"掴\"\n\t\t},\n\t\t\"摇\": {\n\t\t\t\"jp\": \"揺\",\n\t\t\t\"zht\": \"搖\",\n\t\t\t\"zhs\": \"摇\"\n\t\t},\n\t\t\"摄\": {\n\t\t\t\"jp\": \"摂\",\n\t\t\t\"zht\": \"攝\",\n\t\t\t\"zhs\": \"摄\"\n\t\t},\n\t\t\"敌\": {\n\t\t\t\"jp\": \"敵\",\n\t\t\t\"zht\": \"敵\",\n\t\t\t\"zhs\": \"敌\"\n\t\t},\n\t\t\"败\": {\n\t\t\t\"jp\": \"敗\",\n\t\t\t\"zht\": \"敗\",\n\t\t\t\"zhs\": \"败\"\n\t\t},\n\t\t\"数\": {\n\t\t\t\"jp\": \"数\",\n\t\t\t\"zht\": \"數\",\n\t\t\t\"zhs\": \"数\"\n\t\t},\n\t\t\"齐\": {\n\t\t\t\"jp\": \"斉\",\n\t\t\t\"zht\": \"齊\",\n\t\t\t\"zhs\": \"齐\"\n\t\t},\n\t\t\"斋\": {\n\t\t\t\"jp\": \"斎\",\n\t\t\t\"zht\": \"齋\",\n\t\t\t\"zhs\": \"斋\"\n\t\t},\n\t\t\"斗\": {\n\t\t\t\"jp\": \"闘\",\n\t\t\t\"zht\": \"鬥\",\n\t\t\t\"zhs\": \"斗\"\n\t\t},\n\t\t\"断\": {\n\t\t\t\"jp\": \"断\",\n\t\t\t\"zht\": \"斷\",\n\t\t\t\"zhs\": \"断\"\n\t\t},\n\t\t\"旧\": {\n\t\t\t\"jp\": \"旧\",\n\t\t\t\"zht\": \"舊\",\n\t\t\t\"zhs\": \"旧\"\n\t\t},\n\t\t\"时\": {\n\t\t\t\"jp\": \"時\",\n\t\t\t\"zht\": \"時\",\n\t\t\t\"zhs\": \"时\"\n\t\t},\n\t\t\"昙\": {\n\t\t\t\"jp\": \"曇\",\n\t\t\t\"zht\": \"曇\",\n\t\t\t\"zhs\": \"昙\"\n\t\t},\n\t\t\"昼\": {\n\t\t\t\"jp\": \"昼\",\n\t\t\t\"zht\": \"晝\",\n\t\t\t\"zhs\": \"昼\"\n\t\t},\n\t\t\"显\": {\n\t\t\t\"jp\": \"顕\",\n\t\t\t\"zht\": \"顯\",\n\t\t\t\"zhs\": \"显\"\n\t\t},\n\t\t\"晓\": {\n\t\t\t\"jp\": \"暁\",\n\t\t\t\"zht\": \"曉\",\n\t\t\t\"zhs\": \"晓\"\n\t\t},\n\t\t\"晚\": {\n\t\t\t\"jp\": \"晩\",\n\t\t\t\"zht\": \"晚\",\n\t\t\t\"zhs\": \"晚\"\n\t\t},\n\t\t\"暂\": {\n\t\t\t\"jp\": \"暫\",\n\t\t\t\"zht\": \"暫\",\n\t\t\t\"zhs\": \"暂\"\n\t\t},\n\t\t\"曾\": {\n\t\t\t\"jp\": \"曽\",\n\t\t\t\"zht\": \"曾\",\n\t\t\t\"zhs\": \"曾\"\n\t\t},\n\t\t\"术\": {\n\t\t\t\"jp\": \"術\",\n\t\t\t\"zht\": \"術\",\n\t\t\t\"zhs\": \"术\"\n\t\t},\n\t\t\"朴\": {\n\t\t\t\"jp\": \"樸\",\n\t\t\t\"zht\": \"樸\",\n\t\t\t\"zhs\": \"朴\"\n\t\t},\n\t\t\"机\": {\n\t\t\t\"jp\": \"機\",\n\t\t\t\"zht\": \"機\",\n\t\t\t\"zhs\": \"机\"\n\t\t},\n\t\t\"杀\": {\n\t\t\t\"jp\": \"殺\",\n\t\t\t\"zht\": \"殺\",\n\t\t\t\"zhs\": \"杀\"\n\t\t},\n\t\t\"杂\": {\n\t\t\t\"jp\": \"雑\",\n\t\t\t\"zht\": \"雜\",\n\t\t\t\"zhs\": \"杂\"\n\t\t},\n\t\t\"权\": {\n\t\t\t\"jp\": \"権\",\n\t\t\t\"zht\": \"權\",\n\t\t\t\"zhs\": \"权\"\n\t\t},\n\t\t\"条\": {\n\t\t\t\"jp\": \"条\",\n\t\t\t\"zht\": \"條\",\n\t\t\t\"zhs\": \"条\"\n\t\t},\n\t\t\"极\": {\n\t\t\t\"jp\": \"極\",\n\t\t\t\"zht\": \"極\",\n\t\t\t\"zhs\": \"极\"\n\t\t},\n\t\t\"枢\": {\n\t\t\t\"jp\": \"枢\",\n\t\t\t\"zht\": \"樞\",\n\t\t\t\"zhs\": \"枢\"\n\t\t},\n\t\t\"枪\": {\n\t\t\t\"jp\": \"槍\",\n\t\t\t\"zht\": \"槍\",\n\t\t\t\"zhs\": \"枪\"\n\t\t},\n\t\t\"查\": {\n\t\t\t\"jp\": \"査\",\n\t\t\t\"zht\": \"查\",\n\t\t\t\"zhs\": \"查\"\n\t\t},\n\t\t\"荣\": {\n\t\t\t\"jp\": \"栄\",\n\t\t\t\"zht\": \"榮\",\n\t\t\t\"zhs\": \"荣\"\n\t\t},\n\t\t\"标\": {\n\t\t\t\"jp\": \"標\",\n\t\t\t\"zht\": \"標\",\n\t\t\t\"zhs\": \"标\"\n\t\t},\n\t\t\"栈\": {\n\t\t\t\"jp\": \"桟\",\n\t\t\t\"zht\": \"棧\",\n\t\t\t\"zhs\": \"栈\"\n\t\t},\n\t\t\"栋\": {\n\t\t\t\"jp\": \"棟\",\n\t\t\t\"zht\": \"棟\",\n\t\t\t\"zhs\": \"栋\"\n\t\t},\n\t\t\"栏\": {\n\t\t\t\"jp\": \"欄\",\n\t\t\t\"zht\": \"欄\",\n\t\t\t\"zhs\": \"栏\"\n\t\t},\n\t\t\"树\": {\n\t\t\t\"jp\": \"樹\",\n\t\t\t\"zht\": \"樹\",\n\t\t\t\"zhs\": \"树\"\n\t\t},\n\t\t\"样\": {\n\t\t\t\"jp\": \"様\",\n\t\t\t\"zht\": \"樣\",\n\t\t\t\"zhs\": \"样\"\n\t\t},\n\t\t\"樱\": {\n\t\t\t\"jp\": \"桜\",\n\t\t\t\"zht\": \"櫻\",\n\t\t\t\"zhs\": \"樱\"\n\t\t},\n\t\t\"桥\": {\n\t\t\t\"jp\": \"橋\",\n\t\t\t\"zht\": \"橋\",\n\t\t\t\"zhs\": \"桥\"\n\t\t},\n\t\t\"检\": {\n\t\t\t\"jp\": \"検\",\n\t\t\t\"zht\": \"檢\",\n\t\t\t\"zhs\": \"检\"\n\t\t},\n\t\t\"楼\": {\n\t\t\t\"jp\": \"楼\",\n\t\t\t\"zht\": \"樓\",\n\t\t\t\"zhs\": \"楼\"\n\t\t},\n\t\t\"欢\": {\n\t\t\t\"jp\": \"歓\",\n\t\t\t\"zht\": \"歡\",\n\t\t\t\"zhs\": \"欢\"\n\t\t},\n\t\t\"欧\": {\n\t\t\t\"jp\": \"欧\",\n\t\t\t\"zht\": \"歐\",\n\t\t\t\"zhs\": \"欧\"\n\t\t},\n\t\t\"步\": {\n\t\t\t\"jp\": \"歩\",\n\t\t\t\"zht\": \"步\",\n\t\t\t\"zhs\": \"步\"\n\t\t},\n\t\t\"齿\": {\n\t\t\t\"jp\": \"歯\",\n\t\t\t\"zht\": \"齒\",\n\t\t\t\"zhs\": \"齿\"\n\t\t},\n\t\t\"残\": {\n\t\t\t\"jp\": \"残\",\n\t\t\t\"zht\": \"殘\",\n\t\t\t\"zhs\": \"残\"\n\t\t},\n\t\t\"殴\": {\n\t\t\t\"jp\": \"殴\",\n\t\t\t\"zht\": \"毆\",\n\t\t\t\"zhs\": \"殴\"\n\t\t},\n\t\t\"气\": {\n\t\t\t\"jp\": \"気\",\n\t\t\t\"zht\": \"氣\",\n\t\t\t\"zhs\": \"气\"\n\t\t},\n\t\t\"汉\": {\n\t\t\t\"jp\": \"漢\",\n\t\t\t\"zht\": \"漢\",\n\t\t\t\"zhs\": \"汉\"\n\t\t},\n\t\t\"汤\": {\n\t\t\t\"jp\": \"湯\",\n\t\t\t\"zht\": \"湯\",\n\t\t\t\"zhs\": \"汤\"\n\t\t},\n\t\t\"沟\": {\n\t\t\t\"jp\": \"溝\",\n\t\t\t\"zht\": \"溝\",\n\t\t\t\"zhs\": \"沟\"\n\t\t},\n\t\t\"泽\": {\n\t\t\t\"jp\": \"沢\",\n\t\t\t\"zht\": \"澤\",\n\t\t\t\"zhs\": \"泽\"\n\t\t},\n\t\t\"泪\": {\n\t\t\t\"jp\": \"涙\",\n\t\t\t\"zht\": \"淚\",\n\t\t\t\"zhs\": \"泪\"\n\t\t},\n\t\t\"泷\": {\n\t\t\t\"jp\": \"滝\",\n\t\t\t\"zht\": \"瀧\",\n\t\t\t\"zhs\": \"泷\"\n\t\t},\n\t\t\"洁\": {\n\t\t\t\"jp\": \"潔\",\n\t\t\t\"zht\": \"潔\",\n\t\t\t\"zhs\": \"洁\"\n\t\t},\n\t\t\"浅\": {\n\t\t\t\"jp\": \"浅\",\n\t\t\t\"zht\": \"淺\",\n\t\t\t\"zhs\": \"浅\"\n\t\t},\n\t\t\"浊\": {\n\t\t\t\"jp\": \"濁\",\n\t\t\t\"zht\": \"濁\",\n\t\t\t\"zhs\": \"浊\"\n\t\t},\n\t\t\"测\": {\n\t\t\t\"jp\": \"測\",\n\t\t\t\"zht\": \"測\",\n\t\t\t\"zhs\": \"测\"\n\t\t},\n\t\t\"济\": {\n\t\t\t\"jp\": \"済\",\n\t\t\t\"zht\": \"濟\",\n\t\t\t\"zhs\": \"济\"\n\t\t},\n\t\t\"浓\": {\n\t\t\t\"jp\": \"濃\",\n\t\t\t\"zht\": \"濃\",\n\t\t\t\"zhs\": \"浓\"\n\t\t},\n\t\t\"滨\": {\n\t\t\t\"jp\": \"浜\",\n\t\t\t\"zht\": \"濱\",\n\t\t\t\"zhs\": \"滨\"\n\t\t},\n\t\t\"涉\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"涩\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涩\"\n\t\t},\n\t\t\"涡\": {\n\t\t\t\"jp\": \"渦\",\n\t\t\t\"zht\": \"渦\",\n\t\t\t\"zhs\": \"涡\"\n\t\t},\n\t\t\"润\": {\n\t\t\t\"jp\": \"潤\",\n\t\t\t\"zht\": \"潤\",\n\t\t\t\"zhs\": \"润\"\n\t\t},\n\t\t\"渍\": {\n\t\t\t\"jp\": \"漬\",\n\t\t\t\"zht\": \"漬\",\n\t\t\t\"zhs\": \"渍\"\n\t\t},\n\t\t\"渐\": {\n\t\t\t\"jp\": \"漸\",\n\t\t\t\"zht\": \"漸\",\n\t\t\t\"zhs\": \"渐\"\n\t\t},\n\t\t\"溪\": {\n\t\t\t\"jp\": \"渓\",\n\t\t\t\"zht\": \"溪\",\n\t\t\t\"zhs\": \"溪\"\n\t\t},\n\t\t\"渔\": {\n\t\t\t\"jp\": \"漁\",\n\t\t\t\"zht\": \"漁\",\n\t\t\t\"zhs\": \"渔\"\n\t\t},\n\t\t\"湾\": {\n\t\t\t\"jp\": \"湾\",\n\t\t\t\"zht\": \"灣\",\n\t\t\t\"zhs\": \"湾\"\n\t\t},\n\t\t\"湿\": {\n\t\t\t\"jp\": \"湿\",\n\t\t\t\"zht\": \"濕\",\n\t\t\t\"zhs\": \"湿\"\n\t\t},\n\t\t\"满\": {\n\t\t\t\"jp\": \"満\",\n\t\t\t\"zht\": \"滿\",\n\t\t\t\"zhs\": \"满\"\n\t\t},\n\t\t\"灭\": {\n\t\t\t\"jp\": \"滅\",\n\t\t\t\"zht\": \"滅\",\n\t\t\t\"zhs\": \"灭\"\n\t\t},\n\t\t\"滞\": {\n\t\t\t\"jp\": \"滞\",\n\t\t\t\"zht\": \"滯\",\n\t\t\t\"zhs\": \"滞\"\n\t\t},\n\t\t\"滥\": {\n\t\t\t\"jp\": \"濫\",\n\t\t\t\"zht\": \"濫\",\n\t\t\t\"zhs\": \"滥\"\n\t\t},\n\t\t\"濑\": {\n\t\t\t\"jp\": \"瀬\",\n\t\t\t\"zht\": \"瀨\",\n\t\t\t\"zhs\": \"濑\"\n\t\t},\n\t\t\"灯\": {\n\t\t\t\"jp\": \"灯\",\n\t\t\t\"zht\": \"燈\",\n\t\t\t\"zhs\": \"灯\"\n\t\t},\n\t\t\"灵\": {\n\t\t\t\"jp\": \"霊\",\n\t\t\t\"zht\": \"靈\",\n\t\t\t\"zhs\": \"灵\"\n\t\t},\n\t\t\"炉\": {\n\t\t\t\"jp\": \"炉\",\n\t\t\t\"zht\": \"爐\",\n\t\t\t\"zhs\": \"炉\"\n\t\t},\n\t\t\"点\": {\n\t\t\t\"jp\": \"点\",\n\t\t\t\"zht\": \"點\",\n\t\t\t\"zhs\": \"点\"\n\t\t},\n\t\t\"炼\": {\n\t\t\t\"jp\": \"錬\",\n\t\t\t\"zht\": \"鍊\",\n\t\t\t\"zhs\": \"炼\"\n\t\t},\n\t\t\"练\": {\n\t\t\t\"jp\": \"練\",\n\t\t\t\"zht\": \"練\",\n\t\t\t\"zhs\": \"练\"\n\t\t},\n\t\t\"烟\": {\n\t\t\t\"jp\": \"煙\",\n\t\t\t\"zht\": \"煙\",\n\t\t\t\"zhs\": \"烟\"\n\t\t},\n\t\t\"烦\": {\n\t\t\t\"jp\": \"煩\",\n\t\t\t\"zht\": \"煩\",\n\t\t\t\"zhs\": \"烦\"\n\t\t},\n\t\t\"烧\": {\n\t\t\t\"jp\": \"焼\",\n\t\t\t\"zht\": \"燒\",\n\t\t\t\"zhs\": \"烧\"\n\t\t},\n\t\t\"热\": {\n\t\t\t\"jp\": \"熱\",\n\t\t\t\"zht\": \"熱\",\n\t\t\t\"zhs\": \"热\"\n\t\t},\n\t\t\"焰\": {\n\t\t\t\"jp\": \"焔\",\n\t\t\t\"zht\": \"焰\",\n\t\t\t\"zhs\": \"焰\"\n\t\t},\n\t\t\"锻\": {\n\t\t\t\"jp\": \"鍛\",\n\t\t\t\"zht\": \"鍛\",\n\t\t\t\"zhs\": \"锻\"\n\t\t},\n\t\t\"牺\": {\n\t\t\t\"jp\": \"犠\",\n\t\t\t\"zht\": \"犧\",\n\t\t\t\"zhs\": \"牺\"\n\t\t},\n\t\t\"状\": {\n\t\t\t\"jp\": \"状\",\n\t\t\t\"zht\": \"狀\",\n\t\t\t\"zhs\": \"状\"\n\t\t},\n\t\t\"犹\": {\n\t\t\t\"jp\": \"猶\",\n\t\t\t\"zht\": \"猶\",\n\t\t\t\"zhs\": \"犹\"\n\t\t},\n\t\t\"独\": {\n\t\t\t\"jp\": \"独\",\n\t\t\t\"zht\": \"獨\",\n\t\t\t\"zhs\": \"独\"\n\t\t},\n\t\t\"狭\": {\n\t\t\t\"jp\": \"狭\",\n\t\t\t\"zht\": \"狹\",\n\t\t\t\"zhs\": \"狭\"\n\t\t},\n\t\t\"狱\": {\n\t\t\t\"jp\": \"獄\",\n\t\t\t\"zht\": \"獄\",\n\t\t\t\"zhs\": \"狱\"\n\t\t},\n\t\t\"猎\": {\n\t\t\t\"jp\": \"猟\",\n\t\t\t\"zht\": \"獵\",\n\t\t\t\"zhs\": \"猎\"\n\t\t},\n\t\t\"猫\": {\n\t\t\t\"jp\": \"猫\",\n\t\t\t\"zht\": \"貓\",\n\t\t\t\"zhs\": \"猫\"\n\t\t},\n\t\t\"献\": {\n\t\t\t\"jp\": \"献\",\n\t\t\t\"zht\": \"獻\",\n\t\t\t\"zhs\": \"献\"\n\t\t},\n\t\t\"获\": {\n\t\t\t\"jp\": \"獲\",\n\t\t\t\"zht\": \"獲\",\n\t\t\t\"zhs\": \"获\"\n\t\t},\n\t\t\"环\": {\n\t\t\t\"jp\": \"環\",\n\t\t\t\"zht\": \"環\",\n\t\t\t\"zhs\": \"环\"\n\t\t},\n\t\t\"现\": {\n\t\t\t\"jp\": \"現\",\n\t\t\t\"zht\": \"現\",\n\t\t\t\"zhs\": \"现\"\n\t\t},\n\t\t\"玺\": {\n\t\t\t\"jp\": \"璽\",\n\t\t\t\"zht\": \"璽\",\n\t\t\t\"zhs\": \"玺\"\n\t\t},\n\t\t\"电\": {\n\t\t\t\"jp\": \"電\",\n\t\t\t\"zht\": \"電\",\n\t\t\t\"zhs\": \"电\"\n\t\t},\n\t\t\"疗\": {\n\t\t\t\"jp\": \"療\",\n\t\t\t\"zht\": \"療\",\n\t\t\t\"zhs\": \"疗\"\n\t\t},\n\t\t\"监\": {\n\t\t\t\"jp\": \"監\",\n\t\t\t\"zht\": \"監\",\n\t\t\t\"zhs\": \"监\"\n\t\t},\n\t\t\"盖\": {\n\t\t\t\"jp\": \"蓋\",\n\t\t\t\"zht\": \"蓋\",\n\t\t\t\"zhs\": \"盖\"\n\t\t},\n\t\t\"盘\": {\n\t\t\t\"jp\": \"盤\",\n\t\t\t\"zht\": \"盤\",\n\t\t\t\"zhs\": \"盘\"\n\t\t},\n\t\t\"视\": {\n\t\t\t\"jp\": \"視\",\n\t\t\t\"zht\": \"視\",\n\t\t\t\"zhs\": \"视\"\n\t\t},\n\t\t\"著\": {\n\t\t\t\"jp\": \"着\",\n\t\t\t\"zht\": \"著\",\n\t\t\t\"zhs\": \"著\"\n\t\t},\n\t\t\"矫\": {\n\t\t\t\"jp\": \"矯\",\n\t\t\t\"zht\": \"矯\",\n\t\t\t\"zhs\": \"矫\"\n\t\t},\n\t\t\"矿\": {\n\t\t\t\"jp\": \"鉱\",\n\t\t\t\"zht\": \"礦\",\n\t\t\t\"zhs\": \"矿\"\n\t\t},\n\t\t\"碎\": {\n\t\t\t\"jp\": \"砕\",\n\t\t\t\"zht\": \"碎\",\n\t\t\t\"zhs\": \"碎\"\n\t\t},\n\t\t\"础\": {\n\t\t\t\"jp\": \"礎\",\n\t\t\t\"zht\": \"礎\",\n\t\t\t\"zhs\": \"础\"\n\t\t},\n\t\t\"确\": {\n\t\t\t\"jp\": \"確\",\n\t\t\t\"zht\": \"確\",\n\t\t\t\"zhs\": \"确\"\n\t\t},\n\t\t\"礼\": {\n\t\t\t\"jp\": \"礼\",\n\t\t\t\"zht\": \"禮\",\n\t\t\t\"zhs\": \"礼\"\n\t\t},\n\t\t\"祸\": {\n\t\t\t\"jp\": \"禍\",\n\t\t\t\"zht\": \"禍\",\n\t\t\t\"zhs\": \"祸\"\n\t\t},\n\t\t\"禅\": {\n\t\t\t\"jp\": \"禅\",\n\t\t\t\"zht\": \"禪\",\n\t\t\t\"zhs\": \"禅\"\n\t\t},\n\t\t\"离\": {\n\t\t\t\"jp\": \"離\",\n\t\t\t\"zht\": \"離\",\n\t\t\t\"zhs\": \"离\"\n\t\t},\n\t\t\"种\": {\n\t\t\t\"jp\": \"種\",\n\t\t\t\"zht\": \"種\",\n\t\t\t\"zhs\": \"种\"\n\t\t},\n\t\t\"积\": {\n\t\t\t\"jp\": \"積\",\n\t\t\t\"zht\": \"積\",\n\t\t\t\"zhs\": \"积\"\n\t\t},\n\t\t\"称\": {\n\t\t\t\"jp\": \"称\",\n\t\t\t\"zht\": \"稱\",\n\t\t\t\"zhs\": \"称\"\n\t\t},\n\t\t\"稻\": {\n\t\t\t\"jp\": \"稲\",\n\t\t\t\"zht\": \"稻\",\n\t\t\t\"zhs\": \"稻\"\n\t\t},\n\t\t\"稳\": {\n\t\t\t\"jp\": \"穏\",\n\t\t\t\"zht\": \"穩\",\n\t\t\t\"zhs\": \"稳\"\n\t\t},\n\t\t\"谷\": {\n\t\t\t\"jp\": \"穀\",\n\t\t\t\"zht\": \"穀\",\n\t\t\t\"zhs\": \"谷\"\n\t\t},\n\t\t\"穗\": {\n\t\t\t\"jp\": \"穂\",\n\t\t\t\"zht\": \"穗\",\n\t\t\t\"zhs\": \"穗\"\n\t\t},\n\t\t\"穷\": {\n\t\t\t\"jp\": \"窮\",\n\t\t\t\"zht\": \"窮\",\n\t\t\t\"zhs\": \"穷\"\n\t\t},\n\t\t\"窃\": {\n\t\t\t\"jp\": \"窃\",\n\t\t\t\"zht\": \"竊\",\n\t\t\t\"zhs\": \"窃\"\n\t\t},\n\t\t\"窗\": {\n\t\t\t\"jp\": \"窓\",\n\t\t\t\"zht\": \"窗\",\n\t\t\t\"zhs\": \"窗\"\n\t\t},\n\t\t\"龙\": {\n\t\t\t\"jp\": \"竜\",\n\t\t\t\"zht\": \"龍\",\n\t\t\t\"zhs\": \"龙\"\n\t\t},\n\t\t\"竞\": {\n\t\t\t\"jp\": \"競\",\n\t\t\t\"zht\": \"競\",\n\t\t\t\"zhs\": \"竞\"\n\t\t},\n\t\t\"笃\": {\n\t\t\t\"jp\": \"篤\",\n\t\t\t\"zht\": \"篤\",\n\t\t\t\"zhs\": \"笃\"\n\t\t},\n\t\t\"笔\": {\n\t\t\t\"jp\": \"筆\",\n\t\t\t\"zht\": \"筆\",\n\t\t\t\"zhs\": \"笔\"\n\t\t},\n\t\t\"筑\": {\n\t\t\t\"jp\": \"築\",\n\t\t\t\"zht\": \"築\",\n\t\t\t\"zhs\": \"筑\"\n\t\t},\n\t\t\"简\": {\n\t\t\t\"jp\": \"簡\",\n\t\t\t\"zht\": \"簡\",\n\t\t\t\"zhs\": \"简\"\n\t\t},\n\t\t\"节\": {\n\t\t\t\"jp\": \"節\",\n\t\t\t\"zht\": \"節\",\n\t\t\t\"zhs\": \"节\"\n\t\t},\n\t\t\"范\": {\n\t\t\t\"jp\": \"範\",\n\t\t\t\"zht\": \"範\",\n\t\t\t\"zhs\": \"范\"\n\t\t},\n\t\t\"类\": {\n\t\t\t\"jp\": \"類\",\n\t\t\t\"zht\": \"類\",\n\t\t\t\"zhs\": \"类\"\n\t\t},\n\t\t\"粹\": {\n\t\t\t\"jp\": \"粋\",\n\t\t\t\"zht\": \"粹\",\n\t\t\t\"zhs\": \"粹\"\n\t\t},\n\t\t\"肃\": {\n\t\t\t\"jp\": \"粛\",\n\t\t\t\"zht\": \"肅\",\n\t\t\t\"zhs\": \"肃\"\n\t\t},\n\t\t\"粮\": {\n\t\t\t\"jp\": \"糧\",\n\t\t\t\"zht\": \"糧\",\n\t\t\t\"zhs\": \"粮\"\n\t\t},\n\t\t\"纠\": {\n\t\t\t\"jp\": \"糾\",\n\t\t\t\"zht\": \"糾\",\n\t\t\t\"zhs\": \"纠\"\n\t\t},\n\t\t\"纪\": {\n\t\t\t\"jp\": \"紀\",\n\t\t\t\"zht\": \"紀\",\n\t\t\t\"zhs\": \"纪\"\n\t\t},\n\t\t\"约\": {\n\t\t\t\"jp\": \"約\",\n\t\t\t\"zht\": \"約\",\n\t\t\t\"zhs\": \"约\"\n\t\t},\n\t\t\"红\": {\n\t\t\t\"jp\": \"紅\",\n\t\t\t\"zht\": \"紅\",\n\t\t\t\"zhs\": \"红\"\n\t\t},\n\t\t\"纹\": {\n\t\t\t\"jp\": \"紋\",\n\t\t\t\"zht\": \"紋\",\n\t\t\t\"zhs\": \"纹\"\n\t\t},\n\t\t\"纳\": {\n\t\t\t\"jp\": \"納\",\n\t\t\t\"zht\": \"納\",\n\t\t\t\"zhs\": \"纳\"\n\t\t},\n\t\t\"纯\": {\n\t\t\t\"jp\": \"純\",\n\t\t\t\"zht\": \"純\",\n\t\t\t\"zhs\": \"纯\"\n\t\t},\n\t\t\"纸\": {\n\t\t\t\"jp\": \"紙\",\n\t\t\t\"zht\": \"紙\",\n\t\t\t\"zhs\": \"纸\"\n\t\t},\n\t\t\"级\": {\n\t\t\t\"jp\": \"級\",\n\t\t\t\"zht\": \"級\",\n\t\t\t\"zhs\": \"级\"\n\t\t},\n\t\t\"纷\": {\n\t\t\t\"jp\": \"紛\",\n\t\t\t\"zht\": \"紛\",\n\t\t\t\"zhs\": \"纷\"\n\t\t},\n\t\t\"纺\": {\n\t\t\t\"jp\": \"紡\",\n\t\t\t\"zht\": \"紡\",\n\t\t\t\"zhs\": \"纺\"\n\t\t},\n\t\t\"紧\": {\n\t\t\t\"jp\": \"緊\",\n\t\t\t\"zht\": \"緊\",\n\t\t\t\"zhs\": \"紧\"\n\t\t},\n\t\t\"细\": {\n\t\t\t\"jp\": \"細\",\n\t\t\t\"zht\": \"細\",\n\t\t\t\"zhs\": \"细\"\n\t\t},\n\t\t\"绅\": {\n\t\t\t\"jp\": \"紳\",\n\t\t\t\"zht\": \"紳\",\n\t\t\t\"zhs\": \"绅\"\n\t\t},\n\t\t\"绍\": {\n\t\t\t\"jp\": \"紹\",\n\t\t\t\"zht\": \"紹\",\n\t\t\t\"zhs\": \"绍\"\n\t\t},\n\t\t\"绀\": {\n\t\t\t\"jp\": \"紺\",\n\t\t\t\"zht\": \"紺\",\n\t\t\t\"zhs\": \"绀\"\n\t\t},\n\t\t\"终\": {\n\t\t\t\"jp\": \"終\",\n\t\t\t\"zht\": \"終\",\n\t\t\t\"zhs\": \"终\"\n\t\t},\n\t\t\"组\": {\n\t\t\t\"jp\": \"組\",\n\t\t\t\"zht\": \"組\",\n\t\t\t\"zhs\": \"组\"\n\t\t},\n\t\t\"经\": {\n\t\t\t\"jp\": \"経\",\n\t\t\t\"zht\": \"經\",\n\t\t\t\"zhs\": \"经\"\n\t\t},\n\t\t\"结\": {\n\t\t\t\"jp\": \"結\",\n\t\t\t\"zht\": \"結\",\n\t\t\t\"zhs\": \"结\"\n\t\t},\n\t\t\"绝\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絶\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"绞\": {\n\t\t\t\"jp\": \"絞\",\n\t\t\t\"zht\": \"絞\",\n\t\t\t\"zhs\": \"绞\"\n\t\t},\n\t\t\"络\": {\n\t\t\t\"jp\": \"絡\",\n\t\t\t\"zht\": \"絡\",\n\t\t\t\"zhs\": \"络\"\n\t\t},\n\t\t\"给\": {\n\t\t\t\"jp\": \"給\",\n\t\t\t\"zht\": \"給\",\n\t\t\t\"zhs\": \"给\"\n\t\t},\n\t\t\"统\": {\n\t\t\t\"jp\": \"統\",\n\t\t\t\"zht\": \"統\",\n\t\t\t\"zhs\": \"统\"\n\t\t},\n\t\t\"绘\": {\n\t\t\t\"jp\": \"絵\",\n\t\t\t\"zht\": \"繪\",\n\t\t\t\"zhs\": \"绘\"\n\t\t},\n\t\t\"绢\": {\n\t\t\t\"jp\": \"絹\",\n\t\t\t\"zht\": \"絹\",\n\t\t\t\"zhs\": \"绢\"\n\t\t},\n\t\t\"继\": {\n\t\t\t\"jp\": \"継\",\n\t\t\t\"zht\": \"繼\",\n\t\t\t\"zhs\": \"继\"\n\t\t},\n\t\t\"续\": {\n\t\t\t\"jp\": \"続\",\n\t\t\t\"zht\": \"續\",\n\t\t\t\"zhs\": \"续\"\n\t\t},\n\t\t\"绿\": {\n\t\t\t\"jp\": \"緑\",\n\t\t\t\"zht\": \"綠\",\n\t\t\t\"zhs\": \"绿\"\n\t\t},\n\t\t\"线\": {\n\t\t\t\"jp\": \"線\",\n\t\t\t\"zht\": \"線\",\n\t\t\t\"zhs\": \"线\"\n\t\t},\n\t\t\"维\": {\n\t\t\t\"jp\": \"維\",\n\t\t\t\"zht\": \"維\",\n\t\t\t\"zhs\": \"维\"\n\t\t},\n\t\t\"纲\": {\n\t\t\t\"jp\": \"綱\",\n\t\t\t\"zht\": \"綱\",\n\t\t\t\"zhs\": \"纲\"\n\t\t},\n\t\t\"绵\": {\n\t\t\t\"jp\": \"綿\",\n\t\t\t\"zht\": \"綿\",\n\t\t\t\"zhs\": \"绵\"\n\t\t},\n\t\t\"绪\": {\n\t\t\t\"jp\": \"緒\",\n\t\t\t\"zht\": \"緒\",\n\t\t\t\"zhs\": \"绪\"\n\t\t},\n\t\t\"缔\": {\n\t\t\t\"jp\": \"締\",\n\t\t\t\"zht\": \"締\",\n\t\t\t\"zhs\": \"缔\"\n\t\t},\n\t\t\"缘\": {\n\t\t\t\"jp\": \"縁\",\n\t\t\t\"zht\": \"緣\",\n\t\t\t\"zhs\": \"缘\"\n\t\t},\n\t\t\"编\": {\n\t\t\t\"jp\": \"編\",\n\t\t\t\"zht\": \"編\",\n\t\t\t\"zhs\": \"编\"\n\t\t},\n\t\t\"缓\": {\n\t\t\t\"jp\": \"緩\",\n\t\t\t\"zht\": \"緩\",\n\t\t\t\"zhs\": \"缓\"\n\t\t},\n\t\t\"纬\": {\n\t\t\t\"jp\": \"緯\",\n\t\t\t\"zht\": \"緯\",\n\t\t\t\"zhs\": \"纬\"\n\t\t},\n\t\t\"绳\": {\n\t\t\t\"jp\": \"縄\",\n\t\t\t\"zht\": \"繩\",\n\t\t\t\"zhs\": \"绳\"\n\t\t},\n\t\t\"缚\": {\n\t\t\t\"jp\": \"縛\",\n\t\t\t\"zht\": \"縛\",\n\t\t\t\"zhs\": \"缚\"\n\t\t},\n\t\t\"纵\": {\n\t\t\t\"jp\": \"縦\",\n\t\t\t\"zht\": \"縱\",\n\t\t\t\"zhs\": \"纵\"\n\t\t},\n\t\t\"缝\": {\n\t\t\t\"jp\": \"縫\",\n\t\t\t\"zht\": \"縫\",\n\t\t\t\"zhs\": \"缝\"\n\t\t},\n\t\t\"缩\": {\n\t\t\t\"jp\": \"縮\",\n\t\t\t\"zht\": \"縮\",\n\t\t\t\"zhs\": \"缩\"\n\t\t},\n\t\t\"纤\": {\n\t\t\t\"jp\": \"繊\",\n\t\t\t\"zht\": \"纖\",\n\t\t\t\"zhs\": \"纤\"\n\t\t},\n\t\t\"绩\": {\n\t\t\t\"jp\": \"績\",\n\t\t\t\"zht\": \"績\",\n\t\t\t\"zhs\": \"绩\"\n\t\t},\n\t\t\"织\": {\n\t\t\t\"jp\": \"織\",\n\t\t\t\"zht\": \"織\",\n\t\t\t\"zhs\": \"织\"\n\t\t},\n\t\t\"缮\": {\n\t\t\t\"jp\": \"繕\",\n\t\t\t\"zht\": \"繕\",\n\t\t\t\"zhs\": \"缮\"\n\t\t},\n\t\t\"茧\": {\n\t\t\t\"jp\": \"繭\",\n\t\t\t\"zht\": \"繭\",\n\t\t\t\"zhs\": \"茧\"\n\t\t},\n\t\t\"缲\": {\n\t\t\t\"jp\": \"繰\",\n\t\t\t\"zht\": \"繰\",\n\t\t\t\"zhs\": \"缲\"\n\t\t},\n\t\t\"罐\": {\n\t\t\t\"jp\": \"缶\",\n\t\t\t\"zht\": \"罐\",\n\t\t\t\"zhs\": \"罐\"\n\t\t},\n\t\t\"钵\": {\n\t\t\t\"jp\": \"鉢\",\n\t\t\t\"zht\": \"鉢\",\n\t\t\t\"zhs\": \"钵\"\n\t\t},\n\t\t\"罗\": {\n\t\t\t\"jp\": \"羅\",\n\t\t\t\"zht\": \"羅\",\n\t\t\t\"zhs\": \"罗\"\n\t\t},\n\t\t\"罚\": {\n\t\t\t\"jp\": \"罸\",\n\t\t\t\"zht\": \"罰\",\n\t\t\t\"zhs\": \"罚\"\n\t\t},\n\t\t\"罢\": {\n\t\t\t\"jp\": \"罷\",\n\t\t\t\"zht\": \"罷\",\n\t\t\t\"zhs\": \"罢\"\n\t\t},\n\t\t\"骂\": {\n\t\t\t\"jp\": \"罵\",\n\t\t\t\"zht\": \"罵\",\n\t\t\t\"zhs\": \"骂\"\n\t\t},\n\t\t\"职\": {\n\t\t\t\"jp\": \"職\",\n\t\t\t\"zht\": \"職\",\n\t\t\t\"zhs\": \"职\"\n\t\t},\n\t\t\"闻\": {\n\t\t\t\"jp\": \"聞\",\n\t\t\t\"zht\": \"聞\",\n\t\t\t\"zhs\": \"闻\"\n\t\t},\n\t\t\"聪\": {\n\t\t\t\"jp\": \"聡\",\n\t\t\t\"zht\": \"聰\",\n\t\t\t\"zhs\": \"聪\"\n\t\t},\n\t\t\"肠\": {\n\t\t\t\"jp\": \"腸\",\n\t\t\t\"zht\": \"腸\",\n\t\t\t\"zhs\": \"肠\"\n\t\t},\n\t\t\"肤\": {\n\t\t\t\"jp\": \"膚\",\n\t\t\t\"zht\": \"膚\",\n\t\t\t\"zhs\": \"肤\"\n\t\t},\n\t\t\"胀\": {\n\t\t\t\"jp\": \"脹\",\n\t\t\t\"zht\": \"脹\",\n\t\t\t\"zhs\": \"胀\"\n\t\t},\n\t\t\"胁\": {\n\t\t\t\"jp\": \"脅\",\n\t\t\t\"zht\": \"脅\",\n\t\t\t\"zhs\": \"胁\"\n\t\t},\n\t\t\"胆\": {\n\t\t\t\"jp\": \"胆\",\n\t\t\t\"zht\": \"膽\",\n\t\t\t\"zhs\": \"胆\"\n\t\t},\n\t\t\"脏\": {\n\t\t\t\"jp\": \"臓\",\n\t\t\t\"zht\": \"臟\",\n\t\t\t\"zhs\": \"脏\"\n\t\t},\n\t\t\"脑\": {\n\t\t\t\"jp\": \"脳\",\n\t\t\t\"zht\": \"腦\",\n\t\t\t\"zhs\": \"脑\"\n\t\t},\n\t\t\"脚\": {\n\t\t\t\"jp\": \"脚\",\n\t\t\t\"zht\": \"腳\",\n\t\t\t\"zhs\": \"脚\"\n\t\t},\n\t\t\"腾\": {\n\t\t\t\"jp\": \"騰\",\n\t\t\t\"zht\": \"騰\",\n\t\t\t\"zhs\": \"腾\"\n\t\t},\n\t\t\"铺\": {\n\t\t\t\"jp\": \"舗\",\n\t\t\t\"zht\": \"舖\",\n\t\t\t\"zhs\": \"铺\"\n\t\t},\n\t\t\"馆\": {\n\t\t\t\"jp\": \"館\",\n\t\t\t\"zht\": \"館\",\n\t\t\t\"zhs\": \"馆\"\n\t\t},\n\t\t\"舰\": {\n\t\t\t\"jp\": \"艦\",\n\t\t\t\"zht\": \"艦\",\n\t\t\t\"zhs\": \"舰\"\n\t\t},\n\t\t\"艺\": {\n\t\t\t\"jp\": \"芸\",\n\t\t\t\"zht\": \"藝\",\n\t\t\t\"zhs\": \"艺\"\n\t\t},\n\t\t\"茎\": {\n\t\t\t\"jp\": \"茎\",\n\t\t\t\"zht\": \"莖\",\n\t\t\t\"zhs\": \"茎\"\n\t\t},\n\t\t\"荐\": {\n\t\t\t\"jp\": \"薦\",\n\t\t\t\"zht\": \"薦\",\n\t\t\t\"zhs\": \"荐\"\n\t\t},\n\t\t\"药\": {\n\t\t\t\"jp\": \"薬\",\n\t\t\t\"zht\": \"藥\",\n\t\t\t\"zhs\": \"药\"\n\t\t},\n\t\t\"萤\": {\n\t\t\t\"jp\": \"蛍\",\n\t\t\t\"zht\": \"螢\",\n\t\t\t\"zhs\": \"萤\"\n\t\t},\n\t\t\"蒋\": {\n\t\t\t\"jp\": \"蒋\",\n\t\t\t\"zht\": \"蔣\",\n\t\t\t\"zhs\": \"蒋\"\n\t\t},\n\t\t\"藏\": {\n\t\t\t\"jp\": \"蔵\",\n\t\t\t\"zht\": \"藏\",\n\t\t\t\"zhs\": \"藏\"\n\t\t},\n\t\t\"虏\": {\n\t\t\t\"jp\": \"虜\",\n\t\t\t\"zht\": \"虜\",\n\t\t\t\"zhs\": \"虏\"\n\t\t},\n\t\t\"虚\": {\n\t\t\t\"jp\": \"虚\",\n\t\t\t\"zht\": \"虛\",\n\t\t\t\"zhs\": \"虚\"\n\t\t},\n\t\t\"虫\": {\n\t\t\t\"jp\": \"虫\",\n\t\t\t\"zht\": \"蟲\",\n\t\t\t\"zhs\": \"虫\"\n\t\t},\n\t\t\"蚀\": {\n\t\t\t\"jp\": \"蝕\",\n\t\t\t\"zht\": \"蝕\",\n\t\t\t\"zhs\": \"蚀\"\n\t\t},\n\t\t\"蚕\": {\n\t\t\t\"jp\": \"蚕\",\n\t\t\t\"zht\": \"蠶\",\n\t\t\t\"zhs\": \"蚕\"\n\t\t},\n\t\t\"蛮\": {\n\t\t\t\"jp\": \"蛮\",\n\t\t\t\"zht\": \"蠻\",\n\t\t\t\"zhs\": \"蛮\"\n\t\t},\n\t\t\"补\": {\n\t\t\t\"jp\": \"補\",\n\t\t\t\"zht\": \"補\",\n\t\t\t\"zhs\": \"补\"\n\t\t},\n\t\t\"袭\": {\n\t\t\t\"jp\": \"襲\",\n\t\t\t\"zht\": \"襲\",\n\t\t\t\"zhs\": \"袭\"\n\t\t},\n\t\t\"装\": {\n\t\t\t\"jp\": \"装\",\n\t\t\t\"zht\": \"裝\",\n\t\t\t\"zhs\": \"装\"\n\t\t},\n\t\t\"里\": {\n\t\t\t\"jp\": \"裏\",\n\t\t\t\"zht\": \"裡\",\n\t\t\t\"zhs\": \"里\"\n\t\t},\n\t\t\"霸\": {\n\t\t\t\"jp\": \"覇\",\n\t\t\t\"zht\": \"霸\",\n\t\t\t\"zhs\": \"霸\"\n\t\t},\n\t\t\"见\": {\n\t\t\t\"jp\": \"見\",\n\t\t\t\"zht\": \"見\",\n\t\t\t\"zhs\": \"见\"\n\t\t},\n\t\t\"观\": {\n\t\t\t\"jp\": \"観\",\n\t\t\t\"zht\": \"觀\",\n\t\t\t\"zhs\": \"观\"\n\t\t},\n\t\t\"规\": {\n\t\t\t\"jp\": \"規\",\n\t\t\t\"zht\": \"規\",\n\t\t\t\"zhs\": \"规\"\n\t\t},\n\t\t\"觉\": {\n\t\t\t\"jp\": \"覚\",\n\t\t\t\"zht\": \"覺\",\n\t\t\t\"zhs\": \"觉\"\n\t\t},\n\t\t\"览\": {\n\t\t\t\"jp\": \"覧\",\n\t\t\t\"zht\": \"覽\",\n\t\t\t\"zhs\": \"览\"\n\t\t},\n\t\t\"触\": {\n\t\t\t\"jp\": \"触\",\n\t\t\t\"zht\": \"觸\",\n\t\t\t\"zhs\": \"触\"\n\t\t},\n\t\t\"订\": {\n\t\t\t\"jp\": \"訂\",\n\t\t\t\"zht\": \"訂\",\n\t\t\t\"zhs\": \"订\"\n\t\t},\n\t\t\"计\": {\n\t\t\t\"jp\": \"計\",\n\t\t\t\"zht\": \"計\",\n\t\t\t\"zhs\": \"计\"\n\t\t},\n\t\t\"讨\": {\n\t\t\t\"jp\": \"討\",\n\t\t\t\"zht\": \"討\",\n\t\t\t\"zhs\": \"讨\"\n\t\t},\n\t\t\"训\": {\n\t\t\t\"jp\": \"訓\",\n\t\t\t\"zht\": \"訓\",\n\t\t\t\"zhs\": \"训\"\n\t\t},\n\t\t\"记\": {\n\t\t\t\"jp\": \"記\",\n\t\t\t\"zht\": \"記\",\n\t\t\t\"zhs\": \"记\"\n\t\t},\n\t\t\"讼\": {\n\t\t\t\"jp\": \"訟\",\n\t\t\t\"zht\": \"訟\",\n\t\t\t\"zhs\": \"讼\"\n\t\t},\n\t\t\"访\": {\n\t\t\t\"jp\": \"訪\",\n\t\t\t\"zht\": \"訪\",\n\t\t\t\"zhs\": \"访\"\n\t\t},\n\t\t\"设\": {\n\t\t\t\"jp\": \"設\",\n\t\t\t\"zht\": \"設\",\n\t\t\t\"zhs\": \"设\"\n\t\t},\n\t\t\"许\": {\n\t\t\t\"jp\": \"許\",\n\t\t\t\"zht\": \"許\",\n\t\t\t\"zhs\": \"许\"\n\t\t},\n\t\t\"译\": {\n\t\t\t\"jp\": \"訳\",\n\t\t\t\"zht\": \"譯\",\n\t\t\t\"zhs\": \"译\"\n\t\t},\n\t\t\"诉\": {\n\t\t\t\"jp\": \"訴\",\n\t\t\t\"zht\": \"訴\",\n\t\t\t\"zhs\": \"诉\"\n\t\t},\n\t\t\"诊\": {\n\t\t\t\"jp\": \"診\",\n\t\t\t\"zht\": \"診\",\n\t\t\t\"zhs\": \"诊\"\n\t\t},\n\t\t\"证\": {\n\t\t\t\"jp\": \"証\",\n\t\t\t\"zht\": \"證\",\n\t\t\t\"zhs\": \"证\"\n\t\t},\n\t\t\"诈\": {\n\t\t\t\"jp\": \"詐\",\n\t\t\t\"zht\": \"詐\",\n\t\t\t\"zhs\": \"诈\"\n\t\t},\n\t\t\"诏\": {\n\t\t\t\"jp\": \"詔\",\n\t\t\t\"zht\": \"詔\",\n\t\t\t\"zhs\": \"诏\"\n\t\t},\n\t\t\"评\": {\n\t\t\t\"jp\": \"評\",\n\t\t\t\"zht\": \"評\",\n\t\t\t\"zhs\": \"评\"\n\t\t},\n\t\t\"诅\": {\n\t\t\t\"jp\": \"詛\",\n\t\t\t\"zht\": \"詛\",\n\t\t\t\"zhs\": \"诅\"\n\t\t},\n\t\t\"词\": {\n\t\t\t\"jp\": \"詞\",\n\t\t\t\"zht\": \"詞\",\n\t\t\t\"zhs\": \"词\"\n\t\t},\n\t\t\"试\": {\n\t\t\t\"jp\": \"試\",\n\t\t\t\"zht\": \"試\",\n\t\t\t\"zhs\": \"试\"\n\t\t},\n\t\t\"诗\": {\n\t\t\t\"jp\": \"詩\",\n\t\t\t\"zht\": \"詩\",\n\t\t\t\"zhs\": \"诗\"\n\t\t},\n\t\t\"诘\": {\n\t\t\t\"jp\": \"詰\",\n\t\t\t\"zht\": \"詰\",\n\t\t\t\"zhs\": \"诘\"\n\t\t},\n\t\t\"该\": {\n\t\t\t\"jp\": \"該\",\n\t\t\t\"zht\": \"該\",\n\t\t\t\"zhs\": \"该\"\n\t\t},\n\t\t\"详\": {\n\t\t\t\"jp\": \"詳\",\n\t\t\t\"zht\": \"詳\",\n\t\t\t\"zhs\": \"详\"\n\t\t},\n\t\t\"誉\": {\n\t\t\t\"jp\": \"誉\",\n\t\t\t\"zht\": \"譽\",\n\t\t\t\"zhs\": \"誉\"\n\t\t},\n\t\t\"誊\": {\n\t\t\t\"jp\": \"謄\",\n\t\t\t\"zht\": \"謄\",\n\t\t\t\"zhs\": \"誊\"\n\t\t},\n\t\t\"认\": {\n\t\t\t\"jp\": \"認\",\n\t\t\t\"zht\": \"認\",\n\t\t\t\"zhs\": \"认\"\n\t\t},\n\t\t\"诞\": {\n\t\t\t\"jp\": \"誕\",\n\t\t\t\"zht\": \"誕\",\n\t\t\t\"zhs\": \"诞\"\n\t\t},\n\t\t\"诱\": {\n\t\t\t\"jp\": \"誘\",\n\t\t\t\"zht\": \"誘\",\n\t\t\t\"zhs\": \"诱\"\n\t\t},\n\t\t\"语\": {\n\t\t\t\"jp\": \"語\",\n\t\t\t\"zht\": \"語\",\n\t\t\t\"zhs\": \"语\"\n\t\t},\n\t\t\"诚\": {\n\t\t\t\"jp\": \"誠\",\n\t\t\t\"zht\": \"誠\",\n\t\t\t\"zhs\": \"诚\"\n\t\t},\n\t\t\"误\": {\n\t\t\t\"jp\": \"誤\",\n\t\t\t\"zht\": \"誤\",\n\t\t\t\"zhs\": \"误\"\n\t\t},\n\t\t\"说\": {\n\t\t\t\"jp\": \"説\",\n\t\t\t\"zht\": \"說\",\n\t\t\t\"zhs\": \"说\"\n\t\t},\n\t\t\"读\": {\n\t\t\t\"jp\": \"読\",\n\t\t\t\"zht\": \"讀\",\n\t\t\t\"zhs\": \"读\"\n\t\t},\n\t\t\"谁\": {\n\t\t\t\"jp\": \"誰\",\n\t\t\t\"zht\": \"誰\",\n\t\t\t\"zhs\": \"谁\"\n\t\t},\n\t\t\"课\": {\n\t\t\t\"jp\": \"課\",\n\t\t\t\"zht\": \"課\",\n\t\t\t\"zhs\": \"课\"\n\t\t},\n\t\t\"调\": {\n\t\t\t\"jp\": \"調\",\n\t\t\t\"zht\": \"調\",\n\t\t\t\"zhs\": \"调\"\n\t\t},\n\t\t\"谈\": {\n\t\t\t\"jp\": \"談\",\n\t\t\t\"zht\": \"談\",\n\t\t\t\"zhs\": \"谈\"\n\t\t},\n\t\t\"请\": {\n\t\t\t\"jp\": \"請\",\n\t\t\t\"zht\": \"請\",\n\t\t\t\"zhs\": \"请\"\n\t\t},\n\t\t\"论\": {\n\t\t\t\"jp\": \"論\",\n\t\t\t\"zht\": \"論\",\n\t\t\t\"zhs\": \"论\"\n\t\t},\n\t\t\"谕\": {\n\t\t\t\"jp\": \"諭\",\n\t\t\t\"zht\": \"諭\",\n\t\t\t\"zhs\": \"谕\"\n\t\t},\n\t\t\"诸\": {\n\t\t\t\"jp\": \"諸\",\n\t\t\t\"zht\": \"諸\",\n\t\t\t\"zhs\": \"诸\"\n\t\t},\n\t\t\"诺\": {\n\t\t\t\"jp\": \"諾\",\n\t\t\t\"zht\": \"諾\",\n\t\t\t\"zhs\": \"诺\"\n\t\t},\n\t\t\"谋\": {\n\t\t\t\"jp\": \"謀\",\n\t\t\t\"zht\": \"謀\",\n\t\t\t\"zhs\": \"谋\"\n\t\t},\n\t\t\"谒\": {\n\t\t\t\"jp\": \"謁\",\n\t\t\t\"zht\": \"謁\",\n\t\t\t\"zhs\": \"谒\"\n\t\t},\n\t\t\"谜\": {\n\t\t\t\"jp\": \"謎\",\n\t\t\t\"zht\": \"謎\",\n\t\t\t\"zhs\": \"谜\"\n\t\t},\n\t\t\"谦\": {\n\t\t\t\"jp\": \"謙\",\n\t\t\t\"zht\": \"謙\",\n\t\t\t\"zhs\": \"谦\"\n\t\t},\n\t\t\"讲\": {\n\t\t\t\"jp\": \"講\",\n\t\t\t\"zht\": \"講\",\n\t\t\t\"zhs\": \"讲\"\n\t\t},\n\t\t\"谢\": {\n\t\t\t\"jp\": \"謝\",\n\t\t\t\"zht\": \"謝\",\n\t\t\t\"zhs\": \"谢\"\n\t\t},\n\t\t\"谣\": {\n\t\t\t\"jp\": \"謡\",\n\t\t\t\"zht\": \"謠\",\n\t\t\t\"zhs\": \"谣\"\n\t\t},\n\t\t\"谨\": {\n\t\t\t\"jp\": \"謹\",\n\t\t\t\"zht\": \"謹\",\n\t\t\t\"zhs\": \"谨\"\n\t\t},\n\t\t\"识\": {\n\t\t\t\"jp\": \"識\",\n\t\t\t\"zht\": \"識\",\n\t\t\t\"zhs\": \"识\"\n\t\t},\n\t\t\"谱\": {\n\t\t\t\"jp\": \"譜\",\n\t\t\t\"zht\": \"譜\",\n\t\t\t\"zhs\": \"谱\"\n\t\t},\n\t\t\"议\": {\n\t\t\t\"jp\": \"議\",\n\t\t\t\"zht\": \"議\",\n\t\t\t\"zhs\": \"议\"\n\t\t},\n\t\t\"让\": {\n\t\t\t\"jp\": \"譲\",\n\t\t\t\"zht\": \"讓\",\n\t\t\t\"zhs\": \"让\"\n\t\t},\n\t\t\"贝\": {\n\t\t\t\"jp\": \"貝\",\n\t\t\t\"zht\": \"貝\",\n\t\t\t\"zhs\": \"贝\"\n\t\t},\n\t\t\"贞\": {\n\t\t\t\"jp\": \"貞\",\n\t\t\t\"zht\": \"貞\",\n\t\t\t\"zhs\": \"贞\"\n\t\t},\n\t\t\"负\": {\n\t\t\t\"jp\": \"負\",\n\t\t\t\"zht\": \"負\",\n\t\t\t\"zhs\": \"负\"\n\t\t},\n\t\t\"财\": {\n\t\t\t\"jp\": \"財\",\n\t\t\t\"zht\": \"財\",\n\t\t\t\"zhs\": \"财\"\n\t\t},\n\t\t\"贡\": {\n\t\t\t\"jp\": \"貢\",\n\t\t\t\"zht\": \"貢\",\n\t\t\t\"zhs\": \"贡\"\n\t\t},\n\t\t\"贫\": {\n\t\t\t\"jp\": \"貧\",\n\t\t\t\"zht\": \"貧\",\n\t\t\t\"zhs\": \"贫\"\n\t\t},\n\t\t\"货\": {\n\t\t\t\"jp\": \"貨\",\n\t\t\t\"zht\": \"貨\",\n\t\t\t\"zhs\": \"货\"\n\t\t},\n\t\t\"贩\": {\n\t\t\t\"jp\": \"販\",\n\t\t\t\"zht\": \"販\",\n\t\t\t\"zhs\": \"贩\"\n\t\t},\n\t\t\"贪\": {\n\t\t\t\"jp\": \"貪\",\n\t\t\t\"zht\": \"貪\",\n\t\t\t\"zhs\": \"贪\"\n\t\t},\n\t\t\"责\": {\n\t\t\t\"jp\": \"責\",\n\t\t\t\"zht\": \"責\",\n\t\t\t\"zhs\": \"责\"\n\t\t},\n\t\t\"贮\": {\n\t\t\t\"jp\": \"貯\",\n\t\t\t\"zht\": \"貯\",\n\t\t\t\"zhs\": \"贮\"\n\t\t},\n\t\t\"贵\": {\n\t\t\t\"jp\": \"貴\",\n\t\t\t\"zht\": \"貴\",\n\t\t\t\"zhs\": \"贵\"\n\t\t},\n\t\t\"贷\": {\n\t\t\t\"jp\": \"貸\",\n\t\t\t\"zht\": \"貸\",\n\t\t\t\"zhs\": \"贷\"\n\t\t},\n\t\t\"费\": {\n\t\t\t\"jp\": \"費\",\n\t\t\t\"zht\": \"費\",\n\t\t\t\"zhs\": \"费\"\n\t\t},\n\t\t\"贸\": {\n\t\t\t\"jp\": \"貿\",\n\t\t\t\"zht\": \"貿\",\n\t\t\t\"zhs\": \"贸\"\n\t\t},\n\t\t\"贺\": {\n\t\t\t\"jp\": \"賀\",\n\t\t\t\"zht\": \"賀\",\n\t\t\t\"zhs\": \"贺\"\n\t\t},\n\t\t\"赁\": {\n\t\t\t\"jp\": \"賃\",\n\t\t\t\"zht\": \"賃\",\n\t\t\t\"zhs\": \"赁\"\n\t\t},\n\t\t\"贿\": {\n\t\t\t\"jp\": \"賄\",\n\t\t\t\"zht\": \"賄\",\n\t\t\t\"zhs\": \"贿\"\n\t\t},\n\t\t\"资\": {\n\t\t\t\"jp\": \"資\",\n\t\t\t\"zht\": \"資\",\n\t\t\t\"zhs\": \"资\"\n\t\t},\n\t\t\"贼\": {\n\t\t\t\"jp\": \"賊\",\n\t\t\t\"zht\": \"賊\",\n\t\t\t\"zhs\": \"贼\"\n\t\t},\n\t\t\"贱\": {\n\t\t\t\"jp\": \"賎\",\n\t\t\t\"zht\": \"賤\",\n\t\t\t\"zhs\": \"贱\"\n\t\t},\n\t\t\"赞\": {\n\t\t\t\"jp\": \"賛\",\n\t\t\t\"zht\": \"贊\",\n\t\t\t\"zhs\": \"赞\"\n\t\t},\n\t\t\"赐\": {\n\t\t\t\"jp\": \"賜\",\n\t\t\t\"zht\": \"賜\",\n\t\t\t\"zhs\": \"赐\"\n\t\t},\n\t\t\"赏\": {\n\t\t\t\"jp\": \"賞\",\n\t\t\t\"zht\": \"賞\",\n\t\t\t\"zhs\": \"赏\"\n\t\t},\n\t\t\"赔\": {\n\t\t\t\"jp\": \"賠\",\n\t\t\t\"zht\": \"賠\",\n\t\t\t\"zhs\": \"赔\"\n\t\t},\n\t\t\"贤\": {\n\t\t\t\"jp\": \"賢\",\n\t\t\t\"zht\": \"賢\",\n\t\t\t\"zhs\": \"贤\"\n\t\t},\n\t\t\"赋\": {\n\t\t\t\"jp\": \"賦\",\n\t\t\t\"zht\": \"賦\",\n\t\t\t\"zhs\": \"赋\"\n\t\t},\n\t\t\"质\": {\n\t\t\t\"jp\": \"質\",\n\t\t\t\"zht\": \"質\",\n\t\t\t\"zhs\": \"质\"\n\t\t},\n\t\t\"赖\": {\n\t\t\t\"jp\": \"頼\",\n\t\t\t\"zht\": \"賴\",\n\t\t\t\"zhs\": \"赖\"\n\t\t},\n\t\t\"赠\": {\n\t\t\t\"jp\": \"贈\",\n\t\t\t\"zht\": \"贈\",\n\t\t\t\"zhs\": \"赠\"\n\t\t},\n\t\t\"赃\": {\n\t\t\t\"jp\": \"贓\",\n\t\t\t\"zht\": \"贓\",\n\t\t\t\"zhs\": \"赃\"\n\t\t},\n\t\t\"跃\": {\n\t\t\t\"jp\": \"躍\",\n\t\t\t\"zht\": \"躍\",\n\t\t\t\"zhs\": \"跃\"\n\t\t},\n\t\t\"践\": {\n\t\t\t\"jp\": \"践\",\n\t\t\t\"zht\": \"踐\",\n\t\t\t\"zhs\": \"践\"\n\t\t},\n\t\t\"踪\": {\n\t\t\t\"jp\": \"踪\",\n\t\t\t\"zht\": \"蹤\",\n\t\t\t\"zhs\": \"踪\"\n\t\t},\n\t\t\"车\": {\n\t\t\t\"jp\": \"車\",\n\t\t\t\"zht\": \"車\",\n\t\t\t\"zhs\": \"车\"\n\t\t},\n\t\t\"轨\": {\n\t\t\t\"jp\": \"軌\",\n\t\t\t\"zht\": \"軌\",\n\t\t\t\"zhs\": \"轨\"\n\t\t},\n\t\t\"轩\": {\n\t\t\t\"jp\": \"軒\",\n\t\t\t\"zht\": \"軒\",\n\t\t\t\"zhs\": \"轩\"\n\t\t},\n\t\t\"软\": {\n\t\t\t\"jp\": \"軟\",\n\t\t\t\"zht\": \"軟\",\n\t\t\t\"zhs\": \"软\"\n\t\t},\n\t\t\"转\": {\n\t\t\t\"jp\": \"転\",\n\t\t\t\"zht\": \"轉\",\n\t\t\t\"zhs\": \"转\"\n\t\t},\n\t\t\"轴\": {\n\t\t\t\"jp\": \"軸\",\n\t\t\t\"zht\": \"軸\",\n\t\t\t\"zhs\": \"轴\"\n\t\t},\n\t\t\"轻\": {\n\t\t\t\"jp\": \"軽\",\n\t\t\t\"zht\": \"輕\",\n\t\t\t\"zhs\": \"轻\"\n\t\t},\n\t\t\"较\": {\n\t\t\t\"jp\": \"較\",\n\t\t\t\"zht\": \"較\",\n\t\t\t\"zhs\": \"较\"\n\t\t},\n\t\t\"载\": {\n\t\t\t\"jp\": \"載\",\n\t\t\t\"zht\": \"載\",\n\t\t\t\"zhs\": \"载\"\n\t\t},\n\t\t\"辉\": {\n\t\t\t\"jp\": \"輝\",\n\t\t\t\"zht\": \"輝\",\n\t\t\t\"zhs\": \"辉\"\n\t\t},\n\t\t\"辈\": {\n\t\t\t\"jp\": \"輩\",\n\t\t\t\"zht\": \"輩\",\n\t\t\t\"zhs\": \"辈\"\n\t\t},\n\t\t\"轮\": {\n\t\t\t\"jp\": \"輪\",\n\t\t\t\"zht\": \"輪\",\n\t\t\t\"zhs\": \"轮\"\n\t\t},\n\t\t\"输\": {\n\t\t\t\"jp\": \"輸\",\n\t\t\t\"zht\": \"輸\",\n\t\t\t\"zhs\": \"输\"\n\t\t},\n\t\t\"辖\": {\n\t\t\t\"jp\": \"轄\",\n\t\t\t\"zht\": \"轄\",\n\t\t\t\"zhs\": \"辖\"\n\t\t},\n\t\t\"辞\": {\n\t\t\t\"jp\": \"辞\",\n\t\t\t\"zht\": \"辭\",\n\t\t\t\"zhs\": \"辞\"\n\t\t},\n\t\t\"边\": {\n\t\t\t\"jp\": \"辺\",\n\t\t\t\"zht\": \"邊\",\n\t\t\t\"zhs\": \"边\"\n\t\t},\n\t\t\"达\": {\n\t\t\t\"jp\": \"達\",\n\t\t\t\"zht\": \"達\",\n\t\t\t\"zhs\": \"达\"\n\t\t},\n\t\t\"迁\": {\n\t\t\t\"jp\": \"遷\",\n\t\t\t\"zht\": \"遷\",\n\t\t\t\"zhs\": \"迁\"\n\t\t},\n\t\t\"过\": {\n\t\t\t\"jp\": \"過\",\n\t\t\t\"zht\": \"過\",\n\t\t\t\"zhs\": \"过\"\n\t\t},\n\t\t\"运\": {\n\t\t\t\"jp\": \"運\",\n\t\t\t\"zht\": \"運\",\n\t\t\t\"zhs\": \"运\"\n\t\t},\n\t\t\"还\": {\n\t\t\t\"jp\": \"還\",\n\t\t\t\"zht\": \"還\",\n\t\t\t\"zhs\": \"还\"\n\t\t},\n\t\t\"进\": {\n\t\t\t\"jp\": \"進\",\n\t\t\t\"zht\": \"進\",\n\t\t\t\"zhs\": \"进\"\n\t\t},\n\t\t\"远\": {\n\t\t\t\"jp\": \"遠\",\n\t\t\t\"zht\": \"遠\",\n\t\t\t\"zhs\": \"远\"\n\t\t},\n\t\t\"违\": {\n\t\t\t\"jp\": \"違\",\n\t\t\t\"zht\": \"違\",\n\t\t\t\"zhs\": \"违\"\n\t\t},\n\t\t\"连\": {\n\t\t\t\"jp\": \"連\",\n\t\t\t\"zht\": \"連\",\n\t\t\t\"zhs\": \"连\"\n\t\t},\n\t\t\"迟\": {\n\t\t\t\"jp\": \"遅\",\n\t\t\t\"zht\": \"遲\",\n\t\t\t\"zhs\": \"迟\"\n\t\t},\n\t\t\"适\": {\n\t\t\t\"jp\": \"適\",\n\t\t\t\"zht\": \"適\",\n\t\t\t\"zhs\": \"适\"\n\t\t},\n\t\t\"选\": {\n\t\t\t\"jp\": \"選\",\n\t\t\t\"zht\": \"選\",\n\t\t\t\"zhs\": \"选\"\n\t\t},\n\t\t\"递\": {\n\t\t\t\"jp\": \"逓\",\n\t\t\t\"zht\": \"遞\",\n\t\t\t\"zhs\": \"递\"\n\t\t},\n\t\t\"遗\": {\n\t\t\t\"jp\": \"遺\",\n\t\t\t\"zht\": \"遺\",\n\t\t\t\"zhs\": \"遗\"\n\t\t},\n\t\t\"遥\": {\n\t\t\t\"jp\": \"遥\",\n\t\t\t\"zht\": \"遙\",\n\t\t\t\"zhs\": \"遥\"\n\t\t},\n\t\t\"邮\": {\n\t\t\t\"jp\": \"郵\",\n\t\t\t\"zht\": \"郵\",\n\t\t\t\"zhs\": \"邮\"\n\t\t},\n\t\t\"邻\": {\n\t\t\t\"jp\": \"隣\",\n\t\t\t\"zht\": \"鄰\",\n\t\t\t\"zhs\": \"邻\"\n\t\t},\n\t\t\"醉\": {\n\t\t\t\"jp\": \"酔\",\n\t\t\t\"zht\": \"醉\",\n\t\t\t\"zhs\": \"醉\"\n\t\t},\n\t\t\"酿\": {\n\t\t\t\"jp\": \"醸\",\n\t\t\t\"zht\": \"釀\",\n\t\t\t\"zhs\": \"酿\"\n\t\t},\n\t\t\"释\": {\n\t\t\t\"jp\": \"釈\",\n\t\t\t\"zht\": \"釋\",\n\t\t\t\"zhs\": \"释\"\n\t\t},\n\t\t\"针\": {\n\t\t\t\"jp\": \"針\",\n\t\t\t\"zht\": \"針\",\n\t\t\t\"zhs\": \"针\"\n\t\t},\n\t\t\"钓\": {\n\t\t\t\"jp\": \"釣\",\n\t\t\t\"zht\": \"釣\",\n\t\t\t\"zhs\": \"钓\"\n\t\t},\n\t\t\"钝\": {\n\t\t\t\"jp\": \"鈍\",\n\t\t\t\"zht\": \"鈍\",\n\t\t\t\"zhs\": \"钝\"\n\t\t},\n\t\t\"铃\": {\n\t\t\t\"jp\": \"鈴\",\n\t\t\t\"zht\": \"鈴\",\n\t\t\t\"zhs\": \"铃\"\n\t\t},\n\t\t\"铁\": {\n\t\t\t\"jp\": \"鉄\",\n\t\t\t\"zht\": \"鐵\",\n\t\t\t\"zhs\": \"铁\"\n\t\t},\n\t\t\"铅\": {\n\t\t\t\"jp\": \"鉛\",\n\t\t\t\"zht\": \"鉛\",\n\t\t\t\"zhs\": \"铅\"\n\t\t},\n\t\t\"鉴\": {\n\t\t\t\"jp\": \"鑑\",\n\t\t\t\"zht\": \"鑑\",\n\t\t\t\"zhs\": \"鉴\"\n\t\t},\n\t\t\"银\": {\n\t\t\t\"jp\": \"銀\",\n\t\t\t\"zht\": \"銀\",\n\t\t\t\"zhs\": \"银\"\n\t\t},\n\t\t\"铳\": {\n\t\t\t\"jp\": \"銃\",\n\t\t\t\"zht\": \"銃\",\n\t\t\t\"zhs\": \"铳\"\n\t\t},\n\t\t\"铜\": {\n\t\t\t\"jp\": \"銅\",\n\t\t\t\"zht\": \"銅\",\n\t\t\t\"zhs\": \"铜\"\n\t\t},\n\t\t\"铣\": {\n\t\t\t\"jp\": \"銑\",\n\t\t\t\"zht\": \"銑\",\n\t\t\t\"zhs\": \"铣\"\n\t\t},\n\t\t\"铭\": {\n\t\t\t\"jp\": \"銘\",\n\t\t\t\"zht\": \"銘\",\n\t\t\t\"zhs\": \"铭\"\n\t\t},\n\t\t\"钱\": {\n\t\t\t\"jp\": \"銭\",\n\t\t\t\"zht\": \"錢\",\n\t\t\t\"zhs\": \"钱\"\n\t\t},\n\t\t\"锐\": {\n\t\t\t\"jp\": \"鋭\",\n\t\t\t\"zht\": \"鋭\",\n\t\t\t\"zhs\": \"锐\"\n\t\t},\n\t\t\"铸\": {\n\t\t\t\"jp\": \"鋳\",\n\t\t\t\"zht\": \"鑄\",\n\t\t\t\"zhs\": \"铸\"\n\t\t},\n\t\t\"钢\": {\n\t\t\t\"jp\": \"鋼\",\n\t\t\t\"zht\": \"鋼\",\n\t\t\t\"zhs\": \"钢\"\n\t\t},\n\t\t\"锤\": {\n\t\t\t\"jp\": \"錘\",\n\t\t\t\"zht\": \"錘\",\n\t\t\t\"zhs\": \"锤\"\n\t\t},\n\t\t\"锭\": {\n\t\t\t\"jp\": \"錠\",\n\t\t\t\"zht\": \"錠\",\n\t\t\t\"zhs\": \"锭\"\n\t\t},\n\t\t\"错\": {\n\t\t\t\"jp\": \"錯\",\n\t\t\t\"zht\": \"錯\",\n\t\t\t\"zhs\": \"错\"\n\t\t},\n\t\t\"钟\": {\n\t\t\t\"jp\": \"鍾\",\n\t\t\t\"zht\": \"鍾\",\n\t\t\t\"zhs\": \"钟\"\n\t\t},\n\t\t\"锁\": {\n\t\t\t\"jp\": \"鎖\",\n\t\t\t\"zht\": \"鎖\",\n\t\t\t\"zhs\": \"锁\"\n\t\t},\n\t\t\"镇\": {\n\t\t\t\"jp\": \"鎮\",\n\t\t\t\"zht\": \"鎮\",\n\t\t\t\"zhs\": \"镇\"\n\t\t},\n\t\t\"镜\": {\n\t\t\t\"jp\": \"鏡\",\n\t\t\t\"zht\": \"鏡\",\n\t\t\t\"zhs\": \"镜\"\n\t\t},\n\t\t\"长\": {\n\t\t\t\"jp\": \"長\",\n\t\t\t\"zht\": \"長\",\n\t\t\t\"zhs\": \"长\"\n\t\t},\n\t\t\"门\": {\n\t\t\t\"jp\": \"門\",\n\t\t\t\"zht\": \"門\",\n\t\t\t\"zhs\": \"门\"\n\t\t},\n\t\t\"闭\": {\n\t\t\t\"jp\": \"閉\",\n\t\t\t\"zht\": \"閉\",\n\t\t\t\"zhs\": \"闭\"\n\t\t},\n\t\t\"闲\": {\n\t\t\t\"jp\": \"閑\",\n\t\t\t\"zht\": \"閒\",\n\t\t\t\"zhs\": \"闲\"\n\t\t},\n\t\t\"间\": {\n\t\t\t\"jp\": \"間\",\n\t\t\t\"zht\": \"間\",\n\t\t\t\"zhs\": \"间\"\n\t\t},\n\t\t\"阁\": {\n\t\t\t\"jp\": \"閣\",\n\t\t\t\"zht\": \"閣\",\n\t\t\t\"zhs\": \"阁\"\n\t\t},\n\t\t\"阀\": {\n\t\t\t\"jp\": \"閥\",\n\t\t\t\"zht\": \"閥\",\n\t\t\t\"zhs\": \"阀\"\n\t\t},\n\t\t\"阅\": {\n\t\t\t\"jp\": \"閲\",\n\t\t\t\"zht\": \"閲\",\n\t\t\t\"zhs\": \"阅\"\n\t\t},\n\t\t\"队\": {\n\t\t\t\"jp\": \"隊\",\n\t\t\t\"zht\": \"隊\",\n\t\t\t\"zhs\": \"队\"\n\t\t},\n\t\t\"阳\": {\n\t\t\t\"jp\": \"陽\",\n\t\t\t\"zht\": \"陽\",\n\t\t\t\"zhs\": \"阳\"\n\t\t},\n\t\t\"阴\": {\n\t\t\t\"jp\": \"陰\",\n\t\t\t\"zht\": \"陰\",\n\t\t\t\"zhs\": \"阴\"\n\t\t},\n\t\t\"阵\": {\n\t\t\t\"jp\": \"陣\",\n\t\t\t\"zht\": \"陣\",\n\t\t\t\"zhs\": \"阵\"\n\t\t},\n\t\t\"阶\": {\n\t\t\t\"jp\": \"階\",\n\t\t\t\"zht\": \"階\",\n\t\t\t\"zhs\": \"阶\"\n\t\t},\n\t\t\"际\": {\n\t\t\t\"jp\": \"際\",\n\t\t\t\"zht\": \"際\",\n\t\t\t\"zhs\": \"际\"\n\t\t},\n\t\t\"陆\": {\n\t\t\t\"jp\": \"陸\",\n\t\t\t\"zht\": \"陸\",\n\t\t\t\"zhs\": \"陆\"\n\t\t},\n\t\t\"陈\": {\n\t\t\t\"jp\": \"陳\",\n\t\t\t\"zht\": \"陳\",\n\t\t\t\"zhs\": \"陈\"\n\t\t},\n\t\t\"陷\": {\n\t\t\t\"jp\": \"陥\",\n\t\t\t\"zht\": \"陷\",\n\t\t\t\"zhs\": \"陷\"\n\t\t},\n\t\t\"随\": {\n\t\t\t\"jp\": \"随\",\n\t\t\t\"zht\": \"隨\",\n\t\t\t\"zhs\": \"随\"\n\t\t},\n\t\t\"隐\": {\n\t\t\t\"jp\": \"隠\",\n\t\t\t\"zht\": \"隱\",\n\t\t\t\"zhs\": \"隐\"\n\t\t},\n\t\t\"隶\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隷\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"难\": {\n\t\t\t\"jp\": \"難\",\n\t\t\t\"zht\": \"難\",\n\t\t\t\"zhs\": \"难\"\n\t\t},\n\t\t\"鸡\": {\n\t\t\t\"jp\": \"鶏\",\n\t\t\t\"zht\": \"雞\",\n\t\t\t\"zhs\": \"鸡\"\n\t\t},\n\t\t\"雾\": {\n\t\t\t\"jp\": \"霧\",\n\t\t\t\"zht\": \"霧\",\n\t\t\t\"zhs\": \"雾\"\n\t\t},\n\t\t\"静\": {\n\t\t\t\"jp\": \"静\",\n\t\t\t\"zht\": \"靜\",\n\t\t\t\"zhs\": \"静\"\n\t\t},\n\t\t\"顶\": {\n\t\t\t\"jp\": \"頂\",\n\t\t\t\"zht\": \"頂\",\n\t\t\t\"zhs\": \"顶\"\n\t\t},\n\t\t\"项\": {\n\t\t\t\"jp\": \"項\",\n\t\t\t\"zht\": \"項\",\n\t\t\t\"zhs\": \"项\"\n\t\t},\n\t\t\"顺\": {\n\t\t\t\"jp\": \"順\",\n\t\t\t\"zht\": \"順\",\n\t\t\t\"zhs\": \"顺\"\n\t\t},\n\t\t\"顽\": {\n\t\t\t\"jp\": \"頑\",\n\t\t\t\"zht\": \"頑\",\n\t\t\t\"zhs\": \"顽\"\n\t\t},\n\t\t\"颁\": {\n\t\t\t\"jp\": \"頒\",\n\t\t\t\"zht\": \"頒\",\n\t\t\t\"zhs\": \"颁\"\n\t\t},\n\t\t\"领\": {\n\t\t\t\"jp\": \"領\",\n\t\t\t\"zht\": \"領\",\n\t\t\t\"zhs\": \"领\"\n\t\t},\n\t\t\"频\": {\n\t\t\t\"jp\": \"頻\",\n\t\t\t\"zht\": \"頻\",\n\t\t\t\"zhs\": \"频\"\n\t\t},\n\t\t\"题\": {\n\t\t\t\"jp\": \"題\",\n\t\t\t\"zht\": \"題\",\n\t\t\t\"zhs\": \"题\"\n\t\t},\n\t\t\"额\": {\n\t\t\t\"jp\": \"額\",\n\t\t\t\"zht\": \"額\",\n\t\t\t\"zhs\": \"额\"\n\t\t},\n\t\t\"颜\": {\n\t\t\t\"jp\": \"顔\",\n\t\t\t\"zht\": \"顏\",\n\t\t\t\"zhs\": \"颜\"\n\t\t},\n\t\t\"风\": {\n\t\t\t\"jp\": \"風\",\n\t\t\t\"zht\": \"風\",\n\t\t\t\"zhs\": \"风\"\n\t\t},\n\t\t\"飞\": {\n\t\t\t\"jp\": \"飛\",\n\t\t\t\"zht\": \"飛\",\n\t\t\t\"zhs\": \"飞\"\n\t\t},\n\t\t\"饥\": {\n\t\t\t\"jp\": \"飢\",\n\t\t\t\"zht\": \"饑\",\n\t\t\t\"zhs\": \"饥\"\n\t\t},\n\t\t\"饭\": {\n\t\t\t\"jp\": \"飯\",\n\t\t\t\"zht\": \"飯\",\n\t\t\t\"zhs\": \"饭\"\n\t\t},\n\t\t\"饮\": {\n\t\t\t\"jp\": \"飲\",\n\t\t\t\"zht\": \"飲\",\n\t\t\t\"zhs\": \"饮\"\n\t\t},\n\t\t\"饲\": {\n\t\t\t\"jp\": \"飼\",\n\t\t\t\"zht\": \"飼\",\n\t\t\t\"zhs\": \"饲\"\n\t\t},\n\t\t\"饱\": {\n\t\t\t\"jp\": \"飽\",\n\t\t\t\"zht\": \"飽\",\n\t\t\t\"zhs\": \"饱\"\n\t\t},\n\t\t\"饰\": {\n\t\t\t\"jp\": \"飾\",\n\t\t\t\"zht\": \"飾\",\n\t\t\t\"zhs\": \"饰\"\n\t\t},\n\t\t\"饿\": {\n\t\t\t\"jp\": \"餓\",\n\t\t\t\"zht\": \"餓\",\n\t\t\t\"zhs\": \"饿\"\n\t\t},\n\t\t\"马\": {\n\t\t\t\"jp\": \"馬\",\n\t\t\t\"zht\": \"馬\",\n\t\t\t\"zhs\": \"马\"\n\t\t},\n\t\t\"驿\": {\n\t\t\t\"jp\": \"駅\",\n\t\t\t\"zht\": \"驛\",\n\t\t\t\"zhs\": \"驿\"\n\t\t},\n\t\t\"驱\": {\n\t\t\t\"jp\": \"駆\",\n\t\t\t\"zht\": \"驅\",\n\t\t\t\"zhs\": \"驱\"\n\t\t},\n\t\t\"驻\": {\n\t\t\t\"jp\": \"駐\",\n\t\t\t\"zht\": \"駐\",\n\t\t\t\"zhs\": \"驻\"\n\t\t},\n\t\t\"骑\": {\n\t\t\t\"jp\": \"騎\",\n\t\t\t\"zht\": \"騎\",\n\t\t\t\"zhs\": \"骑\"\n\t\t},\n\t\t\"验\": {\n\t\t\t\"jp\": \"験\",\n\t\t\t\"zht\": \"驗\",\n\t\t\t\"zhs\": \"验\"\n\t\t},\n\t\t\"骚\": {\n\t\t\t\"jp\": \"騒\",\n\t\t\t\"zht\": \"騷\",\n\t\t\t\"zhs\": \"骚\"\n\t\t},\n\t\t\"驔\": {\n\t\t\t\"jp\": \"騨\",\n\t\t\t\"zht\": \"驔\",\n\t\t\t\"zhs\": \"驔\"\n\t\t},\n\t\t\"髓\": {\n\t\t\t\"jp\": \"髄\",\n\t\t\t\"zht\": \"髓\",\n\t\t\t\"zhs\": \"髓\"\n\t\t},\n\t\t\"鱼\": {\n\t\t\t\"jp\": \"魚\",\n\t\t\t\"zht\": \"魚\",\n\t\t\t\"zhs\": \"鱼\"\n\t\t},\n\t\t\"鲁\": {\n\t\t\t\"jp\": \"魯\",\n\t\t\t\"zht\": \"魯\",\n\t\t\t\"zhs\": \"鲁\"\n\t\t},\n\t\t\"鲜\": {\n\t\t\t\"jp\": \"鮮\",\n\t\t\t\"zht\": \"鮮\",\n\t\t\t\"zhs\": \"鲜\"\n\t\t},\n\t\t\"鲸\": {\n\t\t\t\"jp\": \"鯨\",\n\t\t\t\"zht\": \"鯨\",\n\t\t\t\"zhs\": \"鲸\"\n\t\t},\n\t\t\"鸟\": {\n\t\t\t\"jp\": \"鳥\",\n\t\t\t\"zht\": \"鳥\",\n\t\t\t\"zhs\": \"鸟\"\n\t\t},\n\t\t\"鸣\": {\n\t\t\t\"jp\": \"鳴\",\n\t\t\t\"zht\": \"鳴\",\n\t\t\t\"zhs\": \"鸣\"\n\t\t},\n\t\t\"鸫\": {\n\t\t\t\"jp\": \"鶫\",\n\t\t\t\"zht\": \"鶇\",\n\t\t\t\"zhs\": \"鸫\"\n\t\t},\n\t\t\"麦\": {\n\t\t\t\"jp\": \"麦\",\n\t\t\t\"zht\": \"麥\",\n\t\t\t\"zhs\": \"麦\"\n\t\t},\n\t\t\"黄\": {\n\t\t\t\"jp\": \"黄\",\n\t\t\t\"zht\": \"黃\",\n\t\t\t\"zhs\": \"黄\"\n\t\t},\n\t\t\"黑\": {\n\t\t\t\"jp\": \"黒\",\n\t\t\t\"zht\": \"黑\",\n\t\t\t\"zhs\": \"黑\"\n\t\t},\n\t\t\"默\": {\n\t\t\t\"jp\": \"黙\",\n\t\t\t\"zht\": \"默\",\n\t\t\t\"zhs\": \"默\"\n\t\t},\n\t\t\"龄\": {\n\t\t\t\"jp\": \"齢\",\n\t\t\t\"zht\": \"齡\",\n\t\t\t\"zhs\": \"龄\"\n\t\t}\n\t}\n};\n\n/**\n * Code generated from @lazy-cjk/jp-table-comparison;\n * DO NOT EDIT.\n * @see {@link @lazy-cjk/jp-table-comparison}\n */\n\nexport const TABLE_SAFE: ITABLE_MAIN = {\n\t\"jp\": {\n\t\t\"会\": {\n\t\t\t\"jp\": \"会\",\n\t\t\t\"zht\": \"會\",\n\t\t\t\"zhs\": \"会\"\n\t\t},\n\t\t\"箋\": {\n\t\t\t\"jp\": \"箋\",\n\t\t\t\"zht\": \"箋\",\n\t\t\t\"zhs\": \"笺\"\n\t\t},\n\t\t\"網\": {\n\t\t\t\"jp\": \"網\",\n\t\t\t\"zht\": \"網\",\n\t\t\t\"zhs\": \"网\"\n\t\t},\n\t\t\"処\": {\n\t\t\t\"jp\": \"処\",\n\t\t\t\"zht\": \"處\",\n\t\t\t\"zhs\": \"处\"\n\t\t},\n\t\t\"話\": {\n\t\t\t\"jp\": \"話\",\n\t\t\t\"zht\": \"話\",\n\t\t\t\"zhs\": \"话\"\n\t\t},\n\t\t\"万\": {\n\t\t\t\"jp\": \"万\",\n\t\t\t\"zht\": \"萬\",\n\t\t\t\"zhs\": \"万\"\n\t\t},\n\t\t\"与\": {\n\t\t\t\"jp\": \"与\",\n\t\t\t\"zht\": \"與\",\n\t\t\t\"zhs\": \"与\"\n\t\t},\n\t\t\"醜\": {\n\t\t\t\"jp\": \"醜\",\n\t\t\t\"zht\": \"醜\",\n\t\t\t\"zhs\": \"丑\"\n\t\t},\n\t\t\"専\": {\n\t\t\t\"jp\": \"専\",\n\t\t\t\"zht\": \"專\",\n\t\t\t\"zhs\": \"专\"\n\t\t},\n\t\t\"業\": {\n\t\t\t\"jp\": \"業\",\n\t\t\t\"zht\": \"業\",\n\t\t\t\"zhs\": \"业\"\n\t\t},\n\t\t\"東\": {\n\t\t\t\"jp\": \"東\",\n\t\t\t\"zht\": \"東\",\n\t\t\t\"zhs\": \"东\"\n\t\t},\n\t\t\"両\": {\n\t\t\t\"jp\": \"両\",\n\t\t\t\"zht\": \"兩\",\n\t\t\t\"zhs\": \"两\"\n\t\t},\n\t\t\"厳\": {\n\t\t\t\"jp\": \"厳\",\n\t\t\t\"zht\": \"嚴\",\n\t\t\t\"zhs\": \"严\"\n\t\t},\n\t\t\"並\": {\n\t\t\t\"jp\": \"並\",\n\t\t\t\"zht\": \"並\",\n\t\t\t\"zhs\": \"并\"\n\t\t},\n\t\t\"喪\": {\n\t\t\t\"jp\": \"喪\",\n\t\t\t\"zht\": \"喪\",\n\t\t\t\"zhs\": \"丧\"\n\t\t},\n\t\t\"豊\": {\n\t\t\t\"jp\": \"豊\",\n\t\t\t\"zht\": \"豐\",\n\t\t\t\"zhs\": \"丰\"\n\t\t},\n\t\t\"臨\": {\n\t\t\t\"jp\": \"臨\",\n\t\t\t\"zht\": \"臨\",\n\t\t\t\"zhs\": \"临\"\n\t\t},\n\t\t\"為\": {\n\t\t\t\"jp\": \"為\",\n\t\t\t\"zht\": \"為\",\n\t\t\t\"zhs\": \"为\"\n\t\t},\n\t\t\"麗\": {\n\t\t\t\"jp\": \"麗\",\n\t\t\t\"zht\": \"麗\",\n\t\t\t\"zhs\": \"丽\"\n\t\t},\n\t\t\"挙\": {\n\t\t\t\"jp\": \"挙\",\n\t\t\t\"zht\": \"舉\",\n\t\t\t\"zhs\": \"举\"\n\t\t},\n\t\t\"廼\": {\n\t\t\t\"jp\": \"廼\",\n\t\t\t\"zht\": \"迺\",\n\t\t\t\"zhs\": \"迺\"\n\t\t},\n\t\t\"義\": {\n\t\t\t\"jp\": \"義\",\n\t\t\t\"zht\": \"義\",\n\t\t\t\"zhs\": \"义\"\n\t\t},\n\t\t\"楽\": {\n\t\t\t\"jp\": \"楽\",\n\t\t\t\"zht\": \"樂\",\n\t\t\t\"zhs\": \"乐\"\n\t\t},\n\t\t\"乗\": {\n\t\t\t\"jp\": \"乗\",\n\t\t\t\"zht\": \"乘\",\n\t\t\t\"zhs\": \"乘\"\n\t\t},\n\t\t\"習\": {\n\t\t\t\"jp\": \"習\",\n\t\t\t\"zht\": \"習\",\n\t\t\t\"zhs\": \"习\"\n\t\t},\n\t\t\"郷\": {\n\t\t\t\"jp\": \"郷\",\n\t\t\t\"zht\": \"鄉\",\n\t\t\t\"zhs\": \"乡\"\n\t\t},\n\t\t\"書\": {\n\t\t\t\"jp\": \"書\",\n\t\t\t\"zht\": \"書\",\n\t\t\t\"zhs\": \"书\"\n\t\t},\n\t\t\"買\": {\n\t\t\t\"jp\": \"買\",\n\t\t\t\"zht\": \"買\",\n\t\t\t\"zhs\": \"买\"\n\t\t},\n\t\t\"乱\": {\n\t\t\t\"jp\": \"乱\",\n\t\t\t\"zht\": \"亂\",\n\t\t\t\"zhs\": \"乱\"\n\t\t},\n\t\t\"亀\": {\n\t\t\t\"jp\": \"亀\",\n\t\t\t\"zht\": \"龜\",\n\t\t\t\"zhs\": \"龟\"\n\t\t},\n\t\t\"弐\": {\n\t\t\t\"jp\": \"弐\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"雲\": {\n\t\t\t\"jp\": \"雲\",\n\t\t\t\"zht\": \"雲\",\n\t\t\t\"zhs\": \"云\"\n\t\t},\n\t\t\"亜\": {\n\t\t\t\"jp\": \"亜\",\n\t\t\t\"zht\": \"亞\",\n\t\t\t\"zhs\": \"亚\"\n\t\t},\n\t\t\"産\": {\n\t\t\t\"jp\": \"産\",\n\t\t\t\"zht\": \"產\",\n\t\t\t\"zhs\": \"产\"\n\t\t},\n\t\t\"畝\": {\n\t\t\t\"jp\": \"畝\",\n\t\t\t\"zht\": \"畝\",\n\t\t\t\"zhs\": \"亩\"\n\t\t},\n\t\t\"親\": {\n\t\t\t\"jp\": \"親\",\n\t\t\t\"zht\": \"親\",\n\t\t\t\"zhs\": \"亲\"\n\t\t},\n\t\t\"億\": {\n\t\t\t\"jp\": \"億\",\n\t\t\t\"zht\": \"億\",\n\t\t\t\"zhs\": \"亿\"\n\t\t},\n\t\t\"僕\": {\n\t\t\t\"jp\": \"僕\",\n\t\t\t\"zht\": \"僕\",\n\t\t\t\"zhs\": \"仆\"\n\t\t},\n\t\t\"従\": {\n\t\t\t\"jp\": \"従\",\n\t\t\t\"zht\": \"從\",\n\t\t\t\"zhs\": \"从\"\n\t\t},\n\t\t\"仏\": {\n\t\t\t\"jp\": \"仏\",\n\t\t\t\"zht\": \"佛\",\n\t\t\t\"zhs\": \"佛\"\n\t\t},\n\t\t\"倉\": {\n\t\t\t\"jp\": \"倉\",\n\t\t\t\"zht\": \"倉\",\n\t\t\t\"zhs\": \"仓\"\n\t\t},\n\t\t\"儀\": {\n\t\t\t\"jp\": \"儀\",\n\t\t\t\"zht\": \"儀\",\n\t\t\t\"zhs\": \"仪\"\n\t\t},\n\t\t\"仮\": {\n\t\t\t\"jp\": \"仮\",\n\t\t\t\"zht\": \"假\",\n\t\t\t\"zhs\": \"假\"\n\t\t},\n\t\t\"価\": {\n\t\t\t\"jp\": \"価\",\n\t\t\t\"zht\": \"價\",\n\t\t\t\"zhs\": \"价\"\n\t\t},\n\t\t\"衆\": {\n\t\t\t\"jp\": \"衆\",\n\t\t\t\"zht\": \"眾\",\n\t\t\t\"zhs\": \"众\"\n\t\t},\n\t\t\"優\": {\n\t\t\t\"jp\": \"優\",\n\t\t\t\"zht\": \"優\",\n\t\t\t\"zhs\": \"优\"\n\t\t},\n\t\t\"伝\": {\n\t\t\t\"jp\": \"伝\",\n\t\t\t\"zht\": \"傳\",\n\t\t\t\"zhs\": \"传\"\n\t\t},\n\t\t\"傘\": {\n\t\t\t\"jp\": \"傘\",\n\t\t\t\"zht\": \"傘\",\n\t\t\t\"zhs\": \"伞\"\n\t\t},\n\t\t\"偉\": {\n\t\t\t\"jp\": \"偉\",\n\t\t\t\"zht\": \"偉\",\n\t\t\t\"zhs\": \"伟\"\n\t\t},\n\t\t\"傷\": {\n\t\t\t\"jp\": \"傷\",\n\t\t\t\"zht\": \"傷\",\n\t\t\t\"zhs\": \"伤\"\n\t\t},\n\t\t\"倫\": {\n\t\t\t\"jp\": \"倫\",\n\t\t\t\"zht\": \"倫\",\n\t\t\t\"zhs\": \"伦\"\n\t\t},\n\t\t\"偽\": {\n\t\t\t\"jp\": \"偽\",\n\t\t\t\"zht\": \"偽\",\n\t\t\t\"zhs\": \"伪\"\n\t\t},\n\t\t\"体\": {\n\t\t\t\"jp\": \"体\",\n\t\t\t\"zht\": \"體\",\n\t\t\t\"zhs\": \"体\"\n\t\t},\n\t\t\"余\": {\n\t\t\t\"jp\": \"余\",\n\t\t\t\"zht\": \"餘\",\n\t\t\t\"zhs\": \"余\"\n\t\t},\n\t\t\"来\": {\n\t\t\t\"jp\": \"来\",\n\t\t\t\"zht\": \"來\",\n\t\t\t\"zhs\": \"来\"\n\t\t},\n\t\t\"偵\": {\n\t\t\t\"jp\": \"偵\",\n\t\t\t\"zht\": \"偵\",\n\t\t\t\"zhs\": \"侦\"\n\t\t},\n\t\t\"側\": {\n\t\t\t\"jp\": \"側\",\n\t\t\t\"zht\": \"側\",\n\t\t\t\"zhs\": \"侧\"\n\t\t},\n\t\t\"倹\": {\n\t\t\t\"jp\": \"倹\",\n\t\t\t\"zht\": \"儉\",\n\t\t\t\"zhs\": \"俭\"\n\t\t},\n\t\t\"倶\": {\n\t\t\t\"jp\": \"倶\",\n\t\t\t\"zht\": \"俱\",\n\t\t\t\"zhs\": \"俱\"\n\t\t},\n\t\t\"債\": {\n\t\t\t\"jp\": \"債\",\n\t\t\t\"zht\": \"債\",\n\t\t\t\"zhs\": \"债\"\n\t\t},\n\t\t\"傾\": {\n\t\t\t\"jp\": \"傾\",\n\t\t\t\"zht\": \"傾\",\n\t\t\t\"zhs\": \"倾\"\n\t\t},\n\t\t\"償\": {\n\t\t\t\"jp\": \"償\",\n\t\t\t\"zht\": \"償\",\n\t\t\t\"zhs\": \"偿\"\n\t\t},\n\t\t\"傑\": {\n\t\t\t\"jp\": \"傑\",\n\t\t\t\"zht\": \"傑\",\n\t\t\t\"zhs\": \"杰\"\n\t\t},\n\t\t\"備\": {\n\t\t\t\"jp\": \"備\",\n\t\t\t\"zht\": \"備\",\n\t\t\t\"zhs\": \"备\"\n\t\t},\n\t\t\"当\": {\n\t\t\t\"jp\": \"当\",\n\t\t\t\"zht\": \"當\",\n\t\t\t\"zhs\": \"当\"\n\t\t},\n\t\t\"尽\": {\n\t\t\t\"jp\": \"尽\",\n\t\t\t\"zht\": \"盡\",\n\t\t\t\"zhs\": \"尽\"\n\t\t},\n\t\t\"児\": {\n\t\t\t\"jp\": \"児\",\n\t\t\t\"zht\": \"兒\",\n\t\t\t\"zhs\": \"儿\"\n\t\t},\n\t\t\"党\": {\n\t\t\t\"jp\": \"党\",\n\t\t\t\"zht\": \"黨\",\n\t\t\t\"zhs\": \"党\"\n\t\t},\n\t\t\"内\": {\n\t\t\t\"jp\": \"内\",\n\t\t\t\"zht\": \"內\",\n\t\t\t\"zhs\": \"内\"\n\t\t},\n\t\t\"関\": {\n\t\t\t\"jp\": \"関\",\n\t\t\t\"zht\": \"關\",\n\t\t\t\"zhs\": \"关\"\n\t\t},\n\t\t\"興\": {\n\t\t\t\"jp\": \"興\",\n\t\t\t\"zht\": \"興\",\n\t\t\t\"zhs\": \"兴\"\n\t\t},\n\t\t\"養\": {\n\t\t\t\"jp\": \"養\",\n\t\t\t\"zht\": \"養\",\n\t\t\t\"zhs\": \"养\"\n\t\t},\n\t\t\"獣\": {\n\t\t\t\"jp\": \"獣\",\n\t\t\t\"zht\": \"獸\",\n\t\t\t\"zhs\": \"兽\"\n\t\t},\n\t\t\"円\": {\n\t\t\t\"jp\": \"円\",\n\t\t\t\"zht\": \"圓\",\n\t\t\t\"zhs\": \"圆\"\n\t\t},\n\t\t\"写\": {\n\t\t\t\"jp\": \"写\",\n\t\t\t\"zht\": \"寫\",\n\t\t\t\"zhs\": \"写\"\n\t\t},\n\t\t\"軍\": {\n\t\t\t\"jp\": \"軍\",\n\t\t\t\"zht\": \"軍\",\n\t\t\t\"zhs\": \"军\"\n\t\t},\n\t\t\"農\": {\n\t\t\t\"jp\": \"農\",\n\t\t\t\"zht\": \"農\",\n\t\t\t\"zhs\": \"农\"\n\t\t},\n\t\t\"冨\": {\n\t\t\t\"jp\": \"冨\",\n\t\t\t\"zht\": \"富\",\n\t\t\t\"zhs\": \"富\"\n\t\t},\n\t\t\"氷\": {\n\t\t\t\"jp\": \"氷\",\n\t\t\t\"zht\": \"冰\",\n\t\t\t\"zhs\": \"冰\"\n\t\t},\n\t\t\"衝\": {\n\t\t\t\"jp\": \"衝\",\n\t\t\t\"zht\": \"衝\",\n\t\t\t\"zhs\": \"冲\"\n\t\t},\n\t\t\"決\": {\n\t\t\t\"jp\": \"決\",\n\t\t\t\"zht\": \"決\",\n\t\t\t\"zhs\": \"决\"\n\t\t},\n\t\t\"凍\": {\n\t\t\t\"jp\": \"凍\",\n\t\t\t\"zht\": \"凍\",\n\t\t\t\"zhs\": \"冻\"\n\t\t},\n\t\t\"塗\": {\n\t\t\t\"jp\": \"塗\",\n\t\t\t\"zht\": \"塗\",\n\t\t\t\"zhs\": \"涂\"\n\t\t},\n\t\t\"幾\": {\n\t\t\t\"jp\": \"幾\",\n\t\t\t\"zht\": \"幾\",\n\t\t\t\"zhs\": \"几\"\n\t\t},\n\t\t\"撃\": {\n\t\t\t\"jp\": \"撃\",\n\t\t\t\"zht\": \"擊\",\n\t\t\t\"zhs\": \"击\"\n\t\t},\n\t\t\"画\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"劃\",\n\t\t\t\"zhs\": \"划\"\n\t\t},\n\t\t\"則\": {\n\t\t\t\"jp\": \"則\",\n\t\t\t\"zht\": \"則\",\n\t\t\t\"zhs\": \"则\"\n\t\t},\n\t\t\"剛\": {\n\t\t\t\"jp\": \"剛\",\n\t\t\t\"zht\": \"剛\",\n\t\t\t\"zhs\": \"刚\"\n\t\t},\n\t\t\"創\": {\n\t\t\t\"jp\": \"創\",\n\t\t\t\"zht\": \"創\",\n\t\t\t\"zhs\": \"创\"\n\t\t},\n\t\t\"別\": {\n\t\t\t\"jp\": \"別\",\n\t\t\t\"zht\": \"別\",\n\t\t\t\"zhs\": \"别\"\n\t\t},\n\t\t\"製\": {\n\t\t\t\"jp\": \"製\",\n\t\t\t\"zht\": \"製\",\n\t\t\t\"zhs\": \"制\"\n\t\t},\n\t\t\"巻\": {\n\t\t\t\"jp\": \"巻\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"刹\": {\n\t\t\t\"jp\": \"刹\",\n\t\t\t\"zht\": \"剎\",\n\t\t\t\"zhs\": \"刹\"\n\t\t},\n\t\t\"剤\": {\n\t\t\t\"jp\": \"剤\",\n\t\t\t\"zht\": \"劑\",\n\t\t\t\"zhs\": \"剂\"\n\t\t},\n\t\t\"剣\": {\n\t\t\t\"jp\": \"剣\",\n\t\t\t\"zht\": \"劍\",\n\t\t\t\"zhs\": \"剑\"\n\t\t},\n\t\t\"劇\": {\n\t\t\t\"jp\": \"劇\",\n\t\t\t\"zht\": \"劇\",\n\t\t\t\"zhs\": \"剧\"\n\t\t},\n\t\t\"剰\": {\n\t\t\t\"jp\": \"剰\",\n\t\t\t\"zht\": \"剩\",\n\t\t\t\"zhs\": \"剩\"\n\t\t},\n\t\t\"勧\": {\n\t\t\t\"jp\": \"勧\",\n\t\t\t\"zht\": \"勸\",\n\t\t\t\"zhs\": \"劝\"\n\t\t},\n\t\t\"務\": {\n\t\t\t\"jp\": \"務\",\n\t\t\t\"zht\": \"務\",\n\t\t\t\"zhs\": \"务\"\n\t\t},\n\t\t\"動\": {\n\t\t\t\"jp\": \"動\",\n\t\t\t\"zht\": \"動\",\n\t\t\t\"zhs\": \"动\"\n\t\t},\n\t\t\"励\": {\n\t\t\t\"jp\": \"励\",\n\t\t\t\"zht\": \"勵\",\n\t\t\t\"zhs\": \"励\"\n\t\t},\n\t\t\"労\": {\n\t\t\t\"jp\": \"労\",\n\t\t\t\"zht\": \"勞\",\n\t\t\t\"zhs\": \"劳\"\n\t\t},\n\t\t\"勢\": {\n\t\t\t\"jp\": \"勢\",\n\t\t\t\"zht\": \"勢\",\n\t\t\t\"zhs\": \"势\"\n\t\t},\n\t\t\"勲\": {\n\t\t\t\"jp\": \"勲\",\n\t\t\t\"zht\": \"勳\",\n\t\t\t\"zhs\": \"勋\"\n\t\t},\n\t\t\"勝\": {\n\t\t\t\"jp\": \"勝\",\n\t\t\t\"zht\": \"勝\",\n\t\t\t\"zhs\": \"胜\"\n\t\t},\n\t\t\"区\": {\n\t\t\t\"jp\": \"区\",\n\t\t\t\"zht\": \"區\",\n\t\t\t\"zhs\": \"区\"\n\t\t},\n\t\t\"医\": {\n\t\t\t\"jp\": \"医\",\n\t\t\t\"zht\": \"醫\",\n\t\t\t\"zhs\": \"医\"\n\t\t},\n\t\t\"華\": {\n\t\t\t\"jp\": \"華\",\n\t\t\t\"zht\": \"華\",\n\t\t\t\"zhs\": \"华\"\n\t\t},\n\t\t\"協\": {\n\t\t\t\"jp\": \"協\",\n\t\t\t\"zht\": \"協\",\n\t\t\t\"zhs\": \"协\"\n\t\t},\n\t\t\"単\": {\n\t\t\t\"jp\": \"単\",\n\t\t\t\"zht\": \"單\",\n\t\t\t\"zhs\": \"单\"\n\t\t},\n\t\t\"売\": {\n\t\t\t\"jp\": \"売\",\n\t\t\t\"zht\": \"賣\",\n\t\t\t\"zhs\": \"卖\"\n\t\t},\n\t\t\"衛\": {\n\t\t\t\"jp\": \"衛\",\n\t\t\t\"zht\": \"衛\",\n\t\t\t\"zhs\": \"卫\"\n\t\t},\n\t\t\"庁\": {\n\t\t\t\"jp\": \"庁\",\n\t\t\t\"zht\": \"廳\",\n\t\t\t\"zhs\": \"厅\"\n\t\t},\n\t\t\"圧\": {\n\t\t\t\"jp\": \"圧\",\n\t\t\t\"zht\": \"壓\",\n\t\t\t\"zhs\": \"压\"\n\t\t},\n\t\t\"県\": {\n\t\t\t\"jp\": \"県\",\n\t\t\t\"zht\": \"縣\",\n\t\t\t\"zhs\": \"县\"\n\t\t},\n\t\t\"参\": {\n\t\t\t\"jp\": \"参\",\n\t\t\t\"zht\": \"參\",\n\t\t\t\"zhs\": \"参\"\n\t\t},\n\t\t\"双\": {\n\t\t\t\"jp\": \"双\",\n\t\t\t\"zht\": \"雙\",\n\t\t\t\"zhs\": \"双\"\n\t\t},\n\t\t\"収\": {\n\t\t\t\"jp\": \"収\",\n\t\t\t\"zht\": \"收\",\n\t\t\t\"zhs\": \"收\"\n\t\t},\n\t\t\"発\": {\n\t\t\t\"jp\": \"発\",\n\t\t\t\"zht\": \"發\",\n\t\t\t\"zhs\": \"发\"\n\t\t},\n\t\t\"変\": {\n\t\t\t\"jp\": \"変\",\n\t\t\t\"zht\": \"變\",\n\t\t\t\"zhs\": \"变\"\n\t\t},\n\t\t\"畳\": {\n\t\t\t\"jp\": \"畳\",\n\t\t\t\"zht\": \"疊\",\n\t\t\t\"zhs\": \"叠\"\n\t\t},\n\t\t\"号\": {\n\t\t\t\"jp\": \"号\",\n\t\t\t\"zht\": \"號\",\n\t\t\t\"zhs\": \"号\"\n\t\t},\n\t\t\"嘆\": {\n\t\t\t\"jp\": \"嘆\",\n\t\t\t\"zht\": \"嘆\",\n\t\t\t\"zhs\": \"叹\"\n\t\t},\n\t\t\"嚇\": {\n\t\t\t\"jp\": \"嚇\",\n\t\t\t\"zht\": \"嚇\",\n\t\t\t\"zhs\": \"吓\"\n\t\t},\n\t\t\"聴\": {\n\t\t\t\"jp\": \"聴\",\n\t\t\t\"zht\": \"聽\",\n\t\t\t\"zhs\": \"听\"\n\t\t},\n\t\t\"啓\": {\n\t\t\t\"jp\": \"啓\",\n\t\t\t\"zht\": \"啟\",\n\t\t\t\"zhs\": \"启\"\n\t\t},\n\t\t\"員\": {\n\t\t\t\"jp\": \"員\",\n\t\t\t\"zht\": \"員\",\n\t\t\t\"zhs\": \"员\"\n\t\t},\n\t\t\"諮\": {\n\t\t\t\"jp\": \"諮\",\n\t\t\t\"zht\": \"諮\",\n\t\t\t\"zhs\": \"谘\"\n\t\t},\n\t\t\"鹹\": {\n\t\t\t\"jp\": \"鹹\",\n\t\t\t\"zht\": \"鹹\",\n\t\t\t\"zhs\": \"咸\"\n\t\t},\n\t\t\"響\": {\n\t\t\t\"jp\": \"響\",\n\t\t\t\"zht\": \"響\",\n\t\t\t\"zhs\": \"响\"\n\t\t},\n\t\t\"問\": {\n\t\t\t\"jp\": \"問\",\n\t\t\t\"zht\": \"問\",\n\t\t\t\"zhs\": \"问\"\n\t\t},\n\t\t\"営\": {\n\t\t\t\"jp\": \"営\",\n\t\t\t\"zht\": \"營\",\n\t\t\t\"zhs\": \"营\"\n\t\t},\n\t\t\"噴\": {\n\t\t\t\"jp\": \"噴\",\n\t\t\t\"zht\": \"噴\",\n\t\t\t\"zhs\": \"喷\"\n\t\t},\n\t\t\"嘱\": {\n\t\t\t\"jp\": \"嘱\",\n\t\t\t\"zht\": \"囑\",\n\t\t\t\"zhs\": \"嘱\"\n\t\t},\n\t\t\"蘇\": {\n\t\t\t\"jp\": \"蘇\",\n\t\t\t\"zht\": \"蘇\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"団\": {\n\t\t\t\"jp\": \"団\",\n\t\t\t\"zht\": \"團\",\n\t\t\t\"zhs\": \"团\"\n\t\t},\n\t\t\"園\": {\n\t\t\t\"jp\": \"園\",\n\t\t\t\"zht\": \"園\",\n\t\t\t\"zhs\": \"园\"\n\t\t},\n\t\t\"国\": {\n\t\t\t\"jp\": \"国\",\n\t\t\t\"zht\": \"國\",\n\t\t\t\"zhs\": \"国\"\n\t\t},\n\t\t\"囲\": {\n\t\t\t\"jp\": \"囲\",\n\t\t\t\"zht\": \"圍\",\n\t\t\t\"zhs\": \"围\"\n\t\t},\n\t\t\"図\": {\n\t\t\t\"jp\": \"図\",\n\t\t\t\"zht\": \"圖\",\n\t\t\t\"zhs\": \"图\"\n\t\t},\n\t\t\"圏\": {\n\t\t\t\"jp\": \"圏\",\n\t\t\t\"zht\": \"圈\",\n\t\t\t\"zhs\": \"圈\"\n\t\t},\n\t\t\"聖\": {\n\t\t\t\"jp\": \"聖\",\n\t\t\t\"zht\": \"聖\",\n\t\t\t\"zhs\": \"圣\"\n\t\t},\n\t\t\"場\": {\n\t\t\t\"jp\": \"場\",\n\t\t\t\"zht\": \"場\",\n\t\t\t\"zhs\": \"场\"\n\t\t},\n\t\t\"壊\": {\n\t\t\t\"jp\": \"壊\",\n\t\t\t\"zht\": \"壞\",\n\t\t\t\"zhs\": \"坏\"\n\t\t},\n\t\t\"塊\": {\n\t\t\t\"jp\": \"塊\",\n\t\t\t\"zht\": \"塊\",\n\t\t\t\"zhs\": \"块\"\n\t\t},\n\t\t\"堅\": {\n\t\t\t\"jp\": \"堅\",\n\t\t\t\"zht\": \"堅\",\n\t\t\t\"zhs\": \"坚\"\n\t\t},\n\t\t\"壇\": {\n\t\t\t\"jp\": \"壇\",\n\t\t\t\"zht\": \"壇\",\n\t\t\t\"zhs\": \"坛\"\n\t\t},\n\t\t\"墳\": {\n\t\t\t\"jp\": \"墳\",\n\t\t\t\"zht\": \"墳\",\n\t\t\t\"zhs\": \"坟\"\n\t\t},\n\t\t\"墜\": {\n\t\t\t\"jp\": \"墜\",\n\t\t\t\"zht\": \"墜\",\n\t\t\t\"zhs\": \"坠\"\n\t\t},\n\t\t\"塁\": {\n\t\t\t\"jp\": \"塁\",\n\t\t\t\"zht\": \"壘\",\n\t\t\t\"zhs\": \"垒\"\n\t\t},\n\t\t\"墾\": {\n\t\t\t\"jp\": \"墾\",\n\t\t\t\"zht\": \"墾\",\n\t\t\t\"zhs\": \"垦\"\n\t\t},\n\t\t\"執\": {\n\t\t\t\"jp\": \"執\",\n\t\t\t\"zht\": \"執\",\n\t\t\t\"zhs\": \"执\"\n\t\t},\n\t\t\"堕\": {\n\t\t\t\"jp\": \"堕\",\n\t\t\t\"zht\": \"墮\",\n\t\t\t\"zhs\": \"堕\"\n\t\t},\n\t\t\"報\": {\n\t\t\t\"jp\": \"報\",\n\t\t\t\"zht\": \"報\",\n\t\t\t\"zhs\": \"报\"\n\t\t},\n\t\t\"塩\": {\n\t\t\t\"jp\": \"塩\",\n\t\t\t\"zht\": \"鹽\",\n\t\t\t\"zhs\": \"盐\"\n\t\t},\n\t\t\"増\": {\n\t\t\t\"jp\": \"増\",\n\t\t\t\"zht\": \"增\",\n\t\t\t\"zhs\": \"增\"\n\t\t},\n\t\t\"壌\": {\n\t\t\t\"jp\": \"壌\",\n\t\t\t\"zht\": \"壤\",\n\t\t\t\"zhs\": \"壤\"\n\t\t},\n\t\t\"壮\": {\n\t\t\t\"jp\": \"壮\",\n\t\t\t\"zht\": \"壯\",\n\t\t\t\"zhs\": \"壮\"\n\t\t},\n\t\t\"声\": {\n\t\t\t\"jp\": \"声\",\n\t\t\t\"zht\": \"聲\",\n\t\t\t\"zhs\": \"声\"\n\t\t},\n\t\t\"壱\": {\n\t\t\t\"jp\": \"壱\",\n\t\t\t\"zht\": \"壹\",\n\t\t\t\"zhs\": \"壹\"\n\t\t},\n\t\t\"寿\": {\n\t\t\t\"jp\": \"寿\",\n\t\t\t\"zht\": \"壽\",\n\t\t\t\"zhs\": \"寿\"\n\t\t},\n\t\t\"夢\": {\n\t\t\t\"jp\": \"夢\",\n\t\t\t\"zht\": \"夢\",\n\t\t\t\"zhs\": \"梦\"\n\t\t},\n\t\t\"頭\": {\n\t\t\t\"jp\": \"頭\",\n\t\t\t\"zht\": \"頭\",\n\t\t\t\"zhs\": \"头\"\n\t\t},\n\t\t\"誇\": {\n\t\t\t\"jp\": \"誇\",\n\t\t\t\"zht\": \"誇\",\n\t\t\t\"zhs\": \"夸\"\n\t\t},\n\t\t\"奪\": {\n\t\t\t\"jp\": \"奪\",\n\t\t\t\"zht\": \"奪\",\n\t\t\t\"zhs\": \"夺\"\n\t\t},\n\t\t\"奮\": {\n\t\t\t\"jp\": \"奮\",\n\t\t\t\"zht\": \"奮\",\n\t\t\t\"zhs\": \"奋\"\n\t\t},\n\t\t\"奨\": {\n\t\t\t\"jp\": \"奨\",\n\t\t\t\"zht\": \"獎\",\n\t\t\t\"zhs\": \"奖\"\n\t\t},\n\t\t\"粧\": {\n\t\t\t\"jp\": \"粧\",\n\t\t\t\"zht\": \"妝\",\n\t\t\t\"zhs\": \"妆\"\n\t\t},\n\t\t\"婦\": {\n\t\t\t\"jp\": \"婦\",\n\t\t\t\"zht\": \"婦\",\n\t\t\t\"zhs\": \"妇\"\n\t\t},\n\t\t\"姉\": {\n\t\t\t\"jp\": \"姉\",\n\t\t\t\"zht\": \"姐\",\n\t\t\t\"zhs\": \"姐\"\n\t\t},\n\t\t\"姫\": {\n\t\t\t\"jp\": \"姫\",\n\t\t\t\"zht\": \"姬\",\n\t\t\t\"zhs\": \"姬\"\n\t\t},\n\t\t\"嬢\": {\n\t\t\t\"jp\": \"嬢\",\n\t\t\t\"zht\": \"孃\",\n\t\t\t\"zhs\": \"娘\"\n\t\t},\n\t\t\"娯\": {\n\t\t\t\"jp\": \"娯\",\n\t\t\t\"zht\": \"娛\",\n\t\t\t\"zhs\": \"娱\"\n\t\t},\n\t\t\"孫\": {\n\t\t\t\"jp\": \"孫\",\n\t\t\t\"zht\": \"孫\",\n\t\t\t\"zhs\": \"孙\"\n\t\t},\n\t\t\"学\": {\n\t\t\t\"jp\": \"学\",\n\t\t\t\"zht\": \"學\",\n\t\t\t\"zhs\": \"学\"\n\t\t},\n\t\t\"寧\": {\n\t\t\t\"jp\": \"寧\",\n\t\t\t\"zht\": \"寧\",\n\t\t\t\"zhs\": \"宁\"\n\t\t},\n\t\t\"宝\": {\n\t\t\t\"jp\": \"宝\",\n\t\t\t\"zht\": \"寶\",\n\t\t\t\"zhs\": \"宝\"\n\t\t},\n\t\t\"実\": {\n\t\t\t\"jp\": \"実\",\n\t\t\t\"zht\": \"實\",\n\t\t\t\"zhs\": \"实\"\n\t\t},\n\t\t\"審\": {\n\t\t\t\"jp\": \"審\",\n\t\t\t\"zht\": \"審\",\n\t\t\t\"zhs\": \"审\"\n\t\t},\n\t\t\"憲\": {\n\t\t\t\"jp\": \"憲\",\n\t\t\t\"zht\": \"憲\",\n\t\t\t\"zhs\": \"宪\"\n\t\t},\n\t\t\"宮\": {\n\t\t\t\"jp\": \"宮\",\n\t\t\t\"zht\": \"宮\",\n\t\t\t\"zhs\": \"宫\"\n\t\t},\n\t\t\"賓\": {\n\t\t\t\"jp\": \"賓\",\n\t\t\t\"zht\": \"賓\",\n\t\t\t\"zhs\": \"宾\"\n\t\t},\n\t\t\"秘\": {\n\t\t\t\"jp\": \"秘\",\n\t\t\t\"zht\": \"祕\",\n\t\t\t\"zhs\": \"秘\"\n\t\t},\n\t\t\"寝\": {\n\t\t\t\"jp\": \"寝\",\n\t\t\t\"zht\": \"寢\",\n\t\t\t\"zhs\": \"寝\"\n\t\t},\n\t\t\"対\": {\n\t\t\t\"jp\": \"対\",\n\t\t\t\"zht\": \"對\",\n\t\t\t\"zhs\": \"对\"\n\t\t},\n\t\t\"尋\": {\n\t\t\t\"jp\": \"尋\",\n\t\t\t\"zht\": \"尋\",\n\t\t\t\"zhs\": \"寻\"\n\t\t},\n\t\t\"導\": {\n\t\t\t\"jp\": \"導\",\n\t\t\t\"zht\": \"導\",\n\t\t\t\"zhs\": \"导\"\n\t\t},\n\t\t\"将\": {\n\t\t\t\"jp\": \"将\",\n\t\t\t\"zht\": \"將\",\n\t\t\t\"zhs\": \"将\"\n\t\t},\n\t\t\"層\": {\n\t\t\t\"jp\": \"層\",\n\t\t\t\"zht\": \"層\",\n\t\t\t\"zhs\": \"层\"\n\t\t},\n\t\t\"属\": {\n\t\t\t\"jp\": \"属\",\n\t\t\t\"zht\": \"屬\",\n\t\t\t\"zhs\": \"属\"\n\t\t},\n\t\t\"歳\": {\n\t\t\t\"jp\": \"歳\",\n\t\t\t\"zht\": \"歲\",\n\t\t\t\"zhs\": \"岁\"\n\t\t},\n\t\t\"島\": {\n\t\t\t\"jp\": \"島\",\n\t\t\t\"zht\": \"島\",\n\t\t\t\"zhs\": \"岛\"\n\t\t},\n\t\t\"巌\": {\n\t\t\t\"jp\": \"巌\",\n\t\t\t\"zht\": \"巖\",\n\t\t\t\"zhs\": \"巖\"\n\t\t},\n\t\t\"峡\": {\n\t\t\t\"jp\": \"峡\",\n\t\t\t\"zht\": \"峽\",\n\t\t\t\"zhs\": \"峡\"\n\t\t},\n\t\t\"険\": {\n\t\t\t\"jp\": \"険\",\n\t\t\t\"zht\": \"險\",\n\t\t\t\"zhs\": \"险\"\n\t\t},\n\t\t\"幣\": {\n\t\t\t\"jp\": \"幣\",\n\t\t\t\"zht\": \"幣\",\n\t\t\t\"zhs\": \"币\"\n\t\t},\n\t\t\"帥\": {\n\t\t\t\"jp\": \"帥\",\n\t\t\t\"zht\": \"帥\",\n\t\t\t\"zhs\": \"帅\"\n\t\t},\n\t\t\"師\": {\n\t\t\t\"jp\": \"師\",\n\t\t\t\"zht\": \"師\",\n\t\t\t\"zhs\": \"师\"\n\t\t},\n\t\t\"帳\": {\n\t\t\t\"jp\": \"帳\",\n\t\t\t\"zht\": \"帳\",\n\t\t\t\"zhs\": \"帐\"\n\t\t},\n\t\t\"帰\": {\n\t\t\t\"jp\": \"帰\",\n\t\t\t\"zht\": \"歸\",\n\t\t\t\"zhs\": \"归\"\n\t\t},\n\t\t\"広\": {\n\t\t\t\"jp\": \"広\",\n\t\t\t\"zht\": \"廣\",\n\t\t\t\"zhs\": \"广\"\n\t\t},\n\t\t\"慶\": {\n\t\t\t\"jp\": \"慶\",\n\t\t\t\"zht\": \"慶\",\n\t\t\t\"zhs\": \"庆\"\n\t\t},\n\t\t\"庫\": {\n\t\t\t\"jp\": \"庫\",\n\t\t\t\"zht\": \"庫\",\n\t\t\t\"zhs\": \"库\"\n\t\t},\n\t\t\"応\": {\n\t\t\t\"jp\": \"応\",\n\t\t\t\"zht\": \"應\",\n\t\t\t\"zhs\": \"应\"\n\t\t},\n\t\t\"廃\": {\n\t\t\t\"jp\": \"廃\",\n\t\t\t\"zht\": \"廢\",\n\t\t\t\"zhs\": \"废\"\n\t\t},\n\t\t\"開\": {\n\t\t\t\"jp\": \"開\",\n\t\t\t\"zht\": \"開\",\n\t\t\t\"zhs\": \"开\"\n\t\t},\n\t\t\"弁\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"異\": {\n\t\t\t\"jp\": \"異\",\n\t\t\t\"zht\": \"異\",\n\t\t\t\"zhs\": \"异\"\n\t\t},\n\t\t\"棄\": {\n\t\t\t\"jp\": \"棄\",\n\t\t\t\"zht\": \"棄\",\n\t\t\t\"zhs\": \"弃\"\n\t\t},\n\t\t\"張\": {\n\t\t\t\"jp\": \"張\",\n\t\t\t\"zht\": \"張\",\n\t\t\t\"zhs\": \"张\"\n\t\t},\n\t\t\"弥\": {\n\t\t\t\"jp\": \"弥\",\n\t\t\t\"zht\": \"彌\",\n\t\t\t\"zhs\": \"弥\"\n\t\t},\n\t\t\"強\": {\n\t\t\t\"jp\": \"強\",\n\t\t\t\"zht\": \"強\",\n\t\t\t\"zhs\": \"强\"\n\t\t},\n\t\t\"弾\": {\n\t\t\t\"jp\": \"弾\",\n\t\t\t\"zht\": \"彈\",\n\t\t\t\"zhs\": \"弹\"\n\t\t},\n\t\t\"録\": {\n\t\t\t\"jp\": \"録\",\n\t\t\t\"zht\": \"錄\",\n\t\t\t\"zhs\": \"录\"\n\t\t},\n\t\t\"彦\": {\n\t\t\t\"jp\": \"彦\",\n\t\t\t\"zht\": \"彥\",\n\t\t\t\"zhs\": \"彥\"\n\t\t},\n\t\t\"徹\": {\n\t\t\t\"jp\": \"徹\",\n\t\t\t\"zht\": \"徹\",\n\t\t\t\"zhs\": \"彻\"\n\t\t},\n\t\t\"徴\": {\n\t\t\t\"jp\": \"徴\",\n\t\t\t\"zht\": \"徵\",\n\t\t\t\"zhs\": \"征\"\n\t\t},\n\t\t\"径\": {\n\t\t\t\"jp\": \"径\",\n\t\t\t\"zht\": \"徑\",\n\t\t\t\"zhs\": \"径\"\n\t\t},\n\t\t\"徳\": {\n\t\t\t\"jp\": \"徳\",\n\t\t\t\"zht\": \"德\",\n\t\t\t\"zhs\": \"德\"\n\t\t},\n\t\t\"憶\": {\n\t\t\t\"jp\": \"憶\",\n\t\t\t\"zht\": \"憶\",\n\t\t\t\"zhs\": \"忆\"\n\t\t},\n\t\t\"誌\": {\n\t\t\t\"jp\": \"誌\",\n\t\t\t\"zht\": \"誌\",\n\t\t\t\"zhs\": \"志\"\n\t\t},\n\t\t\"憂\": {\n\t\t\t\"jp\": \"憂\",\n\t\t\t\"zht\": \"憂\",\n\t\t\t\"zhs\": \"忧\"\n\t\t},\n\t\t\"懐\": {\n\t\t\t\"jp\": \"懐\",\n\t\t\t\"zht\": \"懷\",\n\t\t\t\"zhs\": \"怀\"\n\t\t},\n\t\t\"態\": {\n\t\t\t\"jp\": \"態\",\n\t\t\t\"zht\": \"態\",\n\t\t\t\"zhs\": \"态\"\n\t\t},\n\t\t\"総\": {\n\t\t\t\"jp\": \"総\",\n\t\t\t\"zht\": \"總\",\n\t\t\t\"zhs\": \"总\"\n\t\t},\n\t\t\"恒\": {\n\t\t\t\"jp\": \"恒\",\n\t\t\t\"zht\": \"恆\",\n\t\t\t\"zhs\": \"恒\"\n\t\t},\n\t\t\"恋\": {\n\t\t\t\"jp\": \"恋\",\n\t\t\t\"zht\": \"戀\",\n\t\t\t\"zhs\": \"恋\"\n\t\t},\n\t\t\"懇\": {\n\t\t\t\"jp\": \"懇\",\n\t\t\t\"zht\": \"懇\",\n\t\t\t\"zhs\": \"恳\"\n\t\t},\n\t\t\"恵\": {\n\t\t\t\"jp\": \"恵\",\n\t\t\t\"zht\": \"惠\",\n\t\t\t\"zhs\": \"惠\"\n\t\t},\n\t\t\"悪\": {\n\t\t\t\"jp\": \"悪\",\n\t\t\t\"zht\": \"惡\",\n\t\t\t\"zhs\": \"恶\"\n\t\t},\n\t\t\"悩\": {\n\t\t\t\"jp\": \"悩\",\n\t\t\t\"zht\": \"惱\",\n\t\t\t\"zhs\": \"恼\"\n\t\t},\n\t\t\"悦\": {\n\t\t\t\"jp\": \"悦\",\n\t\t\t\"zht\": \"悅\",\n\t\t\t\"zhs\": \"悅\"\n\t\t},\n\t\t\"懸\": {\n\t\t\t\"jp\": \"懸\",\n\t\t\t\"zht\": \"懸\",\n\t\t\t\"zhs\": \"悬\"\n\t\t},\n\t\t\"驚\": {\n\t\t\t\"jp\": \"驚\",\n\t\t\t\"zht\": \"驚\",\n\t\t\t\"zhs\": \"惊\"\n\t\t},\n\t\t\"惨\": {\n\t\t\t\"jp\": \"惨\",\n\t\t\t\"zht\": \"慘\",\n\t\t\t\"zhs\": \"惨\"\n\t\t},\n\t\t\"懲\": {\n\t\t\t\"jp\": \"懲\",\n\t\t\t\"zht\": \"懲\",\n\t\t\t\"zhs\": \"惩\"\n\t\t},\n\t\t\"愛\": {\n\t\t\t\"jp\": \"愛\",\n\t\t\t\"zht\": \"愛\",\n\t\t\t\"zhs\": \"爱\"\n\t\t},\n\t\t\"憤\": {\n\t\t\t\"jp\": \"憤\",\n\t\t\t\"zht\": \"憤\",\n\t\t\t\"zhs\": \"愤\"\n\t\t},\n\t\t\"願\": {\n\t\t\t\"jp\": \"願\",\n\t\t\t\"zht\": \"願\",\n\t\t\t\"zhs\": \"愿\"\n\t\t},\n\t\t\"慮\": {\n\t\t\t\"jp\": \"慮\",\n\t\t\t\"zht\": \"慮\",\n\t\t\t\"zhs\": \"虑\"\n\t\t},\n\t\t\"戯\": {\n\t\t\t\"jp\": \"戯\",\n\t\t\t\"zht\": \"戲\",\n\t\t\t\"zhs\": \"戏\"\n\t\t},\n\t\t\"戦\": {\n\t\t\t\"jp\": \"戦\",\n\t\t\t\"zht\": \"戰\",\n\t\t\t\"zhs\": \"战\"\n\t\t},\n\t\t\"戸\": {\n\t\t\t\"jp\": \"戸\",\n\t\t\t\"zht\": \"戶\",\n\t\t\t\"zhs\": \"户\"\n\t\t},\n\t\t\"払\": {\n\t\t\t\"jp\": \"払\",\n\t\t\t\"zht\": \"拂\",\n\t\t\t\"zhs\": \"拂\"\n\t\t},\n\t\t\"拡\": {\n\t\t\t\"jp\": \"拡\",\n\t\t\t\"zht\": \"擴\",\n\t\t\t\"zhs\": \"扩\"\n\t\t},\n\t\t\"掃\": {\n\t\t\t\"jp\": \"掃\",\n\t\t\t\"zht\": \"掃\",\n\t\t\t\"zhs\": \"扫\"\n\t\t},\n\t\t\"揚\": {\n\t\t\t\"jp\": \"揚\",\n\t\t\t\"zht\": \"揚\",\n\t\t\t\"zhs\": \"扬\"\n\t\t},\n\t\t\"択\": {\n\t\t\t\"jp\": \"択\",\n\t\t\t\"zht\": \"擇\",\n\t\t\t\"zhs\": \"择\"\n\t\t},\n\t\t\"護\": {\n\t\t\t\"jp\": \"護\",\n\t\t\t\"zht\": \"護\",\n\t\t\t\"zhs\": \"护\"\n\t\t},\n\t\t\"担\": {\n\t\t\t\"jp\": \"担\",\n\t\t\t\"zht\": \"擔\",\n\t\t\t\"zhs\": \"担\"\n\t\t},\n\t\t\"拝\": {\n\t\t\t\"jp\": \"拝\",\n\t\t\t\"zht\": \"拜\",\n\t\t\t\"zhs\": \"拜\"\n\t\t},\n\t\t\"擬\": {\n\t\t\t\"jp\": \"擬\",\n\t\t\t\"zht\": \"擬\",\n\t\t\t\"zhs\": \"拟\"\n\t\t},\n\t\t\"拠\": {\n\t\t\t\"jp\": \"拠\",\n\t\t\t\"zht\": \"據\",\n\t\t\t\"zhs\": \"据\"\n\t\t},\n\t\t\"擁\": {\n\t\t\t\"jp\": \"擁\",\n\t\t\t\"zht\": \"擁\",\n\t\t\t\"zhs\": \"拥\"\n\t\t},\n\t\t\"挟\": {\n\t\t\t\"jp\": \"挟\",\n\t\t\t\"zht\": \"挾\",\n\t\t\t\"zhs\": \"挟\"\n\t\t},\n\t\t\"揮\": {\n\t\t\t\"jp\": \"揮\",\n\t\t\t\"zht\": \"揮\",\n\t\t\t\"zhs\": \"挥\"\n\t\t},\n\t\t\"挿\": {\n\t\t\t\"jp\": \"挿\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"損\": {\n\t\t\t\"jp\": \"損\",\n\t\t\t\"zht\": \"損\",\n\t\t\t\"zhs\": \"损\"\n\t\t},\n\t\t\"捨\": {\n\t\t\t\"jp\": \"捨\",\n\t\t\t\"zht\": \"捨\",\n\t\t\t\"zhs\": \"舍\"\n\t\t},\n\t\t\"掲\": {\n\t\t\t\"jp\": \"掲\",\n\t\t\t\"zht\": \"揭\",\n\t\t\t\"zhs\": \"揭\"\n\t\t},\n\t\t\"掴\": {\n\t\t\t\"jp\": \"掴\",\n\t\t\t\"zht\": \"摑\",\n\t\t\t\"zhs\": \"掴\"\n\t\t},\n\t\t\"揺\": {\n\t\t\t\"jp\": \"揺\",\n\t\t\t\"zht\": \"搖\",\n\t\t\t\"zhs\": \"摇\"\n\t\t},\n\t\t\"敵\": {\n\t\t\t\"jp\": \"敵\",\n\t\t\t\"zht\": \"敵\",\n\t\t\t\"zhs\": \"敌\"\n\t\t},\n\t\t\"敗\": {\n\t\t\t\"jp\": \"敗\",\n\t\t\t\"zht\": \"敗\",\n\t\t\t\"zhs\": \"败\"\n\t\t},\n\t\t\"数\": {\n\t\t\t\"jp\": \"数\",\n\t\t\t\"zht\": \"數\",\n\t\t\t\"zhs\": \"数\"\n\t\t},\n\t\t\"斉\": {\n\t\t\t\"jp\": \"斉\",\n\t\t\t\"zht\": \"齊\",\n\t\t\t\"zhs\": \"齐\"\n\t\t},\n\t\t\"斎\": {\n\t\t\t\"jp\": \"斎\",\n\t\t\t\"zht\": \"齋\",\n\t\t\t\"zhs\": \"斋\"\n\t\t},\n\t\t\"断\": {\n\t\t\t\"jp\": \"断\",\n\t\t\t\"zht\": \"斷\",\n\t\t\t\"zhs\": \"断\"\n\t\t},\n\t\t\"旧\": {\n\t\t\t\"jp\": \"旧\",\n\t\t\t\"zht\": \"舊\",\n\t\t\t\"zhs\": \"旧\"\n\t\t},\n\t\t\"時\": {\n\t\t\t\"jp\": \"時\",\n\t\t\t\"zht\": \"時\",\n\t\t\t\"zhs\": \"时\"\n\t\t},\n\t\t\"曇\": {\n\t\t\t\"jp\": \"曇\",\n\t\t\t\"zht\": \"曇\",\n\t\t\t\"zhs\": \"昙\"\n\t\t},\n\t\t\"昼\": {\n\t\t\t\"jp\": \"昼\",\n\t\t\t\"zht\": \"晝\",\n\t\t\t\"zhs\": \"昼\"\n\t\t},\n\t\t\"顕\": {\n\t\t\t\"jp\": \"顕\",\n\t\t\t\"zht\": \"顯\",\n\t\t\t\"zhs\": \"显\"\n\t\t},\n\t\t\"暁\": {\n\t\t\t\"jp\": \"暁\",\n\t\t\t\"zht\": \"曉\",\n\t\t\t\"zhs\": \"晓\"\n\t\t},\n\t\t\"晩\": {\n\t\t\t\"jp\": \"晩\",\n\t\t\t\"zht\": \"晚\",\n\t\t\t\"zhs\": \"晚\"\n\t\t},\n\t\t\"暫\": {\n\t\t\t\"jp\": \"暫\",\n\t\t\t\"zht\": \"暫\",\n\t\t\t\"zhs\": \"暂\"\n\t\t},\n\t\t\"曽\": {\n\t\t\t\"jp\": \"曽\",\n\t\t\t\"zht\": \"曾\",\n\t\t\t\"zhs\": \"曾\"\n\t\t},\n\t\t\"術\": {\n\t\t\t\"jp\": \"術\",\n\t\t\t\"zht\": \"術\",\n\t\t\t\"zhs\": \"术\"\n\t\t},\n\t\t\"樸\": {\n\t\t\t\"jp\": \"樸\",\n\t\t\t\"zht\": \"樸\",\n\t\t\t\"zhs\": \"朴\"\n\t\t},\n\t\t\"機\": {\n\t\t\t\"jp\": \"機\",\n\t\t\t\"zht\": \"機\",\n\t\t\t\"zhs\": \"机\"\n\t\t},\n\t\t\"殺\": {\n\t\t\t\"jp\": \"殺\",\n\t\t\t\"zht\": \"殺\",\n\t\t\t\"zhs\": \"杀\"\n\t\t},\n\t\t\"雑\": {\n\t\t\t\"jp\": \"雑\",\n\t\t\t\"zht\": \"雜\",\n\t\t\t\"zhs\": \"杂\"\n\t\t},\n\t\t\"権\": {\n\t\t\t\"jp\": \"権\",\n\t\t\t\"zht\": \"權\",\n\t\t\t\"zhs\": \"权\"\n\t\t},\n\t\t\"条\": {\n\t\t\t\"jp\": \"条\",\n\t\t\t\"zht\": \"條\",\n\t\t\t\"zhs\": \"条\"\n\t\t},\n\t\t\"極\": {\n\t\t\t\"jp\": \"極\",\n\t\t\t\"zht\": \"極\",\n\t\t\t\"zhs\": \"极\"\n\t\t},\n\t\t\"枢\": {\n\t\t\t\"jp\": \"枢\",\n\t\t\t\"zht\": \"樞\",\n\t\t\t\"zhs\": \"枢\"\n\t\t},\n\t\t\"槍\": {\n\t\t\t\"jp\": \"槍\",\n\t\t\t\"zht\": \"槍\",\n\t\t\t\"zhs\": \"枪\"\n\t\t},\n\t\t\"査\": {\n\t\t\t\"jp\": \"査\",\n\t\t\t\"zht\": \"查\",\n\t\t\t\"zhs\": \"查\"\n\t\t},\n\t\t\"栄\": {\n\t\t\t\"jp\": \"栄\",\n\t\t\t\"zht\": \"榮\",\n\t\t\t\"zhs\": \"荣\"\n\t\t},\n\t\t\"標\": {\n\t\t\t\"jp\": \"標\",\n\t\t\t\"zht\": \"標\",\n\t\t\t\"zhs\": \"标\"\n\t\t},\n\t\t\"桟\": {\n\t\t\t\"jp\": \"桟\",\n\t\t\t\"zht\": \"棧\",\n\t\t\t\"zhs\": \"栈\"\n\t\t},\n\t\t\"棟\": {\n\t\t\t\"jp\": \"棟\",\n\t\t\t\"zht\": \"棟\",\n\t\t\t\"zhs\": \"栋\"\n\t\t},\n\t\t\"欄\": {\n\t\t\t\"jp\": \"欄\",\n\t\t\t\"zht\": \"欄\",\n\t\t\t\"zhs\": \"栏\"\n\t\t},\n\t\t\"樹\": {\n\t\t\t\"jp\": \"樹\",\n\t\t\t\"zht\": \"樹\",\n\t\t\t\"zhs\": \"树\"\n\t\t},\n\t\t\"様\": {\n\t\t\t\"jp\": \"様\",\n\t\t\t\"zht\": \"樣\",\n\t\t\t\"zhs\": \"样\"\n\t\t},\n\t\t\"桜\": {\n\t\t\t\"jp\": \"桜\",\n\t\t\t\"zht\": \"櫻\",\n\t\t\t\"zhs\": \"樱\"\n\t\t},\n\t\t\"橋\": {\n\t\t\t\"jp\": \"橋\",\n\t\t\t\"zht\": \"橋\",\n\t\t\t\"zhs\": \"桥\"\n\t\t},\n\t\t\"検\": {\n\t\t\t\"jp\": \"検\",\n\t\t\t\"zht\": \"檢\",\n\t\t\t\"zhs\": \"检\"\n\t\t},\n\t\t\"楼\": {\n\t\t\t\"jp\": \"楼\",\n\t\t\t\"zht\": \"樓\",\n\t\t\t\"zhs\": \"楼\"\n\t\t},\n\t\t\"歓\": {\n\t\t\t\"jp\": \"歓\",\n\t\t\t\"zht\": \"歡\",\n\t\t\t\"zhs\": \"欢\"\n\t\t},\n\t\t\"欧\": {\n\t\t\t\"jp\": \"欧\",\n\t\t\t\"zht\": \"歐\",\n\t\t\t\"zhs\": \"欧\"\n\t\t},\n\t\t\"歩\": {\n\t\t\t\"jp\": \"歩\",\n\t\t\t\"zht\": \"步\",\n\t\t\t\"zhs\": \"步\"\n\t\t},\n\t\t\"歯\": {\n\t\t\t\"jp\": \"歯\",\n\t\t\t\"zht\": \"齒\",\n\t\t\t\"zhs\": \"齿\"\n\t\t},\n\t\t\"残\": {\n\t\t\t\"jp\": \"残\",\n\t\t\t\"zht\": \"殘\",\n\t\t\t\"zhs\": \"残\"\n\t\t},\n\t\t\"殴\": {\n\t\t\t\"jp\": \"殴\",\n\t\t\t\"zht\": \"毆\",\n\t\t\t\"zhs\": \"殴\"\n\t\t},\n\t\t\"気\": {\n\t\t\t\"jp\": \"気\",\n\t\t\t\"zht\": \"氣\",\n\t\t\t\"zhs\": \"气\"\n\t\t},\n\t\t\"漢\": {\n\t\t\t\"jp\": \"漢\",\n\t\t\t\"zht\": \"漢\",\n\t\t\t\"zhs\": \"汉\"\n\t\t},\n\t\t\"湯\": {\n\t\t\t\"jp\": \"湯\",\n\t\t\t\"zht\": \"湯\",\n\t\t\t\"zhs\": \"汤\"\n\t\t},\n\t\t\"溝\": {\n\t\t\t\"jp\": \"溝\",\n\t\t\t\"zht\": \"溝\",\n\t\t\t\"zhs\": \"沟\"\n\t\t},\n\t\t\"沢\": {\n\t\t\t\"jp\": \"沢\",\n\t\t\t\"zht\": \"澤\",\n\t\t\t\"zhs\": \"泽\"\n\t\t},\n\t\t\"涙\": {\n\t\t\t\"jp\": \"涙\",\n\t\t\t\"zht\": \"淚\",\n\t\t\t\"zhs\": \"泪\"\n\t\t},\n\t\t\"滝\": {\n\t\t\t\"jp\": \"滝\",\n\t\t\t\"zht\": \"瀧\",\n\t\t\t\"zhs\": \"泷\"\n\t\t},\n\t\t\"潔\": {\n\t\t\t\"jp\": \"潔\",\n\t\t\t\"zht\": \"潔\",\n\t\t\t\"zhs\": \"洁\"\n\t\t},\n\t\t\"浅\": {\n\t\t\t\"jp\": \"浅\",\n\t\t\t\"zht\": \"淺\",\n\t\t\t\"zhs\": \"浅\"\n\t\t},\n\t\t\"濁\": {\n\t\t\t\"jp\": \"濁\",\n\t\t\t\"zht\": \"濁\",\n\t\t\t\"zhs\": \"浊\"\n\t\t},\n\t\t\"測\": {\n\t\t\t\"jp\": \"測\",\n\t\t\t\"zht\": \"測\",\n\t\t\t\"zhs\": \"测\"\n\t\t},\n\t\t\"済\": {\n\t\t\t\"jp\": \"済\",\n\t\t\t\"zht\": \"濟\",\n\t\t\t\"zhs\": \"济\"\n\t\t},\n\t\t\"濃\": {\n\t\t\t\"jp\": \"濃\",\n\t\t\t\"zht\": \"濃\",\n\t\t\t\"zhs\": \"浓\"\n\t\t},\n\t\t\"浜\": {\n\t\t\t\"jp\": \"浜\",\n\t\t\t\"zht\": \"濱\",\n\t\t\t\"zhs\": \"滨\"\n\t\t},\n\t\t\"渋\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"渦\": {\n\t\t\t\"jp\": \"渦\",\n\t\t\t\"zht\": \"渦\",\n\t\t\t\"zhs\": \"涡\"\n\t\t},\n\t\t\"潤\": {\n\t\t\t\"jp\": \"潤\",\n\t\t\t\"zht\": \"潤\",\n\t\t\t\"zhs\": \"润\"\n\t\t},\n\t\t\"漬\": {\n\t\t\t\"jp\": \"漬\",\n\t\t\t\"zht\": \"漬\",\n\t\t\t\"zhs\": \"渍\"\n\t\t},\n\t\t\"漸\": {\n\t\t\t\"jp\": \"漸\",\n\t\t\t\"zht\": \"漸\",\n\t\t\t\"zhs\": \"渐\"\n\t\t},\n\t\t\"渓\": {\n\t\t\t\"jp\": \"渓\",\n\t\t\t\"zht\": \"溪\",\n\t\t\t\"zhs\": \"溪\"\n\t\t},\n\t\t\"漁\": {\n\t\t\t\"jp\": \"漁\",\n\t\t\t\"zht\": \"漁\",\n\t\t\t\"zhs\": \"渔\"\n\t\t},\n\t\t\"湾\": {\n\t\t\t\"jp\": \"湾\",\n\t\t\t\"zht\": \"灣\",\n\t\t\t\"zhs\": \"湾\"\n\t\t},\n\t\t\"湿\": {\n\t\t\t\"jp\": \"湿\",\n\t\t\t\"zht\": \"濕\",\n\t\t\t\"zhs\": \"湿\"\n\t\t},\n\t\t\"満\": {\n\t\t\t\"jp\": \"満\",\n\t\t\t\"zht\": \"滿\",\n\t\t\t\"zhs\": \"满\"\n\t\t},\n\t\t\"滅\": {\n\t\t\t\"jp\": \"滅\",\n\t\t\t\"zht\": \"滅\",\n\t\t\t\"zhs\": \"灭\"\n\t\t},\n\t\t\"滞\": {\n\t\t\t\"jp\": \"滞\",\n\t\t\t\"zht\": \"滯\",\n\t\t\t\"zhs\": \"滞\"\n\t\t},\n\t\t\"濫\": {\n\t\t\t\"jp\": \"濫\",\n\t\t\t\"zht\": \"濫\",\n\t\t\t\"zhs\": \"滥\"\n\t\t},\n\t\t\"瀬\": {\n\t\t\t\"jp\": \"瀬\",\n\t\t\t\"zht\": \"瀨\",\n\t\t\t\"zhs\": \"濑\"\n\t\t},\n\t\t\"灯\": {\n\t\t\t\"jp\": \"灯\",\n\t\t\t\"zht\": \"燈\",\n\t\t\t\"zhs\": \"灯\"\n\t\t},\n\t\t\"霊\": {\n\t\t\t\"jp\": \"霊\",\n\t\t\t\"zht\": \"靈\",\n\t\t\t\"zhs\": \"灵\"\n\t\t},\n\t\t\"炉\": {\n\t\t\t\"jp\": \"炉\",\n\t\t\t\"zht\": \"爐\",\n\t\t\t\"zhs\": \"炉\"\n\t\t},\n\t\t\"点\": {\n\t\t\t\"jp\": \"点\",\n\t\t\t\"zht\": \"點\",\n\t\t\t\"zhs\": \"点\"\n\t\t},\n\t\t\"錬\": {\n\t\t\t\"jp\": \"錬\",\n\t\t\t\"zht\": \"鍊\",\n\t\t\t\"zhs\": \"炼\"\n\t\t},\n\t\t\"練\": {\n\t\t\t\"jp\": \"練\",\n\t\t\t\"zht\": \"練\",\n\t\t\t\"zhs\": \"练\"\n\t\t},\n\t\t\"煙\": {\n\t\t\t\"jp\": \"煙\",\n\t\t\t\"zht\": \"煙\",\n\t\t\t\"zhs\": \"烟\"\n\t\t},\n\t\t\"煩\": {\n\t\t\t\"jp\": \"煩\",\n\t\t\t\"zht\": \"煩\",\n\t\t\t\"zhs\": \"烦\"\n\t\t},\n\t\t\"焼\": {\n\t\t\t\"jp\": \"焼\",\n\t\t\t\"zht\": \"燒\",\n\t\t\t\"zhs\": \"烧\"\n\t\t},\n\t\t\"熱\": {\n\t\t\t\"jp\": \"熱\",\n\t\t\t\"zht\": \"熱\",\n\t\t\t\"zhs\": \"热\"\n\t\t},\n\t\t\"焔\": {\n\t\t\t\"jp\": \"焔\",\n\t\t\t\"zht\": \"焰\",\n\t\t\t\"zhs\": \"焰\"\n\t\t},\n\t\t\"鍛\": {\n\t\t\t\"jp\": \"鍛\",\n\t\t\t\"zht\": \"鍛\",\n\t\t\t\"zhs\": \"锻\"\n\t\t},\n\t\t\"犠\": {\n\t\t\t\"jp\": \"犠\",\n\t\t\t\"zht\": \"犧\",\n\t\t\t\"zhs\": \"牺\"\n\t\t},\n\t\t\"状\": {\n\t\t\t\"jp\": \"状\",\n\t\t\t\"zht\": \"狀\",\n\t\t\t\"zhs\": \"状\"\n\t\t},\n\t\t\"猶\": {\n\t\t\t\"jp\": \"猶\",\n\t\t\t\"zht\": \"猶\",\n\t\t\t\"zhs\": \"犹\"\n\t\t},\n\t\t\"独\": {\n\t\t\t\"jp\": \"独\",\n\t\t\t\"zht\": \"獨\",\n\t\t\t\"zhs\": \"独\"\n\t\t},\n\t\t\"狭\": {\n\t\t\t\"jp\": \"狭\",\n\t\t\t\"zht\": \"狹\",\n\t\t\t\"zhs\": \"狭\"\n\t\t},\n\t\t\"獄\": {\n\t\t\t\"jp\": \"獄\",\n\t\t\t\"zht\": \"獄\",\n\t\t\t\"zhs\": \"狱\"\n\t\t},\n\t\t\"猟\": {\n\t\t\t\"jp\": \"猟\",\n\t\t\t\"zht\": \"獵\",\n\t\t\t\"zhs\": \"猎\"\n\t\t},\n\t\t\"猫\": {\n\t\t\t\"jp\": \"猫\",\n\t\t\t\"zht\": \"貓\",\n\t\t\t\"zhs\": \"猫\"\n\t\t},\n\t\t\"献\": {\n\t\t\t\"jp\": \"献\",\n\t\t\t\"zht\": \"獻\",\n\t\t\t\"zhs\": \"献\"\n\t\t},\n\t\t\"環\": {\n\t\t\t\"jp\": \"環\",\n\t\t\t\"zht\": \"環\",\n\t\t\t\"zhs\": \"环\"\n\t\t},\n\t\t\"現\": {\n\t\t\t\"jp\": \"現\",\n\t\t\t\"zht\": \"現\",\n\t\t\t\"zhs\": \"现\"\n\t\t},\n\t\t\"璽\": {\n\t\t\t\"jp\": \"璽\",\n\t\t\t\"zht\": \"璽\",\n\t\t\t\"zhs\": \"玺\"\n\t\t},\n\t\t\"電\": {\n\t\t\t\"jp\": \"電\",\n\t\t\t\"zht\": \"電\",\n\t\t\t\"zhs\": \"电\"\n\t\t},\n\t\t\"療\": {\n\t\t\t\"jp\": \"療\",\n\t\t\t\"zht\": \"療\",\n\t\t\t\"zhs\": \"疗\"\n\t\t},\n\t\t\"監\": {\n\t\t\t\"jp\": \"監\",\n\t\t\t\"zht\": \"監\",\n\t\t\t\"zhs\": \"监\"\n\t\t},\n\t\t\"蓋\": {\n\t\t\t\"jp\": \"蓋\",\n\t\t\t\"zht\": \"蓋\",\n\t\t\t\"zhs\": \"盖\"\n\t\t},\n\t\t\"盤\": {\n\t\t\t\"jp\": \"盤\",\n\t\t\t\"zht\": \"盤\",\n\t\t\t\"zhs\": \"盘\"\n\t\t},\n\t\t\"視\": {\n\t\t\t\"jp\": \"視\",\n\t\t\t\"zht\": \"視\",\n\t\t\t\"zhs\": \"视\"\n\t\t},\n\t\t\"着\": {\n\t\t\t\"jp\": \"着\",\n\t\t\t\"zht\": \"著\",\n\t\t\t\"zhs\": \"著\"\n\t\t},\n\t\t\"矯\": {\n\t\t\t\"jp\": \"矯\",\n\t\t\t\"zht\": \"矯\",\n\t\t\t\"zhs\": \"矫\"\n\t\t},\n\t\t\"鉱\": {\n\t\t\t\"jp\": \"鉱\",\n\t\t\t\"zht\": \"礦\",\n\t\t\t\"zhs\": \"矿\"\n\t\t},\n\t\t\"砕\": {\n\t\t\t\"jp\": \"砕\",\n\t\t\t\"zht\": \"碎\",\n\t\t\t\"zhs\": \"碎\"\n\t\t},\n\t\t\"礎\": {\n\t\t\t\"jp\": \"礎\",\n\t\t\t\"zht\": \"礎\",\n\t\t\t\"zhs\": \"础\"\n\t\t},\n\t\t\"確\": {\n\t\t\t\"jp\": \"確\",\n\t\t\t\"zht\": \"確\",\n\t\t\t\"zhs\": \"确\"\n\t\t},\n\t\t\"礼\": {\n\t\t\t\"jp\": \"礼\",\n\t\t\t\"zht\": \"禮\",\n\t\t\t\"zhs\": \"礼\"\n\t\t},\n\t\t\"禍\": {\n\t\t\t\"jp\": \"禍\",\n\t\t\t\"zht\": \"禍\",\n\t\t\t\"zhs\": \"祸\"\n\t\t},\n\t\t\"禅\": {\n\t\t\t\"jp\": \"禅\",\n\t\t\t\"zht\": \"禪\",\n\t\t\t\"zhs\": \"禅\"\n\t\t},\n\t\t\"離\": {\n\t\t\t\"jp\": \"離\",\n\t\t\t\"zht\": \"離\",\n\t\t\t\"zhs\": \"离\"\n\t\t},\n\t\t\"種\": {\n\t\t\t\"jp\": \"種\",\n\t\t\t\"zht\": \"種\",\n\t\t\t\"zhs\": \"种\"\n\t\t},\n\t\t\"積\": {\n\t\t\t\"jp\": \"積\",\n\t\t\t\"zht\": \"積\",\n\t\t\t\"zhs\": \"积\"\n\t\t},\n\t\t\"称\": {\n\t\t\t\"jp\": \"称\",\n\t\t\t\"zht\": \"稱\",\n\t\t\t\"zhs\": \"称\"\n\t\t},\n\t\t\"稲\": {\n\t\t\t\"jp\": \"稲\",\n\t\t\t\"zht\": \"稻\",\n\t\t\t\"zhs\": \"稻\"\n\t\t},\n\t\t\"穏\": {\n\t\t\t\"jp\": \"穏\",\n\t\t\t\"zht\": \"穩\",\n\t\t\t\"zhs\": \"稳\"\n\t\t},\n\t\t\"穀\": {\n\t\t\t\"jp\": \"穀\",\n\t\t\t\"zht\": \"穀\",\n\t\t\t\"zhs\": \"谷\"\n\t\t},\n\t\t\"穂\": {\n\t\t\t\"jp\": \"穂\",\n\t\t\t\"zht\": \"穗\",\n\t\t\t\"zhs\": \"穗\"\n\t\t},\n\t\t\"窮\": {\n\t\t\t\"jp\": \"窮\",\n\t\t\t\"zht\": \"窮\",\n\t\t\t\"zhs\": \"穷\"\n\t\t},\n\t\t\"窃\": {\n\t\t\t\"jp\": \"窃\",\n\t\t\t\"zht\": \"竊\",\n\t\t\t\"zhs\": \"窃\"\n\t\t},\n\t\t\"窓\": {\n\t\t\t\"jp\": \"窓\",\n\t\t\t\"zht\": \"窗\",\n\t\t\t\"zhs\": \"窗\"\n\t\t},\n\t\t\"竜\": {\n\t\t\t\"jp\": \"竜\",\n\t\t\t\"zht\": \"龍\",\n\t\t\t\"zhs\": \"龙\"\n\t\t},\n\t\t\"競\": {\n\t\t\t\"jp\": \"競\",\n\t\t\t\"zht\": \"競\",\n\t\t\t\"zhs\": \"竞\"\n\t\t},\n\t\t\"篤\": {\n\t\t\t\"jp\": \"篤\",\n\t\t\t\"zht\": \"篤\",\n\t\t\t\"zhs\": \"笃\"\n\t\t},\n\t\t\"筆\": {\n\t\t\t\"jp\": \"筆\",\n\t\t\t\"zht\": \"筆\",\n\t\t\t\"zhs\": \"笔\"\n\t\t},\n\t\t\"築\": {\n\t\t\t\"jp\": \"築\",\n\t\t\t\"zht\": \"築\",\n\t\t\t\"zhs\": \"筑\"\n\t\t},\n\t\t\"簡\": {\n\t\t\t\"jp\": \"簡\",\n\t\t\t\"zht\": \"簡\",\n\t\t\t\"zhs\": \"简\"\n\t\t},\n\t\t\"節\": {\n\t\t\t\"jp\": \"節\",\n\t\t\t\"zht\": \"節\",\n\t\t\t\"zhs\": \"节\"\n\t\t},\n\t\t\"範\": {\n\t\t\t\"jp\": \"範\",\n\t\t\t\"zht\": \"範\",\n\t\t\t\"zhs\": \"范\"\n\t\t},\n\t\t\"類\": {\n\t\t\t\"jp\": \"類\",\n\t\t\t\"zht\": \"類\",\n\t\t\t\"zhs\": \"类\"\n\t\t},\n\t\t\"粋\": {\n\t\t\t\"jp\": \"粋\",\n\t\t\t\"zht\": \"粹\",\n\t\t\t\"zhs\": \"粹\"\n\t\t},\n\t\t\"粛\": {\n\t\t\t\"jp\": \"粛\",\n\t\t\t\"zht\": \"肅\",\n\t\t\t\"zhs\": \"肃\"\n\t\t},\n\t\t\"糧\": {\n\t\t\t\"jp\": \"糧\",\n\t\t\t\"zht\": \"糧\",\n\t\t\t\"zhs\": \"粮\"\n\t\t},\n\t\t\"糾\": {\n\t\t\t\"jp\": \"糾\",\n\t\t\t\"zht\": \"糾\",\n\t\t\t\"zhs\": \"纠\"\n\t\t},\n\t\t\"紀\": {\n\t\t\t\"jp\": \"紀\",\n\t\t\t\"zht\": \"紀\",\n\t\t\t\"zhs\": \"纪\"\n\t\t},\n\t\t\"約\": {\n\t\t\t\"jp\": \"約\",\n\t\t\t\"zht\": \"約\",\n\t\t\t\"zhs\": \"约\"\n\t\t},\n\t\t\"紅\": {\n\t\t\t\"jp\": \"紅\",\n\t\t\t\"zht\": \"紅\",\n\t\t\t\"zhs\": \"红\"\n\t\t},\n\t\t\"紋\": {\n\t\t\t\"jp\": \"紋\",\n\t\t\t\"zht\": \"紋\",\n\t\t\t\"zhs\": \"纹\"\n\t\t},\n\t\t\"納\": {\n\t\t\t\"jp\": \"納\",\n\t\t\t\"zht\": \"納\",\n\t\t\t\"zhs\": \"纳\"\n\t\t},\n\t\t\"純\": {\n\t\t\t\"jp\": \"純\",\n\t\t\t\"zht\": \"純\",\n\t\t\t\"zhs\": \"纯\"\n\t\t},\n\t\t\"紙\": {\n\t\t\t\"jp\": \"紙\",\n\t\t\t\"zht\": \"紙\",\n\t\t\t\"zhs\": \"纸\"\n\t\t},\n\t\t\"級\": {\n\t\t\t\"jp\": \"級\",\n\t\t\t\"zht\": \"級\",\n\t\t\t\"zhs\": \"级\"\n\t\t},\n\t\t\"紛\": {\n\t\t\t\"jp\": \"紛\",\n\t\t\t\"zht\": \"紛\",\n\t\t\t\"zhs\": \"纷\"\n\t\t},\n\t\t\"紡\": {\n\t\t\t\"jp\": \"紡\",\n\t\t\t\"zht\": \"紡\",\n\t\t\t\"zhs\": \"纺\"\n\t\t},\n\t\t\"緊\": {\n\t\t\t\"jp\": \"緊\",\n\t\t\t\"zht\": \"緊\",\n\t\t\t\"zhs\": \"紧\"\n\t\t},\n\t\t\"細\": {\n\t\t\t\"jp\": \"細\",\n\t\t\t\"zht\": \"細\",\n\t\t\t\"zhs\": \"细\"\n\t\t},\n\t\t\"紳\": {\n\t\t\t\"jp\": \"紳\",\n\t\t\t\"zht\": \"紳\",\n\t\t\t\"zhs\": \"绅\"\n\t\t},\n\t\t\"紹\": {\n\t\t\t\"jp\": \"紹\",\n\t\t\t\"zht\": \"紹\",\n\t\t\t\"zhs\": \"绍\"\n\t\t},\n\t\t\"紺\": {\n\t\t\t\"jp\": \"紺\",\n\t\t\t\"zht\": \"紺\",\n\t\t\t\"zhs\": \"绀\"\n\t\t},\n\t\t\"終\": {\n\t\t\t\"jp\": \"終\",\n\t\t\t\"zht\": \"終\",\n\t\t\t\"zhs\": \"终\"\n\t\t},\n\t\t\"組\": {\n\t\t\t\"jp\": \"組\",\n\t\t\t\"zht\": \"組\",\n\t\t\t\"zhs\": \"组\"\n\t\t},\n\t\t\"経\": {\n\t\t\t\"jp\": \"経\",\n\t\t\t\"zht\": \"經\",\n\t\t\t\"zhs\": \"经\"\n\t\t},\n\t\t\"結\": {\n\t\t\t\"jp\": \"結\",\n\t\t\t\"zht\": \"結\",\n\t\t\t\"zhs\": \"结\"\n\t\t},\n\t\t\"絶\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絕\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"絞\": {\n\t\t\t\"jp\": \"絞\",\n\t\t\t\"zht\": \"絞\",\n\t\t\t\"zhs\": \"绞\"\n\t\t},\n\t\t\"絡\": {\n\t\t\t\"jp\": \"絡\",\n\t\t\t\"zht\": \"絡\",\n\t\t\t\"zhs\": \"络\"\n\t\t},\n\t\t\"給\": {\n\t\t\t\"jp\": \"給\",\n\t\t\t\"zht\": \"給\",\n\t\t\t\"zhs\": \"给\"\n\t\t},\n\t\t\"統\": {\n\t\t\t\"jp\": \"統\",\n\t\t\t\"zht\": \"統\",\n\t\t\t\"zhs\": \"统\"\n\t\t},\n\t\t\"絵\": {\n\t\t\t\"jp\": \"絵\",\n\t\t\t\"zht\": \"繪\",\n\t\t\t\"zhs\": \"绘\"\n\t\t},\n\t\t\"絹\": {\n\t\t\t\"jp\": \"絹\",\n\t\t\t\"zht\": \"絹\",\n\t\t\t\"zhs\": \"绢\"\n\t\t},\n\t\t\"継\": {\n\t\t\t\"jp\": \"継\",\n\t\t\t\"zht\": \"繼\",\n\t\t\t\"zhs\": \"继\"\n\t\t},\n\t\t\"続\": {\n\t\t\t\"jp\": \"続\",\n\t\t\t\"zht\": \"續\",\n\t\t\t\"zhs\": \"续\"\n\t\t},\n\t\t\"緑\": {\n\t\t\t\"jp\": \"緑\",\n\t\t\t\"zht\": \"綠\",\n\t\t\t\"zhs\": \"绿\"\n\t\t},\n\t\t\"線\": {\n\t\t\t\"jp\": \"線\",\n\t\t\t\"zht\": \"線\",\n\t\t\t\"zhs\": \"线\"\n\t\t},\n\t\t\"維\": {\n\t\t\t\"jp\": \"維\",\n\t\t\t\"zht\": \"維\",\n\t\t\t\"zhs\": \"维\"\n\t\t},\n\t\t\"綱\": {\n\t\t\t\"jp\": \"綱\",\n\t\t\t\"zht\": \"綱\",\n\t\t\t\"zhs\": \"纲\"\n\t\t},\n\t\t\"綿\": {\n\t\t\t\"jp\": \"綿\",\n\t\t\t\"zht\": \"綿\",\n\t\t\t\"zhs\": \"绵\"\n\t\t},\n\t\t\"緒\": {\n\t\t\t\"jp\": \"緒\",\n\t\t\t\"zht\": \"緒\",\n\t\t\t\"zhs\": \"绪\"\n\t\t},\n\t\t\"締\": {\n\t\t\t\"jp\": \"締\",\n\t\t\t\"zht\": \"締\",\n\t\t\t\"zhs\": \"缔\"\n\t\t},\n\t\t\"縁\": {\n\t\t\t\"jp\": \"縁\",\n\t\t\t\"zht\": \"緣\",\n\t\t\t\"zhs\": \"缘\"\n\t\t},\n\t\t\"編\": {\n\t\t\t\"jp\": \"編\",\n\t\t\t\"zht\": \"編\",\n\t\t\t\"zhs\": \"编\"\n\t\t},\n\t\t\"緩\": {\n\t\t\t\"jp\": \"緩\",\n\t\t\t\"zht\": \"緩\",\n\t\t\t\"zhs\": \"缓\"\n\t\t},\n\t\t\"緯\": {\n\t\t\t\"jp\": \"緯\",\n\t\t\t\"zht\": \"緯\",\n\t\t\t\"zhs\": \"纬\"\n\t\t},\n\t\t\"縄\": {\n\t\t\t\"jp\": \"縄\",\n\t\t\t\"zht\": \"繩\",\n\t\t\t\"zhs\": \"绳\"\n\t\t},\n\t\t\"縛\": {\n\t\t\t\"jp\": \"縛\",\n\t\t\t\"zht\": \"縛\",\n\t\t\t\"zhs\": \"缚\"\n\t\t},\n\t\t\"縦\": {\n\t\t\t\"jp\": \"縦\",\n\t\t\t\"zht\": \"縱\",\n\t\t\t\"zhs\": \"纵\"\n\t\t},\n\t\t\"縫\": {\n\t\t\t\"jp\": \"縫\",\n\t\t\t\"zht\": \"縫\",\n\t\t\t\"zhs\": \"缝\"\n\t\t},\n\t\t\"縮\": {\n\t\t\t\"jp\": \"縮\",\n\t\t\t\"zht\": \"縮\",\n\t\t\t\"zhs\": \"缩\"\n\t\t},\n\t\t\"繊\": {\n\t\t\t\"jp\": \"繊\",\n\t\t\t\"zht\": \"纖\",\n\t\t\t\"zhs\": \"纤\"\n\t\t},\n\t\t\"績\": {\n\t\t\t\"jp\": \"績\",\n\t\t\t\"zht\": \"績\",\n\t\t\t\"zhs\": \"绩\"\n\t\t},\n\t\t\"織\": {\n\t\t\t\"jp\": \"織\",\n\t\t\t\"zht\": \"織\",\n\t\t\t\"zhs\": \"织\"\n\t\t},\n\t\t\"繕\": {\n\t\t\t\"jp\": \"繕\",\n\t\t\t\"zht\": \"繕\",\n\t\t\t\"zhs\": \"缮\"\n\t\t},\n\t\t\"繭\": {\n\t\t\t\"jp\": \"繭\",\n\t\t\t\"zht\": \"繭\",\n\t\t\t\"zhs\": \"茧\"\n\t\t},\n\t\t\"繰\": {\n\t\t\t\"jp\": \"繰\",\n\t\t\t\"zht\": \"繰\",\n\t\t\t\"zhs\": \"缲\"\n\t\t},\n\t\t\"缶\": {\n\t\t\t\"jp\": \"缶\",\n\t\t\t\"zht\": \"罐\",\n\t\t\t\"zhs\": \"罐\"\n\t\t},\n\t\t\"鉢\": {\n\t\t\t\"jp\": \"鉢\",\n\t\t\t\"zht\": \"鉢\",\n\t\t\t\"zhs\": \"钵\"\n\t\t},\n\t\t\"羅\": {\n\t\t\t\"jp\": \"羅\",\n\t\t\t\"zht\": \"羅\",\n\t\t\t\"zhs\": \"罗\"\n\t\t},\n\t\t\"罸\": {\n\t\t\t\"jp\": \"罸\",\n\t\t\t\"zht\": \"罰\",\n\t\t\t\"zhs\": \"罚\"\n\t\t},\n\t\t\"罷\": {\n\t\t\t\"jp\": \"罷\",\n\t\t\t\"zht\": \"罷\",\n\t\t\t\"zhs\": \"罢\"\n\t\t},\n\t\t\"罵\": {\n\t\t\t\"jp\": \"罵\",\n\t\t\t\"zht\": \"罵\",\n\t\t\t\"zhs\": \"骂\"\n\t\t},\n\t\t\"職\": {\n\t\t\t\"jp\": \"職\",\n\t\t\t\"zht\": \"職\",\n\t\t\t\"zhs\": \"职\"\n\t\t},\n\t\t\"聞\": {\n\t\t\t\"jp\": \"聞\",\n\t\t\t\"zht\": \"聞\",\n\t\t\t\"zhs\": \"闻\"\n\t\t},\n\t\t\"聡\": {\n\t\t\t\"jp\": \"聡\",\n\t\t\t\"zht\": \"聰\",\n\t\t\t\"zhs\": \"聪\"\n\t\t},\n\t\t\"腸\": {\n\t\t\t\"jp\": \"腸\",\n\t\t\t\"zht\": \"腸\",\n\t\t\t\"zhs\": \"肠\"\n\t\t},\n\t\t\"膚\": {\n\t\t\t\"jp\": \"膚\",\n\t\t\t\"zht\": \"膚\",\n\t\t\t\"zhs\": \"肤\"\n\t\t},\n\t\t\"脹\": {\n\t\t\t\"jp\": \"脹\",\n\t\t\t\"zht\": \"脹\",\n\t\t\t\"zhs\": \"胀\"\n\t\t},\n\t\t\"脅\": {\n\t\t\t\"jp\": \"脅\",\n\t\t\t\"zht\": \"脅\",\n\t\t\t\"zhs\": \"胁\"\n\t\t},\n\t\t\"胆\": {\n\t\t\t\"jp\": \"胆\",\n\t\t\t\"zht\": \"膽\",\n\t\t\t\"zhs\": \"胆\"\n\t\t},\n\t\t\"臓\": {\n\t\t\t\"jp\": \"臓\",\n\t\t\t\"zht\": \"臟\",\n\t\t\t\"zhs\": \"脏\"\n\t\t},\n\t\t\"脳\": {\n\t\t\t\"jp\": \"脳\",\n\t\t\t\"zht\": \"腦\",\n\t\t\t\"zhs\": \"脑\"\n\t\t},\n\t\t\"脚\": {\n\t\t\t\"jp\": \"脚\",\n\t\t\t\"zht\": \"腳\",\n\t\t\t\"zhs\": \"脚\"\n\t\t},\n\t\t\"騰\": {\n\t\t\t\"jp\": \"騰\",\n\t\t\t\"zht\": \"騰\",\n\t\t\t\"zhs\": \"腾\"\n\t\t},\n\t\t\"舗\": {\n\t\t\t\"jp\": \"舗\",\n\t\t\t\"zht\": \"舖\",\n\t\t\t\"zhs\": \"铺\"\n\t\t},\n\t\t\"館\": {\n\t\t\t\"jp\": \"館\",\n\t\t\t\"zht\": \"館\",\n\t\t\t\"zhs\": \"馆\"\n\t\t},\n\t\t\"艦\": {\n\t\t\t\"jp\": \"艦\",\n\t\t\t\"zht\": \"艦\",\n\t\t\t\"zhs\": \"舰\"\n\t\t},\n\t\t\"芸\": {\n\t\t\t\"jp\": \"芸\",\n\t\t\t\"zht\": \"藝\",\n\t\t\t\"zhs\": \"艺\"\n\t\t},\n\t\t\"茎\": {\n\t\t\t\"jp\": \"茎\",\n\t\t\t\"zht\": \"莖\",\n\t\t\t\"zhs\": \"茎\"\n\t\t},\n\t\t\"薦\": {\n\t\t\t\"jp\": \"薦\",\n\t\t\t\"zht\": \"薦\",\n\t\t\t\"zhs\": \"荐\"\n\t\t},\n\t\t\"薬\": {\n\t\t\t\"jp\": \"薬\",\n\t\t\t\"zht\": \"藥\",\n\t\t\t\"zhs\": \"药\"\n\t\t},\n\t\t\"蛍\": {\n\t\t\t\"jp\": \"蛍\",\n\t\t\t\"zht\": \"螢\",\n\t\t\t\"zhs\": \"萤\"\n\t\t},\n\t\t\"蒋\": {\n\t\t\t\"jp\": \"蒋\",\n\t\t\t\"zht\": \"蔣\",\n\t\t\t\"zhs\": \"蒋\"\n\t\t},\n\t\t\"蔵\": {\n\t\t\t\"jp\": \"蔵\",\n\t\t\t\"zht\": \"藏\",\n\t\t\t\"zhs\": \"藏\"\n\t\t},\n\t\t\"虜\": {\n\t\t\t\"jp\": \"虜\",\n\t\t\t\"zht\": \"虜\",\n\t\t\t\"zhs\": \"虏\"\n\t\t},\n\t\t\"虚\": {\n\t\t\t\"jp\": \"虚\",\n\t\t\t\"zht\": \"虛\",\n\t\t\t\"zhs\": \"虚\"\n\t\t},\n\t\t\"虫\": {\n\t\t\t\"jp\": \"虫\",\n\t\t\t\"zht\": \"蟲\",\n\t\t\t\"zhs\": \"虫\"\n\t\t},\n\t\t\"蝕\": {\n\t\t\t\"jp\": \"蝕\",\n\t\t\t\"zht\": \"蝕\",\n\t\t\t\"zhs\": \"蚀\"\n\t\t},\n\t\t\"蚕\": {\n\t\t\t\"jp\": \"蚕\",\n\t\t\t\"zht\": \"蠶\",\n\t\t\t\"zhs\": \"蚕\"\n\t\t},\n\t\t\"蛮\": {\n\t\t\t\"jp\": \"蛮\",\n\t\t\t\"zht\": \"蠻\",\n\t\t\t\"zhs\": \"蛮\"\n\t\t},\n\t\t\"補\": {\n\t\t\t\"jp\": \"補\",\n\t\t\t\"zht\": \"補\",\n\t\t\t\"zhs\": \"补\"\n\t\t},\n\t\t\"襲\": {\n\t\t\t\"jp\": \"襲\",\n\t\t\t\"zht\": \"襲\",\n\t\t\t\"zhs\": \"袭\"\n\t\t},\n\t\t\"装\": {\n\t\t\t\"jp\": \"装\",\n\t\t\t\"zht\": \"裝\",\n\t\t\t\"zhs\": \"装\"\n\t\t},\n\t\t\"裏\": {\n\t\t\t\"jp\": \"裏\",\n\t\t\t\"zht\": \"裡\",\n\t\t\t\"zhs\": \"里\"\n\t\t},\n\t\t\"覇\": {\n\t\t\t\"jp\": \"覇\",\n\t\t\t\"zht\": \"霸\",\n\t\t\t\"zhs\": \"霸\"\n\t\t},\n\t\t\"見\": {\n\t\t\t\"jp\": \"見\",\n\t\t\t\"zht\": \"見\",\n\t\t\t\"zhs\": \"见\"\n\t\t},\n\t\t\"観\": {\n\t\t\t\"jp\": \"観\",\n\t\t\t\"zht\": \"觀\",\n\t\t\t\"zhs\": \"观\"\n\t\t},\n\t\t\"規\": {\n\t\t\t\"jp\": \"規\",\n\t\t\t\"zht\": \"規\",\n\t\t\t\"zhs\": \"规\"\n\t\t},\n\t\t\"覚\": {\n\t\t\t\"jp\": \"覚\",\n\t\t\t\"zht\": \"覺\",\n\t\t\t\"zhs\": \"觉\"\n\t\t},\n\t\t\"覧\": {\n\t\t\t\"jp\": \"覧\",\n\t\t\t\"zht\": \"覽\",\n\t\t\t\"zhs\": \"览\"\n\t\t},\n\t\t\"触\": {\n\t\t\t\"jp\": \"触\",\n\t\t\t\"zht\": \"觸\",\n\t\t\t\"zhs\": \"触\"\n\t\t},\n\t\t\"訂\": {\n\t\t\t\"jp\": \"訂\",\n\t\t\t\"zht\": \"訂\",\n\t\t\t\"zhs\": \"订\"\n\t\t},\n\t\t\"計\": {\n\t\t\t\"jp\": \"計\",\n\t\t\t\"zht\": \"計\",\n\t\t\t\"zhs\": \"计\"\n\t\t},\n\t\t\"討\": {\n\t\t\t\"jp\": \"討\",\n\t\t\t\"zht\": \"討\",\n\t\t\t\"zhs\": \"讨\"\n\t\t},\n\t\t\"訓\": {\n\t\t\t\"jp\": \"訓\",\n\t\t\t\"zht\": \"訓\",\n\t\t\t\"zhs\": \"训\"\n\t\t},\n\t\t\"記\": {\n\t\t\t\"jp\": \"記\",\n\t\t\t\"zht\": \"記\",\n\t\t\t\"zhs\": \"记\"\n\t\t},\n\t\t\"訟\": {\n\t\t\t\"jp\": \"訟\",\n\t\t\t\"zht\": \"訟\",\n\t\t\t\"zhs\": \"讼\"\n\t\t},\n\t\t\"訪\": {\n\t\t\t\"jp\": \"訪\",\n\t\t\t\"zht\": \"訪\",\n\t\t\t\"zhs\": \"访\"\n\t\t},\n\t\t\"設\": {\n\t\t\t\"jp\": \"設\",\n\t\t\t\"zht\": \"設\",\n\t\t\t\"zhs\": \"设\"\n\t\t},\n\t\t\"許\": {\n\t\t\t\"jp\": \"許\",\n\t\t\t\"zht\": \"許\",\n\t\t\t\"zhs\": \"许\"\n\t\t},\n\t\t\"訳\": {\n\t\t\t\"jp\": \"訳\",\n\t\t\t\"zht\": \"譯\",\n\t\t\t\"zhs\": \"译\"\n\t\t},\n\t\t\"訴\": {\n\t\t\t\"jp\": \"訴\",\n\t\t\t\"zht\": \"訴\",\n\t\t\t\"zhs\": \"诉\"\n\t\t},\n\t\t\"診\": {\n\t\t\t\"jp\": \"診\",\n\t\t\t\"zht\": \"診\",\n\t\t\t\"zhs\": \"诊\"\n\t\t},\n\t\t\"証\": {\n\t\t\t\"jp\": \"証\",\n\t\t\t\"zht\": \"證\",\n\t\t\t\"zhs\": \"证\"\n\t\t},\n\t\t\"詐\": {\n\t\t\t\"jp\": \"詐\",\n\t\t\t\"zht\": \"詐\",\n\t\t\t\"zhs\": \"诈\"\n\t\t},\n\t\t\"詔\": {\n\t\t\t\"jp\": \"詔\",\n\t\t\t\"zht\": \"詔\",\n\t\t\t\"zhs\": \"诏\"\n\t\t},\n\t\t\"評\": {\n\t\t\t\"jp\": \"評\",\n\t\t\t\"zht\": \"評\",\n\t\t\t\"zhs\": \"评\"\n\t\t},\n\t\t\"詛\": {\n\t\t\t\"jp\": \"詛\",\n\t\t\t\"zht\": \"詛\",\n\t\t\t\"zhs\": \"诅\"\n\t\t},\n\t\t\"詞\": {\n\t\t\t\"jp\": \"詞\",\n\t\t\t\"zht\": \"詞\",\n\t\t\t\"zhs\": \"词\"\n\t\t},\n\t\t\"試\": {\n\t\t\t\"jp\": \"試\",\n\t\t\t\"zht\": \"試\",\n\t\t\t\"zhs\": \"试\"\n\t\t},\n\t\t\"詩\": {\n\t\t\t\"jp\": \"詩\",\n\t\t\t\"zht\": \"詩\",\n\t\t\t\"zhs\": \"诗\"\n\t\t},\n\t\t\"詰\": {\n\t\t\t\"jp\": \"詰\",\n\t\t\t\"zht\": \"詰\",\n\t\t\t\"zhs\": \"诘\"\n\t\t},\n\t\t\"該\": {\n\t\t\t\"jp\": \"該\",\n\t\t\t\"zht\": \"該\",\n\t\t\t\"zhs\": \"该\"\n\t\t},\n\t\t\"詳\": {\n\t\t\t\"jp\": \"詳\",\n\t\t\t\"zht\": \"詳\",\n\t\t\t\"zhs\": \"详\"\n\t\t},\n\t\t\"誉\": {\n\t\t\t\"jp\": \"誉\",\n\t\t\t\"zht\": \"譽\",\n\t\t\t\"zhs\": \"誉\"\n\t\t},\n\t\t\"謄\": {\n\t\t\t\"jp\": \"謄\",\n\t\t\t\"zht\": \"謄\",\n\t\t\t\"zhs\": \"誊\"\n\t\t},\n\t\t\"認\": {\n\t\t\t\"jp\": \"認\",\n\t\t\t\"zht\": \"認\",\n\t\t\t\"zhs\": \"认\"\n\t\t},\n\t\t\"誕\": {\n\t\t\t\"jp\": \"誕\",\n\t\t\t\"zht\": \"誕\",\n\t\t\t\"zhs\": \"诞\"\n\t\t},\n\t\t\"誘\": {\n\t\t\t\"jp\": \"誘\",\n\t\t\t\"zht\": \"誘\",\n\t\t\t\"zhs\": \"诱\"\n\t\t},\n\t\t\"語\": {\n\t\t\t\"jp\": \"語\",\n\t\t\t\"zht\": \"語\",\n\t\t\t\"zhs\": \"语\"\n\t\t},\n\t\t\"誠\": {\n\t\t\t\"jp\": \"誠\",\n\t\t\t\"zht\": \"誠\",\n\t\t\t\"zhs\": \"诚\"\n\t\t},\n\t\t\"誤\": {\n\t\t\t\"jp\": \"誤\",\n\t\t\t\"zht\": \"誤\",\n\t\t\t\"zhs\": \"误\"\n\t\t},\n\t\t\"説\": {\n\t\t\t\"jp\": \"説\",\n\t\t\t\"zht\": \"說\",\n\t\t\t\"zhs\": \"说\"\n\t\t},\n\t\t\"読\": {\n\t\t\t\"jp\": \"読\",\n\t\t\t\"zht\": \"讀\",\n\t\t\t\"zhs\": \"读\"\n\t\t},\n\t\t\"誰\": {\n\t\t\t\"jp\": \"誰\",\n\t\t\t\"zht\": \"誰\",\n\t\t\t\"zhs\": \"谁\"\n\t\t},\n\t\t\"課\": {\n\t\t\t\"jp\": \"課\",\n\t\t\t\"zht\": \"課\",\n\t\t\t\"zhs\": \"课\"\n\t\t},\n\t\t\"調\": {\n\t\t\t\"jp\": \"調\",\n\t\t\t\"zht\": \"調\",\n\t\t\t\"zhs\": \"调\"\n\t\t},\n\t\t\"談\": {\n\t\t\t\"jp\": \"談\",\n\t\t\t\"zht\": \"談\",\n\t\t\t\"zhs\": \"谈\"\n\t\t},\n\t\t\"請\": {\n\t\t\t\"jp\": \"請\",\n\t\t\t\"zht\": \"請\",\n\t\t\t\"zhs\": \"请\"\n\t\t},\n\t\t\"論\": {\n\t\t\t\"jp\": \"論\",\n\t\t\t\"zht\": \"論\",\n\t\t\t\"zhs\": \"论\"\n\t\t},\n\t\t\"諭\": {\n\t\t\t\"jp\": \"諭\",\n\t\t\t\"zht\": \"諭\",\n\t\t\t\"zhs\": \"谕\"\n\t\t},\n\t\t\"諸\": {\n\t\t\t\"jp\": \"諸\",\n\t\t\t\"zht\": \"諸\",\n\t\t\t\"zhs\": \"诸\"\n\t\t},\n\t\t\"諾\": {\n\t\t\t\"jp\": \"諾\",\n\t\t\t\"zht\": \"諾\",\n\t\t\t\"zhs\": \"诺\"\n\t\t},\n\t\t\"謀\": {\n\t\t\t\"jp\": \"謀\",\n\t\t\t\"zht\": \"謀\",\n\t\t\t\"zhs\": \"谋\"\n\t\t},\n\t\t\"謁\": {\n\t\t\t\"jp\": \"謁\",\n\t\t\t\"zht\": \"謁\",\n\t\t\t\"zhs\": \"谒\"\n\t\t},\n\t\t\"謎\": {\n\t\t\t\"jp\": \"謎\",\n\t\t\t\"zht\": \"謎\",\n\t\t\t\"zhs\": \"谜\"\n\t\t},\n\t\t\"謙\": {\n\t\t\t\"jp\": \"謙\",\n\t\t\t\"zht\": \"謙\",\n\t\t\t\"zhs\": \"谦\"\n\t\t},\n\t\t\"講\": {\n\t\t\t\"jp\": \"講\",\n\t\t\t\"zht\": \"講\",\n\t\t\t\"zhs\": \"讲\"\n\t\t},\n\t\t\"謝\": {\n\t\t\t\"jp\": \"謝\",\n\t\t\t\"zht\": \"謝\",\n\t\t\t\"zhs\": \"谢\"\n\t\t},\n\t\t\"謡\": {\n\t\t\t\"jp\": \"謡\",\n\t\t\t\"zht\": \"謠\",\n\t\t\t\"zhs\": \"谣\"\n\t\t},\n\t\t\"謹\": {\n\t\t\t\"jp\": \"謹\",\n\t\t\t\"zht\": \"謹\",\n\t\t\t\"zhs\": \"谨\"\n\t\t},\n\t\t\"識\": {\n\t\t\t\"jp\": \"識\",\n\t\t\t\"zht\": \"識\",\n\t\t\t\"zhs\": \"识\"\n\t\t},\n\t\t\"譜\": {\n\t\t\t\"jp\": \"譜\",\n\t\t\t\"zht\": \"譜\",\n\t\t\t\"zhs\": \"谱\"\n\t\t},\n\t\t\"議\": {\n\t\t\t\"jp\": \"議\",\n\t\t\t\"zht\": \"議\",\n\t\t\t\"zhs\": \"议\"\n\t\t},\n\t\t\"譲\": {\n\t\t\t\"jp\": \"譲\",\n\t\t\t\"zht\": \"讓\",\n\t\t\t\"zhs\": \"让\"\n\t\t},\n\t\t\"貝\": {\n\t\t\t\"jp\": \"貝\",\n\t\t\t\"zht\": \"貝\",\n\t\t\t\"zhs\": \"贝\"\n\t\t},\n\t\t\"貞\": {\n\t\t\t\"jp\": \"貞\",\n\t\t\t\"zht\": \"貞\",\n\t\t\t\"zhs\": \"贞\"\n\t\t},\n\t\t\"負\": {\n\t\t\t\"jp\": \"負\",\n\t\t\t\"zht\": \"負\",\n\t\t\t\"zhs\": \"负\"\n\t\t},\n\t\t\"財\": {\n\t\t\t\"jp\": \"財\",\n\t\t\t\"zht\": \"財\",\n\t\t\t\"zhs\": \"财\"\n\t\t},\n\t\t\"貢\": {\n\t\t\t\"jp\": \"貢\",\n\t\t\t\"zht\": \"貢\",\n\t\t\t\"zhs\": \"贡\"\n\t\t},\n\t\t\"貧\": {\n\t\t\t\"jp\": \"貧\",\n\t\t\t\"zht\": \"貧\",\n\t\t\t\"zhs\": \"贫\"\n\t\t},\n\t\t\"貨\": {\n\t\t\t\"jp\": \"貨\",\n\t\t\t\"zht\": \"貨\",\n\t\t\t\"zhs\": \"货\"\n\t\t},\n\t\t\"販\": {\n\t\t\t\"jp\": \"販\",\n\t\t\t\"zht\": \"販\",\n\t\t\t\"zhs\": \"贩\"\n\t\t},\n\t\t\"貪\": {\n\t\t\t\"jp\": \"貪\",\n\t\t\t\"zht\": \"貪\",\n\t\t\t\"zhs\": \"贪\"\n\t\t},\n\t\t\"責\": {\n\t\t\t\"jp\": \"責\",\n\t\t\t\"zht\": \"責\",\n\t\t\t\"zhs\": \"责\"\n\t\t},\n\t\t\"貯\": {\n\t\t\t\"jp\": \"貯\",\n\t\t\t\"zht\": \"貯\",\n\t\t\t\"zhs\": \"贮\"\n\t\t},\n\t\t\"貴\": {\n\t\t\t\"jp\": \"貴\",\n\t\t\t\"zht\": \"貴\",\n\t\t\t\"zhs\": \"贵\"\n\t\t},\n\t\t\"貸\": {\n\t\t\t\"jp\": \"貸\",\n\t\t\t\"zht\": \"貸\",\n\t\t\t\"zhs\": \"贷\"\n\t\t},\n\t\t\"費\": {\n\t\t\t\"jp\": \"費\",\n\t\t\t\"zht\": \"費\",\n\t\t\t\"zhs\": \"费\"\n\t\t},\n\t\t\"貿\": {\n\t\t\t\"jp\": \"貿\",\n\t\t\t\"zht\": \"貿\",\n\t\t\t\"zhs\": \"贸\"\n\t\t},\n\t\t\"賀\": {\n\t\t\t\"jp\": \"賀\",\n\t\t\t\"zht\": \"賀\",\n\t\t\t\"zhs\": \"贺\"\n\t\t},\n\t\t\"賃\": {\n\t\t\t\"jp\": \"賃\",\n\t\t\t\"zht\": \"賃\",\n\t\t\t\"zhs\": \"赁\"\n\t\t},\n\t\t\"賄\": {\n\t\t\t\"jp\": \"賄\",\n\t\t\t\"zht\": \"賄\",\n\t\t\t\"zhs\": \"贿\"\n\t\t},\n\t\t\"資\": {\n\t\t\t\"jp\": \"資\",\n\t\t\t\"zht\": \"資\",\n\t\t\t\"zhs\": \"资\"\n\t\t},\n\t\t\"賊\": {\n\t\t\t\"jp\": \"賊\",\n\t\t\t\"zht\": \"賊\",\n\t\t\t\"zhs\": \"贼\"\n\t\t},\n\t\t\"賎\": {\n\t\t\t\"jp\": \"賎\",\n\t\t\t\"zht\": \"賤\",\n\t\t\t\"zhs\": \"贱\"\n\t\t},\n\t\t\"賛\": {\n\t\t\t\"jp\": \"賛\",\n\t\t\t\"zht\": \"贊\",\n\t\t\t\"zhs\": \"赞\"\n\t\t},\n\t\t\"賜\": {\n\t\t\t\"jp\": \"賜\",\n\t\t\t\"zht\": \"賜\",\n\t\t\t\"zhs\": \"赐\"\n\t\t},\n\t\t\"賞\": {\n\t\t\t\"jp\": \"賞\",\n\t\t\t\"zht\": \"賞\",\n\t\t\t\"zhs\": \"赏\"\n\t\t},\n\t\t\"賠\": {\n\t\t\t\"jp\": \"賠\",\n\t\t\t\"zht\": \"賠\",\n\t\t\t\"zhs\": \"赔\"\n\t\t},\n\t\t\"賢\": {\n\t\t\t\"jp\": \"賢\",\n\t\t\t\"zht\": \"賢\",\n\t\t\t\"zhs\": \"贤\"\n\t\t},\n\t\t\"賦\": {\n\t\t\t\"jp\": \"賦\",\n\t\t\t\"zht\": \"賦\",\n\t\t\t\"zhs\": \"赋\"\n\t\t},\n\t\t\"質\": {\n\t\t\t\"jp\": \"質\",\n\t\t\t\"zht\": \"質\",\n\t\t\t\"zhs\": \"质\"\n\t\t},\n\t\t\"頼\": {\n\t\t\t\"jp\": \"頼\",\n\t\t\t\"zht\": \"賴\",\n\t\t\t\"zhs\": \"赖\"\n\t\t},\n\t\t\"贈\": {\n\t\t\t\"jp\": \"贈\",\n\t\t\t\"zht\": \"贈\",\n\t\t\t\"zhs\": \"赠\"\n\t\t},\n\t\t\"贓\": {\n\t\t\t\"jp\": \"贓\",\n\t\t\t\"zht\": \"贓\",\n\t\t\t\"zhs\": \"赃\"\n\t\t},\n\t\t\"躍\": {\n\t\t\t\"jp\": \"躍\",\n\t\t\t\"zht\": \"躍\",\n\t\t\t\"zhs\": \"跃\"\n\t\t},\n\t\t\"践\": {\n\t\t\t\"jp\": \"践\",\n\t\t\t\"zht\": \"踐\",\n\t\t\t\"zhs\": \"践\"\n\t\t},\n\t\t\"踪\": {\n\t\t\t\"jp\": \"踪\",\n\t\t\t\"zht\": \"蹤\",\n\t\t\t\"zhs\": \"踪\"\n\t\t},\n\t\t\"車\": {\n\t\t\t\"jp\": \"車\",\n\t\t\t\"zht\": \"車\",\n\t\t\t\"zhs\": \"车\"\n\t\t},\n\t\t\"軌\": {\n\t\t\t\"jp\": \"軌\",\n\t\t\t\"zht\": \"軌\",\n\t\t\t\"zhs\": \"轨\"\n\t\t},\n\t\t\"軒\": {\n\t\t\t\"jp\": \"軒\",\n\t\t\t\"zht\": \"軒\",\n\t\t\t\"zhs\": \"轩\"\n\t\t},\n\t\t\"軟\": {\n\t\t\t\"jp\": \"軟\",\n\t\t\t\"zht\": \"軟\",\n\t\t\t\"zhs\": \"软\"\n\t\t},\n\t\t\"転\": {\n\t\t\t\"jp\": \"転\",\n\t\t\t\"zht\": \"轉\",\n\t\t\t\"zhs\": \"转\"\n\t\t},\n\t\t\"軸\": {\n\t\t\t\"jp\": \"軸\",\n\t\t\t\"zht\": \"軸\",\n\t\t\t\"zhs\": \"轴\"\n\t\t},\n\t\t\"軽\": {\n\t\t\t\"jp\": \"軽\",\n\t\t\t\"zht\": \"輕\",\n\t\t\t\"zhs\": \"轻\"\n\t\t},\n\t\t\"較\": {\n\t\t\t\"jp\": \"較\",\n\t\t\t\"zht\": \"較\",\n\t\t\t\"zhs\": \"较\"\n\t\t},\n\t\t\"載\": {\n\t\t\t\"jp\": \"載\",\n\t\t\t\"zht\": \"載\",\n\t\t\t\"zhs\": \"载\"\n\t\t},\n\t\t\"輝\": {\n\t\t\t\"jp\": \"輝\",\n\t\t\t\"zht\": \"輝\",\n\t\t\t\"zhs\": \"辉\"\n\t\t},\n\t\t\"輩\": {\n\t\t\t\"jp\": \"輩\",\n\t\t\t\"zht\": \"輩\",\n\t\t\t\"zhs\": \"辈\"\n\t\t},\n\t\t\"輪\": {\n\t\t\t\"jp\": \"輪\",\n\t\t\t\"zht\": \"輪\",\n\t\t\t\"zhs\": \"轮\"\n\t\t},\n\t\t\"輸\": {\n\t\t\t\"jp\": \"輸\",\n\t\t\t\"zht\": \"輸\",\n\t\t\t\"zhs\": \"输\"\n\t\t},\n\t\t\"轄\": {\n\t\t\t\"jp\": \"轄\",\n\t\t\t\"zht\": \"轄\",\n\t\t\t\"zhs\": \"辖\"\n\t\t},\n\t\t\"辞\": {\n\t\t\t\"jp\": \"辞\",\n\t\t\t\"zht\": \"辭\",\n\t\t\t\"zhs\": \"辞\"\n\t\t},\n\t\t\"辺\": {\n\t\t\t\"jp\": \"辺\",\n\t\t\t\"zht\": \"邊\",\n\t\t\t\"zhs\": \"边\"\n\t\t},\n\t\t\"達\": {\n\t\t\t\"jp\": \"達\",\n\t\t\t\"zht\": \"達\",\n\t\t\t\"zhs\": \"达\"\n\t\t},\n\t\t\"遷\": {\n\t\t\t\"jp\": \"遷\",\n\t\t\t\"zht\": \"遷\",\n\t\t\t\"zhs\": \"迁\"\n\t\t},\n\t\t\"過\": {\n\t\t\t\"jp\": \"過\",\n\t\t\t\"zht\": \"過\",\n\t\t\t\"zhs\": \"过\"\n\t\t},\n\t\t\"運\": {\n\t\t\t\"jp\": \"運\",\n\t\t\t\"zht\": \"運\",\n\t\t\t\"zhs\": \"运\"\n\t\t},\n\t\t\"還\": {\n\t\t\t\"jp\": \"還\",\n\t\t\t\"zht\": \"還\",\n\t\t\t\"zhs\": \"还\"\n\t\t},\n\t\t\"進\": {\n\t\t\t\"jp\": \"進\",\n\t\t\t\"zht\": \"進\",\n\t\t\t\"zhs\": \"进\"\n\t\t},\n\t\t\"遠\": {\n\t\t\t\"jp\": \"遠\",\n\t\t\t\"zht\": \"遠\",\n\t\t\t\"zhs\": \"远\"\n\t\t},\n\t\t\"違\": {\n\t\t\t\"jp\": \"違\",\n\t\t\t\"zht\": \"違\",\n\t\t\t\"zhs\": \"违\"\n\t\t},\n\t\t\"連\": {\n\t\t\t\"jp\": \"連\",\n\t\t\t\"zht\": \"連\",\n\t\t\t\"zhs\": \"连\"\n\t\t},\n\t\t\"遅\": {\n\t\t\t\"jp\": \"遅\",\n\t\t\t\"zht\": \"遲\",\n\t\t\t\"zhs\": \"迟\"\n\t\t},\n\t\t\"適\": {\n\t\t\t\"jp\": \"適\",\n\t\t\t\"zht\": \"適\",\n\t\t\t\"zhs\": \"适\"\n\t\t},\n\t\t\"選\": {\n\t\t\t\"jp\": \"選\",\n\t\t\t\"zht\": \"選\",\n\t\t\t\"zhs\": \"选\"\n\t\t},\n\t\t\"逓\": {\n\t\t\t\"jp\": \"逓\",\n\t\t\t\"zht\": \"遞\",\n\t\t\t\"zhs\": \"递\"\n\t\t},\n\t\t\"遺\": {\n\t\t\t\"jp\": \"遺\",\n\t\t\t\"zht\": \"遺\",\n\t\t\t\"zhs\": \"遗\"\n\t\t},\n\t\t\"遥\": {\n\t\t\t\"jp\": \"遥\",\n\t\t\t\"zht\": \"遙\",\n\t\t\t\"zhs\": \"遥\"\n\t\t},\n\t\t\"郵\": {\n\t\t\t\"jp\": \"郵\",\n\t\t\t\"zht\": \"郵\",\n\t\t\t\"zhs\": \"邮\"\n\t\t},\n\t\t\"隣\": {\n\t\t\t\"jp\": \"隣\",\n\t\t\t\"zht\": \"鄰\",\n\t\t\t\"zhs\": \"邻\"\n\t\t},\n\t\t\"酔\": {\n\t\t\t\"jp\": \"酔\",\n\t\t\t\"zht\": \"醉\",\n\t\t\t\"zhs\": \"醉\"\n\t\t},\n\t\t\"醸\": {\n\t\t\t\"jp\": \"醸\",\n\t\t\t\"zht\": \"釀\",\n\t\t\t\"zhs\": \"酿\"\n\t\t},\n\t\t\"釈\": {\n\t\t\t\"jp\": \"釈\",\n\t\t\t\"zht\": \"釋\",\n\t\t\t\"zhs\": \"释\"\n\t\t},\n\t\t\"針\": {\n\t\t\t\"jp\": \"針\",\n\t\t\t\"zht\": \"針\",\n\t\t\t\"zhs\": \"针\"\n\t\t},\n\t\t\"釣\": {\n\t\t\t\"jp\": \"釣\",\n\t\t\t\"zht\": \"釣\",\n\t\t\t\"zhs\": \"钓\"\n\t\t},\n\t\t\"鈍\": {\n\t\t\t\"jp\": \"鈍\",\n\t\t\t\"zht\": \"鈍\",\n\t\t\t\"zhs\": \"钝\"\n\t\t},\n\t\t\"鈴\": {\n\t\t\t\"jp\": \"鈴\",\n\t\t\t\"zht\": \"鈴\",\n\t\t\t\"zhs\": \"铃\"\n\t\t},\n\t\t\"鉄\": {\n\t\t\t\"jp\": \"鉄\",\n\t\t\t\"zht\": \"鐵\",\n\t\t\t\"zhs\": \"铁\"\n\t\t},\n\t\t\"鉛\": {\n\t\t\t\"jp\": \"鉛\",\n\t\t\t\"zht\": \"鉛\",\n\t\t\t\"zhs\": \"铅\"\n\t\t},\n\t\t\"鑑\": {\n\t\t\t\"jp\": \"鑑\",\n\t\t\t\"zht\": \"鑑\",\n\t\t\t\"zhs\": \"鉴\"\n\t\t},\n\t\t\"銀\": {\n\t\t\t\"jp\": \"銀\",\n\t\t\t\"zht\": \"銀\",\n\t\t\t\"zhs\": \"银\"\n\t\t},\n\t\t\"銃\": {\n\t\t\t\"jp\": \"銃\",\n\t\t\t\"zht\": \"銃\",\n\t\t\t\"zhs\": \"铳\"\n\t\t},\n\t\t\"銅\": {\n\t\t\t\"jp\": \"銅\",\n\t\t\t\"zht\": \"銅\",\n\t\t\t\"zhs\": \"铜\"\n\t\t},\n\t\t\"銑\": {\n\t\t\t\"jp\": \"銑\",\n\t\t\t\"zht\": \"銑\",\n\t\t\t\"zhs\": \"铣\"\n\t\t},\n\t\t\"銘\": {\n\t\t\t\"jp\": \"銘\",\n\t\t\t\"zht\": \"銘\",\n\t\t\t\"zhs\": \"铭\"\n\t\t},\n\t\t\"銭\": {\n\t\t\t\"jp\": \"銭\",\n\t\t\t\"zht\": \"錢\",\n\t\t\t\"zhs\": \"钱\"\n\t\t},\n\t\t\"鋭\": {\n\t\t\t\"jp\": \"鋭\",\n\t\t\t\"zht\": \"鋭\",\n\t\t\t\"zhs\": \"锐\"\n\t\t},\n\t\t\"鋳\": {\n\t\t\t\"jp\": \"鋳\",\n\t\t\t\"zht\": \"鑄\",\n\t\t\t\"zhs\": \"铸\"\n\t\t},\n\t\t\"鋼\": {\n\t\t\t\"jp\": \"鋼\",\n\t\t\t\"zht\": \"鋼\",\n\t\t\t\"zhs\": \"钢\"\n\t\t},\n\t\t\"錘\": {\n\t\t\t\"jp\": \"錘\",\n\t\t\t\"zht\": \"錘\",\n\t\t\t\"zhs\": \"锤\"\n\t\t},\n\t\t\"錠\": {\n\t\t\t\"jp\": \"錠\",\n\t\t\t\"zht\": \"錠\",\n\t\t\t\"zhs\": \"锭\"\n\t\t},\n\t\t\"錯\": {\n\t\t\t\"jp\": \"錯\",\n\t\t\t\"zht\": \"錯\",\n\t\t\t\"zhs\": \"错\"\n\t\t},\n\t\t\"鍾\": {\n\t\t\t\"jp\": \"鍾\",\n\t\t\t\"zht\": \"鍾\",\n\t\t\t\"zhs\": \"钟\"\n\t\t},\n\t\t\"鎖\": {\n\t\t\t\"jp\": \"鎖\",\n\t\t\t\"zht\": \"鎖\",\n\t\t\t\"zhs\": \"锁\"\n\t\t},\n\t\t\"鎮\": {\n\t\t\t\"jp\": \"鎮\",\n\t\t\t\"zht\": \"鎮\",\n\t\t\t\"zhs\": \"镇\"\n\t\t},\n\t\t\"鏡\": {\n\t\t\t\"jp\": \"鏡\",\n\t\t\t\"zht\": \"鏡\",\n\t\t\t\"zhs\": \"镜\"\n\t\t},\n\t\t\"長\": {\n\t\t\t\"jp\": \"長\",\n\t\t\t\"zht\": \"長\",\n\t\t\t\"zhs\": \"长\"\n\t\t},\n\t\t\"門\": {\n\t\t\t\"jp\": \"門\",\n\t\t\t\"zht\": \"門\",\n\t\t\t\"zhs\": \"门\"\n\t\t},\n\t\t\"閉\": {\n\t\t\t\"jp\": \"閉\",\n\t\t\t\"zht\": \"閉\",\n\t\t\t\"zhs\": \"闭\"\n\t\t},\n\t\t\"閑\": {\n\t\t\t\"jp\": \"閑\",\n\t\t\t\"zht\": \"閒\",\n\t\t\t\"zhs\": \"闲\"\n\t\t},\n\t\t\"間\": {\n\t\t\t\"jp\": \"間\",\n\t\t\t\"zht\": \"間\",\n\t\t\t\"zhs\": \"间\"\n\t\t},\n\t\t\"閣\": {\n\t\t\t\"jp\": \"閣\",\n\t\t\t\"zht\": \"閣\",\n\t\t\t\"zhs\": \"阁\"\n\t\t},\n\t\t\"閥\": {\n\t\t\t\"jp\": \"閥\",\n\t\t\t\"zht\": \"閥\",\n\t\t\t\"zhs\": \"阀\"\n\t\t},\n\t\t\"閲\": {\n\t\t\t\"jp\": \"閲\",\n\t\t\t\"zht\": \"閲\",\n\t\t\t\"zhs\": \"阅\"\n\t\t},\n\t\t\"隊\": {\n\t\t\t\"jp\": \"隊\",\n\t\t\t\"zht\": \"隊\",\n\t\t\t\"zhs\": \"队\"\n\t\t},\n\t\t\"陽\": {\n\t\t\t\"jp\": \"陽\",\n\t\t\t\"zht\": \"陽\",\n\t\t\t\"zhs\": \"阳\"\n\t\t},\n\t\t\"陰\": {\n\t\t\t\"jp\": \"陰\",\n\t\t\t\"zht\": \"陰\",\n\t\t\t\"zhs\": \"阴\"\n\t\t},\n\t\t\"陣\": {\n\t\t\t\"jp\": \"陣\",\n\t\t\t\"zht\": \"陣\",\n\t\t\t\"zhs\": \"阵\"\n\t\t},\n\t\t\"階\": {\n\t\t\t\"jp\": \"階\",\n\t\t\t\"zht\": \"階\",\n\t\t\t\"zhs\": \"阶\"\n\t\t},\n\t\t\"際\": {\n\t\t\t\"jp\": \"際\",\n\t\t\t\"zht\": \"際\",\n\t\t\t\"zhs\": \"际\"\n\t\t},\n\t\t\"陸\": {\n\t\t\t\"jp\": \"陸\",\n\t\t\t\"zht\": \"陸\",\n\t\t\t\"zhs\": \"陆\"\n\t\t},\n\t\t\"陳\": {\n\t\t\t\"jp\": \"陳\",\n\t\t\t\"zht\": \"陳\",\n\t\t\t\"zhs\": \"陈\"\n\t\t},\n\t\t\"陥\": {\n\t\t\t\"jp\": \"陥\",\n\t\t\t\"zht\": \"陷\",\n\t\t\t\"zhs\": \"陷\"\n\t\t},\n\t\t\"随\": {\n\t\t\t\"jp\": \"随\",\n\t\t\t\"zht\": \"隨\",\n\t\t\t\"zhs\": \"随\"\n\t\t},\n\t\t\"隠\": {\n\t\t\t\"jp\": \"隠\",\n\t\t\t\"zht\": \"隱\",\n\t\t\t\"zhs\": \"隐\"\n\t\t},\n\t\t\"隷\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隸\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"難\": {\n\t\t\t\"jp\": \"難\",\n\t\t\t\"zht\": \"難\",\n\t\t\t\"zhs\": \"难\"\n\t\t},\n\t\t\"霧\": {\n\t\t\t\"jp\": \"霧\",\n\t\t\t\"zht\": \"霧\",\n\t\t\t\"zhs\": \"雾\"\n\t\t},\n\t\t\"静\": {\n\t\t\t\"jp\": \"静\",\n\t\t\t\"zht\": \"靜\",\n\t\t\t\"zhs\": \"静\"\n\t\t},\n\t\t\"頂\": {\n\t\t\t\"jp\": \"頂\",\n\t\t\t\"zht\": \"頂\",\n\t\t\t\"zhs\": \"顶\"\n\t\t},\n\t\t\"項\": {\n\t\t\t\"jp\": \"項\",\n\t\t\t\"zht\": \"項\",\n\t\t\t\"zhs\": \"项\"\n\t\t},\n\t\t\"順\": {\n\t\t\t\"jp\": \"順\",\n\t\t\t\"zht\": \"順\",\n\t\t\t\"zhs\": \"顺\"\n\t\t},\n\t\t\"頑\": {\n\t\t\t\"jp\": \"頑\",\n\t\t\t\"zht\": \"頑\",\n\t\t\t\"zhs\": \"顽\"\n\t\t},\n\t\t\"頒\": {\n\t\t\t\"jp\": \"頒\",\n\t\t\t\"zht\": \"頒\",\n\t\t\t\"zhs\": \"颁\"\n\t\t},\n\t\t\"領\": {\n\t\t\t\"jp\": \"領\",\n\t\t\t\"zht\": \"領\",\n\t\t\t\"zhs\": \"领\"\n\t\t},\n\t\t\"頻\": {\n\t\t\t\"jp\": \"頻\",\n\t\t\t\"zht\": \"頻\",\n\t\t\t\"zhs\": \"频\"\n\t\t},\n\t\t\"題\": {\n\t\t\t\"jp\": \"題\",\n\t\t\t\"zht\": \"題\",\n\t\t\t\"zhs\": \"题\"\n\t\t},\n\t\t\"額\": {\n\t\t\t\"jp\": \"額\",\n\t\t\t\"zht\": \"額\",\n\t\t\t\"zhs\": \"额\"\n\t\t},\n\t\t\"顔\": {\n\t\t\t\"jp\": \"顔\",\n\t\t\t\"zht\": \"顏\",\n\t\t\t\"zhs\": \"颜\"\n\t\t},\n\t\t\"風\": {\n\t\t\t\"jp\": \"風\",\n\t\t\t\"zht\": \"風\",\n\t\t\t\"zhs\": \"风\"\n\t\t},\n\t\t\"飛\": {\n\t\t\t\"jp\": \"飛\",\n\t\t\t\"zht\": \"飛\",\n\t\t\t\"zhs\": \"飞\"\n\t\t},\n\t\t\"飢\": {\n\t\t\t\"jp\": \"飢\",\n\t\t\t\"zht\": \"饑\",\n\t\t\t\"zhs\": \"饥\"\n\t\t},\n\t\t\"飯\": {\n\t\t\t\"jp\": \"飯\",\n\t\t\t\"zht\": \"飯\",\n\t\t\t\"zhs\": \"饭\"\n\t\t},\n\t\t\"飲\": {\n\t\t\t\"jp\": \"飲\",\n\t\t\t\"zht\": \"飲\",\n\t\t\t\"zhs\": \"饮\"\n\t\t},\n\t\t\"飼\": {\n\t\t\t\"jp\": \"飼\",\n\t\t\t\"zht\": \"飼\",\n\t\t\t\"zhs\": \"饲\"\n\t\t},\n\t\t\"飽\": {\n\t\t\t\"jp\": \"飽\",\n\t\t\t\"zht\": \"飽\",\n\t\t\t\"zhs\": \"饱\"\n\t\t},\n\t\t\"飾\": {\n\t\t\t\"jp\": \"飾\",\n\t\t\t\"zht\": \"飾\",\n\t\t\t\"zhs\": \"饰\"\n\t\t},\n\t\t\"餓\": {\n\t\t\t\"jp\": \"餓\",\n\t\t\t\"zht\": \"餓\",\n\t\t\t\"zhs\": \"饿\"\n\t\t},\n\t\t\"馬\": {\n\t\t\t\"jp\": \"馬\",\n\t\t\t\"zht\": \"馬\",\n\t\t\t\"zhs\": \"马\"\n\t\t},\n\t\t\"駅\": {\n\t\t\t\"jp\": \"駅\",\n\t\t\t\"zht\": \"驛\",\n\t\t\t\"zhs\": \"驿\"\n\t\t},\n\t\t\"駆\": {\n\t\t\t\"jp\": \"駆\",\n\t\t\t\"zht\": \"驅\",\n\t\t\t\"zhs\": \"驱\"\n\t\t},\n\t\t\"駐\": {\n\t\t\t\"jp\": \"駐\",\n\t\t\t\"zht\": \"駐\",\n\t\t\t\"zhs\": \"驻\"\n\t\t},\n\t\t\"騎\": {\n\t\t\t\"jp\": \"騎\",\n\t\t\t\"zht\": \"騎\",\n\t\t\t\"zhs\": \"骑\"\n\t\t},\n\t\t\"験\": {\n\t\t\t\"jp\": \"験\",\n\t\t\t\"zht\": \"驗\",\n\t\t\t\"zhs\": \"验\"\n\t\t},\n\t\t\"騒\": {\n\t\t\t\"jp\": \"騒\",\n\t\t\t\"zht\": \"騷\",\n\t\t\t\"zhs\": \"骚\"\n\t\t},\n\t\t\"騨\": {\n\t\t\t\"jp\": \"騨\",\n\t\t\t\"zht\": \"驔\",\n\t\t\t\"zhs\": \"驔\"\n\t\t},\n\t\t\"髄\": {\n\t\t\t\"jp\": \"髄\",\n\t\t\t\"zht\": \"髓\",\n\t\t\t\"zhs\": \"髓\"\n\t\t},\n\t\t\"魚\": {\n\t\t\t\"jp\": \"魚\",\n\t\t\t\"zht\": \"魚\",\n\t\t\t\"zhs\": \"鱼\"\n\t\t},\n\t\t\"魯\": {\n\t\t\t\"jp\": \"魯\",\n\t\t\t\"zht\": \"魯\",\n\t\t\t\"zhs\": \"鲁\"\n\t\t},\n\t\t\"鮮\": {\n\t\t\t\"jp\": \"鮮\",\n\t\t\t\"zht\": \"鮮\",\n\t\t\t\"zhs\": \"鲜\"\n\t\t},\n\t\t\"鯨\": {\n\t\t\t\"jp\": \"鯨\",\n\t\t\t\"zht\": \"鯨\",\n\t\t\t\"zhs\": \"鲸\"\n\t\t},\n\t\t\"鳥\": {\n\t\t\t\"jp\": \"鳥\",\n\t\t\t\"zht\": \"鳥\",\n\t\t\t\"zhs\": \"鸟\"\n\t\t},\n\t\t\"鳴\": {\n\t\t\t\"jp\": \"鳴\",\n\t\t\t\"zht\": \"鳴\",\n\t\t\t\"zhs\": \"鸣\"\n\t\t},\n\t\t\"麦\": {\n\t\t\t\"jp\": \"麦\",\n\t\t\t\"zht\": \"麥\",\n\t\t\t\"zhs\": \"麦\"\n\t\t},\n\t\t\"黄\": {\n\t\t\t\"jp\": \"黄\",\n\t\t\t\"zht\": \"黃\",\n\t\t\t\"zhs\": \"黄\"\n\t\t},\n\t\t\"黒\": {\n\t\t\t\"jp\": \"黒\",\n\t\t\t\"zht\": \"黑\",\n\t\t\t\"zhs\": \"黑\"\n\t\t},\n\t\t\"黙\": {\n\t\t\t\"jp\": \"黙\",\n\t\t\t\"zht\": \"默\",\n\t\t\t\"zhs\": \"默\"\n\t\t},\n\t\t\"齢\": {\n\t\t\t\"jp\": \"齢\",\n\t\t\t\"zht\": \"齡\",\n\t\t\t\"zhs\": \"龄\"\n\t\t}\n\t},\n\t\"zht\": {\n\t\t\"會\": {\n\t\t\t\"jp\": \"会\",\n\t\t\t\"zht\": \"會\",\n\t\t\t\"zhs\": \"会\"\n\t\t},\n\t\t\"箋\": {\n\t\t\t\"jp\": \"箋\",\n\t\t\t\"zht\": \"箋\",\n\t\t\t\"zhs\": \"笺\"\n\t\t},\n\t\t\"網\": {\n\t\t\t\"jp\": \"網\",\n\t\t\t\"zht\": \"網\",\n\t\t\t\"zhs\": \"网\"\n\t\t},\n\t\t\"處\": {\n\t\t\t\"jp\": \"処\",\n\t\t\t\"zht\": \"處\",\n\t\t\t\"zhs\": \"处\"\n\t\t},\n\t\t\"話\": {\n\t\t\t\"jp\": \"話\",\n\t\t\t\"zht\": \"話\",\n\t\t\t\"zhs\": \"话\"\n\t\t},\n\t\t\"萬\": {\n\t\t\t\"jp\": \"万\",\n\t\t\t\"zht\": \"萬\",\n\t\t\t\"zhs\": \"万\"\n\t\t},\n\t\t\"與\": {\n\t\t\t\"jp\": \"与\",\n\t\t\t\"zht\": \"與\",\n\t\t\t\"zhs\": \"与\"\n\t\t},\n\t\t\"醜\": {\n\t\t\t\"jp\": \"醜\",\n\t\t\t\"zht\": \"醜\",\n\t\t\t\"zhs\": \"丑\"\n\t\t},\n\t\t\"專\": {\n\t\t\t\"jp\": \"専\",\n\t\t\t\"zht\": \"專\",\n\t\t\t\"zhs\": \"专\"\n\t\t},\n\t\t\"業\": {\n\t\t\t\"jp\": \"業\",\n\t\t\t\"zht\": \"業\",\n\t\t\t\"zhs\": \"业\"\n\t\t},\n\t\t\"東\": {\n\t\t\t\"jp\": \"東\",\n\t\t\t\"zht\": \"東\",\n\t\t\t\"zhs\": \"东\"\n\t\t},\n\t\t\"兩\": {\n\t\t\t\"jp\": \"両\",\n\t\t\t\"zht\": \"兩\",\n\t\t\t\"zhs\": \"两\"\n\t\t},\n\t\t\"嚴\": {\n\t\t\t\"jp\": \"厳\",\n\t\t\t\"zht\": \"嚴\",\n\t\t\t\"zhs\": \"严\"\n\t\t},\n\t\t\"並\": {\n\t\t\t\"jp\": \"並\",\n\t\t\t\"zht\": \"並\",\n\t\t\t\"zhs\": \"并\"\n\t\t},\n\t\t\"喪\": {\n\t\t\t\"jp\": \"喪\",\n\t\t\t\"zht\": \"喪\",\n\t\t\t\"zhs\": \"丧\"\n\t\t},\n\t\t\"豐\": {\n\t\t\t\"jp\": \"豊\",\n\t\t\t\"zht\": \"豐\",\n\t\t\t\"zhs\": \"丰\"\n\t\t},\n\t\t\"臨\": {\n\t\t\t\"jp\": \"臨\",\n\t\t\t\"zht\": \"臨\",\n\t\t\t\"zhs\": \"临\"\n\t\t},\n\t\t\"為\": {\n\t\t\t\"jp\": \"為\",\n\t\t\t\"zht\": \"為\",\n\t\t\t\"zhs\": \"为\"\n\t\t},\n\t\t\"麗\": {\n\t\t\t\"jp\": \"麗\",\n\t\t\t\"zht\": \"麗\",\n\t\t\t\"zhs\": \"丽\"\n\t\t},\n\t\t\"舉\": {\n\t\t\t\"jp\": \"挙\",\n\t\t\t\"zht\": \"舉\",\n\t\t\t\"zhs\": \"举\"\n\t\t},\n\t\t\"迺\": {\n\t\t\t\"jp\": \"廼\",\n\t\t\t\"zht\": \"迺\",\n\t\t\t\"zhs\": \"迺\"\n\t\t},\n\t\t\"義\": {\n\t\t\t\"jp\": \"義\",\n\t\t\t\"zht\": \"義\",\n\t\t\t\"zhs\": \"义\"\n\t\t},\n\t\t\"樂\": {\n\t\t\t\"jp\": \"楽\",\n\t\t\t\"zht\": \"樂\",\n\t\t\t\"zhs\": \"乐\"\n\t\t},\n\t\t\"乘\": {\n\t\t\t\"jp\": \"乗\",\n\t\t\t\"zht\": \"乘\",\n\t\t\t\"zhs\": \"乘\"\n\t\t},\n\t\t\"習\": {\n\t\t\t\"jp\": \"習\",\n\t\t\t\"zht\": \"習\",\n\t\t\t\"zhs\": \"习\"\n\t\t},\n\t\t\"鄉\": {\n\t\t\t\"jp\": \"郷\",\n\t\t\t\"zht\": \"鄉\",\n\t\t\t\"zhs\": \"乡\"\n\t\t},\n\t\t\"書\": {\n\t\t\t\"jp\": \"書\",\n\t\t\t\"zht\": \"書\",\n\t\t\t\"zhs\": \"书\"\n\t\t},\n\t\t\"買\": {\n\t\t\t\"jp\": \"買\",\n\t\t\t\"zht\": \"買\",\n\t\t\t\"zhs\": \"买\"\n\t\t},\n\t\t\"亂\": {\n\t\t\t\"jp\": \"乱\",\n\t\t\t\"zht\": \"亂\",\n\t\t\t\"zhs\": \"乱\"\n\t\t},\n\t\t\"龜\": {\n\t\t\t\"jp\": \"亀\",\n\t\t\t\"zht\": \"龜\",\n\t\t\t\"zhs\": \"龟\"\n\t\t},\n\t\t\"貳\": {\n\t\t\t\"jp\": \"弐\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"雲\": {\n\t\t\t\"jp\": \"雲\",\n\t\t\t\"zht\": \"雲\",\n\t\t\t\"zhs\": \"云\"\n\t\t},\n\t\t\"亞\": {\n\t\t\t\"jp\": \"亜\",\n\t\t\t\"zht\": \"亞\",\n\t\t\t\"zhs\": \"亚\"\n\t\t},\n\t\t\"產\": {\n\t\t\t\"jp\": \"産\",\n\t\t\t\"zht\": \"產\",\n\t\t\t\"zhs\": \"产\"\n\t\t},\n\t\t\"畝\": {\n\t\t\t\"jp\": \"畝\",\n\t\t\t\"zht\": \"畝\",\n\t\t\t\"zhs\": \"亩\"\n\t\t},\n\t\t\"親\": {\n\t\t\t\"jp\": \"親\",\n\t\t\t\"zht\": \"親\",\n\t\t\t\"zhs\": \"亲\"\n\t\t},\n\t\t\"億\": {\n\t\t\t\"jp\": \"億\",\n\t\t\t\"zht\": \"億\",\n\t\t\t\"zhs\": \"亿\"\n\t\t},\n\t\t\"僕\": {\n\t\t\t\"jp\": \"僕\",\n\t\t\t\"zht\": \"僕\",\n\t\t\t\"zhs\": \"仆\"\n\t\t},\n\t\t\"從\": {\n\t\t\t\"jp\": \"従\",\n\t\t\t\"zht\": \"從\",\n\t\t\t\"zhs\": \"从\"\n\t\t},\n\t\t\"佛\": {\n\t\t\t\"jp\": \"仏\",\n\t\t\t\"zht\": \"佛\",\n\t\t\t\"zhs\": \"佛\"\n\t\t},\n\t\t\"倉\": {\n\t\t\t\"jp\": \"倉\",\n\t\t\t\"zht\": \"倉\",\n\t\t\t\"zhs\": \"仓\"\n\t\t},\n\t\t\"儀\": {\n\t\t\t\"jp\": \"儀\",\n\t\t\t\"zht\": \"儀\",\n\t\t\t\"zhs\": \"仪\"\n\t\t},\n\t\t\"假\": {\n\t\t\t\"jp\": \"仮\",\n\t\t\t\"zht\": \"假\",\n\t\t\t\"zhs\": \"假\"\n\t\t},\n\t\t\"價\": {\n\t\t\t\"jp\": \"価\",\n\t\t\t\"zht\": \"價\",\n\t\t\t\"zhs\": \"价\"\n\t\t},\n\t\t\"眾\": {\n\t\t\t\"jp\": \"衆\",\n\t\t\t\"zht\": \"眾\",\n\t\t\t\"zhs\": \"众\"\n\t\t},\n\t\t\"優\": {\n\t\t\t\"jp\": \"優\",\n\t\t\t\"zht\": \"優\",\n\t\t\t\"zhs\": \"优\"\n\t\t},\n\t\t\"傳\": {\n\t\t\t\"jp\": \"伝\",\n\t\t\t\"zht\": \"傳\",\n\t\t\t\"zhs\": \"传\"\n\t\t},\n\t\t\"傘\": {\n\t\t\t\"jp\": \"傘\",\n\t\t\t\"zht\": \"傘\",\n\t\t\t\"zhs\": \"伞\"\n\t\t},\n\t\t\"偉\": {\n\t\t\t\"jp\": \"偉\",\n\t\t\t\"zht\": \"偉\",\n\t\t\t\"zhs\": \"伟\"\n\t\t},\n\t\t\"傷\": {\n\t\t\t\"jp\": \"傷\",\n\t\t\t\"zht\": \"傷\",\n\t\t\t\"zhs\": \"伤\"\n\t\t},\n\t\t\"倫\": {\n\t\t\t\"jp\": \"倫\",\n\t\t\t\"zht\": \"倫\",\n\t\t\t\"zhs\": \"伦\"\n\t\t},\n\t\t\"偽\": {\n\t\t\t\"jp\": \"偽\",\n\t\t\t\"zht\": \"偽\",\n\t\t\t\"zhs\": \"伪\"\n\t\t},\n\t\t\"體\": {\n\t\t\t\"jp\": \"体\",\n\t\t\t\"zht\": \"體\",\n\t\t\t\"zhs\": \"体\"\n\t\t},\n\t\t\"餘\": {\n\t\t\t\"jp\": \"余\",\n\t\t\t\"zht\": \"餘\",\n\t\t\t\"zhs\": \"余\"\n\t\t},\n\t\t\"來\": {\n\t\t\t\"jp\": \"来\",\n\t\t\t\"zht\": \"來\",\n\t\t\t\"zhs\": \"来\"\n\t\t},\n\t\t\"偵\": {\n\t\t\t\"jp\": \"偵\",\n\t\t\t\"zht\": \"偵\",\n\t\t\t\"zhs\": \"侦\"\n\t\t},\n\t\t\"側\": {\n\t\t\t\"jp\": \"側\",\n\t\t\t\"zht\": \"側\",\n\t\t\t\"zhs\": \"侧\"\n\t\t},\n\t\t\"儉\": {\n\t\t\t\"jp\": \"倹\",\n\t\t\t\"zht\": \"儉\",\n\t\t\t\"zhs\": \"俭\"\n\t\t},\n\t\t\"俱\": {\n\t\t\t\"jp\": \"倶\",\n\t\t\t\"zht\": \"俱\",\n\t\t\t\"zhs\": \"俱\"\n\t\t},\n\t\t\"債\": {\n\t\t\t\"jp\": \"債\",\n\t\t\t\"zht\": \"債\",\n\t\t\t\"zhs\": \"债\"\n\t\t},\n\t\t\"傾\": {\n\t\t\t\"jp\": \"傾\",\n\t\t\t\"zht\": \"傾\",\n\t\t\t\"zhs\": \"倾\"\n\t\t},\n\t\t\"償\": {\n\t\t\t\"jp\": \"償\",\n\t\t\t\"zht\": \"償\",\n\t\t\t\"zhs\": \"偿\"\n\t\t},\n\t\t\"傑\": {\n\t\t\t\"jp\": \"傑\",\n\t\t\t\"zht\": \"傑\",\n\t\t\t\"zhs\": \"杰\"\n\t\t},\n\t\t\"備\": {\n\t\t\t\"jp\": \"備\",\n\t\t\t\"zht\": \"備\",\n\t\t\t\"zhs\": \"备\"\n\t\t},\n\t\t\"當\": {\n\t\t\t\"jp\": \"当\",\n\t\t\t\"zht\": \"當\",\n\t\t\t\"zhs\": \"当\"\n\t\t},\n\t\t\"盡\": {\n\t\t\t\"jp\": \"尽\",\n\t\t\t\"zht\": \"盡\",\n\t\t\t\"zhs\": \"尽\"\n\t\t},\n\t\t\"兒\": {\n\t\t\t\"jp\": \"児\",\n\t\t\t\"zht\": \"兒\",\n\t\t\t\"zhs\": \"儿\"\n\t\t},\n\t\t\"黨\": {\n\t\t\t\"jp\": \"党\",\n\t\t\t\"zht\": \"黨\",\n\t\t\t\"zhs\": \"党\"\n\t\t},\n\t\t\"內\": {\n\t\t\t\"jp\": \"内\",\n\t\t\t\"zht\": \"內\",\n\t\t\t\"zhs\": \"内\"\n\t\t},\n\t\t\"關\": {\n\t\t\t\"jp\": \"関\",\n\t\t\t\"zht\": \"關\",\n\t\t\t\"zhs\": \"关\"\n\t\t},\n\t\t\"興\": {\n\t\t\t\"jp\": \"興\",\n\t\t\t\"zht\": \"興\",\n\t\t\t\"zhs\": \"兴\"\n\t\t},\n\t\t\"養\": {\n\t\t\t\"jp\": \"養\",\n\t\t\t\"zht\": \"養\",\n\t\t\t\"zhs\": \"养\"\n\t\t},\n\t\t\"獸\": {\n\t\t\t\"jp\": \"獣\",\n\t\t\t\"zht\": \"獸\",\n\t\t\t\"zhs\": \"兽\"\n\t\t},\n\t\t\"圓\": {\n\t\t\t\"jp\": \"円\",\n\t\t\t\"zht\": \"圓\",\n\t\t\t\"zhs\": \"圆\"\n\t\t},\n\t\t\"寫\": {\n\t\t\t\"jp\": \"写\",\n\t\t\t\"zht\": \"寫\",\n\t\t\t\"zhs\": \"写\"\n\t\t},\n\t\t\"軍\": {\n\t\t\t\"jp\": \"軍\",\n\t\t\t\"zht\": \"軍\",\n\t\t\t\"zhs\": \"军\"\n\t\t},\n\t\t\"農\": {\n\t\t\t\"jp\": \"農\",\n\t\t\t\"zht\": \"農\",\n\t\t\t\"zhs\": \"农\"\n\t\t},\n\t\t\"富\": {\n\t\t\t\"jp\": \"冨\",\n\t\t\t\"zht\": \"富\",\n\t\t\t\"zhs\": \"富\"\n\t\t},\n\t\t\"冰\": {\n\t\t\t\"jp\": \"氷\",\n\t\t\t\"zht\": \"冰\",\n\t\t\t\"zhs\": \"冰\"\n\t\t},\n\t\t\"衝\": {\n\t\t\t\"jp\": \"衝\",\n\t\t\t\"zht\": \"衝\",\n\t\t\t\"zhs\": \"冲\"\n\t\t},\n\t\t\"決\": {\n\t\t\t\"jp\": \"決\",\n\t\t\t\"zht\": \"決\",\n\t\t\t\"zhs\": \"决\"\n\t\t},\n\t\t\"凍\": {\n\t\t\t\"jp\": \"凍\",\n\t\t\t\"zht\": \"凍\",\n\t\t\t\"zhs\": \"冻\"\n\t\t},\n\t\t\"塗\": {\n\t\t\t\"jp\": \"塗\",\n\t\t\t\"zht\": \"塗\",\n\t\t\t\"zhs\": \"涂\"\n\t\t},\n\t\t\"幾\": {\n\t\t\t\"jp\": \"幾\",\n\t\t\t\"zht\": \"幾\",\n\t\t\t\"zhs\": \"几\"\n\t\t},\n\t\t\"擊\": {\n\t\t\t\"jp\": \"撃\",\n\t\t\t\"zht\": \"擊\",\n\t\t\t\"zhs\": \"击\"\n\t\t},\n\t\t\"劃\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"劃\",\n\t\t\t\"zhs\": \"划\"\n\t\t},\n\t\t\"畫\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"畫\",\n\t\t\t\"zhs\": \"画\"\n\t\t},\n\t\t\"則\": {\n\t\t\t\"jp\": \"則\",\n\t\t\t\"zht\": \"則\",\n\t\t\t\"zhs\": \"则\"\n\t\t},\n\t\t\"剛\": {\n\t\t\t\"jp\": \"剛\",\n\t\t\t\"zht\": \"剛\",\n\t\t\t\"zhs\": \"刚\"\n\t\t},\n\t\t\"創\": {\n\t\t\t\"jp\": \"創\",\n\t\t\t\"zht\": \"創\",\n\t\t\t\"zhs\": \"创\"\n\t\t},\n\t\t\"別\": {\n\t\t\t\"jp\": \"別\",\n\t\t\t\"zht\": \"別\",\n\t\t\t\"zhs\": \"别\"\n\t\t},\n\t\t\"製\": {\n\t\t\t\"jp\": \"製\",\n\t\t\t\"zht\": \"製\",\n\t\t\t\"zhs\": \"制\"\n\t\t},\n\t\t\"卷\": {\n\t\t\t\"jp\": \"巻\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"剎\": {\n\t\t\t\"jp\": \"刹\",\n\t\t\t\"zht\": \"剎\",\n\t\t\t\"zhs\": \"刹\"\n\t\t},\n\t\t\"劑\": {\n\t\t\t\"jp\": \"剤\",\n\t\t\t\"zht\": \"劑\",\n\t\t\t\"zhs\": \"剂\"\n\t\t},\n\t\t\"劍\": {\n\t\t\t\"jp\": \"剣\",\n\t\t\t\"zht\": \"劍\",\n\t\t\t\"zhs\": \"剑\"\n\t\t},\n\t\t\"劇\": {\n\t\t\t\"jp\": \"劇\",\n\t\t\t\"zht\": \"劇\",\n\t\t\t\"zhs\": \"剧\"\n\t\t},\n\t\t\"剩\": {\n\t\t\t\"jp\": \"剰\",\n\t\t\t\"zht\": \"剩\",\n\t\t\t\"zhs\": \"剩\"\n\t\t},\n\t\t\"勸\": {\n\t\t\t\"jp\": \"勧\",\n\t\t\t\"zht\": \"勸\",\n\t\t\t\"zhs\": \"劝\"\n\t\t},\n\t\t\"務\": {\n\t\t\t\"jp\": \"務\",\n\t\t\t\"zht\": \"務\",\n\t\t\t\"zhs\": \"务\"\n\t\t},\n\t\t\"動\": {\n\t\t\t\"jp\": \"動\",\n\t\t\t\"zht\": \"動\",\n\t\t\t\"zhs\": \"动\"\n\t\t},\n\t\t\"勵\": {\n\t\t\t\"jp\": \"励\",\n\t\t\t\"zht\": \"勵\",\n\t\t\t\"zhs\": \"励\"\n\t\t},\n\t\t\"勞\": {\n\t\t\t\"jp\": \"労\",\n\t\t\t\"zht\": \"勞\",\n\t\t\t\"zhs\": \"劳\"\n\t\t},\n\t\t\"勢\": {\n\t\t\t\"jp\": \"勢\",\n\t\t\t\"zht\": \"勢\",\n\t\t\t\"zhs\": \"势\"\n\t\t},\n\t\t\"勳\": {\n\t\t\t\"jp\": \"勲\",\n\t\t\t\"zht\": \"勳\",\n\t\t\t\"zhs\": \"勋\"\n\t\t},\n\t\t\"勝\": {\n\t\t\t\"jp\": \"勝\",\n\t\t\t\"zht\": \"勝\",\n\t\t\t\"zhs\": \"胜\"\n\t\t},\n\t\t\"區\": {\n\t\t\t\"jp\": \"区\",\n\t\t\t\"zht\": \"區\",\n\t\t\t\"zhs\": \"区\"\n\t\t},\n\t\t\"醫\": {\n\t\t\t\"jp\": \"医\",\n\t\t\t\"zht\": \"醫\",\n\t\t\t\"zhs\": \"医\"\n\t\t},\n\t\t\"華\": {\n\t\t\t\"jp\": \"華\",\n\t\t\t\"zht\": \"華\",\n\t\t\t\"zhs\": \"华\"\n\t\t},\n\t\t\"協\": {\n\t\t\t\"jp\": \"協\",\n\t\t\t\"zht\": \"協\",\n\t\t\t\"zhs\": \"协\"\n\t\t},\n\t\t\"單\": {\n\t\t\t\"jp\": \"単\",\n\t\t\t\"zht\": \"單\",\n\t\t\t\"zhs\": \"单\"\n\t\t},\n\t\t\"賣\": {\n\t\t\t\"jp\": \"売\",\n\t\t\t\"zht\": \"賣\",\n\t\t\t\"zhs\": \"卖\"\n\t\t},\n\t\t\"衛\": {\n\t\t\t\"jp\": \"衛\",\n\t\t\t\"zht\": \"衛\",\n\t\t\t\"zhs\": \"卫\"\n\t\t},\n\t\t\"廳\": {\n\t\t\t\"jp\": \"庁\",\n\t\t\t\"zht\": \"廳\",\n\t\t\t\"zhs\": \"厅\"\n\t\t},\n\t\t\"壓\": {\n\t\t\t\"jp\": \"圧\",\n\t\t\t\"zht\": \"壓\",\n\t\t\t\"zhs\": \"压\"\n\t\t},\n\t\t\"縣\": {\n\t\t\t\"jp\": \"県\",\n\t\t\t\"zht\": \"縣\",\n\t\t\t\"zhs\": \"县\"\n\t\t},\n\t\t\"參\": {\n\t\t\t\"jp\": \"参\",\n\t\t\t\"zht\": \"參\",\n\t\t\t\"zhs\": \"参\"\n\t\t},\n\t\t\"雙\": {\n\t\t\t\"jp\": \"双\",\n\t\t\t\"zht\": \"雙\",\n\t\t\t\"zhs\": \"双\"\n\t\t},\n\t\t\"收\": {\n\t\t\t\"jp\": \"収\",\n\t\t\t\"zht\": \"收\",\n\t\t\t\"zhs\": \"收\"\n\t\t},\n\t\t\"發\": {\n\t\t\t\"jp\": \"発\",\n\t\t\t\"zht\": \"發\",\n\t\t\t\"zhs\": \"发\"\n\t\t},\n\t\t\"變\": {\n\t\t\t\"jp\": \"変\",\n\t\t\t\"zht\": \"變\",\n\t\t\t\"zhs\": \"变\"\n\t\t},\n\t\t\"疊\": {\n\t\t\t\"jp\": \"畳\",\n\t\t\t\"zht\": \"疊\",\n\t\t\t\"zhs\": \"叠\"\n\t\t},\n\t\t\"號\": {\n\t\t\t\"jp\": \"号\",\n\t\t\t\"zht\": \"號\",\n\t\t\t\"zhs\": \"号\"\n\t\t},\n\t\t\"嘆\": {\n\t\t\t\"jp\": \"嘆\",\n\t\t\t\"zht\": \"嘆\",\n\t\t\t\"zhs\": \"叹\"\n\t\t},\n\t\t\"嚇\": {\n\t\t\t\"jp\": \"嚇\",\n\t\t\t\"zht\": \"嚇\",\n\t\t\t\"zhs\": \"吓\"\n\t\t},\n\t\t\"聽\": {\n\t\t\t\"jp\": \"聴\",\n\t\t\t\"zht\": \"聽\",\n\t\t\t\"zhs\": \"听\"\n\t\t},\n\t\t\"啟\": {\n\t\t\t\"jp\": \"啓\",\n\t\t\t\"zht\": \"啟\",\n\t\t\t\"zhs\": \"启\"\n\t\t},\n\t\t\"員\": {\n\t\t\t\"jp\": \"員\",\n\t\t\t\"zht\": \"員\",\n\t\t\t\"zhs\": \"员\"\n\t\t},\n\t\t\"諮\": {\n\t\t\t\"jp\": \"諮\",\n\t\t\t\"zht\": \"諮\",\n\t\t\t\"zhs\": \"谘\"\n\t\t},\n\t\t\"鹹\": {\n\t\t\t\"jp\": \"鹹\",\n\t\t\t\"zht\": \"鹹\",\n\t\t\t\"zhs\": \"咸\"\n\t\t},\n\t\t\"響\": {\n\t\t\t\"jp\": \"響\",\n\t\t\t\"zht\": \"響\",\n\t\t\t\"zhs\": \"响\"\n\t\t},\n\t\t\"問\": {\n\t\t\t\"jp\": \"問\",\n\t\t\t\"zht\": \"問\",\n\t\t\t\"zhs\": \"问\"\n\t\t},\n\t\t\"營\": {\n\t\t\t\"jp\": \"営\",\n\t\t\t\"zht\": \"營\",\n\t\t\t\"zhs\": \"营\"\n\t\t},\n\t\t\"噴\": {\n\t\t\t\"jp\": \"噴\",\n\t\t\t\"zht\": \"噴\",\n\t\t\t\"zhs\": \"喷\"\n\t\t},\n\t\t\"囑\": {\n\t\t\t\"jp\": \"嘱\",\n\t\t\t\"zht\": \"囑\",\n\t\t\t\"zhs\": \"嘱\"\n\t\t},\n\t\t\"蘇\": {\n\t\t\t\"jp\": \"蘇\",\n\t\t\t\"zht\": \"蘇\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"團\": {\n\t\t\t\"jp\": \"団\",\n\t\t\t\"zht\": \"團\",\n\t\t\t\"zhs\": \"团\"\n\t\t},\n\t\t\"園\": {\n\t\t\t\"jp\": \"園\",\n\t\t\t\"zht\": \"園\",\n\t\t\t\"zhs\": \"园\"\n\t\t},\n\t\t\"國\": {\n\t\t\t\"jp\": \"国\",\n\t\t\t\"zht\": \"國\",\n\t\t\t\"zhs\": \"国\"\n\t\t},\n\t\t\"圍\": {\n\t\t\t\"jp\": \"囲\",\n\t\t\t\"zht\": \"圍\",\n\t\t\t\"zhs\": \"围\"\n\t\t},\n\t\t\"圖\": {\n\t\t\t\"jp\": \"図\",\n\t\t\t\"zht\": \"圖\",\n\t\t\t\"zhs\": \"图\"\n\t\t},\n\t\t\"圈\": {\n\t\t\t\"jp\": \"圏\",\n\t\t\t\"zht\": \"圈\",\n\t\t\t\"zhs\": \"圈\"\n\t\t},\n\t\t\"聖\": {\n\t\t\t\"jp\": \"聖\",\n\t\t\t\"zht\": \"聖\",\n\t\t\t\"zhs\": \"圣\"\n\t\t},\n\t\t\"場\": {\n\t\t\t\"jp\": \"場\",\n\t\t\t\"zht\": \"場\",\n\t\t\t\"zhs\": \"场\"\n\t\t},\n\t\t\"壞\": {\n\t\t\t\"jp\": \"壊\",\n\t\t\t\"zht\": \"壞\",\n\t\t\t\"zhs\": \"坏\"\n\t\t},\n\t\t\"塊\": {\n\t\t\t\"jp\": \"塊\",\n\t\t\t\"zht\": \"塊\",\n\t\t\t\"zhs\": \"块\"\n\t\t},\n\t\t\"堅\": {\n\t\t\t\"jp\": \"堅\",\n\t\t\t\"zht\": \"堅\",\n\t\t\t\"zhs\": \"坚\"\n\t\t},\n\t\t\"壇\": {\n\t\t\t\"jp\": \"壇\",\n\t\t\t\"zht\": \"壇\",\n\t\t\t\"zhs\": \"坛\"\n\t\t},\n\t\t\"墳\": {\n\t\t\t\"jp\": \"墳\",\n\t\t\t\"zht\": \"墳\",\n\t\t\t\"zhs\": \"坟\"\n\t\t},\n\t\t\"墜\": {\n\t\t\t\"jp\": \"墜\",\n\t\t\t\"zht\": \"墜\",\n\t\t\t\"zhs\": \"坠\"\n\t\t},\n\t\t\"壘\": {\n\t\t\t\"jp\": \"塁\",\n\t\t\t\"zht\": \"壘\",\n\t\t\t\"zhs\": \"垒\"\n\t\t},\n\t\t\"墾\": {\n\t\t\t\"jp\": \"墾\",\n\t\t\t\"zht\": \"墾\",\n\t\t\t\"zhs\": \"垦\"\n\t\t},\n\t\t\"執\": {\n\t\t\t\"jp\": \"執\",\n\t\t\t\"zht\": \"執\",\n\t\t\t\"zhs\": \"执\"\n\t\t},\n\t\t\"墮\": {\n\t\t\t\"jp\": \"堕\",\n\t\t\t\"zht\": \"墮\",\n\t\t\t\"zhs\": \"堕\"\n\t\t},\n\t\t\"報\": {\n\t\t\t\"jp\": \"報\",\n\t\t\t\"zht\": \"報\",\n\t\t\t\"zhs\": \"报\"\n\t\t},\n\t\t\"鹽\": {\n\t\t\t\"jp\": \"塩\",\n\t\t\t\"zht\": \"鹽\",\n\t\t\t\"zhs\": \"盐\"\n\t\t},\n\t\t\"增\": {\n\t\t\t\"jp\": \"増\",\n\t\t\t\"zht\": \"增\",\n\t\t\t\"zhs\": \"增\"\n\t\t},\n\t\t\"壤\": {\n\t\t\t\"jp\": \"壌\",\n\t\t\t\"zht\": \"壤\",\n\t\t\t\"zhs\": \"壤\"\n\t\t},\n\t\t\"壯\": {\n\t\t\t\"jp\": \"壮\",\n\t\t\t\"zht\": \"壯\",\n\t\t\t\"zhs\": \"壮\"\n\t\t},\n\t\t\"聲\": {\n\t\t\t\"jp\": \"声\",\n\t\t\t\"zht\": \"聲\",\n\t\t\t\"zhs\": \"声\"\n\t\t},\n\t\t\"壹\": {\n\t\t\t\"jp\": \"壱\",\n\t\t\t\"zht\": \"壹\",\n\t\t\t\"zhs\": \"壹\"\n\t\t},\n\t\t\"壽\": {\n\t\t\t\"jp\": \"寿\",\n\t\t\t\"zht\": \"壽\",\n\t\t\t\"zhs\": \"寿\"\n\t\t},\n\t\t\"夢\": {\n\t\t\t\"jp\": \"夢\",\n\t\t\t\"zht\": \"夢\",\n\t\t\t\"zhs\": \"梦\"\n\t\t},\n\t\t\"頭\": {\n\t\t\t\"jp\": \"頭\",\n\t\t\t\"zht\": \"頭\",\n\t\t\t\"zhs\": \"头\"\n\t\t},\n\t\t\"誇\": {\n\t\t\t\"jp\": \"誇\",\n\t\t\t\"zht\": \"誇\",\n\t\t\t\"zhs\": \"夸\"\n\t\t},\n\t\t\"奪\": {\n\t\t\t\"jp\": \"奪\",\n\t\t\t\"zht\": \"奪\",\n\t\t\t\"zhs\": \"夺\"\n\t\t},\n\t\t\"奮\": {\n\t\t\t\"jp\": \"奮\",\n\t\t\t\"zht\": \"奮\",\n\t\t\t\"zhs\": \"奋\"\n\t\t},\n\t\t\"獎\": {\n\t\t\t\"jp\": \"奨\",\n\t\t\t\"zht\": \"獎\",\n\t\t\t\"zhs\": \"奖\"\n\t\t},\n\t\t\"妝\": {\n\t\t\t\"jp\": \"粧\",\n\t\t\t\"zht\": \"妝\",\n\t\t\t\"zhs\": \"妆\"\n\t\t},\n\t\t\"婦\": {\n\t\t\t\"jp\": \"婦\",\n\t\t\t\"zht\": \"婦\",\n\t\t\t\"zhs\": \"妇\"\n\t\t},\n\t\t\"姐\": {\n\t\t\t\"jp\": \"姉\",\n\t\t\t\"zht\": \"姐\",\n\t\t\t\"zhs\": \"姐\"\n\t\t},\n\t\t\"姬\": {\n\t\t\t\"jp\": \"姫\",\n\t\t\t\"zht\": \"姬\",\n\t\t\t\"zhs\": \"姬\"\n\t\t},\n\t\t\"孃\": {\n\t\t\t\"jp\": \"嬢\",\n\t\t\t\"zht\": \"孃\",\n\t\t\t\"zhs\": \"娘\"\n\t\t},\n\t\t\"娛\": {\n\t\t\t\"jp\": \"娯\",\n\t\t\t\"zht\": \"娛\",\n\t\t\t\"zhs\": \"娱\"\n\t\t},\n\t\t\"孫\": {\n\t\t\t\"jp\": \"孫\",\n\t\t\t\"zht\": \"孫\",\n\t\t\t\"zhs\": \"孙\"\n\t\t},\n\t\t\"學\": {\n\t\t\t\"jp\": \"学\",\n\t\t\t\"zht\": \"學\",\n\t\t\t\"zhs\": \"学\"\n\t\t},\n\t\t\"寧\": {\n\t\t\t\"jp\": \"寧\",\n\t\t\t\"zht\": \"寧\",\n\t\t\t\"zhs\": \"宁\"\n\t\t},\n\t\t\"寶\": {\n\t\t\t\"jp\": \"宝\",\n\t\t\t\"zht\": \"寶\",\n\t\t\t\"zhs\": \"宝\"\n\t\t},\n\t\t\"實\": {\n\t\t\t\"jp\": \"実\",\n\t\t\t\"zht\": \"實\",\n\t\t\t\"zhs\": \"实\"\n\t\t},\n\t\t\"審\": {\n\t\t\t\"jp\": \"審\",\n\t\t\t\"zht\": \"審\",\n\t\t\t\"zhs\": \"审\"\n\t\t},\n\t\t\"憲\": {\n\t\t\t\"jp\": \"憲\",\n\t\t\t\"zht\": \"憲\",\n\t\t\t\"zhs\": \"宪\"\n\t\t},\n\t\t\"宮\": {\n\t\t\t\"jp\": \"宮\",\n\t\t\t\"zht\": \"宮\",\n\t\t\t\"zhs\": \"宫\"\n\t\t},\n\t\t\"賓\": {\n\t\t\t\"jp\": \"賓\",\n\t\t\t\"zht\": \"賓\",\n\t\t\t\"zhs\": \"宾\"\n\t\t},\n\t\t\"祕\": {\n\t\t\t\"jp\": \"秘\",\n\t\t\t\"zht\": \"祕\",\n\t\t\t\"zhs\": \"秘\"\n\t\t},\n\t\t\"寢\": {\n\t\t\t\"jp\": \"寝\",\n\t\t\t\"zht\": \"寢\",\n\t\t\t\"zhs\": \"寝\"\n\t\t},\n\t\t\"對\": {\n\t\t\t\"jp\": \"対\",\n\t\t\t\"zht\": \"對\",\n\t\t\t\"zhs\": \"对\"\n\t\t},\n\t\t\"尋\": {\n\t\t\t\"jp\": \"尋\",\n\t\t\t\"zht\": \"尋\",\n\t\t\t\"zhs\": \"寻\"\n\t\t},\n\t\t\"導\": {\n\t\t\t\"jp\": \"導\",\n\t\t\t\"zht\": \"導\",\n\t\t\t\"zhs\": \"导\"\n\t\t},\n\t\t\"將\": {\n\t\t\t\"jp\": \"将\",\n\t\t\t\"zht\": \"將\",\n\t\t\t\"zhs\": \"将\"\n\t\t},\n\t\t\"層\": {\n\t\t\t\"jp\": \"層\",\n\t\t\t\"zht\": \"層\",\n\t\t\t\"zhs\": \"层\"\n\t\t},\n\t\t\"屬\": {\n\t\t\t\"jp\": \"属\",\n\t\t\t\"zht\": \"屬\",\n\t\t\t\"zhs\": \"属\"\n\t\t},\n\t\t\"歲\": {\n\t\t\t\"jp\": \"歳\",\n\t\t\t\"zht\": \"歲\",\n\t\t\t\"zhs\": \"岁\"\n\t\t},\n\t\t\"島\": {\n\t\t\t\"jp\": \"島\",\n\t\t\t\"zht\": \"島\",\n\t\t\t\"zhs\": \"岛\"\n\t\t},\n\t\t\"巖\": {\n\t\t\t\"jp\": \"巌\",\n\t\t\t\"zht\": \"巖\",\n\t\t\t\"zhs\": \"巖\"\n\t\t},\n\t\t\"峽\": {\n\t\t\t\"jp\": \"峡\",\n\t\t\t\"zht\": \"峽\",\n\t\t\t\"zhs\": \"峡\"\n\t\t},\n\t\t\"險\": {\n\t\t\t\"jp\": \"険\",\n\t\t\t\"zht\": \"險\",\n\t\t\t\"zhs\": \"险\"\n\t\t},\n\t\t\"幣\": {\n\t\t\t\"jp\": \"幣\",\n\t\t\t\"zht\": \"幣\",\n\t\t\t\"zhs\": \"币\"\n\t\t},\n\t\t\"帥\": {\n\t\t\t\"jp\": \"帥\",\n\t\t\t\"zht\": \"帥\",\n\t\t\t\"zhs\": \"帅\"\n\t\t},\n\t\t\"師\": {\n\t\t\t\"jp\": \"師\",\n\t\t\t\"zht\": \"師\",\n\t\t\t\"zhs\": \"师\"\n\t\t},\n\t\t\"帳\": {\n\t\t\t\"jp\": \"帳\",\n\t\t\t\"zht\": \"帳\",\n\t\t\t\"zhs\": \"帐\"\n\t\t},\n\t\t\"歸\": {\n\t\t\t\"jp\": \"帰\",\n\t\t\t\"zht\": \"歸\",\n\t\t\t\"zhs\": \"归\"\n\t\t},\n\t\t\"廣\": {\n\t\t\t\"jp\": \"広\",\n\t\t\t\"zht\": \"廣\",\n\t\t\t\"zhs\": \"广\"\n\t\t},\n\t\t\"慶\": {\n\t\t\t\"jp\": \"慶\",\n\t\t\t\"zht\": \"慶\",\n\t\t\t\"zhs\": \"庆\"\n\t\t},\n\t\t\"庫\": {\n\t\t\t\"jp\": \"庫\",\n\t\t\t\"zht\": \"庫\",\n\t\t\t\"zhs\": \"库\"\n\t\t},\n\t\t\"應\": {\n\t\t\t\"jp\": \"応\",\n\t\t\t\"zht\": \"應\",\n\t\t\t\"zhs\": \"应\"\n\t\t},\n\t\t\"廢\": {\n\t\t\t\"jp\": \"廃\",\n\t\t\t\"zht\": \"廢\",\n\t\t\t\"zhs\": \"废\"\n\t\t},\n\t\t\"開\": {\n\t\t\t\"jp\": \"開\",\n\t\t\t\"zht\": \"開\",\n\t\t\t\"zhs\": \"开\"\n\t\t},\n\t\t\"辨\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"瓣\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"瓣\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"辯\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辯\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"異\": {\n\t\t\t\"jp\": \"異\",\n\t\t\t\"zht\": \"異\",\n\t\t\t\"zhs\": \"异\"\n\t\t},\n\t\t\"棄\": {\n\t\t\t\"jp\": \"棄\",\n\t\t\t\"zht\": \"棄\",\n\t\t\t\"zhs\": \"弃\"\n\t\t},\n\t\t\"張\": {\n\t\t\t\"jp\": \"張\",\n\t\t\t\"zht\": \"張\",\n\t\t\t\"zhs\": \"张\"\n\t\t},\n\t\t\"彌\": {\n\t\t\t\"jp\": \"弥\",\n\t\t\t\"zht\": \"彌\",\n\t\t\t\"zhs\": \"弥\"\n\t\t},\n\t\t\"強\": {\n\t\t\t\"jp\": \"強\",\n\t\t\t\"zht\": \"強\",\n\t\t\t\"zhs\": \"强\"\n\t\t},\n\t\t\"彈\": {\n\t\t\t\"jp\": \"弾\",\n\t\t\t\"zht\": \"彈\",\n\t\t\t\"zhs\": \"弹\"\n\t\t},\n\t\t\"錄\": {\n\t\t\t\"jp\": \"録\",\n\t\t\t\"zht\": \"錄\",\n\t\t\t\"zhs\": \"录\"\n\t\t},\n\t\t\"彥\": {\n\t\t\t\"jp\": \"彦\",\n\t\t\t\"zht\": \"彥\",\n\t\t\t\"zhs\": \"彥\"\n\t\t},\n\t\t\"徹\": {\n\t\t\t\"jp\": \"徹\",\n\t\t\t\"zht\": \"徹\",\n\t\t\t\"zhs\": \"彻\"\n\t\t},\n\t\t\"徵\": {\n\t\t\t\"jp\": \"徴\",\n\t\t\t\"zht\": \"徵\",\n\t\t\t\"zhs\": \"征\"\n\t\t},\n\t\t\"徑\": {\n\t\t\t\"jp\": \"径\",\n\t\t\t\"zht\": \"徑\",\n\t\t\t\"zhs\": \"径\"\n\t\t},\n\t\t\"德\": {\n\t\t\t\"jp\": \"徳\",\n\t\t\t\"zht\": \"德\",\n\t\t\t\"zhs\": \"德\"\n\t\t},\n\t\t\"憶\": {\n\t\t\t\"jp\": \"憶\",\n\t\t\t\"zht\": \"憶\",\n\t\t\t\"zhs\": \"忆\"\n\t\t},\n\t\t\"誌\": {\n\t\t\t\"jp\": \"誌\",\n\t\t\t\"zht\": \"誌\",\n\t\t\t\"zhs\": \"志\"\n\t\t},\n\t\t\"憂\": {\n\t\t\t\"jp\": \"憂\",\n\t\t\t\"zht\": \"憂\",\n\t\t\t\"zhs\": \"忧\"\n\t\t},\n\t\t\"懷\": {\n\t\t\t\"jp\": \"懐\",\n\t\t\t\"zht\": \"懷\",\n\t\t\t\"zhs\": \"怀\"\n\t\t},\n\t\t\"態\": {\n\t\t\t\"jp\": \"態\",\n\t\t\t\"zht\": \"態\",\n\t\t\t\"zhs\": \"态\"\n\t\t},\n\t\t\"總\": {\n\t\t\t\"jp\": \"総\",\n\t\t\t\"zht\": \"總\",\n\t\t\t\"zhs\": \"总\"\n\t\t},\n\t\t\"恆\": {\n\t\t\t\"jp\": \"恒\",\n\t\t\t\"zht\": \"恆\",\n\t\t\t\"zhs\": \"恒\"\n\t\t},\n\t\t\"戀\": {\n\t\t\t\"jp\": \"恋\",\n\t\t\t\"zht\": \"戀\",\n\t\t\t\"zhs\": \"恋\"\n\t\t},\n\t\t\"懇\": {\n\t\t\t\"jp\": \"懇\",\n\t\t\t\"zht\": \"懇\",\n\t\t\t\"zhs\": \"恳\"\n\t\t},\n\t\t\"惠\": {\n\t\t\t\"jp\": \"恵\",\n\t\t\t\"zht\": \"惠\",\n\t\t\t\"zhs\": \"惠\"\n\t\t},\n\t\t\"惡\": {\n\t\t\t\"jp\": \"悪\",\n\t\t\t\"zht\": \"惡\",\n\t\t\t\"zhs\": \"恶\"\n\t\t},\n\t\t\"惱\": {\n\t\t\t\"jp\": \"悩\",\n\t\t\t\"zht\": \"惱\",\n\t\t\t\"zhs\": \"恼\"\n\t\t},\n\t\t\"悅\": {\n\t\t\t\"jp\": \"悦\",\n\t\t\t\"zht\": \"悅\",\n\t\t\t\"zhs\": \"悅\"\n\t\t},\n\t\t\"懸\": {\n\t\t\t\"jp\": \"懸\",\n\t\t\t\"zht\": \"懸\",\n\t\t\t\"zhs\": \"悬\"\n\t\t},\n\t\t\"驚\": {\n\t\t\t\"jp\": \"驚\",\n\t\t\t\"zht\": \"驚\",\n\t\t\t\"zhs\": \"惊\"\n\t\t},\n\t\t\"慘\": {\n\t\t\t\"jp\": \"惨\",\n\t\t\t\"zht\": \"慘\",\n\t\t\t\"zhs\": \"惨\"\n\t\t},\n\t\t\"懲\": {\n\t\t\t\"jp\": \"懲\",\n\t\t\t\"zht\": \"懲\",\n\t\t\t\"zhs\": \"惩\"\n\t\t},\n\t\t\"愛\": {\n\t\t\t\"jp\": \"愛\",\n\t\t\t\"zht\": \"愛\",\n\t\t\t\"zhs\": \"爱\"\n\t\t},\n\t\t\"憤\": {\n\t\t\t\"jp\": \"憤\",\n\t\t\t\"zht\": \"憤\",\n\t\t\t\"zhs\": \"愤\"\n\t\t},\n\t\t\"願\": {\n\t\t\t\"jp\": \"願\",\n\t\t\t\"zht\": \"願\",\n\t\t\t\"zhs\": \"愿\"\n\t\t},\n\t\t\"慮\": {\n\t\t\t\"jp\": \"慮\",\n\t\t\t\"zht\": \"慮\",\n\t\t\t\"zhs\": \"虑\"\n\t\t},\n\t\t\"戲\": {\n\t\t\t\"jp\": \"戯\",\n\t\t\t\"zht\": \"戲\",\n\t\t\t\"zhs\": \"戏\"\n\t\t},\n\t\t\"戰\": {\n\t\t\t\"jp\": \"戦\",\n\t\t\t\"zht\": \"戰\",\n\t\t\t\"zhs\": \"战\"\n\t\t},\n\t\t\"戶\": {\n\t\t\t\"jp\": \"戸\",\n\t\t\t\"zht\": \"戶\",\n\t\t\t\"zhs\": \"户\"\n\t\t},\n\t\t\"拂\": {\n\t\t\t\"jp\": \"払\",\n\t\t\t\"zht\": \"拂\",\n\t\t\t\"zhs\": \"拂\"\n\t\t},\n\t\t\"擴\": {\n\t\t\t\"jp\": \"拡\",\n\t\t\t\"zht\": \"擴\",\n\t\t\t\"zhs\": \"扩\"\n\t\t},\n\t\t\"掃\": {\n\t\t\t\"jp\": \"掃\",\n\t\t\t\"zht\": \"掃\",\n\t\t\t\"zhs\": \"扫\"\n\t\t},\n\t\t\"揚\": {\n\t\t\t\"jp\": \"揚\",\n\t\t\t\"zht\": \"揚\",\n\t\t\t\"zhs\": \"扬\"\n\t\t},\n\t\t\"擇\": {\n\t\t\t\"jp\": \"択\",\n\t\t\t\"zht\": \"擇\",\n\t\t\t\"zhs\": \"择\"\n\t\t},\n\t\t\"護\": {\n\t\t\t\"jp\": \"護\",\n\t\t\t\"zht\": \"護\",\n\t\t\t\"zhs\": \"护\"\n\t\t},\n\t\t\"擔\": {\n\t\t\t\"jp\": \"担\",\n\t\t\t\"zht\": \"擔\",\n\t\t\t\"zhs\": \"担\"\n\t\t},\n\t\t\"拜\": {\n\t\t\t\"jp\": \"拝\",\n\t\t\t\"zht\": \"拜\",\n\t\t\t\"zhs\": \"拜\"\n\t\t},\n\t\t\"擬\": {\n\t\t\t\"jp\": \"擬\",\n\t\t\t\"zht\": \"擬\",\n\t\t\t\"zhs\": \"拟\"\n\t\t},\n\t\t\"據\": {\n\t\t\t\"jp\": \"拠\",\n\t\t\t\"zht\": \"據\",\n\t\t\t\"zhs\": \"据\"\n\t\t},\n\t\t\"擁\": {\n\t\t\t\"jp\": \"擁\",\n\t\t\t\"zht\": \"擁\",\n\t\t\t\"zhs\": \"拥\"\n\t\t},\n\t\t\"挾\": {\n\t\t\t\"jp\": \"挟\",\n\t\t\t\"zht\": \"挾\",\n\t\t\t\"zhs\": \"挟\"\n\t\t},\n\t\t\"揮\": {\n\t\t\t\"jp\": \"揮\",\n\t\t\t\"zht\": \"揮\",\n\t\t\t\"zhs\": \"挥\"\n\t\t},\n\t\t\"插\": {\n\t\t\t\"jp\": \"挿\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"損\": {\n\t\t\t\"jp\": \"損\",\n\t\t\t\"zht\": \"損\",\n\t\t\t\"zhs\": \"损\"\n\t\t},\n\t\t\"捨\": {\n\t\t\t\"jp\": \"捨\",\n\t\t\t\"zht\": \"捨\",\n\t\t\t\"zhs\": \"舍\"\n\t\t},\n\t\t\"揭\": {\n\t\t\t\"jp\": \"掲\",\n\t\t\t\"zht\": \"揭\",\n\t\t\t\"zhs\": \"揭\"\n\t\t},\n\t\t\"摑\": {\n\t\t\t\"jp\": \"掴\",\n\t\t\t\"zht\": \"摑\",\n\t\t\t\"zhs\": \"掴\"\n\t\t},\n\t\t\"搖\": {\n\t\t\t\"jp\": \"揺\",\n\t\t\t\"zht\": \"搖\",\n\t\t\t\"zhs\": \"摇\"\n\t\t},\n\t\t\"敵\": {\n\t\t\t\"jp\": \"敵\",\n\t\t\t\"zht\": \"敵\",\n\t\t\t\"zhs\": \"敌\"\n\t\t},\n\t\t\"敗\": {\n\t\t\t\"jp\": \"敗\",\n\t\t\t\"zht\": \"敗\",\n\t\t\t\"zhs\": \"败\"\n\t\t},\n\t\t\"數\": {\n\t\t\t\"jp\": \"数\",\n\t\t\t\"zht\": \"數\",\n\t\t\t\"zhs\": \"数\"\n\t\t},\n\t\t\"齊\": {\n\t\t\t\"jp\": \"斉\",\n\t\t\t\"zht\": \"齊\",\n\t\t\t\"zhs\": \"齐\"\n\t\t},\n\t\t\"齋\": {\n\t\t\t\"jp\": \"斎\",\n\t\t\t\"zht\": \"齋\",\n\t\t\t\"zhs\": \"斋\"\n\t\t},\n\t\t\"斷\": {\n\t\t\t\"jp\": \"断\",\n\t\t\t\"zht\": \"斷\",\n\t\t\t\"zhs\": \"断\"\n\t\t},\n\t\t\"舊\": {\n\t\t\t\"jp\": \"旧\",\n\t\t\t\"zht\": \"舊\",\n\t\t\t\"zhs\": \"旧\"\n\t\t},\n\t\t\"時\": {\n\t\t\t\"jp\": \"時\",\n\t\t\t\"zht\": \"時\",\n\t\t\t\"zhs\": \"时\"\n\t\t},\n\t\t\"曇\": {\n\t\t\t\"jp\": \"曇\",\n\t\t\t\"zht\": \"曇\",\n\t\t\t\"zhs\": \"昙\"\n\t\t},\n\t\t\"晝\": {\n\t\t\t\"jp\": \"昼\",\n\t\t\t\"zht\": \"晝\",\n\t\t\t\"zhs\": \"昼\"\n\t\t},\n\t\t\"顯\": {\n\t\t\t\"jp\": \"顕\",\n\t\t\t\"zht\": \"顯\",\n\t\t\t\"zhs\": \"显\"\n\t\t},\n\t\t\"曉\": {\n\t\t\t\"jp\": \"暁\",\n\t\t\t\"zht\": \"曉\",\n\t\t\t\"zhs\": \"晓\"\n\t\t},\n\t\t\"晚\": {\n\t\t\t\"jp\": \"晩\",\n\t\t\t\"zht\": \"晚\",\n\t\t\t\"zhs\": \"晚\"\n\t\t},\n\t\t\"暫\": {\n\t\t\t\"jp\": \"暫\",\n\t\t\t\"zht\": \"暫\",\n\t\t\t\"zhs\": \"暂\"\n\t\t},\n\t\t\"曾\": {\n\t\t\t\"jp\": \"曽\",\n\t\t\t\"zht\": \"曾\",\n\t\t\t\"zhs\": \"曾\"\n\t\t},\n\t\t\"術\": {\n\t\t\t\"jp\": \"術\",\n\t\t\t\"zht\": \"術\",\n\t\t\t\"zhs\": \"术\"\n\t\t},\n\t\t\"樸\": {\n\t\t\t\"jp\": \"樸\",\n\t\t\t\"zht\": \"樸\",\n\t\t\t\"zhs\": \"朴\"\n\t\t},\n\t\t\"機\": {\n\t\t\t\"jp\": \"機\",\n\t\t\t\"zht\": \"機\",\n\t\t\t\"zhs\": \"机\"\n\t\t},\n\t\t\"殺\": {\n\t\t\t\"jp\": \"殺\",\n\t\t\t\"zht\": \"殺\",\n\t\t\t\"zhs\": \"杀\"\n\t\t},\n\t\t\"雜\": {\n\t\t\t\"jp\": \"雑\",\n\t\t\t\"zht\": \"雜\",\n\t\t\t\"zhs\": \"杂\"\n\t\t},\n\t\t\"權\": {\n\t\t\t\"jp\": \"権\",\n\t\t\t\"zht\": \"權\",\n\t\t\t\"zhs\": \"权\"\n\t\t},\n\t\t\"條\": {\n\t\t\t\"jp\": \"条\",\n\t\t\t\"zht\": \"條\",\n\t\t\t\"zhs\": \"条\"\n\t\t},\n\t\t\"極\": {\n\t\t\t\"jp\": \"極\",\n\t\t\t\"zht\": \"極\",\n\t\t\t\"zhs\": \"极\"\n\t\t},\n\t\t\"樞\": {\n\t\t\t\"jp\": \"枢\",\n\t\t\t\"zht\": \"樞\",\n\t\t\t\"zhs\": \"枢\"\n\t\t},\n\t\t\"槍\": {\n\t\t\t\"jp\": \"槍\",\n\t\t\t\"zht\": \"槍\",\n\t\t\t\"zhs\": \"枪\"\n\t\t},\n\t\t\"查\": {\n\t\t\t\"jp\": \"査\",\n\t\t\t\"zht\": \"查\",\n\t\t\t\"zhs\": \"查\"\n\t\t},\n\t\t\"榮\": {\n\t\t\t\"jp\": \"栄\",\n\t\t\t\"zht\": \"榮\",\n\t\t\t\"zhs\": \"荣\"\n\t\t},\n\t\t\"標\": {\n\t\t\t\"jp\": \"標\",\n\t\t\t\"zht\": \"標\",\n\t\t\t\"zhs\": \"标\"\n\t\t},\n\t\t\"棧\": {\n\t\t\t\"jp\": \"桟\",\n\t\t\t\"zht\": \"棧\",\n\t\t\t\"zhs\": \"栈\"\n\t\t},\n\t\t\"棟\": {\n\t\t\t\"jp\": \"棟\",\n\t\t\t\"zht\": \"棟\",\n\t\t\t\"zhs\": \"栋\"\n\t\t},\n\t\t\"欄\": {\n\t\t\t\"jp\": \"欄\",\n\t\t\t\"zht\": \"欄\",\n\t\t\t\"zhs\": \"栏\"\n\t\t},\n\t\t\"樹\": {\n\t\t\t\"jp\": \"樹\",\n\t\t\t\"zht\": \"樹\",\n\t\t\t\"zhs\": \"树\"\n\t\t},\n\t\t\"樣\": {\n\t\t\t\"jp\": \"様\",\n\t\t\t\"zht\": \"樣\",\n\t\t\t\"zhs\": \"样\"\n\t\t},\n\t\t\"櫻\": {\n\t\t\t\"jp\": \"桜\",\n\t\t\t\"zht\": \"櫻\",\n\t\t\t\"zhs\": \"樱\"\n\t\t},\n\t\t\"橋\": {\n\t\t\t\"jp\": \"橋\",\n\t\t\t\"zht\": \"橋\",\n\t\t\t\"zhs\": \"桥\"\n\t\t},\n\t\t\"檢\": {\n\t\t\t\"jp\": \"検\",\n\t\t\t\"zht\": \"檢\",\n\t\t\t\"zhs\": \"检\"\n\t\t},\n\t\t\"樓\": {\n\t\t\t\"jp\": \"楼\",\n\t\t\t\"zht\": \"樓\",\n\t\t\t\"zhs\": \"楼\"\n\t\t},\n\t\t\"歡\": {\n\t\t\t\"jp\": \"歓\",\n\t\t\t\"zht\": \"歡\",\n\t\t\t\"zhs\": \"欢\"\n\t\t},\n\t\t\"歐\": {\n\t\t\t\"jp\": \"欧\",\n\t\t\t\"zht\": \"歐\",\n\t\t\t\"zhs\": \"欧\"\n\t\t},\n\t\t\"步\": {\n\t\t\t\"jp\": \"歩\",\n\t\t\t\"zht\": \"步\",\n\t\t\t\"zhs\": \"步\"\n\t\t},\n\t\t\"齒\": {\n\t\t\t\"jp\": \"歯\",\n\t\t\t\"zht\": \"齒\",\n\t\t\t\"zhs\": \"齿\"\n\t\t},\n\t\t\"殘\": {\n\t\t\t\"jp\": \"残\",\n\t\t\t\"zht\": \"殘\",\n\t\t\t\"zhs\": \"残\"\n\t\t},\n\t\t\"毆\": {\n\t\t\t\"jp\": \"殴\",\n\t\t\t\"zht\": \"毆\",\n\t\t\t\"zhs\": \"殴\"\n\t\t},\n\t\t\"氣\": {\n\t\t\t\"jp\": \"気\",\n\t\t\t\"zht\": \"氣\",\n\t\t\t\"zhs\": \"气\"\n\t\t},\n\t\t\"漢\": {\n\t\t\t\"jp\": \"漢\",\n\t\t\t\"zht\": \"漢\",\n\t\t\t\"zhs\": \"汉\"\n\t\t},\n\t\t\"湯\": {\n\t\t\t\"jp\": \"湯\",\n\t\t\t\"zht\": \"湯\",\n\t\t\t\"zhs\": \"汤\"\n\t\t},\n\t\t\"溝\": {\n\t\t\t\"jp\": \"溝\",\n\t\t\t\"zht\": \"溝\",\n\t\t\t\"zhs\": \"沟\"\n\t\t},\n\t\t\"澤\": {\n\t\t\t\"jp\": \"沢\",\n\t\t\t\"zht\": \"澤\",\n\t\t\t\"zhs\": \"泽\"\n\t\t},\n\t\t\"淚\": {\n\t\t\t\"jp\": \"涙\",\n\t\t\t\"zht\": \"淚\",\n\t\t\t\"zhs\": \"泪\"\n\t\t},\n\t\t\"瀧\": {\n\t\t\t\"jp\": \"滝\",\n\t\t\t\"zht\": \"瀧\",\n\t\t\t\"zhs\": \"泷\"\n\t\t},\n\t\t\"潔\": {\n\t\t\t\"jp\": \"潔\",\n\t\t\t\"zht\": \"潔\",\n\t\t\t\"zhs\": \"洁\"\n\t\t},\n\t\t\"淺\": {\n\t\t\t\"jp\": \"浅\",\n\t\t\t\"zht\": \"淺\",\n\t\t\t\"zhs\": \"浅\"\n\t\t},\n\t\t\"濁\": {\n\t\t\t\"jp\": \"濁\",\n\t\t\t\"zht\": \"濁\",\n\t\t\t\"zhs\": \"浊\"\n\t\t},\n\t\t\"測\": {\n\t\t\t\"jp\": \"測\",\n\t\t\t\"zht\": \"測\",\n\t\t\t\"zhs\": \"测\"\n\t\t},\n\t\t\"濟\": {\n\t\t\t\"jp\": \"済\",\n\t\t\t\"zht\": \"濟\",\n\t\t\t\"zhs\": \"济\"\n\t\t},\n\t\t\"濃\": {\n\t\t\t\"jp\": \"濃\",\n\t\t\t\"zht\": \"濃\",\n\t\t\t\"zhs\": \"浓\"\n\t\t},\n\t\t\"濱\": {\n\t\t\t\"jp\": \"浜\",\n\t\t\t\"zht\": \"濱\",\n\t\t\t\"zhs\": \"滨\"\n\t\t},\n\t\t\"涉\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"澀\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"澀\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"渦\": {\n\t\t\t\"jp\": \"渦\",\n\t\t\t\"zht\": \"渦\",\n\t\t\t\"zhs\": \"涡\"\n\t\t},\n\t\t\"潤\": {\n\t\t\t\"jp\": \"潤\",\n\t\t\t\"zht\": \"潤\",\n\t\t\t\"zhs\": \"润\"\n\t\t},\n\t\t\"漬\": {\n\t\t\t\"jp\": \"漬\",\n\t\t\t\"zht\": \"漬\",\n\t\t\t\"zhs\": \"渍\"\n\t\t},\n\t\t\"漸\": {\n\t\t\t\"jp\": \"漸\",\n\t\t\t\"zht\": \"漸\",\n\t\t\t\"zhs\": \"渐\"\n\t\t},\n\t\t\"溪\": {\n\t\t\t\"jp\": \"渓\",\n\t\t\t\"zht\": \"溪\",\n\t\t\t\"zhs\": \"溪\"\n\t\t},\n\t\t\"漁\": {\n\t\t\t\"jp\": \"漁\",\n\t\t\t\"zht\": \"漁\",\n\t\t\t\"zhs\": \"渔\"\n\t\t},\n\t\t\"灣\": {\n\t\t\t\"jp\": \"湾\",\n\t\t\t\"zht\": \"灣\",\n\t\t\t\"zhs\": \"湾\"\n\t\t},\n\t\t\"濕\": {\n\t\t\t\"jp\": \"湿\",\n\t\t\t\"zht\": \"濕\",\n\t\t\t\"zhs\": \"湿\"\n\t\t},\n\t\t\"滿\": {\n\t\t\t\"jp\": \"満\",\n\t\t\t\"zht\": \"滿\",\n\t\t\t\"zhs\": \"满\"\n\t\t},\n\t\t\"滅\": {\n\t\t\t\"jp\": \"滅\",\n\t\t\t\"zht\": \"滅\",\n\t\t\t\"zhs\": \"灭\"\n\t\t},\n\t\t\"滯\": {\n\t\t\t\"jp\": \"滞\",\n\t\t\t\"zht\": \"滯\",\n\t\t\t\"zhs\": \"滞\"\n\t\t},\n\t\t\"濫\": {\n\t\t\t\"jp\": \"濫\",\n\t\t\t\"zht\": \"濫\",\n\t\t\t\"zhs\": \"滥\"\n\t\t},\n\t\t\"瀨\": {\n\t\t\t\"jp\": \"瀬\",\n\t\t\t\"zht\": \"瀨\",\n\t\t\t\"zhs\": \"濑\"\n\t\t},\n\t\t\"燈\": {\n\t\t\t\"jp\": \"灯\",\n\t\t\t\"zht\": \"燈\",\n\t\t\t\"zhs\": \"灯\"\n\t\t},\n\t\t\"靈\": {\n\t\t\t\"jp\": \"霊\",\n\t\t\t\"zht\": \"靈\",\n\t\t\t\"zhs\": \"灵\"\n\t\t},\n\t\t\"爐\": {\n\t\t\t\"jp\": \"炉\",\n\t\t\t\"zht\": \"爐\",\n\t\t\t\"zhs\": \"炉\"\n\t\t},\n\t\t\"點\": {\n\t\t\t\"jp\": \"点\",\n\t\t\t\"zht\": \"點\",\n\t\t\t\"zhs\": \"点\"\n\t\t},\n\t\t\"鍊\": {\n\t\t\t\"jp\": \"錬\",\n\t\t\t\"zht\": \"鍊\",\n\t\t\t\"zhs\": \"炼\"\n\t\t},\n\t\t\"練\": {\n\t\t\t\"jp\": \"練\",\n\t\t\t\"zht\": \"練\",\n\t\t\t\"zhs\": \"练\"\n\t\t},\n\t\t\"煙\": {\n\t\t\t\"jp\": \"煙\",\n\t\t\t\"zht\": \"煙\",\n\t\t\t\"zhs\": \"烟\"\n\t\t},\n\t\t\"煩\": {\n\t\t\t\"jp\": \"煩\",\n\t\t\t\"zht\": \"煩\",\n\t\t\t\"zhs\": \"烦\"\n\t\t},\n\t\t\"燒\": {\n\t\t\t\"jp\": \"焼\",\n\t\t\t\"zht\": \"燒\",\n\t\t\t\"zhs\": \"烧\"\n\t\t},\n\t\t\"熱\": {\n\t\t\t\"jp\": \"熱\",\n\t\t\t\"zht\": \"熱\",\n\t\t\t\"zhs\": \"热\"\n\t\t},\n\t\t\"焰\": {\n\t\t\t\"jp\": \"焔\",\n\t\t\t\"zht\": \"焰\",\n\t\t\t\"zhs\": \"焰\"\n\t\t},\n\t\t\"鍛\": {\n\t\t\t\"jp\": \"鍛\",\n\t\t\t\"zht\": \"鍛\",\n\t\t\t\"zhs\": \"锻\"\n\t\t},\n\t\t\"犧\": {\n\t\t\t\"jp\": \"犠\",\n\t\t\t\"zht\": \"犧\",\n\t\t\t\"zhs\": \"牺\"\n\t\t},\n\t\t\"狀\": {\n\t\t\t\"jp\": \"状\",\n\t\t\t\"zht\": \"狀\",\n\t\t\t\"zhs\": \"状\"\n\t\t},\n\t\t\"猶\": {\n\t\t\t\"jp\": \"猶\",\n\t\t\t\"zht\": \"猶\",\n\t\t\t\"zhs\": \"犹\"\n\t\t},\n\t\t\"獨\": {\n\t\t\t\"jp\": \"独\",\n\t\t\t\"zht\": \"獨\",\n\t\t\t\"zhs\": \"独\"\n\t\t},\n\t\t\"狹\": {\n\t\t\t\"jp\": \"狭\",\n\t\t\t\"zht\": \"狹\",\n\t\t\t\"zhs\": \"狭\"\n\t\t},\n\t\t\"獄\": {\n\t\t\t\"jp\": \"獄\",\n\t\t\t\"zht\": \"獄\",\n\t\t\t\"zhs\": \"狱\"\n\t\t},\n\t\t\"獵\": {\n\t\t\t\"jp\": \"猟\",\n\t\t\t\"zht\": \"獵\",\n\t\t\t\"zhs\": \"猎\"\n\t\t},\n\t\t\"貓\": {\n\t\t\t\"jp\": \"猫\",\n\t\t\t\"zht\": \"貓\",\n\t\t\t\"zhs\": \"猫\"\n\t\t},\n\t\t\"獻\": {\n\t\t\t\"jp\": \"献\",\n\t\t\t\"zht\": \"獻\",\n\t\t\t\"zhs\": \"献\"\n\t\t},\n\t\t\"環\": {\n\t\t\t\"jp\": \"環\",\n\t\t\t\"zht\": \"環\",\n\t\t\t\"zhs\": \"环\"\n\t\t},\n\t\t\"現\": {\n\t\t\t\"jp\": \"現\",\n\t\t\t\"zht\": \"現\",\n\t\t\t\"zhs\": \"现\"\n\t\t},\n\t\t\"璽\": {\n\t\t\t\"jp\": \"璽\",\n\t\t\t\"zht\": \"璽\",\n\t\t\t\"zhs\": \"玺\"\n\t\t},\n\t\t\"電\": {\n\t\t\t\"jp\": \"電\",\n\t\t\t\"zht\": \"電\",\n\t\t\t\"zhs\": \"电\"\n\t\t},\n\t\t\"療\": {\n\t\t\t\"jp\": \"療\",\n\t\t\t\"zht\": \"療\",\n\t\t\t\"zhs\": \"疗\"\n\t\t},\n\t\t\"監\": {\n\t\t\t\"jp\": \"監\",\n\t\t\t\"zht\": \"監\",\n\t\t\t\"zhs\": \"监\"\n\t\t},\n\t\t\"蓋\": {\n\t\t\t\"jp\": \"蓋\",\n\t\t\t\"zht\": \"蓋\",\n\t\t\t\"zhs\": \"盖\"\n\t\t},\n\t\t\"盤\": {\n\t\t\t\"jp\": \"盤\",\n\t\t\t\"zht\": \"盤\",\n\t\t\t\"zhs\": \"盘\"\n\t\t},\n\t\t\"視\": {\n\t\t\t\"jp\": \"視\",\n\t\t\t\"zht\": \"視\",\n\t\t\t\"zhs\": \"视\"\n\t\t},\n\t\t\"著\": {\n\t\t\t\"jp\": \"着\",\n\t\t\t\"zht\": \"著\",\n\t\t\t\"zhs\": \"著\"\n\t\t},\n\t\t\"矯\": {\n\t\t\t\"jp\": \"矯\",\n\t\t\t\"zht\": \"矯\",\n\t\t\t\"zhs\": \"矫\"\n\t\t},\n\t\t\"礦\": {\n\t\t\t\"jp\": \"鉱\",\n\t\t\t\"zht\": \"礦\",\n\t\t\t\"zhs\": \"矿\"\n\t\t},\n\t\t\"碎\": {\n\t\t\t\"jp\": \"砕\",\n\t\t\t\"zht\": \"碎\",\n\t\t\t\"zhs\": \"碎\"\n\t\t},\n\t\t\"礎\": {\n\t\t\t\"jp\": \"礎\",\n\t\t\t\"zht\": \"礎\",\n\t\t\t\"zhs\": \"础\"\n\t\t},\n\t\t\"確\": {\n\t\t\t\"jp\": \"確\",\n\t\t\t\"zht\": \"確\",\n\t\t\t\"zhs\": \"确\"\n\t\t},\n\t\t\"禮\": {\n\t\t\t\"jp\": \"礼\",\n\t\t\t\"zht\": \"禮\",\n\t\t\t\"zhs\": \"礼\"\n\t\t},\n\t\t\"禍\": {\n\t\t\t\"jp\": \"禍\",\n\t\t\t\"zht\": \"禍\",\n\t\t\t\"zhs\": \"祸\"\n\t\t},\n\t\t\"禪\": {\n\t\t\t\"jp\": \"禅\",\n\t\t\t\"zht\": \"禪\",\n\t\t\t\"zhs\": \"禅\"\n\t\t},\n\t\t\"離\": {\n\t\t\t\"jp\": \"離\",\n\t\t\t\"zht\": \"離\",\n\t\t\t\"zhs\": \"离\"\n\t\t},\n\t\t\"種\": {\n\t\t\t\"jp\": \"種\",\n\t\t\t\"zht\": \"種\",\n\t\t\t\"zhs\": \"种\"\n\t\t},\n\t\t\"積\": {\n\t\t\t\"jp\": \"積\",\n\t\t\t\"zht\": \"積\",\n\t\t\t\"zhs\": \"积\"\n\t\t},\n\t\t\"稱\": {\n\t\t\t\"jp\": \"称\",\n\t\t\t\"zht\": \"稱\",\n\t\t\t\"zhs\": \"称\"\n\t\t},\n\t\t\"稻\": {\n\t\t\t\"jp\": \"稲\",\n\t\t\t\"zht\": \"稻\",\n\t\t\t\"zhs\": \"稻\"\n\t\t},\n\t\t\"穩\": {\n\t\t\t\"jp\": \"穏\",\n\t\t\t\"zht\": \"穩\",\n\t\t\t\"zhs\": \"稳\"\n\t\t},\n\t\t\"穀\": {\n\t\t\t\"jp\": \"穀\",\n\t\t\t\"zht\": \"穀\",\n\t\t\t\"zhs\": \"谷\"\n\t\t},\n\t\t\"穗\": {\n\t\t\t\"jp\": \"穂\",\n\t\t\t\"zht\": \"穗\",\n\t\t\t\"zhs\": \"穗\"\n\t\t},\n\t\t\"窮\": {\n\t\t\t\"jp\": \"窮\",\n\t\t\t\"zht\": \"窮\",\n\t\t\t\"zhs\": \"穷\"\n\t\t},\n\t\t\"竊\": {\n\t\t\t\"jp\": \"窃\",\n\t\t\t\"zht\": \"竊\",\n\t\t\t\"zhs\": \"窃\"\n\t\t},\n\t\t\"窗\": {\n\t\t\t\"jp\": \"窓\",\n\t\t\t\"zht\": \"窗\",\n\t\t\t\"zhs\": \"窗\"\n\t\t},\n\t\t\"龍\": {\n\t\t\t\"jp\": \"竜\",\n\t\t\t\"zht\": \"龍\",\n\t\t\t\"zhs\": \"龙\"\n\t\t},\n\t\t\"競\": {\n\t\t\t\"jp\": \"競\",\n\t\t\t\"zht\": \"競\",\n\t\t\t\"zhs\": \"竞\"\n\t\t},\n\t\t\"篤\": {\n\t\t\t\"jp\": \"篤\",\n\t\t\t\"zht\": \"篤\",\n\t\t\t\"zhs\": \"笃\"\n\t\t},\n\t\t\"筆\": {\n\t\t\t\"jp\": \"筆\",\n\t\t\t\"zht\": \"筆\",\n\t\t\t\"zhs\": \"笔\"\n\t\t},\n\t\t\"築\": {\n\t\t\t\"jp\": \"築\",\n\t\t\t\"zht\": \"築\",\n\t\t\t\"zhs\": \"筑\"\n\t\t},\n\t\t\"簡\": {\n\t\t\t\"jp\": \"簡\",\n\t\t\t\"zht\": \"簡\",\n\t\t\t\"zhs\": \"简\"\n\t\t},\n\t\t\"節\": {\n\t\t\t\"jp\": \"節\",\n\t\t\t\"zht\": \"節\",\n\t\t\t\"zhs\": \"节\"\n\t\t},\n\t\t\"範\": {\n\t\t\t\"jp\": \"範\",\n\t\t\t\"zht\": \"範\",\n\t\t\t\"zhs\": \"范\"\n\t\t},\n\t\t\"類\": {\n\t\t\t\"jp\": \"類\",\n\t\t\t\"zht\": \"類\",\n\t\t\t\"zhs\": \"类\"\n\t\t},\n\t\t\"粹\": {\n\t\t\t\"jp\": \"粋\",\n\t\t\t\"zht\": \"粹\",\n\t\t\t\"zhs\": \"粹\"\n\t\t},\n\t\t\"肅\": {\n\t\t\t\"jp\": \"粛\",\n\t\t\t\"zht\": \"肅\",\n\t\t\t\"zhs\": \"肃\"\n\t\t},\n\t\t\"糧\": {\n\t\t\t\"jp\": \"糧\",\n\t\t\t\"zht\": \"糧\",\n\t\t\t\"zhs\": \"粮\"\n\t\t},\n\t\t\"糾\": {\n\t\t\t\"jp\": \"糾\",\n\t\t\t\"zht\": \"糾\",\n\t\t\t\"zhs\": \"纠\"\n\t\t},\n\t\t\"紀\": {\n\t\t\t\"jp\": \"紀\",\n\t\t\t\"zht\": \"紀\",\n\t\t\t\"zhs\": \"纪\"\n\t\t},\n\t\t\"約\": {\n\t\t\t\"jp\": \"約\",\n\t\t\t\"zht\": \"約\",\n\t\t\t\"zhs\": \"约\"\n\t\t},\n\t\t\"紅\": {\n\t\t\t\"jp\": \"紅\",\n\t\t\t\"zht\": \"紅\",\n\t\t\t\"zhs\": \"红\"\n\t\t},\n\t\t\"紋\": {\n\t\t\t\"jp\": \"紋\",\n\t\t\t\"zht\": \"紋\",\n\t\t\t\"zhs\": \"纹\"\n\t\t},\n\t\t\"納\": {\n\t\t\t\"jp\": \"納\",\n\t\t\t\"zht\": \"納\",\n\t\t\t\"zhs\": \"纳\"\n\t\t},\n\t\t\"純\": {\n\t\t\t\"jp\": \"純\",\n\t\t\t\"zht\": \"純\",\n\t\t\t\"zhs\": \"纯\"\n\t\t},\n\t\t\"紙\": {\n\t\t\t\"jp\": \"紙\",\n\t\t\t\"zht\": \"紙\",\n\t\t\t\"zhs\": \"纸\"\n\t\t},\n\t\t\"級\": {\n\t\t\t\"jp\": \"級\",\n\t\t\t\"zht\": \"級\",\n\t\t\t\"zhs\": \"级\"\n\t\t},\n\t\t\"紛\": {\n\t\t\t\"jp\": \"紛\",\n\t\t\t\"zht\": \"紛\",\n\t\t\t\"zhs\": \"纷\"\n\t\t},\n\t\t\"紡\": {\n\t\t\t\"jp\": \"紡\",\n\t\t\t\"zht\": \"紡\",\n\t\t\t\"zhs\": \"纺\"\n\t\t},\n\t\t\"緊\": {\n\t\t\t\"jp\": \"緊\",\n\t\t\t\"zht\": \"緊\",\n\t\t\t\"zhs\": \"紧\"\n\t\t},\n\t\t\"細\": {\n\t\t\t\"jp\": \"細\",\n\t\t\t\"zht\": \"細\",\n\t\t\t\"zhs\": \"细\"\n\t\t},\n\t\t\"紳\": {\n\t\t\t\"jp\": \"紳\",\n\t\t\t\"zht\": \"紳\",\n\t\t\t\"zhs\": \"绅\"\n\t\t},\n\t\t\"紹\": {\n\t\t\t\"jp\": \"紹\",\n\t\t\t\"zht\": \"紹\",\n\t\t\t\"zhs\": \"绍\"\n\t\t},\n\t\t\"紺\": {\n\t\t\t\"jp\": \"紺\",\n\t\t\t\"zht\": \"紺\",\n\t\t\t\"zhs\": \"绀\"\n\t\t},\n\t\t\"終\": {\n\t\t\t\"jp\": \"終\",\n\t\t\t\"zht\": \"終\",\n\t\t\t\"zhs\": \"终\"\n\t\t},\n\t\t\"組\": {\n\t\t\t\"jp\": \"組\",\n\t\t\t\"zht\": \"組\",\n\t\t\t\"zhs\": \"组\"\n\t\t},\n\t\t\"經\": {\n\t\t\t\"jp\": \"経\",\n\t\t\t\"zht\": \"經\",\n\t\t\t\"zhs\": \"经\"\n\t\t},\n\t\t\"結\": {\n\t\t\t\"jp\": \"結\",\n\t\t\t\"zht\": \"結\",\n\t\t\t\"zhs\": \"结\"\n\t\t},\n\t\t\"絕\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絕\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"絞\": {\n\t\t\t\"jp\": \"絞\",\n\t\t\t\"zht\": \"絞\",\n\t\t\t\"zhs\": \"绞\"\n\t\t},\n\t\t\"絡\": {\n\t\t\t\"jp\": \"絡\",\n\t\t\t\"zht\": \"絡\",\n\t\t\t\"zhs\": \"络\"\n\t\t},\n\t\t\"給\": {\n\t\t\t\"jp\": \"給\",\n\t\t\t\"zht\": \"給\",\n\t\t\t\"zhs\": \"给\"\n\t\t},\n\t\t\"統\": {\n\t\t\t\"jp\": \"統\",\n\t\t\t\"zht\": \"統\",\n\t\t\t\"zhs\": \"统\"\n\t\t},\n\t\t\"繪\": {\n\t\t\t\"jp\": \"絵\",\n\t\t\t\"zht\": \"繪\",\n\t\t\t\"zhs\": \"绘\"\n\t\t},\n\t\t\"絹\": {\n\t\t\t\"jp\": \"絹\",\n\t\t\t\"zht\": \"絹\",\n\t\t\t\"zhs\": \"绢\"\n\t\t},\n\t\t\"繼\": {\n\t\t\t\"jp\": \"継\",\n\t\t\t\"zht\": \"繼\",\n\t\t\t\"zhs\": \"继\"\n\t\t},\n\t\t\"續\": {\n\t\t\t\"jp\": \"続\",\n\t\t\t\"zht\": \"續\",\n\t\t\t\"zhs\": \"续\"\n\t\t},\n\t\t\"綠\": {\n\t\t\t\"jp\": \"緑\",\n\t\t\t\"zht\": \"綠\",\n\t\t\t\"zhs\": \"绿\"\n\t\t},\n\t\t\"線\": {\n\t\t\t\"jp\": \"線\",\n\t\t\t\"zht\": \"線\",\n\t\t\t\"zhs\": \"线\"\n\t\t},\n\t\t\"維\": {\n\t\t\t\"jp\": \"維\",\n\t\t\t\"zht\": \"維\",\n\t\t\t\"zhs\": \"维\"\n\t\t},\n\t\t\"綱\": {\n\t\t\t\"jp\": \"綱\",\n\t\t\t\"zht\": \"綱\",\n\t\t\t\"zhs\": \"纲\"\n\t\t},\n\t\t\"綿\": {\n\t\t\t\"jp\": \"綿\",\n\t\t\t\"zht\": \"綿\",\n\t\t\t\"zhs\": \"绵\"\n\t\t},\n\t\t\"緒\": {\n\t\t\t\"jp\": \"緒\",\n\t\t\t\"zht\": \"緒\",\n\t\t\t\"zhs\": \"绪\"\n\t\t},\n\t\t\"締\": {\n\t\t\t\"jp\": \"締\",\n\t\t\t\"zht\": \"締\",\n\t\t\t\"zhs\": \"缔\"\n\t\t},\n\t\t\"緣\": {\n\t\t\t\"jp\": \"縁\",\n\t\t\t\"zht\": \"緣\",\n\t\t\t\"zhs\": \"缘\"\n\t\t},\n\t\t\"編\": {\n\t\t\t\"jp\": \"編\",\n\t\t\t\"zht\": \"編\",\n\t\t\t\"zhs\": \"编\"\n\t\t},\n\t\t\"緩\": {\n\t\t\t\"jp\": \"緩\",\n\t\t\t\"zht\": \"緩\",\n\t\t\t\"zhs\": \"缓\"\n\t\t},\n\t\t\"緯\": {\n\t\t\t\"jp\": \"緯\",\n\t\t\t\"zht\": \"緯\",\n\t\t\t\"zhs\": \"纬\"\n\t\t},\n\t\t\"繩\": {\n\t\t\t\"jp\": \"縄\",\n\t\t\t\"zht\": \"繩\",\n\t\t\t\"zhs\": \"绳\"\n\t\t},\n\t\t\"縛\": {\n\t\t\t\"jp\": \"縛\",\n\t\t\t\"zht\": \"縛\",\n\t\t\t\"zhs\": \"缚\"\n\t\t},\n\t\t\"縱\": {\n\t\t\t\"jp\": \"縦\",\n\t\t\t\"zht\": \"縱\",\n\t\t\t\"zhs\": \"纵\"\n\t\t},\n\t\t\"縫\": {\n\t\t\t\"jp\": \"縫\",\n\t\t\t\"zht\": \"縫\",\n\t\t\t\"zhs\": \"缝\"\n\t\t},\n\t\t\"縮\": {\n\t\t\t\"jp\": \"縮\",\n\t\t\t\"zht\": \"縮\",\n\t\t\t\"zhs\": \"缩\"\n\t\t},\n\t\t\"纖\": {\n\t\t\t\"jp\": \"繊\",\n\t\t\t\"zht\": \"纖\",\n\t\t\t\"zhs\": \"纤\"\n\t\t},\n\t\t\"績\": {\n\t\t\t\"jp\": \"績\",\n\t\t\t\"zht\": \"績\",\n\t\t\t\"zhs\": \"绩\"\n\t\t},\n\t\t\"織\": {\n\t\t\t\"jp\": \"織\",\n\t\t\t\"zht\": \"織\",\n\t\t\t\"zhs\": \"织\"\n\t\t},\n\t\t\"繕\": {\n\t\t\t\"jp\": \"繕\",\n\t\t\t\"zht\": \"繕\",\n\t\t\t\"zhs\": \"缮\"\n\t\t},\n\t\t\"繭\": {\n\t\t\t\"jp\": \"繭\",\n\t\t\t\"zht\": \"繭\",\n\t\t\t\"zhs\": \"茧\"\n\t\t},\n\t\t\"繰\": {\n\t\t\t\"jp\": \"繰\",\n\t\t\t\"zht\": \"繰\",\n\t\t\t\"zhs\": \"缲\"\n\t\t},\n\t\t\"罐\": {\n\t\t\t\"jp\": \"缶\",\n\t\t\t\"zht\": \"罐\",\n\t\t\t\"zhs\": \"罐\"\n\t\t},\n\t\t\"鉢\": {\n\t\t\t\"jp\": \"鉢\",\n\t\t\t\"zht\": \"鉢\",\n\t\t\t\"zhs\": \"钵\"\n\t\t},\n\t\t\"羅\": {\n\t\t\t\"jp\": \"羅\",\n\t\t\t\"zht\": \"羅\",\n\t\t\t\"zhs\": \"罗\"\n\t\t},\n\t\t\"罰\": {\n\t\t\t\"jp\": \"罸\",\n\t\t\t\"zht\": \"罰\",\n\t\t\t\"zhs\": \"罚\"\n\t\t},\n\t\t\"罷\": {\n\t\t\t\"jp\": \"罷\",\n\t\t\t\"zht\": \"罷\",\n\t\t\t\"zhs\": \"罢\"\n\t\t},\n\t\t\"罵\": {\n\t\t\t\"jp\": \"罵\",\n\t\t\t\"zht\": \"罵\",\n\t\t\t\"zhs\": \"骂\"\n\t\t},\n\t\t\"職\": {\n\t\t\t\"jp\": \"職\",\n\t\t\t\"zht\": \"職\",\n\t\t\t\"zhs\": \"职\"\n\t\t},\n\t\t\"聞\": {\n\t\t\t\"jp\": \"聞\",\n\t\t\t\"zht\": \"聞\",\n\t\t\t\"zhs\": \"闻\"\n\t\t},\n\t\t\"聰\": {\n\t\t\t\"jp\": \"聡\",\n\t\t\t\"zht\": \"聰\",\n\t\t\t\"zhs\": \"聪\"\n\t\t},\n\t\t\"腸\": {\n\t\t\t\"jp\": \"腸\",\n\t\t\t\"zht\": \"腸\",\n\t\t\t\"zhs\": \"肠\"\n\t\t},\n\t\t\"膚\": {\n\t\t\t\"jp\": \"膚\",\n\t\t\t\"zht\": \"膚\",\n\t\t\t\"zhs\": \"肤\"\n\t\t},\n\t\t\"脹\": {\n\t\t\t\"jp\": \"脹\",\n\t\t\t\"zht\": \"脹\",\n\t\t\t\"zhs\": \"胀\"\n\t\t},\n\t\t\"脅\": {\n\t\t\t\"jp\": \"脅\",\n\t\t\t\"zht\": \"脅\",\n\t\t\t\"zhs\": \"胁\"\n\t\t},\n\t\t\"膽\": {\n\t\t\t\"jp\": \"胆\",\n\t\t\t\"zht\": \"膽\",\n\t\t\t\"zhs\": \"胆\"\n\t\t},\n\t\t\"臟\": {\n\t\t\t\"jp\": \"臓\",\n\t\t\t\"zht\": \"臟\",\n\t\t\t\"zhs\": \"脏\"\n\t\t},\n\t\t\"腦\": {\n\t\t\t\"jp\": \"脳\",\n\t\t\t\"zht\": \"腦\",\n\t\t\t\"zhs\": \"脑\"\n\t\t},\n\t\t\"腳\": {\n\t\t\t\"jp\": \"脚\",\n\t\t\t\"zht\": \"腳\",\n\t\t\t\"zhs\": \"脚\"\n\t\t},\n\t\t\"騰\": {\n\t\t\t\"jp\": \"騰\",\n\t\t\t\"zht\": \"騰\",\n\t\t\t\"zhs\": \"腾\"\n\t\t},\n\t\t\"舖\": {\n\t\t\t\"jp\": \"舗\",\n\t\t\t\"zht\": \"舖\",\n\t\t\t\"zhs\": \"铺\"\n\t\t},\n\t\t\"館\": {\n\t\t\t\"jp\": \"館\",\n\t\t\t\"zht\": \"館\",\n\t\t\t\"zhs\": \"馆\"\n\t\t},\n\t\t\"艦\": {\n\t\t\t\"jp\": \"艦\",\n\t\t\t\"zht\": \"艦\",\n\t\t\t\"zhs\": \"舰\"\n\t\t},\n\t\t\"藝\": {\n\t\t\t\"jp\": \"芸\",\n\t\t\t\"zht\": \"藝\",\n\t\t\t\"zhs\": \"艺\"\n\t\t},\n\t\t\"莖\": {\n\t\t\t\"jp\": \"茎\",\n\t\t\t\"zht\": \"莖\",\n\t\t\t\"zhs\": \"茎\"\n\t\t},\n\t\t\"薦\": {\n\t\t\t\"jp\": \"薦\",\n\t\t\t\"zht\": \"薦\",\n\t\t\t\"zhs\": \"荐\"\n\t\t},\n\t\t\"藥\": {\n\t\t\t\"jp\": \"薬\",\n\t\t\t\"zht\": \"藥\",\n\t\t\t\"zhs\": \"药\"\n\t\t},\n\t\t\"螢\": {\n\t\t\t\"jp\": \"蛍\",\n\t\t\t\"zht\": \"螢\",\n\t\t\t\"zhs\": \"萤\"\n\t\t},\n\t\t\"蔣\": {\n\t\t\t\"jp\": \"蒋\",\n\t\t\t\"zht\": \"蔣\",\n\t\t\t\"zhs\": \"蒋\"\n\t\t},\n\t\t\"藏\": {\n\t\t\t\"jp\": \"蔵\",\n\t\t\t\"zht\": \"藏\",\n\t\t\t\"zhs\": \"藏\"\n\t\t},\n\t\t\"虜\": {\n\t\t\t\"jp\": \"虜\",\n\t\t\t\"zht\": \"虜\",\n\t\t\t\"zhs\": \"虏\"\n\t\t},\n\t\t\"虛\": {\n\t\t\t\"jp\": \"虚\",\n\t\t\t\"zht\": \"虛\",\n\t\t\t\"zhs\": \"虚\"\n\t\t},\n\t\t\"蟲\": {\n\t\t\t\"jp\": \"虫\",\n\t\t\t\"zht\": \"蟲\",\n\t\t\t\"zhs\": \"虫\"\n\t\t},\n\t\t\"蝕\": {\n\t\t\t\"jp\": \"蝕\",\n\t\t\t\"zht\": \"蝕\",\n\t\t\t\"zhs\": \"蚀\"\n\t\t},\n\t\t\"蠶\": {\n\t\t\t\"jp\": \"蚕\",\n\t\t\t\"zht\": \"蠶\",\n\t\t\t\"zhs\": \"蚕\"\n\t\t},\n\t\t\"蠻\": {\n\t\t\t\"jp\": \"蛮\",\n\t\t\t\"zht\": \"蠻\",\n\t\t\t\"zhs\": \"蛮\"\n\t\t},\n\t\t\"補\": {\n\t\t\t\"jp\": \"補\",\n\t\t\t\"zht\": \"補\",\n\t\t\t\"zhs\": \"补\"\n\t\t},\n\t\t\"襲\": {\n\t\t\t\"jp\": \"襲\",\n\t\t\t\"zht\": \"襲\",\n\t\t\t\"zhs\": \"袭\"\n\t\t},\n\t\t\"裝\": {\n\t\t\t\"jp\": \"装\",\n\t\t\t\"zht\": \"裝\",\n\t\t\t\"zhs\": \"装\"\n\t\t},\n\t\t\"裡\": {\n\t\t\t\"jp\": \"裏\",\n\t\t\t\"zht\": \"裡\",\n\t\t\t\"zhs\": \"里\"\n\t\t},\n\t\t\"霸\": {\n\t\t\t\"jp\": \"覇\",\n\t\t\t\"zht\": \"霸\",\n\t\t\t\"zhs\": \"霸\"\n\t\t},\n\t\t\"見\": {\n\t\t\t\"jp\": \"見\",\n\t\t\t\"zht\": \"見\",\n\t\t\t\"zhs\": \"见\"\n\t\t},\n\t\t\"觀\": {\n\t\t\t\"jp\": \"観\",\n\t\t\t\"zht\": \"觀\",\n\t\t\t\"zhs\": \"观\"\n\t\t},\n\t\t\"規\": {\n\t\t\t\"jp\": \"規\",\n\t\t\t\"zht\": \"規\",\n\t\t\t\"zhs\": \"规\"\n\t\t},\n\t\t\"覺\": {\n\t\t\t\"jp\": \"覚\",\n\t\t\t\"zht\": \"覺\",\n\t\t\t\"zhs\": \"觉\"\n\t\t},\n\t\t\"覽\": {\n\t\t\t\"jp\": \"覧\",\n\t\t\t\"zht\": \"覽\",\n\t\t\t\"zhs\": \"览\"\n\t\t},\n\t\t\"觸\": {\n\t\t\t\"jp\": \"触\",\n\t\t\t\"zht\": \"觸\",\n\t\t\t\"zhs\": \"触\"\n\t\t},\n\t\t\"訂\": {\n\t\t\t\"jp\": \"訂\",\n\t\t\t\"zht\": \"訂\",\n\t\t\t\"zhs\": \"订\"\n\t\t},\n\t\t\"計\": {\n\t\t\t\"jp\": \"計\",\n\t\t\t\"zht\": \"計\",\n\t\t\t\"zhs\": \"计\"\n\t\t},\n\t\t\"討\": {\n\t\t\t\"jp\": \"討\",\n\t\t\t\"zht\": \"討\",\n\t\t\t\"zhs\": \"讨\"\n\t\t},\n\t\t\"訓\": {\n\t\t\t\"jp\": \"訓\",\n\t\t\t\"zht\": \"訓\",\n\t\t\t\"zhs\": \"训\"\n\t\t},\n\t\t\"記\": {\n\t\t\t\"jp\": \"記\",\n\t\t\t\"zht\": \"記\",\n\t\t\t\"zhs\": \"记\"\n\t\t},\n\t\t\"訟\": {\n\t\t\t\"jp\": \"訟\",\n\t\t\t\"zht\": \"訟\",\n\t\t\t\"zhs\": \"讼\"\n\t\t},\n\t\t\"訪\": {\n\t\t\t\"jp\": \"訪\",\n\t\t\t\"zht\": \"訪\",\n\t\t\t\"zhs\": \"访\"\n\t\t},\n\t\t\"設\": {\n\t\t\t\"jp\": \"設\",\n\t\t\t\"zht\": \"設\",\n\t\t\t\"zhs\": \"设\"\n\t\t},\n\t\t\"許\": {\n\t\t\t\"jp\": \"許\",\n\t\t\t\"zht\": \"許\",\n\t\t\t\"zhs\": \"许\"\n\t\t},\n\t\t\"譯\": {\n\t\t\t\"jp\": \"訳\",\n\t\t\t\"zht\": \"譯\",\n\t\t\t\"zhs\": \"译\"\n\t\t},\n\t\t\"訴\": {\n\t\t\t\"jp\": \"訴\",\n\t\t\t\"zht\": \"訴\",\n\t\t\t\"zhs\": \"诉\"\n\t\t},\n\t\t\"診\": {\n\t\t\t\"jp\": \"診\",\n\t\t\t\"zht\": \"診\",\n\t\t\t\"zhs\": \"诊\"\n\t\t},\n\t\t\"證\": {\n\t\t\t\"jp\": \"証\",\n\t\t\t\"zht\": \"證\",\n\t\t\t\"zhs\": \"证\"\n\t\t},\n\t\t\"詐\": {\n\t\t\t\"jp\": \"詐\",\n\t\t\t\"zht\": \"詐\",\n\t\t\t\"zhs\": \"诈\"\n\t\t},\n\t\t\"詔\": {\n\t\t\t\"jp\": \"詔\",\n\t\t\t\"zht\": \"詔\",\n\t\t\t\"zhs\": \"诏\"\n\t\t},\n\t\t\"評\": {\n\t\t\t\"jp\": \"評\",\n\t\t\t\"zht\": \"評\",\n\t\t\t\"zhs\": \"评\"\n\t\t},\n\t\t\"詛\": {\n\t\t\t\"jp\": \"詛\",\n\t\t\t\"zht\": \"詛\",\n\t\t\t\"zhs\": \"诅\"\n\t\t},\n\t\t\"詞\": {\n\t\t\t\"jp\": \"詞\",\n\t\t\t\"zht\": \"詞\",\n\t\t\t\"zhs\": \"词\"\n\t\t},\n\t\t\"試\": {\n\t\t\t\"jp\": \"試\",\n\t\t\t\"zht\": \"試\",\n\t\t\t\"zhs\": \"试\"\n\t\t},\n\t\t\"詩\": {\n\t\t\t\"jp\": \"詩\",\n\t\t\t\"zht\": \"詩\",\n\t\t\t\"zhs\": \"诗\"\n\t\t},\n\t\t\"詰\": {\n\t\t\t\"jp\": \"詰\",\n\t\t\t\"zht\": \"詰\",\n\t\t\t\"zhs\": \"诘\"\n\t\t},\n\t\t\"該\": {\n\t\t\t\"jp\": \"該\",\n\t\t\t\"zht\": \"該\",\n\t\t\t\"zhs\": \"该\"\n\t\t},\n\t\t\"詳\": {\n\t\t\t\"jp\": \"詳\",\n\t\t\t\"zht\": \"詳\",\n\t\t\t\"zhs\": \"详\"\n\t\t},\n\t\t\"譽\": {\n\t\t\t\"jp\": \"誉\",\n\t\t\t\"zht\": \"譽\",\n\t\t\t\"zhs\": \"誉\"\n\t\t},\n\t\t\"謄\": {\n\t\t\t\"jp\": \"謄\",\n\t\t\t\"zht\": \"謄\",\n\t\t\t\"zhs\": \"誊\"\n\t\t},\n\t\t\"認\": {\n\t\t\t\"jp\": \"認\",\n\t\t\t\"zht\": \"認\",\n\t\t\t\"zhs\": \"认\"\n\t\t},\n\t\t\"誕\": {\n\t\t\t\"jp\": \"誕\",\n\t\t\t\"zht\": \"誕\",\n\t\t\t\"zhs\": \"诞\"\n\t\t},\n\t\t\"誘\": {\n\t\t\t\"jp\": \"誘\",\n\t\t\t\"zht\": \"誘\",\n\t\t\t\"zhs\": \"诱\"\n\t\t},\n\t\t\"語\": {\n\t\t\t\"jp\": \"語\",\n\t\t\t\"zht\": \"語\",\n\t\t\t\"zhs\": \"语\"\n\t\t},\n\t\t\"誠\": {\n\t\t\t\"jp\": \"誠\",\n\t\t\t\"zht\": \"誠\",\n\t\t\t\"zhs\": \"诚\"\n\t\t},\n\t\t\"誤\": {\n\t\t\t\"jp\": \"誤\",\n\t\t\t\"zht\": \"誤\",\n\t\t\t\"zhs\": \"误\"\n\t\t},\n\t\t\"說\": {\n\t\t\t\"jp\": \"説\",\n\t\t\t\"zht\": \"說\",\n\t\t\t\"zhs\": \"说\"\n\t\t},\n\t\t\"讀\": {\n\t\t\t\"jp\": \"読\",\n\t\t\t\"zht\": \"讀\",\n\t\t\t\"zhs\": \"读\"\n\t\t},\n\t\t\"誰\": {\n\t\t\t\"jp\": \"誰\",\n\t\t\t\"zht\": \"誰\",\n\t\t\t\"zhs\": \"谁\"\n\t\t},\n\t\t\"課\": {\n\t\t\t\"jp\": \"課\",\n\t\t\t\"zht\": \"課\",\n\t\t\t\"zhs\": \"课\"\n\t\t},\n\t\t\"調\": {\n\t\t\t\"jp\": \"調\",\n\t\t\t\"zht\": \"調\",\n\t\t\t\"zhs\": \"调\"\n\t\t},\n\t\t\"談\": {\n\t\t\t\"jp\": \"談\",\n\t\t\t\"zht\": \"談\",\n\t\t\t\"zhs\": \"谈\"\n\t\t},\n\t\t\"請\": {\n\t\t\t\"jp\": \"請\",\n\t\t\t\"zht\": \"請\",\n\t\t\t\"zhs\": \"请\"\n\t\t},\n\t\t\"論\": {\n\t\t\t\"jp\": \"論\",\n\t\t\t\"zht\": \"論\",\n\t\t\t\"zhs\": \"论\"\n\t\t},\n\t\t\"諭\": {\n\t\t\t\"jp\": \"諭\",\n\t\t\t\"zht\": \"諭\",\n\t\t\t\"zhs\": \"谕\"\n\t\t},\n\t\t\"諸\": {\n\t\t\t\"jp\": \"諸\",\n\t\t\t\"zht\": \"諸\",\n\t\t\t\"zhs\": \"诸\"\n\t\t},\n\t\t\"諾\": {\n\t\t\t\"jp\": \"諾\",\n\t\t\t\"zht\": \"諾\",\n\t\t\t\"zhs\": \"诺\"\n\t\t},\n\t\t\"謀\": {\n\t\t\t\"jp\": \"謀\",\n\t\t\t\"zht\": \"謀\",\n\t\t\t\"zhs\": \"谋\"\n\t\t},\n\t\t\"謁\": {\n\t\t\t\"jp\": \"謁\",\n\t\t\t\"zht\": \"謁\",\n\t\t\t\"zhs\": \"谒\"\n\t\t},\n\t\t\"謎\": {\n\t\t\t\"jp\": \"謎\",\n\t\t\t\"zht\": \"謎\",\n\t\t\t\"zhs\": \"谜\"\n\t\t},\n\t\t\"謙\": {\n\t\t\t\"jp\": \"謙\",\n\t\t\t\"zht\": \"謙\",\n\t\t\t\"zhs\": \"谦\"\n\t\t},\n\t\t\"講\": {\n\t\t\t\"jp\": \"講\",\n\t\t\t\"zht\": \"講\",\n\t\t\t\"zhs\": \"讲\"\n\t\t},\n\t\t\"謝\": {\n\t\t\t\"jp\": \"謝\",\n\t\t\t\"zht\": \"謝\",\n\t\t\t\"zhs\": \"谢\"\n\t\t},\n\t\t\"謠\": {\n\t\t\t\"jp\": \"謡\",\n\t\t\t\"zht\": \"謠\",\n\t\t\t\"zhs\": \"谣\"\n\t\t},\n\t\t\"謹\": {\n\t\t\t\"jp\": \"謹\",\n\t\t\t\"zht\": \"謹\",\n\t\t\t\"zhs\": \"谨\"\n\t\t},\n\t\t\"識\": {\n\t\t\t\"jp\": \"識\",\n\t\t\t\"zht\": \"識\",\n\t\t\t\"zhs\": \"识\"\n\t\t},\n\t\t\"譜\": {\n\t\t\t\"jp\": \"譜\",\n\t\t\t\"zht\": \"譜\",\n\t\t\t\"zhs\": \"谱\"\n\t\t},\n\t\t\"議\": {\n\t\t\t\"jp\": \"議\",\n\t\t\t\"zht\": \"議\",\n\t\t\t\"zhs\": \"议\"\n\t\t},\n\t\t\"讓\": {\n\t\t\t\"jp\": \"譲\",\n\t\t\t\"zht\": \"讓\",\n\t\t\t\"zhs\": \"让\"\n\t\t},\n\t\t\"貝\": {\n\t\t\t\"jp\": \"貝\",\n\t\t\t\"zht\": \"貝\",\n\t\t\t\"zhs\": \"贝\"\n\t\t},\n\t\t\"貞\": {\n\t\t\t\"jp\": \"貞\",\n\t\t\t\"zht\": \"貞\",\n\t\t\t\"zhs\": \"贞\"\n\t\t},\n\t\t\"負\": {\n\t\t\t\"jp\": \"負\",\n\t\t\t\"zht\": \"負\",\n\t\t\t\"zhs\": \"负\"\n\t\t},\n\t\t\"財\": {\n\t\t\t\"jp\": \"財\",\n\t\t\t\"zht\": \"財\",\n\t\t\t\"zhs\": \"财\"\n\t\t},\n\t\t\"貢\": {\n\t\t\t\"jp\": \"貢\",\n\t\t\t\"zht\": \"貢\",\n\t\t\t\"zhs\": \"贡\"\n\t\t},\n\t\t\"貧\": {\n\t\t\t\"jp\": \"貧\",\n\t\t\t\"zht\": \"貧\",\n\t\t\t\"zhs\": \"贫\"\n\t\t},\n\t\t\"貨\": {\n\t\t\t\"jp\": \"貨\",\n\t\t\t\"zht\": \"貨\",\n\t\t\t\"zhs\": \"货\"\n\t\t},\n\t\t\"販\": {\n\t\t\t\"jp\": \"販\",\n\t\t\t\"zht\": \"販\",\n\t\t\t\"zhs\": \"贩\"\n\t\t},\n\t\t\"貪\": {\n\t\t\t\"jp\": \"貪\",\n\t\t\t\"zht\": \"貪\",\n\t\t\t\"zhs\": \"贪\"\n\t\t},\n\t\t\"責\": {\n\t\t\t\"jp\": \"責\",\n\t\t\t\"zht\": \"責\",\n\t\t\t\"zhs\": \"责\"\n\t\t},\n\t\t\"貯\": {\n\t\t\t\"jp\": \"貯\",\n\t\t\t\"zht\": \"貯\",\n\t\t\t\"zhs\": \"贮\"\n\t\t},\n\t\t\"貴\": {\n\t\t\t\"jp\": \"貴\",\n\t\t\t\"zht\": \"貴\",\n\t\t\t\"zhs\": \"贵\"\n\t\t},\n\t\t\"貸\": {\n\t\t\t\"jp\": \"貸\",\n\t\t\t\"zht\": \"貸\",\n\t\t\t\"zhs\": \"贷\"\n\t\t},\n\t\t\"費\": {\n\t\t\t\"jp\": \"費\",\n\t\t\t\"zht\": \"費\",\n\t\t\t\"zhs\": \"费\"\n\t\t},\n\t\t\"貿\": {\n\t\t\t\"jp\": \"貿\",\n\t\t\t\"zht\": \"貿\",\n\t\t\t\"zhs\": \"贸\"\n\t\t},\n\t\t\"賀\": {\n\t\t\t\"jp\": \"賀\",\n\t\t\t\"zht\": \"賀\",\n\t\t\t\"zhs\": \"贺\"\n\t\t},\n\t\t\"賃\": {\n\t\t\t\"jp\": \"賃\",\n\t\t\t\"zht\": \"賃\",\n\t\t\t\"zhs\": \"赁\"\n\t\t},\n\t\t\"賄\": {\n\t\t\t\"jp\": \"賄\",\n\t\t\t\"zht\": \"賄\",\n\t\t\t\"zhs\": \"贿\"\n\t\t},\n\t\t\"資\": {\n\t\t\t\"jp\": \"資\",\n\t\t\t\"zht\": \"資\",\n\t\t\t\"zhs\": \"资\"\n\t\t},\n\t\t\"賊\": {\n\t\t\t\"jp\": \"賊\",\n\t\t\t\"zht\": \"賊\",\n\t\t\t\"zhs\": \"贼\"\n\t\t},\n\t\t\"賤\": {\n\t\t\t\"jp\": \"賎\",\n\t\t\t\"zht\": \"賤\",\n\t\t\t\"zhs\": \"贱\"\n\t\t},\n\t\t\"贊\": {\n\t\t\t\"jp\": \"賛\",\n\t\t\t\"zht\": \"贊\",\n\t\t\t\"zhs\": \"赞\"\n\t\t},\n\t\t\"賜\": {\n\t\t\t\"jp\": \"賜\",\n\t\t\t\"zht\": \"賜\",\n\t\t\t\"zhs\": \"赐\"\n\t\t},\n\t\t\"賞\": {\n\t\t\t\"jp\": \"賞\",\n\t\t\t\"zht\": \"賞\",\n\t\t\t\"zhs\": \"赏\"\n\t\t},\n\t\t\"賠\": {\n\t\t\t\"jp\": \"賠\",\n\t\t\t\"zht\": \"賠\",\n\t\t\t\"zhs\": \"赔\"\n\t\t},\n\t\t\"賢\": {\n\t\t\t\"jp\": \"賢\",\n\t\t\t\"zht\": \"賢\",\n\t\t\t\"zhs\": \"贤\"\n\t\t},\n\t\t\"賦\": {\n\t\t\t\"jp\": \"賦\",\n\t\t\t\"zht\": \"賦\",\n\t\t\t\"zhs\": \"赋\"\n\t\t},\n\t\t\"質\": {\n\t\t\t\"jp\": \"質\",\n\t\t\t\"zht\": \"質\",\n\t\t\t\"zhs\": \"质\"\n\t\t},\n\t\t\"賴\": {\n\t\t\t\"jp\": \"頼\",\n\t\t\t\"zht\": \"賴\",\n\t\t\t\"zhs\": \"赖\"\n\t\t},\n\t\t\"贈\": {\n\t\t\t\"jp\": \"贈\",\n\t\t\t\"zht\": \"贈\",\n\t\t\t\"zhs\": \"赠\"\n\t\t},\n\t\t\"贓\": {\n\t\t\t\"jp\": \"贓\",\n\t\t\t\"zht\": \"贓\",\n\t\t\t\"zhs\": \"赃\"\n\t\t},\n\t\t\"躍\": {\n\t\t\t\"jp\": \"躍\",\n\t\t\t\"zht\": \"躍\",\n\t\t\t\"zhs\": \"跃\"\n\t\t},\n\t\t\"踐\": {\n\t\t\t\"jp\": \"践\",\n\t\t\t\"zht\": \"踐\",\n\t\t\t\"zhs\": \"践\"\n\t\t},\n\t\t\"蹤\": {\n\t\t\t\"jp\": \"踪\",\n\t\t\t\"zht\": \"蹤\",\n\t\t\t\"zhs\": \"踪\"\n\t\t},\n\t\t\"車\": {\n\t\t\t\"jp\": \"車\",\n\t\t\t\"zht\": \"車\",\n\t\t\t\"zhs\": \"车\"\n\t\t},\n\t\t\"軌\": {\n\t\t\t\"jp\": \"軌\",\n\t\t\t\"zht\": \"軌\",\n\t\t\t\"zhs\": \"轨\"\n\t\t},\n\t\t\"軒\": {\n\t\t\t\"jp\": \"軒\",\n\t\t\t\"zht\": \"軒\",\n\t\t\t\"zhs\": \"轩\"\n\t\t},\n\t\t\"軟\": {\n\t\t\t\"jp\": \"軟\",\n\t\t\t\"zht\": \"軟\",\n\t\t\t\"zhs\": \"软\"\n\t\t},\n\t\t\"轉\": {\n\t\t\t\"jp\": \"転\",\n\t\t\t\"zht\": \"轉\",\n\t\t\t\"zhs\": \"转\"\n\t\t},\n\t\t\"軸\": {\n\t\t\t\"jp\": \"軸\",\n\t\t\t\"zht\": \"軸\",\n\t\t\t\"zhs\": \"轴\"\n\t\t},\n\t\t\"輕\": {\n\t\t\t\"jp\": \"軽\",\n\t\t\t\"zht\": \"輕\",\n\t\t\t\"zhs\": \"轻\"\n\t\t},\n\t\t\"較\": {\n\t\t\t\"jp\": \"較\",\n\t\t\t\"zht\": \"較\",\n\t\t\t\"zhs\": \"较\"\n\t\t},\n\t\t\"載\": {\n\t\t\t\"jp\": \"載\",\n\t\t\t\"zht\": \"載\",\n\t\t\t\"zhs\": \"载\"\n\t\t},\n\t\t\"輝\": {\n\t\t\t\"jp\": \"輝\",\n\t\t\t\"zht\": \"輝\",\n\t\t\t\"zhs\": \"辉\"\n\t\t},\n\t\t\"輩\": {\n\t\t\t\"jp\": \"輩\",\n\t\t\t\"zht\": \"輩\",\n\t\t\t\"zhs\": \"辈\"\n\t\t},\n\t\t\"輪\": {\n\t\t\t\"jp\": \"輪\",\n\t\t\t\"zht\": \"輪\",\n\t\t\t\"zhs\": \"轮\"\n\t\t},\n\t\t\"輸\": {\n\t\t\t\"jp\": \"輸\",\n\t\t\t\"zht\": \"輸\",\n\t\t\t\"zhs\": \"输\"\n\t\t},\n\t\t\"轄\": {\n\t\t\t\"jp\": \"轄\",\n\t\t\t\"zht\": \"轄\",\n\t\t\t\"zhs\": \"辖\"\n\t\t},\n\t\t\"辭\": {\n\t\t\t\"jp\": \"辞\",\n\t\t\t\"zht\": \"辭\",\n\t\t\t\"zhs\": \"辞\"\n\t\t},\n\t\t\"邊\": {\n\t\t\t\"jp\": \"辺\",\n\t\t\t\"zht\": \"邊\",\n\t\t\t\"zhs\": \"边\"\n\t\t},\n\t\t\"達\": {\n\t\t\t\"jp\": \"達\",\n\t\t\t\"zht\": \"達\",\n\t\t\t\"zhs\": \"达\"\n\t\t},\n\t\t\"遷\": {\n\t\t\t\"jp\": \"遷\",\n\t\t\t\"zht\": \"遷\",\n\t\t\t\"zhs\": \"迁\"\n\t\t},\n\t\t\"過\": {\n\t\t\t\"jp\": \"過\",\n\t\t\t\"zht\": \"過\",\n\t\t\t\"zhs\": \"过\"\n\t\t},\n\t\t\"運\": {\n\t\t\t\"jp\": \"運\",\n\t\t\t\"zht\": \"運\",\n\t\t\t\"zhs\": \"运\"\n\t\t},\n\t\t\"還\": {\n\t\t\t\"jp\": \"還\",\n\t\t\t\"zht\": \"還\",\n\t\t\t\"zhs\": \"还\"\n\t\t},\n\t\t\"進\": {\n\t\t\t\"jp\": \"進\",\n\t\t\t\"zht\": \"進\",\n\t\t\t\"zhs\": \"进\"\n\t\t},\n\t\t\"遠\": {\n\t\t\t\"jp\": \"遠\",\n\t\t\t\"zht\": \"遠\",\n\t\t\t\"zhs\": \"远\"\n\t\t},\n\t\t\"違\": {\n\t\t\t\"jp\": \"違\",\n\t\t\t\"zht\": \"違\",\n\t\t\t\"zhs\": \"违\"\n\t\t},\n\t\t\"連\": {\n\t\t\t\"jp\": \"連\",\n\t\t\t\"zht\": \"連\",\n\t\t\t\"zhs\": \"连\"\n\t\t},\n\t\t\"遲\": {\n\t\t\t\"jp\": \"遅\",\n\t\t\t\"zht\": \"遲\",\n\t\t\t\"zhs\": \"迟\"\n\t\t},\n\t\t\"適\": {\n\t\t\t\"jp\": \"適\",\n\t\t\t\"zht\": \"適\",\n\t\t\t\"zhs\": \"适\"\n\t\t},\n\t\t\"選\": {\n\t\t\t\"jp\": \"選\",\n\t\t\t\"zht\": \"選\",\n\t\t\t\"zhs\": \"选\"\n\t\t},\n\t\t\"遞\": {\n\t\t\t\"jp\": \"逓\",\n\t\t\t\"zht\": \"遞\",\n\t\t\t\"zhs\": \"递\"\n\t\t},\n\t\t\"遺\": {\n\t\t\t\"jp\": \"遺\",\n\t\t\t\"zht\": \"遺\",\n\t\t\t\"zhs\": \"遗\"\n\t\t},\n\t\t\"遙\": {\n\t\t\t\"jp\": \"遥\",\n\t\t\t\"zht\": \"遙\",\n\t\t\t\"zhs\": \"遥\"\n\t\t},\n\t\t\"郵\": {\n\t\t\t\"jp\": \"郵\",\n\t\t\t\"zht\": \"郵\",\n\t\t\t\"zhs\": \"邮\"\n\t\t},\n\t\t\"鄰\": {\n\t\t\t\"jp\": \"隣\",\n\t\t\t\"zht\": \"鄰\",\n\t\t\t\"zhs\": \"邻\"\n\t\t},\n\t\t\"醉\": {\n\t\t\t\"jp\": \"酔\",\n\t\t\t\"zht\": \"醉\",\n\t\t\t\"zhs\": \"醉\"\n\t\t},\n\t\t\"釀\": {\n\t\t\t\"jp\": \"醸\",\n\t\t\t\"zht\": \"釀\",\n\t\t\t\"zhs\": \"酿\"\n\t\t},\n\t\t\"釋\": {\n\t\t\t\"jp\": \"釈\",\n\t\t\t\"zht\": \"釋\",\n\t\t\t\"zhs\": \"释\"\n\t\t},\n\t\t\"針\": {\n\t\t\t\"jp\": \"針\",\n\t\t\t\"zht\": \"針\",\n\t\t\t\"zhs\": \"针\"\n\t\t},\n\t\t\"釣\": {\n\t\t\t\"jp\": \"釣\",\n\t\t\t\"zht\": \"釣\",\n\t\t\t\"zhs\": \"钓\"\n\t\t},\n\t\t\"鈍\": {\n\t\t\t\"jp\": \"鈍\",\n\t\t\t\"zht\": \"鈍\",\n\t\t\t\"zhs\": \"钝\"\n\t\t},\n\t\t\"鈴\": {\n\t\t\t\"jp\": \"鈴\",\n\t\t\t\"zht\": \"鈴\",\n\t\t\t\"zhs\": \"铃\"\n\t\t},\n\t\t\"鐵\": {\n\t\t\t\"jp\": \"鉄\",\n\t\t\t\"zht\": \"鐵\",\n\t\t\t\"zhs\": \"铁\"\n\t\t},\n\t\t\"鉛\": {\n\t\t\t\"jp\": \"鉛\",\n\t\t\t\"zht\": \"鉛\",\n\t\t\t\"zhs\": \"铅\"\n\t\t},\n\t\t\"鑑\": {\n\t\t\t\"jp\": \"鑑\",\n\t\t\t\"zht\": \"鑑\",\n\t\t\t\"zhs\": \"鉴\"\n\t\t},\n\t\t\"銀\": {\n\t\t\t\"jp\": \"銀\",\n\t\t\t\"zht\": \"銀\",\n\t\t\t\"zhs\": \"银\"\n\t\t},\n\t\t\"銃\": {\n\t\t\t\"jp\": \"銃\",\n\t\t\t\"zht\": \"銃\",\n\t\t\t\"zhs\": \"铳\"\n\t\t},\n\t\t\"銅\": {\n\t\t\t\"jp\": \"銅\",\n\t\t\t\"zht\": \"銅\",\n\t\t\t\"zhs\": \"铜\"\n\t\t},\n\t\t\"銑\": {\n\t\t\t\"jp\": \"銑\",\n\t\t\t\"zht\": \"銑\",\n\t\t\t\"zhs\": \"铣\"\n\t\t},\n\t\t\"銘\": {\n\t\t\t\"jp\": \"銘\",\n\t\t\t\"zht\": \"銘\",\n\t\t\t\"zhs\": \"铭\"\n\t\t},\n\t\t\"錢\": {\n\t\t\t\"jp\": \"銭\",\n\t\t\t\"zht\": \"錢\",\n\t\t\t\"zhs\": \"钱\"\n\t\t},\n\t\t\"鋭\": {\n\t\t\t\"jp\": \"鋭\",\n\t\t\t\"zht\": \"鋭\",\n\t\t\t\"zhs\": \"锐\"\n\t\t},\n\t\t\"鑄\": {\n\t\t\t\"jp\": \"鋳\",\n\t\t\t\"zht\": \"鑄\",\n\t\t\t\"zhs\": \"铸\"\n\t\t},\n\t\t\"鋼\": {\n\t\t\t\"jp\": \"鋼\",\n\t\t\t\"zht\": \"鋼\",\n\t\t\t\"zhs\": \"钢\"\n\t\t},\n\t\t\"錘\": {\n\t\t\t\"jp\": \"錘\",\n\t\t\t\"zht\": \"錘\",\n\t\t\t\"zhs\": \"锤\"\n\t\t},\n\t\t\"錠\": {\n\t\t\t\"jp\": \"錠\",\n\t\t\t\"zht\": \"錠\",\n\t\t\t\"zhs\": \"锭\"\n\t\t},\n\t\t\"錯\": {\n\t\t\t\"jp\": \"錯\",\n\t\t\t\"zht\": \"錯\",\n\t\t\t\"zhs\": \"错\"\n\t\t},\n\t\t\"鍾\": {\n\t\t\t\"jp\": \"鍾\",\n\t\t\t\"zht\": \"鍾\",\n\t\t\t\"zhs\": \"钟\"\n\t\t},\n\t\t\"鎖\": {\n\t\t\t\"jp\": \"鎖\",\n\t\t\t\"zht\": \"鎖\",\n\t\t\t\"zhs\": \"锁\"\n\t\t},\n\t\t\"鎮\": {\n\t\t\t\"jp\": \"鎮\",\n\t\t\t\"zht\": \"鎮\",\n\t\t\t\"zhs\": \"镇\"\n\t\t},\n\t\t\"鏡\": {\n\t\t\t\"jp\": \"鏡\",\n\t\t\t\"zht\": \"鏡\",\n\t\t\t\"zhs\": \"镜\"\n\t\t},\n\t\t\"長\": {\n\t\t\t\"jp\": \"長\",\n\t\t\t\"zht\": \"長\",\n\t\t\t\"zhs\": \"长\"\n\t\t},\n\t\t\"門\": {\n\t\t\t\"jp\": \"門\",\n\t\t\t\"zht\": \"門\",\n\t\t\t\"zhs\": \"门\"\n\t\t},\n\t\t\"閉\": {\n\t\t\t\"jp\": \"閉\",\n\t\t\t\"zht\": \"閉\",\n\t\t\t\"zhs\": \"闭\"\n\t\t},\n\t\t\"閒\": {\n\t\t\t\"jp\": \"閑\",\n\t\t\t\"zht\": \"閒\",\n\t\t\t\"zhs\": \"闲\"\n\t\t},\n\t\t\"間\": {\n\t\t\t\"jp\": \"間\",\n\t\t\t\"zht\": \"間\",\n\t\t\t\"zhs\": \"间\"\n\t\t},\n\t\t\"閣\": {\n\t\t\t\"jp\": \"閣\",\n\t\t\t\"zht\": \"閣\",\n\t\t\t\"zhs\": \"阁\"\n\t\t},\n\t\t\"閥\": {\n\t\t\t\"jp\": \"閥\",\n\t\t\t\"zht\": \"閥\",\n\t\t\t\"zhs\": \"阀\"\n\t\t},\n\t\t\"閲\": {\n\t\t\t\"jp\": \"閲\",\n\t\t\t\"zht\": \"閲\",\n\t\t\t\"zhs\": \"阅\"\n\t\t},\n\t\t\"隊\": {\n\t\t\t\"jp\": \"隊\",\n\t\t\t\"zht\": \"隊\",\n\t\t\t\"zhs\": \"队\"\n\t\t},\n\t\t\"陽\": {\n\t\t\t\"jp\": \"陽\",\n\t\t\t\"zht\": \"陽\",\n\t\t\t\"zhs\": \"阳\"\n\t\t},\n\t\t\"陰\": {\n\t\t\t\"jp\": \"陰\",\n\t\t\t\"zht\": \"陰\",\n\t\t\t\"zhs\": \"阴\"\n\t\t},\n\t\t\"陣\": {\n\t\t\t\"jp\": \"陣\",\n\t\t\t\"zht\": \"陣\",\n\t\t\t\"zhs\": \"阵\"\n\t\t},\n\t\t\"階\": {\n\t\t\t\"jp\": \"階\",\n\t\t\t\"zht\": \"階\",\n\t\t\t\"zhs\": \"阶\"\n\t\t},\n\t\t\"際\": {\n\t\t\t\"jp\": \"際\",\n\t\t\t\"zht\": \"際\",\n\t\t\t\"zhs\": \"际\"\n\t\t},\n\t\t\"陸\": {\n\t\t\t\"jp\": \"陸\",\n\t\t\t\"zht\": \"陸\",\n\t\t\t\"zhs\": \"陆\"\n\t\t},\n\t\t\"陳\": {\n\t\t\t\"jp\": \"陳\",\n\t\t\t\"zht\": \"陳\",\n\t\t\t\"zhs\": \"陈\"\n\t\t},\n\t\t\"陷\": {\n\t\t\t\"jp\": \"陥\",\n\t\t\t\"zht\": \"陷\",\n\t\t\t\"zhs\": \"陷\"\n\t\t},\n\t\t\"隨\": {\n\t\t\t\"jp\": \"随\",\n\t\t\t\"zht\": \"隨\",\n\t\t\t\"zhs\": \"随\"\n\t\t},\n\t\t\"隱\": {\n\t\t\t\"jp\": \"隠\",\n\t\t\t\"zht\": \"隱\",\n\t\t\t\"zhs\": \"隐\"\n\t\t},\n\t\t\"隸\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隸\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"難\": {\n\t\t\t\"jp\": \"難\",\n\t\t\t\"zht\": \"難\",\n\t\t\t\"zhs\": \"难\"\n\t\t},\n\t\t\"霧\": {\n\t\t\t\"jp\": \"霧\",\n\t\t\t\"zht\": \"霧\",\n\t\t\t\"zhs\": \"雾\"\n\t\t},\n\t\t\"靜\": {\n\t\t\t\"jp\": \"静\",\n\t\t\t\"zht\": \"靜\",\n\t\t\t\"zhs\": \"静\"\n\t\t},\n\t\t\"頂\": {\n\t\t\t\"jp\": \"頂\",\n\t\t\t\"zht\": \"頂\",\n\t\t\t\"zhs\": \"顶\"\n\t\t},\n\t\t\"項\": {\n\t\t\t\"jp\": \"項\",\n\t\t\t\"zht\": \"項\",\n\t\t\t\"zhs\": \"项\"\n\t\t},\n\t\t\"順\": {\n\t\t\t\"jp\": \"順\",\n\t\t\t\"zht\": \"順\",\n\t\t\t\"zhs\": \"顺\"\n\t\t},\n\t\t\"頑\": {\n\t\t\t\"jp\": \"頑\",\n\t\t\t\"zht\": \"頑\",\n\t\t\t\"zhs\": \"顽\"\n\t\t},\n\t\t\"頒\": {\n\t\t\t\"jp\": \"頒\",\n\t\t\t\"zht\": \"頒\",\n\t\t\t\"zhs\": \"颁\"\n\t\t},\n\t\t\"領\": {\n\t\t\t\"jp\": \"領\",\n\t\t\t\"zht\": \"領\",\n\t\t\t\"zhs\": \"领\"\n\t\t},\n\t\t\"頻\": {\n\t\t\t\"jp\": \"頻\",\n\t\t\t\"zht\": \"頻\",\n\t\t\t\"zhs\": \"频\"\n\t\t},\n\t\t\"題\": {\n\t\t\t\"jp\": \"題\",\n\t\t\t\"zht\": \"題\",\n\t\t\t\"zhs\": \"题\"\n\t\t},\n\t\t\"額\": {\n\t\t\t\"jp\": \"額\",\n\t\t\t\"zht\": \"額\",\n\t\t\t\"zhs\": \"额\"\n\t\t},\n\t\t\"顏\": {\n\t\t\t\"jp\": \"顔\",\n\t\t\t\"zht\": \"顏\",\n\t\t\t\"zhs\": \"颜\"\n\t\t},\n\t\t\"風\": {\n\t\t\t\"jp\": \"風\",\n\t\t\t\"zht\": \"風\",\n\t\t\t\"zhs\": \"风\"\n\t\t},\n\t\t\"飛\": {\n\t\t\t\"jp\": \"飛\",\n\t\t\t\"zht\": \"飛\",\n\t\t\t\"zhs\": \"飞\"\n\t\t},\n\t\t\"饑\": {\n\t\t\t\"jp\": \"飢\",\n\t\t\t\"zht\": \"饑\",\n\t\t\t\"zhs\": \"饥\"\n\t\t},\n\t\t\"飯\": {\n\t\t\t\"jp\": \"飯\",\n\t\t\t\"zht\": \"飯\",\n\t\t\t\"zhs\": \"饭\"\n\t\t},\n\t\t\"飲\": {\n\t\t\t\"jp\": \"飲\",\n\t\t\t\"zht\": \"飲\",\n\t\t\t\"zhs\": \"饮\"\n\t\t},\n\t\t\"飼\": {\n\t\t\t\"jp\": \"飼\",\n\t\t\t\"zht\": \"飼\",\n\t\t\t\"zhs\": \"饲\"\n\t\t},\n\t\t\"飽\": {\n\t\t\t\"jp\": \"飽\",\n\t\t\t\"zht\": \"飽\",\n\t\t\t\"zhs\": \"饱\"\n\t\t},\n\t\t\"飾\": {\n\t\t\t\"jp\": \"飾\",\n\t\t\t\"zht\": \"飾\",\n\t\t\t\"zhs\": \"饰\"\n\t\t},\n\t\t\"餓\": {\n\t\t\t\"jp\": \"餓\",\n\t\t\t\"zht\": \"餓\",\n\t\t\t\"zhs\": \"饿\"\n\t\t},\n\t\t\"馬\": {\n\t\t\t\"jp\": \"馬\",\n\t\t\t\"zht\": \"馬\",\n\t\t\t\"zhs\": \"马\"\n\t\t},\n\t\t\"驛\": {\n\t\t\t\"jp\": \"駅\",\n\t\t\t\"zht\": \"驛\",\n\t\t\t\"zhs\": \"驿\"\n\t\t},\n\t\t\"驅\": {\n\t\t\t\"jp\": \"駆\",\n\t\t\t\"zht\": \"驅\",\n\t\t\t\"zhs\": \"驱\"\n\t\t},\n\t\t\"駐\": {\n\t\t\t\"jp\": \"駐\",\n\t\t\t\"zht\": \"駐\",\n\t\t\t\"zhs\": \"驻\"\n\t\t},\n\t\t\"騎\": {\n\t\t\t\"jp\": \"騎\",\n\t\t\t\"zht\": \"騎\",\n\t\t\t\"zhs\": \"骑\"\n\t\t},\n\t\t\"驗\": {\n\t\t\t\"jp\": \"験\",\n\t\t\t\"zht\": \"驗\",\n\t\t\t\"zhs\": \"验\"\n\t\t},\n\t\t\"騷\": {\n\t\t\t\"jp\": \"騒\",\n\t\t\t\"zht\": \"騷\",\n\t\t\t\"zhs\": \"骚\"\n\t\t},\n\t\t\"驔\": {\n\t\t\t\"jp\": \"騨\",\n\t\t\t\"zht\": \"驔\",\n\t\t\t\"zhs\": \"驔\"\n\t\t},\n\t\t\"髓\": {\n\t\t\t\"jp\": \"髄\",\n\t\t\t\"zht\": \"髓\",\n\t\t\t\"zhs\": \"髓\"\n\t\t},\n\t\t\"魚\": {\n\t\t\t\"jp\": \"魚\",\n\t\t\t\"zht\": \"魚\",\n\t\t\t\"zhs\": \"鱼\"\n\t\t},\n\t\t\"魯\": {\n\t\t\t\"jp\": \"魯\",\n\t\t\t\"zht\": \"魯\",\n\t\t\t\"zhs\": \"鲁\"\n\t\t},\n\t\t\"鮮\": {\n\t\t\t\"jp\": \"鮮\",\n\t\t\t\"zht\": \"鮮\",\n\t\t\t\"zhs\": \"鲜\"\n\t\t},\n\t\t\"鯨\": {\n\t\t\t\"jp\": \"鯨\",\n\t\t\t\"zht\": \"鯨\",\n\t\t\t\"zhs\": \"鲸\"\n\t\t},\n\t\t\"鳥\": {\n\t\t\t\"jp\": \"鳥\",\n\t\t\t\"zht\": \"鳥\",\n\t\t\t\"zhs\": \"鸟\"\n\t\t},\n\t\t\"鳴\": {\n\t\t\t\"jp\": \"鳴\",\n\t\t\t\"zht\": \"鳴\",\n\t\t\t\"zhs\": \"鸣\"\n\t\t},\n\t\t\"麥\": {\n\t\t\t\"jp\": \"麦\",\n\t\t\t\"zht\": \"麥\",\n\t\t\t\"zhs\": \"麦\"\n\t\t},\n\t\t\"黃\": {\n\t\t\t\"jp\": \"黄\",\n\t\t\t\"zht\": \"黃\",\n\t\t\t\"zhs\": \"黄\"\n\t\t},\n\t\t\"黑\": {\n\t\t\t\"jp\": \"黒\",\n\t\t\t\"zht\": \"黑\",\n\t\t\t\"zhs\": \"黑\"\n\t\t},\n\t\t\"默\": {\n\t\t\t\"jp\": \"黙\",\n\t\t\t\"zht\": \"默\",\n\t\t\t\"zhs\": \"默\"\n\t\t},\n\t\t\"齡\": {\n\t\t\t\"jp\": \"齢\",\n\t\t\t\"zht\": \"齡\",\n\t\t\t\"zhs\": \"龄\"\n\t\t}\n\t},\n\t\"zhs\": {\n\t\t\"会\": {\n\t\t\t\"jp\": \"会\",\n\t\t\t\"zht\": \"會\",\n\t\t\t\"zhs\": \"会\"\n\t\t},\n\t\t\"笺\": {\n\t\t\t\"jp\": \"箋\",\n\t\t\t\"zht\": \"箋\",\n\t\t\t\"zhs\": \"笺\"\n\t\t},\n\t\t\"网\": {\n\t\t\t\"jp\": \"網\",\n\t\t\t\"zht\": \"網\",\n\t\t\t\"zhs\": \"网\"\n\t\t},\n\t\t\"处\": {\n\t\t\t\"jp\": \"処\",\n\t\t\t\"zht\": \"處\",\n\t\t\t\"zhs\": \"处\"\n\t\t},\n\t\t\"话\": {\n\t\t\t\"jp\": \"話\",\n\t\t\t\"zht\": \"話\",\n\t\t\t\"zhs\": \"话\"\n\t\t},\n\t\t\"万\": {\n\t\t\t\"jp\": \"万\",\n\t\t\t\"zht\": \"萬\",\n\t\t\t\"zhs\": \"万\"\n\t\t},\n\t\t\"与\": {\n\t\t\t\"jp\": \"与\",\n\t\t\t\"zht\": \"與\",\n\t\t\t\"zhs\": \"与\"\n\t\t},\n\t\t\"丑\": {\n\t\t\t\"jp\": \"醜\",\n\t\t\t\"zht\": \"醜\",\n\t\t\t\"zhs\": \"丑\"\n\t\t},\n\t\t\"专\": {\n\t\t\t\"jp\": \"専\",\n\t\t\t\"zht\": \"專\",\n\t\t\t\"zhs\": \"专\"\n\t\t},\n\t\t\"业\": {\n\t\t\t\"jp\": \"業\",\n\t\t\t\"zht\": \"業\",\n\t\t\t\"zhs\": \"业\"\n\t\t},\n\t\t\"东\": {\n\t\t\t\"jp\": \"東\",\n\t\t\t\"zht\": \"東\",\n\t\t\t\"zhs\": \"东\"\n\t\t},\n\t\t\"两\": {\n\t\t\t\"jp\": \"両\",\n\t\t\t\"zht\": \"兩\",\n\t\t\t\"zhs\": \"两\"\n\t\t},\n\t\t\"严\": {\n\t\t\t\"jp\": \"厳\",\n\t\t\t\"zht\": \"嚴\",\n\t\t\t\"zhs\": \"严\"\n\t\t},\n\t\t\"并\": {\n\t\t\t\"jp\": \"並\",\n\t\t\t\"zht\": \"並\",\n\t\t\t\"zhs\": \"并\"\n\t\t},\n\t\t\"丧\": {\n\t\t\t\"jp\": \"喪\",\n\t\t\t\"zht\": \"喪\",\n\t\t\t\"zhs\": \"丧\"\n\t\t},\n\t\t\"丰\": {\n\t\t\t\"jp\": \"豊\",\n\t\t\t\"zht\": \"豐\",\n\t\t\t\"zhs\": \"丰\"\n\t\t},\n\t\t\"临\": {\n\t\t\t\"jp\": \"臨\",\n\t\t\t\"zht\": \"臨\",\n\t\t\t\"zhs\": \"临\"\n\t\t},\n\t\t\"为\": {\n\t\t\t\"jp\": \"為\",\n\t\t\t\"zht\": \"為\",\n\t\t\t\"zhs\": \"为\"\n\t\t},\n\t\t\"丽\": {\n\t\t\t\"jp\": \"麗\",\n\t\t\t\"zht\": \"麗\",\n\t\t\t\"zhs\": \"丽\"\n\t\t},\n\t\t\"举\": {\n\t\t\t\"jp\": \"挙\",\n\t\t\t\"zht\": \"舉\",\n\t\t\t\"zhs\": \"举\"\n\t\t},\n\t\t\"迺\": {\n\t\t\t\"jp\": \"廼\",\n\t\t\t\"zht\": \"迺\",\n\t\t\t\"zhs\": \"迺\"\n\t\t},\n\t\t\"义\": {\n\t\t\t\"jp\": \"義\",\n\t\t\t\"zht\": \"義\",\n\t\t\t\"zhs\": \"义\"\n\t\t},\n\t\t\"乐\": {\n\t\t\t\"jp\": \"楽\",\n\t\t\t\"zht\": \"樂\",\n\t\t\t\"zhs\": \"乐\"\n\t\t},\n\t\t\"乘\": {\n\t\t\t\"jp\": \"乗\",\n\t\t\t\"zht\": \"乘\",\n\t\t\t\"zhs\": \"乘\"\n\t\t},\n\t\t\"习\": {\n\t\t\t\"jp\": \"習\",\n\t\t\t\"zht\": \"習\",\n\t\t\t\"zhs\": \"习\"\n\t\t},\n\t\t\"乡\": {\n\t\t\t\"jp\": \"郷\",\n\t\t\t\"zht\": \"鄉\",\n\t\t\t\"zhs\": \"乡\"\n\t\t},\n\t\t\"书\": {\n\t\t\t\"jp\": \"書\",\n\t\t\t\"zht\": \"書\",\n\t\t\t\"zhs\": \"书\"\n\t\t},\n\t\t\"买\": {\n\t\t\t\"jp\": \"買\",\n\t\t\t\"zht\": \"買\",\n\t\t\t\"zhs\": \"买\"\n\t\t},\n\t\t\"乱\": {\n\t\t\t\"jp\": \"乱\",\n\t\t\t\"zht\": \"亂\",\n\t\t\t\"zhs\": \"乱\"\n\t\t},\n\t\t\"龟\": {\n\t\t\t\"jp\": \"亀\",\n\t\t\t\"zht\": \"龜\",\n\t\t\t\"zhs\": \"龟\"\n\t\t},\n\t\t\"贰\": {\n\t\t\t\"jp\": \"弐\",\n\t\t\t\"zht\": \"貳\",\n\t\t\t\"zhs\": \"贰\"\n\t\t},\n\t\t\"云\": {\n\t\t\t\"jp\": \"雲\",\n\t\t\t\"zht\": \"雲\",\n\t\t\t\"zhs\": \"云\"\n\t\t},\n\t\t\"亚\": {\n\t\t\t\"jp\": \"亜\",\n\t\t\t\"zht\": \"亞\",\n\t\t\t\"zhs\": \"亚\"\n\t\t},\n\t\t\"产\": {\n\t\t\t\"jp\": \"産\",\n\t\t\t\"zht\": \"產\",\n\t\t\t\"zhs\": \"产\"\n\t\t},\n\t\t\"亩\": {\n\t\t\t\"jp\": \"畝\",\n\t\t\t\"zht\": \"畝\",\n\t\t\t\"zhs\": \"亩\"\n\t\t},\n\t\t\"亲\": {\n\t\t\t\"jp\": \"親\",\n\t\t\t\"zht\": \"親\",\n\t\t\t\"zhs\": \"亲\"\n\t\t},\n\t\t\"亿\": {\n\t\t\t\"jp\": \"億\",\n\t\t\t\"zht\": \"億\",\n\t\t\t\"zhs\": \"亿\"\n\t\t},\n\t\t\"仆\": {\n\t\t\t\"jp\": \"僕\",\n\t\t\t\"zht\": \"僕\",\n\t\t\t\"zhs\": \"仆\"\n\t\t},\n\t\t\"从\": {\n\t\t\t\"jp\": \"従\",\n\t\t\t\"zht\": \"從\",\n\t\t\t\"zhs\": \"从\"\n\t\t},\n\t\t\"佛\": {\n\t\t\t\"jp\": \"仏\",\n\t\t\t\"zht\": \"佛\",\n\t\t\t\"zhs\": \"佛\"\n\t\t},\n\t\t\"仓\": {\n\t\t\t\"jp\": \"倉\",\n\t\t\t\"zht\": \"倉\",\n\t\t\t\"zhs\": \"仓\"\n\t\t},\n\t\t\"仪\": {\n\t\t\t\"jp\": \"儀\",\n\t\t\t\"zht\": \"儀\",\n\t\t\t\"zhs\": \"仪\"\n\t\t},\n\t\t\"假\": {\n\t\t\t\"jp\": \"仮\",\n\t\t\t\"zht\": \"假\",\n\t\t\t\"zhs\": \"假\"\n\t\t},\n\t\t\"价\": {\n\t\t\t\"jp\": \"価\",\n\t\t\t\"zht\": \"價\",\n\t\t\t\"zhs\": \"价\"\n\t\t},\n\t\t\"众\": {\n\t\t\t\"jp\": \"衆\",\n\t\t\t\"zht\": \"眾\",\n\t\t\t\"zhs\": \"众\"\n\t\t},\n\t\t\"优\": {\n\t\t\t\"jp\": \"優\",\n\t\t\t\"zht\": \"優\",\n\t\t\t\"zhs\": \"优\"\n\t\t},\n\t\t\"传\": {\n\t\t\t\"jp\": \"伝\",\n\t\t\t\"zht\": \"傳\",\n\t\t\t\"zhs\": \"传\"\n\t\t},\n\t\t\"伞\": {\n\t\t\t\"jp\": \"傘\",\n\t\t\t\"zht\": \"傘\",\n\t\t\t\"zhs\": \"伞\"\n\t\t},\n\t\t\"伟\": {\n\t\t\t\"jp\": \"偉\",\n\t\t\t\"zht\": \"偉\",\n\t\t\t\"zhs\": \"伟\"\n\t\t},\n\t\t\"伤\": {\n\t\t\t\"jp\": \"傷\",\n\t\t\t\"zht\": \"傷\",\n\t\t\t\"zhs\": \"伤\"\n\t\t},\n\t\t\"伦\": {\n\t\t\t\"jp\": \"倫\",\n\t\t\t\"zht\": \"倫\",\n\t\t\t\"zhs\": \"伦\"\n\t\t},\n\t\t\"伪\": {\n\t\t\t\"jp\": \"偽\",\n\t\t\t\"zht\": \"偽\",\n\t\t\t\"zhs\": \"伪\"\n\t\t},\n\t\t\"体\": {\n\t\t\t\"jp\": \"体\",\n\t\t\t\"zht\": \"體\",\n\t\t\t\"zhs\": \"体\"\n\t\t},\n\t\t\"余\": {\n\t\t\t\"jp\": \"余\",\n\t\t\t\"zht\": \"餘\",\n\t\t\t\"zhs\": \"余\"\n\t\t},\n\t\t\"来\": {\n\t\t\t\"jp\": \"来\",\n\t\t\t\"zht\": \"來\",\n\t\t\t\"zhs\": \"来\"\n\t\t},\n\t\t\"侦\": {\n\t\t\t\"jp\": \"偵\",\n\t\t\t\"zht\": \"偵\",\n\t\t\t\"zhs\": \"侦\"\n\t\t},\n\t\t\"侧\": {\n\t\t\t\"jp\": \"側\",\n\t\t\t\"zht\": \"側\",\n\t\t\t\"zhs\": \"侧\"\n\t\t},\n\t\t\"俭\": {\n\t\t\t\"jp\": \"倹\",\n\t\t\t\"zht\": \"儉\",\n\t\t\t\"zhs\": \"俭\"\n\t\t},\n\t\t\"俱\": {\n\t\t\t\"jp\": \"倶\",\n\t\t\t\"zht\": \"俱\",\n\t\t\t\"zhs\": \"俱\"\n\t\t},\n\t\t\"债\": {\n\t\t\t\"jp\": \"債\",\n\t\t\t\"zht\": \"債\",\n\t\t\t\"zhs\": \"债\"\n\t\t},\n\t\t\"倾\": {\n\t\t\t\"jp\": \"傾\",\n\t\t\t\"zht\": \"傾\",\n\t\t\t\"zhs\": \"倾\"\n\t\t},\n\t\t\"偿\": {\n\t\t\t\"jp\": \"償\",\n\t\t\t\"zht\": \"償\",\n\t\t\t\"zhs\": \"偿\"\n\t\t},\n\t\t\"杰\": {\n\t\t\t\"jp\": \"傑\",\n\t\t\t\"zht\": \"傑\",\n\t\t\t\"zhs\": \"杰\"\n\t\t},\n\t\t\"备\": {\n\t\t\t\"jp\": \"備\",\n\t\t\t\"zht\": \"備\",\n\t\t\t\"zhs\": \"备\"\n\t\t},\n\t\t\"当\": {\n\t\t\t\"jp\": \"当\",\n\t\t\t\"zht\": \"當\",\n\t\t\t\"zhs\": \"当\"\n\t\t},\n\t\t\"尽\": {\n\t\t\t\"jp\": \"尽\",\n\t\t\t\"zht\": \"盡\",\n\t\t\t\"zhs\": \"尽\"\n\t\t},\n\t\t\"儿\": {\n\t\t\t\"jp\": \"児\",\n\t\t\t\"zht\": \"兒\",\n\t\t\t\"zhs\": \"儿\"\n\t\t},\n\t\t\"党\": {\n\t\t\t\"jp\": \"党\",\n\t\t\t\"zht\": \"黨\",\n\t\t\t\"zhs\": \"党\"\n\t\t},\n\t\t\"内\": {\n\t\t\t\"jp\": \"内\",\n\t\t\t\"zht\": \"內\",\n\t\t\t\"zhs\": \"内\"\n\t\t},\n\t\t\"关\": {\n\t\t\t\"jp\": \"関\",\n\t\t\t\"zht\": \"關\",\n\t\t\t\"zhs\": \"关\"\n\t\t},\n\t\t\"兴\": {\n\t\t\t\"jp\": \"興\",\n\t\t\t\"zht\": \"興\",\n\t\t\t\"zhs\": \"兴\"\n\t\t},\n\t\t\"养\": {\n\t\t\t\"jp\": \"養\",\n\t\t\t\"zht\": \"養\",\n\t\t\t\"zhs\": \"养\"\n\t\t},\n\t\t\"兽\": {\n\t\t\t\"jp\": \"獣\",\n\t\t\t\"zht\": \"獸\",\n\t\t\t\"zhs\": \"兽\"\n\t\t},\n\t\t\"圆\": {\n\t\t\t\"jp\": \"円\",\n\t\t\t\"zht\": \"圓\",\n\t\t\t\"zhs\": \"圆\"\n\t\t},\n\t\t\"写\": {\n\t\t\t\"jp\": \"写\",\n\t\t\t\"zht\": \"寫\",\n\t\t\t\"zhs\": \"写\"\n\t\t},\n\t\t\"军\": {\n\t\t\t\"jp\": \"軍\",\n\t\t\t\"zht\": \"軍\",\n\t\t\t\"zhs\": \"军\"\n\t\t},\n\t\t\"农\": {\n\t\t\t\"jp\": \"農\",\n\t\t\t\"zht\": \"農\",\n\t\t\t\"zhs\": \"农\"\n\t\t},\n\t\t\"富\": {\n\t\t\t\"jp\": \"冨\",\n\t\t\t\"zht\": \"富\",\n\t\t\t\"zhs\": \"富\"\n\t\t},\n\t\t\"冰\": {\n\t\t\t\"jp\": \"氷\",\n\t\t\t\"zht\": \"冰\",\n\t\t\t\"zhs\": \"冰\"\n\t\t},\n\t\t\"冲\": {\n\t\t\t\"jp\": \"衝\",\n\t\t\t\"zht\": \"衝\",\n\t\t\t\"zhs\": \"冲\"\n\t\t},\n\t\t\"决\": {\n\t\t\t\"jp\": \"決\",\n\t\t\t\"zht\": \"決\",\n\t\t\t\"zhs\": \"决\"\n\t\t},\n\t\t\"冻\": {\n\t\t\t\"jp\": \"凍\",\n\t\t\t\"zht\": \"凍\",\n\t\t\t\"zhs\": \"冻\"\n\t\t},\n\t\t\"涂\": {\n\t\t\t\"jp\": \"塗\",\n\t\t\t\"zht\": \"塗\",\n\t\t\t\"zhs\": \"涂\"\n\t\t},\n\t\t\"几\": {\n\t\t\t\"jp\": \"幾\",\n\t\t\t\"zht\": \"幾\",\n\t\t\t\"zhs\": \"几\"\n\t\t},\n\t\t\"击\": {\n\t\t\t\"jp\": \"撃\",\n\t\t\t\"zht\": \"擊\",\n\t\t\t\"zhs\": \"击\"\n\t\t},\n\t\t\"划\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"劃\",\n\t\t\t\"zhs\": \"划\"\n\t\t},\n\t\t\"画\": {\n\t\t\t\"jp\": \"画\",\n\t\t\t\"zht\": \"畫\",\n\t\t\t\"zhs\": \"画\"\n\t\t},\n\t\t\"则\": {\n\t\t\t\"jp\": \"則\",\n\t\t\t\"zht\": \"則\",\n\t\t\t\"zhs\": \"则\"\n\t\t},\n\t\t\"刚\": {\n\t\t\t\"jp\": \"剛\",\n\t\t\t\"zht\": \"剛\",\n\t\t\t\"zhs\": \"刚\"\n\t\t},\n\t\t\"创\": {\n\t\t\t\"jp\": \"創\",\n\t\t\t\"zht\": \"創\",\n\t\t\t\"zhs\": \"创\"\n\t\t},\n\t\t\"别\": {\n\t\t\t\"jp\": \"別\",\n\t\t\t\"zht\": \"別\",\n\t\t\t\"zhs\": \"别\"\n\t\t},\n\t\t\"制\": {\n\t\t\t\"jp\": \"製\",\n\t\t\t\"zht\": \"製\",\n\t\t\t\"zhs\": \"制\"\n\t\t},\n\t\t\"卷\": {\n\t\t\t\"jp\": \"巻\",\n\t\t\t\"zht\": \"卷\",\n\t\t\t\"zhs\": \"卷\"\n\t\t},\n\t\t\"刹\": {\n\t\t\t\"jp\": \"刹\",\n\t\t\t\"zht\": \"剎\",\n\t\t\t\"zhs\": \"刹\"\n\t\t},\n\t\t\"剂\": {\n\t\t\t\"jp\": \"剤\",\n\t\t\t\"zht\": \"劑\",\n\t\t\t\"zhs\": \"剂\"\n\t\t},\n\t\t\"剑\": {\n\t\t\t\"jp\": \"剣\",\n\t\t\t\"zht\": \"劍\",\n\t\t\t\"zhs\": \"剑\"\n\t\t},\n\t\t\"剧\": {\n\t\t\t\"jp\": \"劇\",\n\t\t\t\"zht\": \"劇\",\n\t\t\t\"zhs\": \"剧\"\n\t\t},\n\t\t\"剩\": {\n\t\t\t\"jp\": \"剰\",\n\t\t\t\"zht\": \"剩\",\n\t\t\t\"zhs\": \"剩\"\n\t\t},\n\t\t\"劝\": {\n\t\t\t\"jp\": \"勧\",\n\t\t\t\"zht\": \"勸\",\n\t\t\t\"zhs\": \"劝\"\n\t\t},\n\t\t\"务\": {\n\t\t\t\"jp\": \"務\",\n\t\t\t\"zht\": \"務\",\n\t\t\t\"zhs\": \"务\"\n\t\t},\n\t\t\"动\": {\n\t\t\t\"jp\": \"動\",\n\t\t\t\"zht\": \"動\",\n\t\t\t\"zhs\": \"动\"\n\t\t},\n\t\t\"励\": {\n\t\t\t\"jp\": \"励\",\n\t\t\t\"zht\": \"勵\",\n\t\t\t\"zhs\": \"励\"\n\t\t},\n\t\t\"劳\": {\n\t\t\t\"jp\": \"労\",\n\t\t\t\"zht\": \"勞\",\n\t\t\t\"zhs\": \"劳\"\n\t\t},\n\t\t\"势\": {\n\t\t\t\"jp\": \"勢\",\n\t\t\t\"zht\": \"勢\",\n\t\t\t\"zhs\": \"势\"\n\t\t},\n\t\t\"勋\": {\n\t\t\t\"jp\": \"勲\",\n\t\t\t\"zht\": \"勳\",\n\t\t\t\"zhs\": \"勋\"\n\t\t},\n\t\t\"胜\": {\n\t\t\t\"jp\": \"勝\",\n\t\t\t\"zht\": \"勝\",\n\t\t\t\"zhs\": \"胜\"\n\t\t},\n\t\t\"区\": {\n\t\t\t\"jp\": \"区\",\n\t\t\t\"zht\": \"區\",\n\t\t\t\"zhs\": \"区\"\n\t\t},\n\t\t\"医\": {\n\t\t\t\"jp\": \"医\",\n\t\t\t\"zht\": \"醫\",\n\t\t\t\"zhs\": \"医\"\n\t\t},\n\t\t\"华\": {\n\t\t\t\"jp\": \"華\",\n\t\t\t\"zht\": \"華\",\n\t\t\t\"zhs\": \"华\"\n\t\t},\n\t\t\"协\": {\n\t\t\t\"jp\": \"協\",\n\t\t\t\"zht\": \"協\",\n\t\t\t\"zhs\": \"协\"\n\t\t},\n\t\t\"单\": {\n\t\t\t\"jp\": \"単\",\n\t\t\t\"zht\": \"單\",\n\t\t\t\"zhs\": \"单\"\n\t\t},\n\t\t\"卖\": {\n\t\t\t\"jp\": \"売\",\n\t\t\t\"zht\": \"賣\",\n\t\t\t\"zhs\": \"卖\"\n\t\t},\n\t\t\"卫\": {\n\t\t\t\"jp\": \"衛\",\n\t\t\t\"zht\": \"衛\",\n\t\t\t\"zhs\": \"卫\"\n\t\t},\n\t\t\"厅\": {\n\t\t\t\"jp\": \"庁\",\n\t\t\t\"zht\": \"廳\",\n\t\t\t\"zhs\": \"厅\"\n\t\t},\n\t\t\"压\": {\n\t\t\t\"jp\": \"圧\",\n\t\t\t\"zht\": \"壓\",\n\t\t\t\"zhs\": \"压\"\n\t\t},\n\t\t\"县\": {\n\t\t\t\"jp\": \"県\",\n\t\t\t\"zht\": \"縣\",\n\t\t\t\"zhs\": \"县\"\n\t\t},\n\t\t\"参\": {\n\t\t\t\"jp\": \"参\",\n\t\t\t\"zht\": \"參\",\n\t\t\t\"zhs\": \"参\"\n\t\t},\n\t\t\"双\": {\n\t\t\t\"jp\": \"双\",\n\t\t\t\"zht\": \"雙\",\n\t\t\t\"zhs\": \"双\"\n\t\t},\n\t\t\"收\": {\n\t\t\t\"jp\": \"収\",\n\t\t\t\"zht\": \"收\",\n\t\t\t\"zhs\": \"收\"\n\t\t},\n\t\t\"发\": {\n\t\t\t\"jp\": \"発\",\n\t\t\t\"zht\": \"發\",\n\t\t\t\"zhs\": \"发\"\n\t\t},\n\t\t\"变\": {\n\t\t\t\"jp\": \"変\",\n\t\t\t\"zht\": \"變\",\n\t\t\t\"zhs\": \"变\"\n\t\t},\n\t\t\"叠\": {\n\t\t\t\"jp\": \"畳\",\n\t\t\t\"zht\": \"疊\",\n\t\t\t\"zhs\": \"叠\"\n\t\t},\n\t\t\"号\": {\n\t\t\t\"jp\": \"号\",\n\t\t\t\"zht\": \"號\",\n\t\t\t\"zhs\": \"号\"\n\t\t},\n\t\t\"叹\": {\n\t\t\t\"jp\": \"嘆\",\n\t\t\t\"zht\": \"嘆\",\n\t\t\t\"zhs\": \"叹\"\n\t\t},\n\t\t\"吓\": {\n\t\t\t\"jp\": \"嚇\",\n\t\t\t\"zht\": \"嚇\",\n\t\t\t\"zhs\": \"吓\"\n\t\t},\n\t\t\"听\": {\n\t\t\t\"jp\": \"聴\",\n\t\t\t\"zht\": \"聽\",\n\t\t\t\"zhs\": \"听\"\n\t\t},\n\t\t\"启\": {\n\t\t\t\"jp\": \"啓\",\n\t\t\t\"zht\": \"啟\",\n\t\t\t\"zhs\": \"启\"\n\t\t},\n\t\t\"员\": {\n\t\t\t\"jp\": \"員\",\n\t\t\t\"zht\": \"員\",\n\t\t\t\"zhs\": \"员\"\n\t\t},\n\t\t\"谘\": {\n\t\t\t\"jp\": \"諮\",\n\t\t\t\"zht\": \"諮\",\n\t\t\t\"zhs\": \"谘\"\n\t\t},\n\t\t\"咸\": {\n\t\t\t\"jp\": \"鹹\",\n\t\t\t\"zht\": \"鹹\",\n\t\t\t\"zhs\": \"咸\"\n\t\t},\n\t\t\"响\": {\n\t\t\t\"jp\": \"響\",\n\t\t\t\"zht\": \"響\",\n\t\t\t\"zhs\": \"响\"\n\t\t},\n\t\t\"问\": {\n\t\t\t\"jp\": \"問\",\n\t\t\t\"zht\": \"問\",\n\t\t\t\"zhs\": \"问\"\n\t\t},\n\t\t\"营\": {\n\t\t\t\"jp\": \"営\",\n\t\t\t\"zht\": \"營\",\n\t\t\t\"zhs\": \"营\"\n\t\t},\n\t\t\"喷\": {\n\t\t\t\"jp\": \"噴\",\n\t\t\t\"zht\": \"噴\",\n\t\t\t\"zhs\": \"喷\"\n\t\t},\n\t\t\"嘱\": {\n\t\t\t\"jp\": \"嘱\",\n\t\t\t\"zht\": \"囑\",\n\t\t\t\"zhs\": \"嘱\"\n\t\t},\n\t\t\"苏\": {\n\t\t\t\"jp\": \"蘇\",\n\t\t\t\"zht\": \"蘇\",\n\t\t\t\"zhs\": \"苏\"\n\t\t},\n\t\t\"团\": {\n\t\t\t\"jp\": \"団\",\n\t\t\t\"zht\": \"團\",\n\t\t\t\"zhs\": \"团\"\n\t\t},\n\t\t\"园\": {\n\t\t\t\"jp\": \"園\",\n\t\t\t\"zht\": \"園\",\n\t\t\t\"zhs\": \"园\"\n\t\t},\n\t\t\"国\": {\n\t\t\t\"jp\": \"国\",\n\t\t\t\"zht\": \"國\",\n\t\t\t\"zhs\": \"国\"\n\t\t},\n\t\t\"围\": {\n\t\t\t\"jp\": \"囲\",\n\t\t\t\"zht\": \"圍\",\n\t\t\t\"zhs\": \"围\"\n\t\t},\n\t\t\"图\": {\n\t\t\t\"jp\": \"図\",\n\t\t\t\"zht\": \"圖\",\n\t\t\t\"zhs\": \"图\"\n\t\t},\n\t\t\"圈\": {\n\t\t\t\"jp\": \"圏\",\n\t\t\t\"zht\": \"圈\",\n\t\t\t\"zhs\": \"圈\"\n\t\t},\n\t\t\"圣\": {\n\t\t\t\"jp\": \"聖\",\n\t\t\t\"zht\": \"聖\",\n\t\t\t\"zhs\": \"圣\"\n\t\t},\n\t\t\"场\": {\n\t\t\t\"jp\": \"場\",\n\t\t\t\"zht\": \"場\",\n\t\t\t\"zhs\": \"场\"\n\t\t},\n\t\t\"坏\": {\n\t\t\t\"jp\": \"壊\",\n\t\t\t\"zht\": \"壞\",\n\t\t\t\"zhs\": \"坏\"\n\t\t},\n\t\t\"块\": {\n\t\t\t\"jp\": \"塊\",\n\t\t\t\"zht\": \"塊\",\n\t\t\t\"zhs\": \"块\"\n\t\t},\n\t\t\"坚\": {\n\t\t\t\"jp\": \"堅\",\n\t\t\t\"zht\": \"堅\",\n\t\t\t\"zhs\": \"坚\"\n\t\t},\n\t\t\"坛\": {\n\t\t\t\"jp\": \"壇\",\n\t\t\t\"zht\": \"壇\",\n\t\t\t\"zhs\": \"坛\"\n\t\t},\n\t\t\"坟\": {\n\t\t\t\"jp\": \"墳\",\n\t\t\t\"zht\": \"墳\",\n\t\t\t\"zhs\": \"坟\"\n\t\t},\n\t\t\"坠\": {\n\t\t\t\"jp\": \"墜\",\n\t\t\t\"zht\": \"墜\",\n\t\t\t\"zhs\": \"坠\"\n\t\t},\n\t\t\"垒\": {\n\t\t\t\"jp\": \"塁\",\n\t\t\t\"zht\": \"壘\",\n\t\t\t\"zhs\": \"垒\"\n\t\t},\n\t\t\"垦\": {\n\t\t\t\"jp\": \"墾\",\n\t\t\t\"zht\": \"墾\",\n\t\t\t\"zhs\": \"垦\"\n\t\t},\n\t\t\"执\": {\n\t\t\t\"jp\": \"執\",\n\t\t\t\"zht\": \"執\",\n\t\t\t\"zhs\": \"执\"\n\t\t},\n\t\t\"堕\": {\n\t\t\t\"jp\": \"堕\",\n\t\t\t\"zht\": \"墮\",\n\t\t\t\"zhs\": \"堕\"\n\t\t},\n\t\t\"报\": {\n\t\t\t\"jp\": \"報\",\n\t\t\t\"zht\": \"報\",\n\t\t\t\"zhs\": \"报\"\n\t\t},\n\t\t\"盐\": {\n\t\t\t\"jp\": \"塩\",\n\t\t\t\"zht\": \"鹽\",\n\t\t\t\"zhs\": \"盐\"\n\t\t},\n\t\t\"增\": {\n\t\t\t\"jp\": \"増\",\n\t\t\t\"zht\": \"增\",\n\t\t\t\"zhs\": \"增\"\n\t\t},\n\t\t\"壤\": {\n\t\t\t\"jp\": \"壌\",\n\t\t\t\"zht\": \"壤\",\n\t\t\t\"zhs\": \"壤\"\n\t\t},\n\t\t\"壮\": {\n\t\t\t\"jp\": \"壮\",\n\t\t\t\"zht\": \"壯\",\n\t\t\t\"zhs\": \"壮\"\n\t\t},\n\t\t\"声\": {\n\t\t\t\"jp\": \"声\",\n\t\t\t\"zht\": \"聲\",\n\t\t\t\"zhs\": \"声\"\n\t\t},\n\t\t\"壹\": {\n\t\t\t\"jp\": \"壱\",\n\t\t\t\"zht\": \"壹\",\n\t\t\t\"zhs\": \"壹\"\n\t\t},\n\t\t\"寿\": {\n\t\t\t\"jp\": \"寿\",\n\t\t\t\"zht\": \"壽\",\n\t\t\t\"zhs\": \"寿\"\n\t\t},\n\t\t\"梦\": {\n\t\t\t\"jp\": \"夢\",\n\t\t\t\"zht\": \"夢\",\n\t\t\t\"zhs\": \"梦\"\n\t\t},\n\t\t\"头\": {\n\t\t\t\"jp\": \"頭\",\n\t\t\t\"zht\": \"頭\",\n\t\t\t\"zhs\": \"头\"\n\t\t},\n\t\t\"夸\": {\n\t\t\t\"jp\": \"誇\",\n\t\t\t\"zht\": \"誇\",\n\t\t\t\"zhs\": \"夸\"\n\t\t},\n\t\t\"夺\": {\n\t\t\t\"jp\": \"奪\",\n\t\t\t\"zht\": \"奪\",\n\t\t\t\"zhs\": \"夺\"\n\t\t},\n\t\t\"奋\": {\n\t\t\t\"jp\": \"奮\",\n\t\t\t\"zht\": \"奮\",\n\t\t\t\"zhs\": \"奋\"\n\t\t},\n\t\t\"奖\": {\n\t\t\t\"jp\": \"奨\",\n\t\t\t\"zht\": \"獎\",\n\t\t\t\"zhs\": \"奖\"\n\t\t},\n\t\t\"妆\": {\n\t\t\t\"jp\": \"粧\",\n\t\t\t\"zht\": \"妝\",\n\t\t\t\"zhs\": \"妆\"\n\t\t},\n\t\t\"妇\": {\n\t\t\t\"jp\": \"婦\",\n\t\t\t\"zht\": \"婦\",\n\t\t\t\"zhs\": \"妇\"\n\t\t},\n\t\t\"姐\": {\n\t\t\t\"jp\": \"姉\",\n\t\t\t\"zht\": \"姐\",\n\t\t\t\"zhs\": \"姐\"\n\t\t},\n\t\t\"姬\": {\n\t\t\t\"jp\": \"姫\",\n\t\t\t\"zht\": \"姬\",\n\t\t\t\"zhs\": \"姬\"\n\t\t},\n\t\t\"娘\": {\n\t\t\t\"jp\": \"嬢\",\n\t\t\t\"zht\": \"孃\",\n\t\t\t\"zhs\": \"娘\"\n\t\t},\n\t\t\"娱\": {\n\t\t\t\"jp\": \"娯\",\n\t\t\t\"zht\": \"娛\",\n\t\t\t\"zhs\": \"娱\"\n\t\t},\n\t\t\"孙\": {\n\t\t\t\"jp\": \"孫\",\n\t\t\t\"zht\": \"孫\",\n\t\t\t\"zhs\": \"孙\"\n\t\t},\n\t\t\"学\": {\n\t\t\t\"jp\": \"学\",\n\t\t\t\"zht\": \"學\",\n\t\t\t\"zhs\": \"学\"\n\t\t},\n\t\t\"宁\": {\n\t\t\t\"jp\": \"寧\",\n\t\t\t\"zht\": \"寧\",\n\t\t\t\"zhs\": \"宁\"\n\t\t},\n\t\t\"宝\": {\n\t\t\t\"jp\": \"宝\",\n\t\t\t\"zht\": \"寶\",\n\t\t\t\"zhs\": \"宝\"\n\t\t},\n\t\t\"实\": {\n\t\t\t\"jp\": \"実\",\n\t\t\t\"zht\": \"實\",\n\t\t\t\"zhs\": \"实\"\n\t\t},\n\t\t\"审\": {\n\t\t\t\"jp\": \"審\",\n\t\t\t\"zht\": \"審\",\n\t\t\t\"zhs\": \"审\"\n\t\t},\n\t\t\"宪\": {\n\t\t\t\"jp\": \"憲\",\n\t\t\t\"zht\": \"憲\",\n\t\t\t\"zhs\": \"宪\"\n\t\t},\n\t\t\"宫\": {\n\t\t\t\"jp\": \"宮\",\n\t\t\t\"zht\": \"宮\",\n\t\t\t\"zhs\": \"宫\"\n\t\t},\n\t\t\"宾\": {\n\t\t\t\"jp\": \"賓\",\n\t\t\t\"zht\": \"賓\",\n\t\t\t\"zhs\": \"宾\"\n\t\t},\n\t\t\"秘\": {\n\t\t\t\"jp\": \"秘\",\n\t\t\t\"zht\": \"祕\",\n\t\t\t\"zhs\": \"秘\"\n\t\t},\n\t\t\"寝\": {\n\t\t\t\"jp\": \"寝\",\n\t\t\t\"zht\": \"寢\",\n\t\t\t\"zhs\": \"寝\"\n\t\t},\n\t\t\"对\": {\n\t\t\t\"jp\": \"対\",\n\t\t\t\"zht\": \"對\",\n\t\t\t\"zhs\": \"对\"\n\t\t},\n\t\t\"寻\": {\n\t\t\t\"jp\": \"尋\",\n\t\t\t\"zht\": \"尋\",\n\t\t\t\"zhs\": \"寻\"\n\t\t},\n\t\t\"导\": {\n\t\t\t\"jp\": \"導\",\n\t\t\t\"zht\": \"導\",\n\t\t\t\"zhs\": \"导\"\n\t\t},\n\t\t\"将\": {\n\t\t\t\"jp\": \"将\",\n\t\t\t\"zht\": \"將\",\n\t\t\t\"zhs\": \"将\"\n\t\t},\n\t\t\"层\": {\n\t\t\t\"jp\": \"層\",\n\t\t\t\"zht\": \"層\",\n\t\t\t\"zhs\": \"层\"\n\t\t},\n\t\t\"属\": {\n\t\t\t\"jp\": \"属\",\n\t\t\t\"zht\": \"屬\",\n\t\t\t\"zhs\": \"属\"\n\t\t},\n\t\t\"岁\": {\n\t\t\t\"jp\": \"歳\",\n\t\t\t\"zht\": \"歲\",\n\t\t\t\"zhs\": \"岁\"\n\t\t},\n\t\t\"岛\": {\n\t\t\t\"jp\": \"島\",\n\t\t\t\"zht\": \"島\",\n\t\t\t\"zhs\": \"岛\"\n\t\t},\n\t\t\"巖\": {\n\t\t\t\"jp\": \"巌\",\n\t\t\t\"zht\": \"巖\",\n\t\t\t\"zhs\": \"巖\"\n\t\t},\n\t\t\"峡\": {\n\t\t\t\"jp\": \"峡\",\n\t\t\t\"zht\": \"峽\",\n\t\t\t\"zhs\": \"峡\"\n\t\t},\n\t\t\"险\": {\n\t\t\t\"jp\": \"険\",\n\t\t\t\"zht\": \"險\",\n\t\t\t\"zhs\": \"险\"\n\t\t},\n\t\t\"币\": {\n\t\t\t\"jp\": \"幣\",\n\t\t\t\"zht\": \"幣\",\n\t\t\t\"zhs\": \"币\"\n\t\t},\n\t\t\"帅\": {\n\t\t\t\"jp\": \"帥\",\n\t\t\t\"zht\": \"帥\",\n\t\t\t\"zhs\": \"帅\"\n\t\t},\n\t\t\"师\": {\n\t\t\t\"jp\": \"師\",\n\t\t\t\"zht\": \"師\",\n\t\t\t\"zhs\": \"师\"\n\t\t},\n\t\t\"帐\": {\n\t\t\t\"jp\": \"帳\",\n\t\t\t\"zht\": \"帳\",\n\t\t\t\"zhs\": \"帐\"\n\t\t},\n\t\t\"归\": {\n\t\t\t\"jp\": \"帰\",\n\t\t\t\"zht\": \"歸\",\n\t\t\t\"zhs\": \"归\"\n\t\t},\n\t\t\"广\": {\n\t\t\t\"jp\": \"広\",\n\t\t\t\"zht\": \"廣\",\n\t\t\t\"zhs\": \"广\"\n\t\t},\n\t\t\"庆\": {\n\t\t\t\"jp\": \"慶\",\n\t\t\t\"zht\": \"慶\",\n\t\t\t\"zhs\": \"庆\"\n\t\t},\n\t\t\"库\": {\n\t\t\t\"jp\": \"庫\",\n\t\t\t\"zht\": \"庫\",\n\t\t\t\"zhs\": \"库\"\n\t\t},\n\t\t\"应\": {\n\t\t\t\"jp\": \"応\",\n\t\t\t\"zht\": \"應\",\n\t\t\t\"zhs\": \"应\"\n\t\t},\n\t\t\"废\": {\n\t\t\t\"jp\": \"廃\",\n\t\t\t\"zht\": \"廢\",\n\t\t\t\"zhs\": \"废\"\n\t\t},\n\t\t\"开\": {\n\t\t\t\"jp\": \"開\",\n\t\t\t\"zht\": \"開\",\n\t\t\t\"zhs\": \"开\"\n\t\t},\n\t\t\"辨\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辨\"\n\t\t},\n\t\t\"瓣\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"瓣\"\n\t\t},\n\t\t\"辩\": {\n\t\t\t\"jp\": \"弁\",\n\t\t\t\"zht\": \"辨\",\n\t\t\t\"zhs\": \"辩\"\n\t\t},\n\t\t\"异\": {\n\t\t\t\"jp\": \"異\",\n\t\t\t\"zht\": \"異\",\n\t\t\t\"zhs\": \"异\"\n\t\t},\n\t\t\"弃\": {\n\t\t\t\"jp\": \"棄\",\n\t\t\t\"zht\": \"棄\",\n\t\t\t\"zhs\": \"弃\"\n\t\t},\n\t\t\"张\": {\n\t\t\t\"jp\": \"張\",\n\t\t\t\"zht\": \"張\",\n\t\t\t\"zhs\": \"张\"\n\t\t},\n\t\t\"弥\": {\n\t\t\t\"jp\": \"弥\",\n\t\t\t\"zht\": \"彌\",\n\t\t\t\"zhs\": \"弥\"\n\t\t},\n\t\t\"强\": {\n\t\t\t\"jp\": \"強\",\n\t\t\t\"zht\": \"強\",\n\t\t\t\"zhs\": \"强\"\n\t\t},\n\t\t\"弹\": {\n\t\t\t\"jp\": \"弾\",\n\t\t\t\"zht\": \"彈\",\n\t\t\t\"zhs\": \"弹\"\n\t\t},\n\t\t\"录\": {\n\t\t\t\"jp\": \"録\",\n\t\t\t\"zht\": \"錄\",\n\t\t\t\"zhs\": \"录\"\n\t\t},\n\t\t\"彥\": {\n\t\t\t\"jp\": \"彦\",\n\t\t\t\"zht\": \"彥\",\n\t\t\t\"zhs\": \"彥\"\n\t\t},\n\t\t\"彻\": {\n\t\t\t\"jp\": \"徹\",\n\t\t\t\"zht\": \"徹\",\n\t\t\t\"zhs\": \"彻\"\n\t\t},\n\t\t\"征\": {\n\t\t\t\"jp\": \"徴\",\n\t\t\t\"zht\": \"徵\",\n\t\t\t\"zhs\": \"征\"\n\t\t},\n\t\t\"径\": {\n\t\t\t\"jp\": \"径\",\n\t\t\t\"zht\": \"徑\",\n\t\t\t\"zhs\": \"径\"\n\t\t},\n\t\t\"德\": {\n\t\t\t\"jp\": \"徳\",\n\t\t\t\"zht\": \"德\",\n\t\t\t\"zhs\": \"德\"\n\t\t},\n\t\t\"忆\": {\n\t\t\t\"jp\": \"憶\",\n\t\t\t\"zht\": \"憶\",\n\t\t\t\"zhs\": \"忆\"\n\t\t},\n\t\t\"志\": {\n\t\t\t\"jp\": \"誌\",\n\t\t\t\"zht\": \"誌\",\n\t\t\t\"zhs\": \"志\"\n\t\t},\n\t\t\"忧\": {\n\t\t\t\"jp\": \"憂\",\n\t\t\t\"zht\": \"憂\",\n\t\t\t\"zhs\": \"忧\"\n\t\t},\n\t\t\"怀\": {\n\t\t\t\"jp\": \"懐\",\n\t\t\t\"zht\": \"懷\",\n\t\t\t\"zhs\": \"怀\"\n\t\t},\n\t\t\"态\": {\n\t\t\t\"jp\": \"態\",\n\t\t\t\"zht\": \"態\",\n\t\t\t\"zhs\": \"态\"\n\t\t},\n\t\t\"总\": {\n\t\t\t\"jp\": \"総\",\n\t\t\t\"zht\": \"總\",\n\t\t\t\"zhs\": \"总\"\n\t\t},\n\t\t\"恒\": {\n\t\t\t\"jp\": \"恒\",\n\t\t\t\"zht\": \"恆\",\n\t\t\t\"zhs\": \"恒\"\n\t\t},\n\t\t\"恋\": {\n\t\t\t\"jp\": \"恋\",\n\t\t\t\"zht\": \"戀\",\n\t\t\t\"zhs\": \"恋\"\n\t\t},\n\t\t\"恳\": {\n\t\t\t\"jp\": \"懇\",\n\t\t\t\"zht\": \"懇\",\n\t\t\t\"zhs\": \"恳\"\n\t\t},\n\t\t\"惠\": {\n\t\t\t\"jp\": \"恵\",\n\t\t\t\"zht\": \"惠\",\n\t\t\t\"zhs\": \"惠\"\n\t\t},\n\t\t\"恶\": {\n\t\t\t\"jp\": \"悪\",\n\t\t\t\"zht\": \"惡\",\n\t\t\t\"zhs\": \"恶\"\n\t\t},\n\t\t\"恼\": {\n\t\t\t\"jp\": \"悩\",\n\t\t\t\"zht\": \"惱\",\n\t\t\t\"zhs\": \"恼\"\n\t\t},\n\t\t\"悅\": {\n\t\t\t\"jp\": \"悦\",\n\t\t\t\"zht\": \"悅\",\n\t\t\t\"zhs\": \"悅\"\n\t\t},\n\t\t\"悬\": {\n\t\t\t\"jp\": \"懸\",\n\t\t\t\"zht\": \"懸\",\n\t\t\t\"zhs\": \"悬\"\n\t\t},\n\t\t\"惊\": {\n\t\t\t\"jp\": \"驚\",\n\t\t\t\"zht\": \"驚\",\n\t\t\t\"zhs\": \"惊\"\n\t\t},\n\t\t\"惨\": {\n\t\t\t\"jp\": \"惨\",\n\t\t\t\"zht\": \"慘\",\n\t\t\t\"zhs\": \"惨\"\n\t\t},\n\t\t\"惩\": {\n\t\t\t\"jp\": \"懲\",\n\t\t\t\"zht\": \"懲\",\n\t\t\t\"zhs\": \"惩\"\n\t\t},\n\t\t\"爱\": {\n\t\t\t\"jp\": \"愛\",\n\t\t\t\"zht\": \"愛\",\n\t\t\t\"zhs\": \"爱\"\n\t\t},\n\t\t\"愤\": {\n\t\t\t\"jp\": \"憤\",\n\t\t\t\"zht\": \"憤\",\n\t\t\t\"zhs\": \"愤\"\n\t\t},\n\t\t\"愿\": {\n\t\t\t\"jp\": \"願\",\n\t\t\t\"zht\": \"願\",\n\t\t\t\"zhs\": \"愿\"\n\t\t},\n\t\t\"虑\": {\n\t\t\t\"jp\": \"慮\",\n\t\t\t\"zht\": \"慮\",\n\t\t\t\"zhs\": \"虑\"\n\t\t},\n\t\t\"戏\": {\n\t\t\t\"jp\": \"戯\",\n\t\t\t\"zht\": \"戲\",\n\t\t\t\"zhs\": \"戏\"\n\t\t},\n\t\t\"战\": {\n\t\t\t\"jp\": \"戦\",\n\t\t\t\"zht\": \"戰\",\n\t\t\t\"zhs\": \"战\"\n\t\t},\n\t\t\"户\": {\n\t\t\t\"jp\": \"戸\",\n\t\t\t\"zht\": \"戶\",\n\t\t\t\"zhs\": \"户\"\n\t\t},\n\t\t\"拂\": {\n\t\t\t\"jp\": \"払\",\n\t\t\t\"zht\": \"拂\",\n\t\t\t\"zhs\": \"拂\"\n\t\t},\n\t\t\"扩\": {\n\t\t\t\"jp\": \"拡\",\n\t\t\t\"zht\": \"擴\",\n\t\t\t\"zhs\": \"扩\"\n\t\t},\n\t\t\"扫\": {\n\t\t\t\"jp\": \"掃\",\n\t\t\t\"zht\": \"掃\",\n\t\t\t\"zhs\": \"扫\"\n\t\t},\n\t\t\"扬\": {\n\t\t\t\"jp\": \"揚\",\n\t\t\t\"zht\": \"揚\",\n\t\t\t\"zhs\": \"扬\"\n\t\t},\n\t\t\"择\": {\n\t\t\t\"jp\": \"択\",\n\t\t\t\"zht\": \"擇\",\n\t\t\t\"zhs\": \"择\"\n\t\t},\n\t\t\"护\": {\n\t\t\t\"jp\": \"護\",\n\t\t\t\"zht\": \"護\",\n\t\t\t\"zhs\": \"护\"\n\t\t},\n\t\t\"担\": {\n\t\t\t\"jp\": \"担\",\n\t\t\t\"zht\": \"擔\",\n\t\t\t\"zhs\": \"担\"\n\t\t},\n\t\t\"拜\": {\n\t\t\t\"jp\": \"拝\",\n\t\t\t\"zht\": \"拜\",\n\t\t\t\"zhs\": \"拜\"\n\t\t},\n\t\t\"拟\": {\n\t\t\t\"jp\": \"擬\",\n\t\t\t\"zht\": \"擬\",\n\t\t\t\"zhs\": \"拟\"\n\t\t},\n\t\t\"据\": {\n\t\t\t\"jp\": \"拠\",\n\t\t\t\"zht\": \"據\",\n\t\t\t\"zhs\": \"据\"\n\t\t},\n\t\t\"拥\": {\n\t\t\t\"jp\": \"擁\",\n\t\t\t\"zht\": \"擁\",\n\t\t\t\"zhs\": \"拥\"\n\t\t},\n\t\t\"挟\": {\n\t\t\t\"jp\": \"挟\",\n\t\t\t\"zht\": \"挾\",\n\t\t\t\"zhs\": \"挟\"\n\t\t},\n\t\t\"挥\": {\n\t\t\t\"jp\": \"揮\",\n\t\t\t\"zht\": \"揮\",\n\t\t\t\"zhs\": \"挥\"\n\t\t},\n\t\t\"插\": {\n\t\t\t\"jp\": \"挿\",\n\t\t\t\"zht\": \"插\",\n\t\t\t\"zhs\": \"插\"\n\t\t},\n\t\t\"损\": {\n\t\t\t\"jp\": \"損\",\n\t\t\t\"zht\": \"損\",\n\t\t\t\"zhs\": \"损\"\n\t\t},\n\t\t\"舍\": {\n\t\t\t\"jp\": \"捨\",\n\t\t\t\"zht\": \"捨\",\n\t\t\t\"zhs\": \"舍\"\n\t\t},\n\t\t\"揭\": {\n\t\t\t\"jp\": \"掲\",\n\t\t\t\"zht\": \"揭\",\n\t\t\t\"zhs\": \"揭\"\n\t\t},\n\t\t\"掴\": {\n\t\t\t\"jp\": \"掴\",\n\t\t\t\"zht\": \"摑\",\n\t\t\t\"zhs\": \"掴\"\n\t\t},\n\t\t\"摇\": {\n\t\t\t\"jp\": \"揺\",\n\t\t\t\"zht\": \"搖\",\n\t\t\t\"zhs\": \"摇\"\n\t\t},\n\t\t\"敌\": {\n\t\t\t\"jp\": \"敵\",\n\t\t\t\"zht\": \"敵\",\n\t\t\t\"zhs\": \"敌\"\n\t\t},\n\t\t\"败\": {\n\t\t\t\"jp\": \"敗\",\n\t\t\t\"zht\": \"敗\",\n\t\t\t\"zhs\": \"败\"\n\t\t},\n\t\t\"数\": {\n\t\t\t\"jp\": \"数\",\n\t\t\t\"zht\": \"數\",\n\t\t\t\"zhs\": \"数\"\n\t\t},\n\t\t\"齐\": {\n\t\t\t\"jp\": \"斉\",\n\t\t\t\"zht\": \"齊\",\n\t\t\t\"zhs\": \"齐\"\n\t\t},\n\t\t\"斋\": {\n\t\t\t\"jp\": \"斎\",\n\t\t\t\"zht\": \"齋\",\n\t\t\t\"zhs\": \"斋\"\n\t\t},\n\t\t\"断\": {\n\t\t\t\"jp\": \"断\",\n\t\t\t\"zht\": \"斷\",\n\t\t\t\"zhs\": \"断\"\n\t\t},\n\t\t\"旧\": {\n\t\t\t\"jp\": \"旧\",\n\t\t\t\"zht\": \"舊\",\n\t\t\t\"zhs\": \"旧\"\n\t\t},\n\t\t\"时\": {\n\t\t\t\"jp\": \"時\",\n\t\t\t\"zht\": \"時\",\n\t\t\t\"zhs\": \"时\"\n\t\t},\n\t\t\"昙\": {\n\t\t\t\"jp\": \"曇\",\n\t\t\t\"zht\": \"曇\",\n\t\t\t\"zhs\": \"昙\"\n\t\t},\n\t\t\"昼\": {\n\t\t\t\"jp\": \"昼\",\n\t\t\t\"zht\": \"晝\",\n\t\t\t\"zhs\": \"昼\"\n\t\t},\n\t\t\"显\": {\n\t\t\t\"jp\": \"顕\",\n\t\t\t\"zht\": \"顯\",\n\t\t\t\"zhs\": \"显\"\n\t\t},\n\t\t\"晓\": {\n\t\t\t\"jp\": \"暁\",\n\t\t\t\"zht\": \"曉\",\n\t\t\t\"zhs\": \"晓\"\n\t\t},\n\t\t\"晚\": {\n\t\t\t\"jp\": \"晩\",\n\t\t\t\"zht\": \"晚\",\n\t\t\t\"zhs\": \"晚\"\n\t\t},\n\t\t\"暂\": {\n\t\t\t\"jp\": \"暫\",\n\t\t\t\"zht\": \"暫\",\n\t\t\t\"zhs\": \"暂\"\n\t\t},\n\t\t\"曾\": {\n\t\t\t\"jp\": \"曽\",\n\t\t\t\"zht\": \"曾\",\n\t\t\t\"zhs\": \"曾\"\n\t\t},\n\t\t\"术\": {\n\t\t\t\"jp\": \"術\",\n\t\t\t\"zht\": \"術\",\n\t\t\t\"zhs\": \"术\"\n\t\t},\n\t\t\"朴\": {\n\t\t\t\"jp\": \"樸\",\n\t\t\t\"zht\": \"樸\",\n\t\t\t\"zhs\": \"朴\"\n\t\t},\n\t\t\"机\": {\n\t\t\t\"jp\": \"機\",\n\t\t\t\"zht\": \"機\",\n\t\t\t\"zhs\": \"机\"\n\t\t},\n\t\t\"杀\": {\n\t\t\t\"jp\": \"殺\",\n\t\t\t\"zht\": \"殺\",\n\t\t\t\"zhs\": \"杀\"\n\t\t},\n\t\t\"杂\": {\n\t\t\t\"jp\": \"雑\",\n\t\t\t\"zht\": \"雜\",\n\t\t\t\"zhs\": \"杂\"\n\t\t},\n\t\t\"权\": {\n\t\t\t\"jp\": \"権\",\n\t\t\t\"zht\": \"權\",\n\t\t\t\"zhs\": \"权\"\n\t\t},\n\t\t\"条\": {\n\t\t\t\"jp\": \"条\",\n\t\t\t\"zht\": \"條\",\n\t\t\t\"zhs\": \"条\"\n\t\t},\n\t\t\"极\": {\n\t\t\t\"jp\": \"極\",\n\t\t\t\"zht\": \"極\",\n\t\t\t\"zhs\": \"极\"\n\t\t},\n\t\t\"枢\": {\n\t\t\t\"jp\": \"枢\",\n\t\t\t\"zht\": \"樞\",\n\t\t\t\"zhs\": \"枢\"\n\t\t},\n\t\t\"枪\": {\n\t\t\t\"jp\": \"槍\",\n\t\t\t\"zht\": \"槍\",\n\t\t\t\"zhs\": \"枪\"\n\t\t},\n\t\t\"查\": {\n\t\t\t\"jp\": \"査\",\n\t\t\t\"zht\": \"查\",\n\t\t\t\"zhs\": \"查\"\n\t\t},\n\t\t\"荣\": {\n\t\t\t\"jp\": \"栄\",\n\t\t\t\"zht\": \"榮\",\n\t\t\t\"zhs\": \"荣\"\n\t\t},\n\t\t\"标\": {\n\t\t\t\"jp\": \"標\",\n\t\t\t\"zht\": \"標\",\n\t\t\t\"zhs\": \"标\"\n\t\t},\n\t\t\"栈\": {\n\t\t\t\"jp\": \"桟\",\n\t\t\t\"zht\": \"棧\",\n\t\t\t\"zhs\": \"栈\"\n\t\t},\n\t\t\"栋\": {\n\t\t\t\"jp\": \"棟\",\n\t\t\t\"zht\": \"棟\",\n\t\t\t\"zhs\": \"栋\"\n\t\t},\n\t\t\"栏\": {\n\t\t\t\"jp\": \"欄\",\n\t\t\t\"zht\": \"欄\",\n\t\t\t\"zhs\": \"栏\"\n\t\t},\n\t\t\"树\": {\n\t\t\t\"jp\": \"樹\",\n\t\t\t\"zht\": \"樹\",\n\t\t\t\"zhs\": \"树\"\n\t\t},\n\t\t\"样\": {\n\t\t\t\"jp\": \"様\",\n\t\t\t\"zht\": \"樣\",\n\t\t\t\"zhs\": \"样\"\n\t\t},\n\t\t\"樱\": {\n\t\t\t\"jp\": \"桜\",\n\t\t\t\"zht\": \"櫻\",\n\t\t\t\"zhs\": \"樱\"\n\t\t},\n\t\t\"桥\": {\n\t\t\t\"jp\": \"橋\",\n\t\t\t\"zht\": \"橋\",\n\t\t\t\"zhs\": \"桥\"\n\t\t},\n\t\t\"检\": {\n\t\t\t\"jp\": \"検\",\n\t\t\t\"zht\": \"檢\",\n\t\t\t\"zhs\": \"检\"\n\t\t},\n\t\t\"楼\": {\n\t\t\t\"jp\": \"楼\",\n\t\t\t\"zht\": \"樓\",\n\t\t\t\"zhs\": \"楼\"\n\t\t},\n\t\t\"欢\": {\n\t\t\t\"jp\": \"歓\",\n\t\t\t\"zht\": \"歡\",\n\t\t\t\"zhs\": \"欢\"\n\t\t},\n\t\t\"欧\": {\n\t\t\t\"jp\": \"欧\",\n\t\t\t\"zht\": \"歐\",\n\t\t\t\"zhs\": \"欧\"\n\t\t},\n\t\t\"步\": {\n\t\t\t\"jp\": \"歩\",\n\t\t\t\"zht\": \"步\",\n\t\t\t\"zhs\": \"步\"\n\t\t},\n\t\t\"齿\": {\n\t\t\t\"jp\": \"歯\",\n\t\t\t\"zht\": \"齒\",\n\t\t\t\"zhs\": \"齿\"\n\t\t},\n\t\t\"残\": {\n\t\t\t\"jp\": \"残\",\n\t\t\t\"zht\": \"殘\",\n\t\t\t\"zhs\": \"残\"\n\t\t},\n\t\t\"殴\": {\n\t\t\t\"jp\": \"殴\",\n\t\t\t\"zht\": \"毆\",\n\t\t\t\"zhs\": \"殴\"\n\t\t},\n\t\t\"气\": {\n\t\t\t\"jp\": \"気\",\n\t\t\t\"zht\": \"氣\",\n\t\t\t\"zhs\": \"气\"\n\t\t},\n\t\t\"汉\": {\n\t\t\t\"jp\": \"漢\",\n\t\t\t\"zht\": \"漢\",\n\t\t\t\"zhs\": \"汉\"\n\t\t},\n\t\t\"汤\": {\n\t\t\t\"jp\": \"湯\",\n\t\t\t\"zht\": \"湯\",\n\t\t\t\"zhs\": \"汤\"\n\t\t},\n\t\t\"沟\": {\n\t\t\t\"jp\": \"溝\",\n\t\t\t\"zht\": \"溝\",\n\t\t\t\"zhs\": \"沟\"\n\t\t},\n\t\t\"泽\": {\n\t\t\t\"jp\": \"沢\",\n\t\t\t\"zht\": \"澤\",\n\t\t\t\"zhs\": \"泽\"\n\t\t},\n\t\t\"泪\": {\n\t\t\t\"jp\": \"涙\",\n\t\t\t\"zht\": \"淚\",\n\t\t\t\"zhs\": \"泪\"\n\t\t},\n\t\t\"泷\": {\n\t\t\t\"jp\": \"滝\",\n\t\t\t\"zht\": \"瀧\",\n\t\t\t\"zhs\": \"泷\"\n\t\t},\n\t\t\"洁\": {\n\t\t\t\"jp\": \"潔\",\n\t\t\t\"zht\": \"潔\",\n\t\t\t\"zhs\": \"洁\"\n\t\t},\n\t\t\"浅\": {\n\t\t\t\"jp\": \"浅\",\n\t\t\t\"zht\": \"淺\",\n\t\t\t\"zhs\": \"浅\"\n\t\t},\n\t\t\"浊\": {\n\t\t\t\"jp\": \"濁\",\n\t\t\t\"zht\": \"濁\",\n\t\t\t\"zhs\": \"浊\"\n\t\t},\n\t\t\"测\": {\n\t\t\t\"jp\": \"測\",\n\t\t\t\"zht\": \"測\",\n\t\t\t\"zhs\": \"测\"\n\t\t},\n\t\t\"济\": {\n\t\t\t\"jp\": \"済\",\n\t\t\t\"zht\": \"濟\",\n\t\t\t\"zhs\": \"济\"\n\t\t},\n\t\t\"浓\": {\n\t\t\t\"jp\": \"濃\",\n\t\t\t\"zht\": \"濃\",\n\t\t\t\"zhs\": \"浓\"\n\t\t},\n\t\t\"滨\": {\n\t\t\t\"jp\": \"浜\",\n\t\t\t\"zht\": \"濱\",\n\t\t\t\"zhs\": \"滨\"\n\t\t},\n\t\t\"涉\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涉\"\n\t\t},\n\t\t\"涩\": {\n\t\t\t\"jp\": \"渋\",\n\t\t\t\"zht\": \"涉\",\n\t\t\t\"zhs\": \"涩\"\n\t\t},\n\t\t\"涡\": {\n\t\t\t\"jp\": \"渦\",\n\t\t\t\"zht\": \"渦\",\n\t\t\t\"zhs\": \"涡\"\n\t\t},\n\t\t\"润\": {\n\t\t\t\"jp\": \"潤\",\n\t\t\t\"zht\": \"潤\",\n\t\t\t\"zhs\": \"润\"\n\t\t},\n\t\t\"渍\": {\n\t\t\t\"jp\": \"漬\",\n\t\t\t\"zht\": \"漬\",\n\t\t\t\"zhs\": \"渍\"\n\t\t},\n\t\t\"渐\": {\n\t\t\t\"jp\": \"漸\",\n\t\t\t\"zht\": \"漸\",\n\t\t\t\"zhs\": \"渐\"\n\t\t},\n\t\t\"溪\": {\n\t\t\t\"jp\": \"渓\",\n\t\t\t\"zht\": \"溪\",\n\t\t\t\"zhs\": \"溪\"\n\t\t},\n\t\t\"渔\": {\n\t\t\t\"jp\": \"漁\",\n\t\t\t\"zht\": \"漁\",\n\t\t\t\"zhs\": \"渔\"\n\t\t},\n\t\t\"湾\": {\n\t\t\t\"jp\": \"湾\",\n\t\t\t\"zht\": \"灣\",\n\t\t\t\"zhs\": \"湾\"\n\t\t},\n\t\t\"湿\": {\n\t\t\t\"jp\": \"湿\",\n\t\t\t\"zht\": \"濕\",\n\t\t\t\"zhs\": \"湿\"\n\t\t},\n\t\t\"满\": {\n\t\t\t\"jp\": \"満\",\n\t\t\t\"zht\": \"滿\",\n\t\t\t\"zhs\": \"满\"\n\t\t},\n\t\t\"灭\": {\n\t\t\t\"jp\": \"滅\",\n\t\t\t\"zht\": \"滅\",\n\t\t\t\"zhs\": \"灭\"\n\t\t},\n\t\t\"滞\": {\n\t\t\t\"jp\": \"滞\",\n\t\t\t\"zht\": \"滯\",\n\t\t\t\"zhs\": \"滞\"\n\t\t},\n\t\t\"滥\": {\n\t\t\t\"jp\": \"濫\",\n\t\t\t\"zht\": \"濫\",\n\t\t\t\"zhs\": \"滥\"\n\t\t},\n\t\t\"濑\": {\n\t\t\t\"jp\": \"瀬\",\n\t\t\t\"zht\": \"瀨\",\n\t\t\t\"zhs\": \"濑\"\n\t\t},\n\t\t\"灯\": {\n\t\t\t\"jp\": \"灯\",\n\t\t\t\"zht\": \"燈\",\n\t\t\t\"zhs\": \"灯\"\n\t\t},\n\t\t\"灵\": {\n\t\t\t\"jp\": \"霊\",\n\t\t\t\"zht\": \"靈\",\n\t\t\t\"zhs\": \"灵\"\n\t\t},\n\t\t\"炉\": {\n\t\t\t\"jp\": \"炉\",\n\t\t\t\"zht\": \"爐\",\n\t\t\t\"zhs\": \"炉\"\n\t\t},\n\t\t\"点\": {\n\t\t\t\"jp\": \"点\",\n\t\t\t\"zht\": \"點\",\n\t\t\t\"zhs\": \"点\"\n\t\t},\n\t\t\"炼\": {\n\t\t\t\"jp\": \"錬\",\n\t\t\t\"zht\": \"鍊\",\n\t\t\t\"zhs\": \"炼\"\n\t\t},\n\t\t\"练\": {\n\t\t\t\"jp\": \"練\",\n\t\t\t\"zht\": \"練\",\n\t\t\t\"zhs\": \"练\"\n\t\t},\n\t\t\"烟\": {\n\t\t\t\"jp\": \"煙\",\n\t\t\t\"zht\": \"煙\",\n\t\t\t\"zhs\": \"烟\"\n\t\t},\n\t\t\"烦\": {\n\t\t\t\"jp\": \"煩\",\n\t\t\t\"zht\": \"煩\",\n\t\t\t\"zhs\": \"烦\"\n\t\t},\n\t\t\"烧\": {\n\t\t\t\"jp\": \"焼\",\n\t\t\t\"zht\": \"燒\",\n\t\t\t\"zhs\": \"烧\"\n\t\t},\n\t\t\"热\": {\n\t\t\t\"jp\": \"熱\",\n\t\t\t\"zht\": \"熱\",\n\t\t\t\"zhs\": \"热\"\n\t\t},\n\t\t\"焰\": {\n\t\t\t\"jp\": \"焔\",\n\t\t\t\"zht\": \"焰\",\n\t\t\t\"zhs\": \"焰\"\n\t\t},\n\t\t\"锻\": {\n\t\t\t\"jp\": \"鍛\",\n\t\t\t\"zht\": \"鍛\",\n\t\t\t\"zhs\": \"锻\"\n\t\t},\n\t\t\"牺\": {\n\t\t\t\"jp\": \"犠\",\n\t\t\t\"zht\": \"犧\",\n\t\t\t\"zhs\": \"牺\"\n\t\t},\n\t\t\"状\": {\n\t\t\t\"jp\": \"状\",\n\t\t\t\"zht\": \"狀\",\n\t\t\t\"zhs\": \"状\"\n\t\t},\n\t\t\"犹\": {\n\t\t\t\"jp\": \"猶\",\n\t\t\t\"zht\": \"猶\",\n\t\t\t\"zhs\": \"犹\"\n\t\t},\n\t\t\"独\": {\n\t\t\t\"jp\": \"独\",\n\t\t\t\"zht\": \"獨\",\n\t\t\t\"zhs\": \"独\"\n\t\t},\n\t\t\"狭\": {\n\t\t\t\"jp\": \"狭\",\n\t\t\t\"zht\": \"狹\",\n\t\t\t\"zhs\": \"狭\"\n\t\t},\n\t\t\"狱\": {\n\t\t\t\"jp\": \"獄\",\n\t\t\t\"zht\": \"獄\",\n\t\t\t\"zhs\": \"狱\"\n\t\t},\n\t\t\"猎\": {\n\t\t\t\"jp\": \"猟\",\n\t\t\t\"zht\": \"獵\",\n\t\t\t\"zhs\": \"猎\"\n\t\t},\n\t\t\"猫\": {\n\t\t\t\"jp\": \"猫\",\n\t\t\t\"zht\": \"貓\",\n\t\t\t\"zhs\": \"猫\"\n\t\t},\n\t\t\"献\": {\n\t\t\t\"jp\": \"献\",\n\t\t\t\"zht\": \"獻\",\n\t\t\t\"zhs\": \"献\"\n\t\t},\n\t\t\"环\": {\n\t\t\t\"jp\": \"環\",\n\t\t\t\"zht\": \"環\",\n\t\t\t\"zhs\": \"环\"\n\t\t},\n\t\t\"现\": {\n\t\t\t\"jp\": \"現\",\n\t\t\t\"zht\": \"現\",\n\t\t\t\"zhs\": \"现\"\n\t\t},\n\t\t\"玺\": {\n\t\t\t\"jp\": \"璽\",\n\t\t\t\"zht\": \"璽\",\n\t\t\t\"zhs\": \"玺\"\n\t\t},\n\t\t\"电\": {\n\t\t\t\"jp\": \"電\",\n\t\t\t\"zht\": \"電\",\n\t\t\t\"zhs\": \"电\"\n\t\t},\n\t\t\"疗\": {\n\t\t\t\"jp\": \"療\",\n\t\t\t\"zht\": \"療\",\n\t\t\t\"zhs\": \"疗\"\n\t\t},\n\t\t\"监\": {\n\t\t\t\"jp\": \"監\",\n\t\t\t\"zht\": \"監\",\n\t\t\t\"zhs\": \"监\"\n\t\t},\n\t\t\"盖\": {\n\t\t\t\"jp\": \"蓋\",\n\t\t\t\"zht\": \"蓋\",\n\t\t\t\"zhs\": \"盖\"\n\t\t},\n\t\t\"盘\": {\n\t\t\t\"jp\": \"盤\",\n\t\t\t\"zht\": \"盤\",\n\t\t\t\"zhs\": \"盘\"\n\t\t},\n\t\t\"视\": {\n\t\t\t\"jp\": \"視\",\n\t\t\t\"zht\": \"視\",\n\t\t\t\"zhs\": \"视\"\n\t\t},\n\t\t\"著\": {\n\t\t\t\"jp\": \"着\",\n\t\t\t\"zht\": \"著\",\n\t\t\t\"zhs\": \"著\"\n\t\t},\n\t\t\"矫\": {\n\t\t\t\"jp\": \"矯\",\n\t\t\t\"zht\": \"矯\",\n\t\t\t\"zhs\": \"矫\"\n\t\t},\n\t\t\"矿\": {\n\t\t\t\"jp\": \"鉱\",\n\t\t\t\"zht\": \"礦\",\n\t\t\t\"zhs\": \"矿\"\n\t\t},\n\t\t\"碎\": {\n\t\t\t\"jp\": \"砕\",\n\t\t\t\"zht\": \"碎\",\n\t\t\t\"zhs\": \"碎\"\n\t\t},\n\t\t\"础\": {\n\t\t\t\"jp\": \"礎\",\n\t\t\t\"zht\": \"礎\",\n\t\t\t\"zhs\": \"础\"\n\t\t},\n\t\t\"确\": {\n\t\t\t\"jp\": \"確\",\n\t\t\t\"zht\": \"確\",\n\t\t\t\"zhs\": \"确\"\n\t\t},\n\t\t\"礼\": {\n\t\t\t\"jp\": \"礼\",\n\t\t\t\"zht\": \"禮\",\n\t\t\t\"zhs\": \"礼\"\n\t\t},\n\t\t\"祸\": {\n\t\t\t\"jp\": \"禍\",\n\t\t\t\"zht\": \"禍\",\n\t\t\t\"zhs\": \"祸\"\n\t\t},\n\t\t\"禅\": {\n\t\t\t\"jp\": \"禅\",\n\t\t\t\"zht\": \"禪\",\n\t\t\t\"zhs\": \"禅\"\n\t\t},\n\t\t\"离\": {\n\t\t\t\"jp\": \"離\",\n\t\t\t\"zht\": \"離\",\n\t\t\t\"zhs\": \"离\"\n\t\t},\n\t\t\"种\": {\n\t\t\t\"jp\": \"種\",\n\t\t\t\"zht\": \"種\",\n\t\t\t\"zhs\": \"种\"\n\t\t},\n\t\t\"积\": {\n\t\t\t\"jp\": \"積\",\n\t\t\t\"zht\": \"積\",\n\t\t\t\"zhs\": \"积\"\n\t\t},\n\t\t\"称\": {\n\t\t\t\"jp\": \"称\",\n\t\t\t\"zht\": \"稱\",\n\t\t\t\"zhs\": \"称\"\n\t\t},\n\t\t\"稻\": {\n\t\t\t\"jp\": \"稲\",\n\t\t\t\"zht\": \"稻\",\n\t\t\t\"zhs\": \"稻\"\n\t\t},\n\t\t\"稳\": {\n\t\t\t\"jp\": \"穏\",\n\t\t\t\"zht\": \"穩\",\n\t\t\t\"zhs\": \"稳\"\n\t\t},\n\t\t\"谷\": {\n\t\t\t\"jp\": \"穀\",\n\t\t\t\"zht\": \"穀\",\n\t\t\t\"zhs\": \"谷\"\n\t\t},\n\t\t\"穗\": {\n\t\t\t\"jp\": \"穂\",\n\t\t\t\"zht\": \"穗\",\n\t\t\t\"zhs\": \"穗\"\n\t\t},\n\t\t\"穷\": {\n\t\t\t\"jp\": \"窮\",\n\t\t\t\"zht\": \"窮\",\n\t\t\t\"zhs\": \"穷\"\n\t\t},\n\t\t\"窃\": {\n\t\t\t\"jp\": \"窃\",\n\t\t\t\"zht\": \"竊\",\n\t\t\t\"zhs\": \"窃\"\n\t\t},\n\t\t\"窗\": {\n\t\t\t\"jp\": \"窓\",\n\t\t\t\"zht\": \"窗\",\n\t\t\t\"zhs\": \"窗\"\n\t\t},\n\t\t\"龙\": {\n\t\t\t\"jp\": \"竜\",\n\t\t\t\"zht\": \"龍\",\n\t\t\t\"zhs\": \"龙\"\n\t\t},\n\t\t\"竞\": {\n\t\t\t\"jp\": \"競\",\n\t\t\t\"zht\": \"競\",\n\t\t\t\"zhs\": \"竞\"\n\t\t},\n\t\t\"笃\": {\n\t\t\t\"jp\": \"篤\",\n\t\t\t\"zht\": \"篤\",\n\t\t\t\"zhs\": \"笃\"\n\t\t},\n\t\t\"笔\": {\n\t\t\t\"jp\": \"筆\",\n\t\t\t\"zht\": \"筆\",\n\t\t\t\"zhs\": \"笔\"\n\t\t},\n\t\t\"筑\": {\n\t\t\t\"jp\": \"築\",\n\t\t\t\"zht\": \"築\",\n\t\t\t\"zhs\": \"筑\"\n\t\t},\n\t\t\"简\": {\n\t\t\t\"jp\": \"簡\",\n\t\t\t\"zht\": \"簡\",\n\t\t\t\"zhs\": \"简\"\n\t\t},\n\t\t\"节\": {\n\t\t\t\"jp\": \"節\",\n\t\t\t\"zht\": \"節\",\n\t\t\t\"zhs\": \"节\"\n\t\t},\n\t\t\"范\": {\n\t\t\t\"jp\": \"範\",\n\t\t\t\"zht\": \"範\",\n\t\t\t\"zhs\": \"范\"\n\t\t},\n\t\t\"类\": {\n\t\t\t\"jp\": \"類\",\n\t\t\t\"zht\": \"類\",\n\t\t\t\"zhs\": \"类\"\n\t\t},\n\t\t\"粹\": {\n\t\t\t\"jp\": \"粋\",\n\t\t\t\"zht\": \"粹\",\n\t\t\t\"zhs\": \"粹\"\n\t\t},\n\t\t\"肃\": {\n\t\t\t\"jp\": \"粛\",\n\t\t\t\"zht\": \"肅\",\n\t\t\t\"zhs\": \"肃\"\n\t\t},\n\t\t\"粮\": {\n\t\t\t\"jp\": \"糧\",\n\t\t\t\"zht\": \"糧\",\n\t\t\t\"zhs\": \"粮\"\n\t\t},\n\t\t\"纠\": {\n\t\t\t\"jp\": \"糾\",\n\t\t\t\"zht\": \"糾\",\n\t\t\t\"zhs\": \"纠\"\n\t\t},\n\t\t\"纪\": {\n\t\t\t\"jp\": \"紀\",\n\t\t\t\"zht\": \"紀\",\n\t\t\t\"zhs\": \"纪\"\n\t\t},\n\t\t\"约\": {\n\t\t\t\"jp\": \"約\",\n\t\t\t\"zht\": \"約\",\n\t\t\t\"zhs\": \"约\"\n\t\t},\n\t\t\"红\": {\n\t\t\t\"jp\": \"紅\",\n\t\t\t\"zht\": \"紅\",\n\t\t\t\"zhs\": \"红\"\n\t\t},\n\t\t\"纹\": {\n\t\t\t\"jp\": \"紋\",\n\t\t\t\"zht\": \"紋\",\n\t\t\t\"zhs\": \"纹\"\n\t\t},\n\t\t\"纳\": {\n\t\t\t\"jp\": \"納\",\n\t\t\t\"zht\": \"納\",\n\t\t\t\"zhs\": \"纳\"\n\t\t},\n\t\t\"纯\": {\n\t\t\t\"jp\": \"純\",\n\t\t\t\"zht\": \"純\",\n\t\t\t\"zhs\": \"纯\"\n\t\t},\n\t\t\"纸\": {\n\t\t\t\"jp\": \"紙\",\n\t\t\t\"zht\": \"紙\",\n\t\t\t\"zhs\": \"纸\"\n\t\t},\n\t\t\"级\": {\n\t\t\t\"jp\": \"級\",\n\t\t\t\"zht\": \"級\",\n\t\t\t\"zhs\": \"级\"\n\t\t},\n\t\t\"纷\": {\n\t\t\t\"jp\": \"紛\",\n\t\t\t\"zht\": \"紛\",\n\t\t\t\"zhs\": \"纷\"\n\t\t},\n\t\t\"纺\": {\n\t\t\t\"jp\": \"紡\",\n\t\t\t\"zht\": \"紡\",\n\t\t\t\"zhs\": \"纺\"\n\t\t},\n\t\t\"紧\": {\n\t\t\t\"jp\": \"緊\",\n\t\t\t\"zht\": \"緊\",\n\t\t\t\"zhs\": \"紧\"\n\t\t},\n\t\t\"细\": {\n\t\t\t\"jp\": \"細\",\n\t\t\t\"zht\": \"細\",\n\t\t\t\"zhs\": \"细\"\n\t\t},\n\t\t\"绅\": {\n\t\t\t\"jp\": \"紳\",\n\t\t\t\"zht\": \"紳\",\n\t\t\t\"zhs\": \"绅\"\n\t\t},\n\t\t\"绍\": {\n\t\t\t\"jp\": \"紹\",\n\t\t\t\"zht\": \"紹\",\n\t\t\t\"zhs\": \"绍\"\n\t\t},\n\t\t\"绀\": {\n\t\t\t\"jp\": \"紺\",\n\t\t\t\"zht\": \"紺\",\n\t\t\t\"zhs\": \"绀\"\n\t\t},\n\t\t\"终\": {\n\t\t\t\"jp\": \"終\",\n\t\t\t\"zht\": \"終\",\n\t\t\t\"zhs\": \"终\"\n\t\t},\n\t\t\"组\": {\n\t\t\t\"jp\": \"組\",\n\t\t\t\"zht\": \"組\",\n\t\t\t\"zhs\": \"组\"\n\t\t},\n\t\t\"经\": {\n\t\t\t\"jp\": \"経\",\n\t\t\t\"zht\": \"經\",\n\t\t\t\"zhs\": \"经\"\n\t\t},\n\t\t\"结\": {\n\t\t\t\"jp\": \"結\",\n\t\t\t\"zht\": \"結\",\n\t\t\t\"zhs\": \"结\"\n\t\t},\n\t\t\"绝\": {\n\t\t\t\"jp\": \"絶\",\n\t\t\t\"zht\": \"絕\",\n\t\t\t\"zhs\": \"绝\"\n\t\t},\n\t\t\"绞\": {\n\t\t\t\"jp\": \"絞\",\n\t\t\t\"zht\": \"絞\",\n\t\t\t\"zhs\": \"绞\"\n\t\t},\n\t\t\"络\": {\n\t\t\t\"jp\": \"絡\",\n\t\t\t\"zht\": \"絡\",\n\t\t\t\"zhs\": \"络\"\n\t\t},\n\t\t\"给\": {\n\t\t\t\"jp\": \"給\",\n\t\t\t\"zht\": \"給\",\n\t\t\t\"zhs\": \"给\"\n\t\t},\n\t\t\"统\": {\n\t\t\t\"jp\": \"統\",\n\t\t\t\"zht\": \"統\",\n\t\t\t\"zhs\": \"统\"\n\t\t},\n\t\t\"绘\": {\n\t\t\t\"jp\": \"絵\",\n\t\t\t\"zht\": \"繪\",\n\t\t\t\"zhs\": \"绘\"\n\t\t},\n\t\t\"绢\": {\n\t\t\t\"jp\": \"絹\",\n\t\t\t\"zht\": \"絹\",\n\t\t\t\"zhs\": \"绢\"\n\t\t},\n\t\t\"继\": {\n\t\t\t\"jp\": \"継\",\n\t\t\t\"zht\": \"繼\",\n\t\t\t\"zhs\": \"继\"\n\t\t},\n\t\t\"续\": {\n\t\t\t\"jp\": \"続\",\n\t\t\t\"zht\": \"續\",\n\t\t\t\"zhs\": \"续\"\n\t\t},\n\t\t\"绿\": {\n\t\t\t\"jp\": \"緑\",\n\t\t\t\"zht\": \"綠\",\n\t\t\t\"zhs\": \"绿\"\n\t\t},\n\t\t\"线\": {\n\t\t\t\"jp\": \"線\",\n\t\t\t\"zht\": \"線\",\n\t\t\t\"zhs\": \"线\"\n\t\t},\n\t\t\"维\": {\n\t\t\t\"jp\": \"維\",\n\t\t\t\"zht\": \"維\",\n\t\t\t\"zhs\": \"维\"\n\t\t},\n\t\t\"纲\": {\n\t\t\t\"jp\": \"綱\",\n\t\t\t\"zht\": \"綱\",\n\t\t\t\"zhs\": \"纲\"\n\t\t},\n\t\t\"绵\": {\n\t\t\t\"jp\": \"綿\",\n\t\t\t\"zht\": \"綿\",\n\t\t\t\"zhs\": \"绵\"\n\t\t},\n\t\t\"绪\": {\n\t\t\t\"jp\": \"緒\",\n\t\t\t\"zht\": \"緒\",\n\t\t\t\"zhs\": \"绪\"\n\t\t},\n\t\t\"缔\": {\n\t\t\t\"jp\": \"締\",\n\t\t\t\"zht\": \"締\",\n\t\t\t\"zhs\": \"缔\"\n\t\t},\n\t\t\"缘\": {\n\t\t\t\"jp\": \"縁\",\n\t\t\t\"zht\": \"緣\",\n\t\t\t\"zhs\": \"缘\"\n\t\t},\n\t\t\"编\": {\n\t\t\t\"jp\": \"編\",\n\t\t\t\"zht\": \"編\",\n\t\t\t\"zhs\": \"编\"\n\t\t},\n\t\t\"缓\": {\n\t\t\t\"jp\": \"緩\",\n\t\t\t\"zht\": \"緩\",\n\t\t\t\"zhs\": \"缓\"\n\t\t},\n\t\t\"纬\": {\n\t\t\t\"jp\": \"緯\",\n\t\t\t\"zht\": \"緯\",\n\t\t\t\"zhs\": \"纬\"\n\t\t},\n\t\t\"绳\": {\n\t\t\t\"jp\": \"縄\",\n\t\t\t\"zht\": \"繩\",\n\t\t\t\"zhs\": \"绳\"\n\t\t},\n\t\t\"缚\": {\n\t\t\t\"jp\": \"縛\",\n\t\t\t\"zht\": \"縛\",\n\t\t\t\"zhs\": \"缚\"\n\t\t},\n\t\t\"纵\": {\n\t\t\t\"jp\": \"縦\",\n\t\t\t\"zht\": \"縱\",\n\t\t\t\"zhs\": \"纵\"\n\t\t},\n\t\t\"缝\": {\n\t\t\t\"jp\": \"縫\",\n\t\t\t\"zht\": \"縫\",\n\t\t\t\"zhs\": \"缝\"\n\t\t},\n\t\t\"缩\": {\n\t\t\t\"jp\": \"縮\",\n\t\t\t\"zht\": \"縮\",\n\t\t\t\"zhs\": \"缩\"\n\t\t},\n\t\t\"纤\": {\n\t\t\t\"jp\": \"繊\",\n\t\t\t\"zht\": \"纖\",\n\t\t\t\"zhs\": \"纤\"\n\t\t},\n\t\t\"绩\": {\n\t\t\t\"jp\": \"績\",\n\t\t\t\"zht\": \"績\",\n\t\t\t\"zhs\": \"绩\"\n\t\t},\n\t\t\"织\": {\n\t\t\t\"jp\": \"織\",\n\t\t\t\"zht\": \"織\",\n\t\t\t\"zhs\": \"织\"\n\t\t},\n\t\t\"缮\": {\n\t\t\t\"jp\": \"繕\",\n\t\t\t\"zht\": \"繕\",\n\t\t\t\"zhs\": \"缮\"\n\t\t},\n\t\t\"茧\": {\n\t\t\t\"jp\": \"繭\",\n\t\t\t\"zht\": \"繭\",\n\t\t\t\"zhs\": \"茧\"\n\t\t},\n\t\t\"缲\": {\n\t\t\t\"jp\": \"繰\",\n\t\t\t\"zht\": \"繰\",\n\t\t\t\"zhs\": \"缲\"\n\t\t},\n\t\t\"罐\": {\n\t\t\t\"jp\": \"缶\",\n\t\t\t\"zht\": \"罐\",\n\t\t\t\"zhs\": \"罐\"\n\t\t},\n\t\t\"钵\": {\n\t\t\t\"jp\": \"鉢\",\n\t\t\t\"zht\": \"鉢\",\n\t\t\t\"zhs\": \"钵\"\n\t\t},\n\t\t\"罗\": {\n\t\t\t\"jp\": \"羅\",\n\t\t\t\"zht\": \"羅\",\n\t\t\t\"zhs\": \"罗\"\n\t\t},\n\t\t\"罚\": {\n\t\t\t\"jp\": \"罸\",\n\t\t\t\"zht\": \"罰\",\n\t\t\t\"zhs\": \"罚\"\n\t\t},\n\t\t\"罢\": {\n\t\t\t\"jp\": \"罷\",\n\t\t\t\"zht\": \"罷\",\n\t\t\t\"zhs\": \"罢\"\n\t\t},\n\t\t\"骂\": {\n\t\t\t\"jp\": \"罵\",\n\t\t\t\"zht\": \"罵\",\n\t\t\t\"zhs\": \"骂\"\n\t\t},\n\t\t\"职\": {\n\t\t\t\"jp\": \"職\",\n\t\t\t\"zht\": \"職\",\n\t\t\t\"zhs\": \"职\"\n\t\t},\n\t\t\"闻\": {\n\t\t\t\"jp\": \"聞\",\n\t\t\t\"zht\": \"聞\",\n\t\t\t\"zhs\": \"闻\"\n\t\t},\n\t\t\"聪\": {\n\t\t\t\"jp\": \"聡\",\n\t\t\t\"zht\": \"聰\",\n\t\t\t\"zhs\": \"聪\"\n\t\t},\n\t\t\"肠\": {\n\t\t\t\"jp\": \"腸\",\n\t\t\t\"zht\": \"腸\",\n\t\t\t\"zhs\": \"肠\"\n\t\t},\n\t\t\"肤\": {\n\t\t\t\"jp\": \"膚\",\n\t\t\t\"zht\": \"膚\",\n\t\t\t\"zhs\": \"肤\"\n\t\t},\n\t\t\"胀\": {\n\t\t\t\"jp\": \"脹\",\n\t\t\t\"zht\": \"脹\",\n\t\t\t\"zhs\": \"胀\"\n\t\t},\n\t\t\"胁\": {\n\t\t\t\"jp\": \"脅\",\n\t\t\t\"zht\": \"脅\",\n\t\t\t\"zhs\": \"胁\"\n\t\t},\n\t\t\"胆\": {\n\t\t\t\"jp\": \"胆\",\n\t\t\t\"zht\": \"膽\",\n\t\t\t\"zhs\": \"胆\"\n\t\t},\n\t\t\"脏\": {\n\t\t\t\"jp\": \"臓\",\n\t\t\t\"zht\": \"臟\",\n\t\t\t\"zhs\": \"脏\"\n\t\t},\n\t\t\"脑\": {\n\t\t\t\"jp\": \"脳\",\n\t\t\t\"zht\": \"腦\",\n\t\t\t\"zhs\": \"脑\"\n\t\t},\n\t\t\"脚\": {\n\t\t\t\"jp\": \"脚\",\n\t\t\t\"zht\": \"腳\",\n\t\t\t\"zhs\": \"脚\"\n\t\t},\n\t\t\"腾\": {\n\t\t\t\"jp\": \"騰\",\n\t\t\t\"zht\": \"騰\",\n\t\t\t\"zhs\": \"腾\"\n\t\t},\n\t\t\"铺\": {\n\t\t\t\"jp\": \"舗\",\n\t\t\t\"zht\": \"舖\",\n\t\t\t\"zhs\": \"铺\"\n\t\t},\n\t\t\"馆\": {\n\t\t\t\"jp\": \"館\",\n\t\t\t\"zht\": \"館\",\n\t\t\t\"zhs\": \"馆\"\n\t\t},\n\t\t\"舰\": {\n\t\t\t\"jp\": \"艦\",\n\t\t\t\"zht\": \"艦\",\n\t\t\t\"zhs\": \"舰\"\n\t\t},\n\t\t\"艺\": {\n\t\t\t\"jp\": \"芸\",\n\t\t\t\"zht\": \"藝\",\n\t\t\t\"zhs\": \"艺\"\n\t\t},\n\t\t\"茎\": {\n\t\t\t\"jp\": \"茎\",\n\t\t\t\"zht\": \"莖\",\n\t\t\t\"zhs\": \"茎\"\n\t\t},\n\t\t\"荐\": {\n\t\t\t\"jp\": \"薦\",\n\t\t\t\"zht\": \"薦\",\n\t\t\t\"zhs\": \"荐\"\n\t\t},\n\t\t\"药\": {\n\t\t\t\"jp\": \"薬\",\n\t\t\t\"zht\": \"藥\",\n\t\t\t\"zhs\": \"药\"\n\t\t},\n\t\t\"萤\": {\n\t\t\t\"jp\": \"蛍\",\n\t\t\t\"zht\": \"螢\",\n\t\t\t\"zhs\": \"萤\"\n\t\t},\n\t\t\"蒋\": {\n\t\t\t\"jp\": \"蒋\",\n\t\t\t\"zht\": \"蔣\",\n\t\t\t\"zhs\": \"蒋\"\n\t\t},\n\t\t\"藏\": {\n\t\t\t\"jp\": \"蔵\",\n\t\t\t\"zht\": \"藏\",\n\t\t\t\"zhs\": \"藏\"\n\t\t},\n\t\t\"虏\": {\n\t\t\t\"jp\": \"虜\",\n\t\t\t\"zht\": \"虜\",\n\t\t\t\"zhs\": \"虏\"\n\t\t},\n\t\t\"虚\": {\n\t\t\t\"jp\": \"虚\",\n\t\t\t\"zht\": \"虛\",\n\t\t\t\"zhs\": \"虚\"\n\t\t},\n\t\t\"虫\": {\n\t\t\t\"jp\": \"虫\",\n\t\t\t\"zht\": \"蟲\",\n\t\t\t\"zhs\": \"虫\"\n\t\t},\n\t\t\"蚀\": {\n\t\t\t\"jp\": \"蝕\",\n\t\t\t\"zht\": \"蝕\",\n\t\t\t\"zhs\": \"蚀\"\n\t\t},\n\t\t\"蚕\": {\n\t\t\t\"jp\": \"蚕\",\n\t\t\t\"zht\": \"蠶\",\n\t\t\t\"zhs\": \"蚕\"\n\t\t},\n\t\t\"蛮\": {\n\t\t\t\"jp\": \"蛮\",\n\t\t\t\"zht\": \"蠻\",\n\t\t\t\"zhs\": \"蛮\"\n\t\t},\n\t\t\"补\": {\n\t\t\t\"jp\": \"補\",\n\t\t\t\"zht\": \"補\",\n\t\t\t\"zhs\": \"补\"\n\t\t},\n\t\t\"袭\": {\n\t\t\t\"jp\": \"襲\",\n\t\t\t\"zht\": \"襲\",\n\t\t\t\"zhs\": \"袭\"\n\t\t},\n\t\t\"装\": {\n\t\t\t\"jp\": \"装\",\n\t\t\t\"zht\": \"裝\",\n\t\t\t\"zhs\": \"装\"\n\t\t},\n\t\t\"里\": {\n\t\t\t\"jp\": \"裏\",\n\t\t\t\"zht\": \"裡\",\n\t\t\t\"zhs\": \"里\"\n\t\t},\n\t\t\"霸\": {\n\t\t\t\"jp\": \"覇\",\n\t\t\t\"zht\": \"霸\",\n\t\t\t\"zhs\": \"霸\"\n\t\t},\n\t\t\"见\": {\n\t\t\t\"jp\": \"見\",\n\t\t\t\"zht\": \"見\",\n\t\t\t\"zhs\": \"见\"\n\t\t},\n\t\t\"观\": {\n\t\t\t\"jp\": \"観\",\n\t\t\t\"zht\": \"觀\",\n\t\t\t\"zhs\": \"观\"\n\t\t},\n\t\t\"规\": {\n\t\t\t\"jp\": \"規\",\n\t\t\t\"zht\": \"規\",\n\t\t\t\"zhs\": \"规\"\n\t\t},\n\t\t\"觉\": {\n\t\t\t\"jp\": \"覚\",\n\t\t\t\"zht\": \"覺\",\n\t\t\t\"zhs\": \"觉\"\n\t\t},\n\t\t\"览\": {\n\t\t\t\"jp\": \"覧\",\n\t\t\t\"zht\": \"覽\",\n\t\t\t\"zhs\": \"览\"\n\t\t},\n\t\t\"触\": {\n\t\t\t\"jp\": \"触\",\n\t\t\t\"zht\": \"觸\",\n\t\t\t\"zhs\": \"触\"\n\t\t},\n\t\t\"订\": {\n\t\t\t\"jp\": \"訂\",\n\t\t\t\"zht\": \"訂\",\n\t\t\t\"zhs\": \"订\"\n\t\t},\n\t\t\"计\": {\n\t\t\t\"jp\": \"計\",\n\t\t\t\"zht\": \"計\",\n\t\t\t\"zhs\": \"计\"\n\t\t},\n\t\t\"讨\": {\n\t\t\t\"jp\": \"討\",\n\t\t\t\"zht\": \"討\",\n\t\t\t\"zhs\": \"讨\"\n\t\t},\n\t\t\"训\": {\n\t\t\t\"jp\": \"訓\",\n\t\t\t\"zht\": \"訓\",\n\t\t\t\"zhs\": \"训\"\n\t\t},\n\t\t\"记\": {\n\t\t\t\"jp\": \"記\",\n\t\t\t\"zht\": \"記\",\n\t\t\t\"zhs\": \"记\"\n\t\t},\n\t\t\"讼\": {\n\t\t\t\"jp\": \"訟\",\n\t\t\t\"zht\": \"訟\",\n\t\t\t\"zhs\": \"讼\"\n\t\t},\n\t\t\"访\": {\n\t\t\t\"jp\": \"訪\",\n\t\t\t\"zht\": \"訪\",\n\t\t\t\"zhs\": \"访\"\n\t\t},\n\t\t\"设\": {\n\t\t\t\"jp\": \"設\",\n\t\t\t\"zht\": \"設\",\n\t\t\t\"zhs\": \"设\"\n\t\t},\n\t\t\"许\": {\n\t\t\t\"jp\": \"許\",\n\t\t\t\"zht\": \"許\",\n\t\t\t\"zhs\": \"许\"\n\t\t},\n\t\t\"译\": {\n\t\t\t\"jp\": \"訳\",\n\t\t\t\"zht\": \"譯\",\n\t\t\t\"zhs\": \"译\"\n\t\t},\n\t\t\"诉\": {\n\t\t\t\"jp\": \"訴\",\n\t\t\t\"zht\": \"訴\",\n\t\t\t\"zhs\": \"诉\"\n\t\t},\n\t\t\"诊\": {\n\t\t\t\"jp\": \"診\",\n\t\t\t\"zht\": \"診\",\n\t\t\t\"zhs\": \"诊\"\n\t\t},\n\t\t\"证\": {\n\t\t\t\"jp\": \"証\",\n\t\t\t\"zht\": \"證\",\n\t\t\t\"zhs\": \"证\"\n\t\t},\n\t\t\"诈\": {\n\t\t\t\"jp\": \"詐\",\n\t\t\t\"zht\": \"詐\",\n\t\t\t\"zhs\": \"诈\"\n\t\t},\n\t\t\"诏\": {\n\t\t\t\"jp\": \"詔\",\n\t\t\t\"zht\": \"詔\",\n\t\t\t\"zhs\": \"诏\"\n\t\t},\n\t\t\"评\": {\n\t\t\t\"jp\": \"評\",\n\t\t\t\"zht\": \"評\",\n\t\t\t\"zhs\": \"评\"\n\t\t},\n\t\t\"诅\": {\n\t\t\t\"jp\": \"詛\",\n\t\t\t\"zht\": \"詛\",\n\t\t\t\"zhs\": \"诅\"\n\t\t},\n\t\t\"词\": {\n\t\t\t\"jp\": \"詞\",\n\t\t\t\"zht\": \"詞\",\n\t\t\t\"zhs\": \"词\"\n\t\t},\n\t\t\"试\": {\n\t\t\t\"jp\": \"試\",\n\t\t\t\"zht\": \"試\",\n\t\t\t\"zhs\": \"试\"\n\t\t},\n\t\t\"诗\": {\n\t\t\t\"jp\": \"詩\",\n\t\t\t\"zht\": \"詩\",\n\t\t\t\"zhs\": \"诗\"\n\t\t},\n\t\t\"诘\": {\n\t\t\t\"jp\": \"詰\",\n\t\t\t\"zht\": \"詰\",\n\t\t\t\"zhs\": \"诘\"\n\t\t},\n\t\t\"该\": {\n\t\t\t\"jp\": \"該\",\n\t\t\t\"zht\": \"該\",\n\t\t\t\"zhs\": \"该\"\n\t\t},\n\t\t\"详\": {\n\t\t\t\"jp\": \"詳\",\n\t\t\t\"zht\": \"詳\",\n\t\t\t\"zhs\": \"详\"\n\t\t},\n\t\t\"誉\": {\n\t\t\t\"jp\": \"誉\",\n\t\t\t\"zht\": \"譽\",\n\t\t\t\"zhs\": \"誉\"\n\t\t},\n\t\t\"誊\": {\n\t\t\t\"jp\": \"謄\",\n\t\t\t\"zht\": \"謄\",\n\t\t\t\"zhs\": \"誊\"\n\t\t},\n\t\t\"认\": {\n\t\t\t\"jp\": \"認\",\n\t\t\t\"zht\": \"認\",\n\t\t\t\"zhs\": \"认\"\n\t\t},\n\t\t\"诞\": {\n\t\t\t\"jp\": \"誕\",\n\t\t\t\"zht\": \"誕\",\n\t\t\t\"zhs\": \"诞\"\n\t\t},\n\t\t\"诱\": {\n\t\t\t\"jp\": \"誘\",\n\t\t\t\"zht\": \"誘\",\n\t\t\t\"zhs\": \"诱\"\n\t\t},\n\t\t\"语\": {\n\t\t\t\"jp\": \"語\",\n\t\t\t\"zht\": \"語\",\n\t\t\t\"zhs\": \"语\"\n\t\t},\n\t\t\"诚\": {\n\t\t\t\"jp\": \"誠\",\n\t\t\t\"zht\": \"誠\",\n\t\t\t\"zhs\": \"诚\"\n\t\t},\n\t\t\"误\": {\n\t\t\t\"jp\": \"誤\",\n\t\t\t\"zht\": \"誤\",\n\t\t\t\"zhs\": \"误\"\n\t\t},\n\t\t\"说\": {\n\t\t\t\"jp\": \"説\",\n\t\t\t\"zht\": \"說\",\n\t\t\t\"zhs\": \"说\"\n\t\t},\n\t\t\"读\": {\n\t\t\t\"jp\": \"読\",\n\t\t\t\"zht\": \"讀\",\n\t\t\t\"zhs\": \"读\"\n\t\t},\n\t\t\"谁\": {\n\t\t\t\"jp\": \"誰\",\n\t\t\t\"zht\": \"誰\",\n\t\t\t\"zhs\": \"谁\"\n\t\t},\n\t\t\"课\": {\n\t\t\t\"jp\": \"課\",\n\t\t\t\"zht\": \"課\",\n\t\t\t\"zhs\": \"课\"\n\t\t},\n\t\t\"调\": {\n\t\t\t\"jp\": \"調\",\n\t\t\t\"zht\": \"調\",\n\t\t\t\"zhs\": \"调\"\n\t\t},\n\t\t\"谈\": {\n\t\t\t\"jp\": \"談\",\n\t\t\t\"zht\": \"談\",\n\t\t\t\"zhs\": \"谈\"\n\t\t},\n\t\t\"请\": {\n\t\t\t\"jp\": \"請\",\n\t\t\t\"zht\": \"請\",\n\t\t\t\"zhs\": \"请\"\n\t\t},\n\t\t\"论\": {\n\t\t\t\"jp\": \"論\",\n\t\t\t\"zht\": \"論\",\n\t\t\t\"zhs\": \"论\"\n\t\t},\n\t\t\"谕\": {\n\t\t\t\"jp\": \"諭\",\n\t\t\t\"zht\": \"諭\",\n\t\t\t\"zhs\": \"谕\"\n\t\t},\n\t\t\"诸\": {\n\t\t\t\"jp\": \"諸\",\n\t\t\t\"zht\": \"諸\",\n\t\t\t\"zhs\": \"诸\"\n\t\t},\n\t\t\"诺\": {\n\t\t\t\"jp\": \"諾\",\n\t\t\t\"zht\": \"諾\",\n\t\t\t\"zhs\": \"诺\"\n\t\t},\n\t\t\"谋\": {\n\t\t\t\"jp\": \"謀\",\n\t\t\t\"zht\": \"謀\",\n\t\t\t\"zhs\": \"谋\"\n\t\t},\n\t\t\"谒\": {\n\t\t\t\"jp\": \"謁\",\n\t\t\t\"zht\": \"謁\",\n\t\t\t\"zhs\": \"谒\"\n\t\t},\n\t\t\"谜\": {\n\t\t\t\"jp\": \"謎\",\n\t\t\t\"zht\": \"謎\",\n\t\t\t\"zhs\": \"谜\"\n\t\t},\n\t\t\"谦\": {\n\t\t\t\"jp\": \"謙\",\n\t\t\t\"zht\": \"謙\",\n\t\t\t\"zhs\": \"谦\"\n\t\t},\n\t\t\"讲\": {\n\t\t\t\"jp\": \"講\",\n\t\t\t\"zht\": \"講\",\n\t\t\t\"zhs\": \"讲\"\n\t\t},\n\t\t\"谢\": {\n\t\t\t\"jp\": \"謝\",\n\t\t\t\"zht\": \"謝\",\n\t\t\t\"zhs\": \"谢\"\n\t\t},\n\t\t\"谣\": {\n\t\t\t\"jp\": \"謡\",\n\t\t\t\"zht\": \"謠\",\n\t\t\t\"zhs\": \"谣\"\n\t\t},\n\t\t\"谨\": {\n\t\t\t\"jp\": \"謹\",\n\t\t\t\"zht\": \"謹\",\n\t\t\t\"zhs\": \"谨\"\n\t\t},\n\t\t\"识\": {\n\t\t\t\"jp\": \"識\",\n\t\t\t\"zht\": \"識\",\n\t\t\t\"zhs\": \"识\"\n\t\t},\n\t\t\"谱\": {\n\t\t\t\"jp\": \"譜\",\n\t\t\t\"zht\": \"譜\",\n\t\t\t\"zhs\": \"谱\"\n\t\t},\n\t\t\"议\": {\n\t\t\t\"jp\": \"議\",\n\t\t\t\"zht\": \"議\",\n\t\t\t\"zhs\": \"议\"\n\t\t},\n\t\t\"让\": {\n\t\t\t\"jp\": \"譲\",\n\t\t\t\"zht\": \"讓\",\n\t\t\t\"zhs\": \"让\"\n\t\t},\n\t\t\"贝\": {\n\t\t\t\"jp\": \"貝\",\n\t\t\t\"zht\": \"貝\",\n\t\t\t\"zhs\": \"贝\"\n\t\t},\n\t\t\"贞\": {\n\t\t\t\"jp\": \"貞\",\n\t\t\t\"zht\": \"貞\",\n\t\t\t\"zhs\": \"贞\"\n\t\t},\n\t\t\"负\": {\n\t\t\t\"jp\": \"負\",\n\t\t\t\"zht\": \"負\",\n\t\t\t\"zhs\": \"负\"\n\t\t},\n\t\t\"财\": {\n\t\t\t\"jp\": \"財\",\n\t\t\t\"zht\": \"財\",\n\t\t\t\"zhs\": \"财\"\n\t\t},\n\t\t\"贡\": {\n\t\t\t\"jp\": \"貢\",\n\t\t\t\"zht\": \"貢\",\n\t\t\t\"zhs\": \"贡\"\n\t\t},\n\t\t\"贫\": {\n\t\t\t\"jp\": \"貧\",\n\t\t\t\"zht\": \"貧\",\n\t\t\t\"zhs\": \"贫\"\n\t\t},\n\t\t\"货\": {\n\t\t\t\"jp\": \"貨\",\n\t\t\t\"zht\": \"貨\",\n\t\t\t\"zhs\": \"货\"\n\t\t},\n\t\t\"贩\": {\n\t\t\t\"jp\": \"販\",\n\t\t\t\"zht\": \"販\",\n\t\t\t\"zhs\": \"贩\"\n\t\t},\n\t\t\"贪\": {\n\t\t\t\"jp\": \"貪\",\n\t\t\t\"zht\": \"貪\",\n\t\t\t\"zhs\": \"贪\"\n\t\t},\n\t\t\"责\": {\n\t\t\t\"jp\": \"責\",\n\t\t\t\"zht\": \"責\",\n\t\t\t\"zhs\": \"责\"\n\t\t},\n\t\t\"贮\": {\n\t\t\t\"jp\": \"貯\",\n\t\t\t\"zht\": \"貯\",\n\t\t\t\"zhs\": \"贮\"\n\t\t},\n\t\t\"贵\": {\n\t\t\t\"jp\": \"貴\",\n\t\t\t\"zht\": \"貴\",\n\t\t\t\"zhs\": \"贵\"\n\t\t},\n\t\t\"贷\": {\n\t\t\t\"jp\": \"貸\",\n\t\t\t\"zht\": \"貸\",\n\t\t\t\"zhs\": \"贷\"\n\t\t},\n\t\t\"费\": {\n\t\t\t\"jp\": \"費\",\n\t\t\t\"zht\": \"費\",\n\t\t\t\"zhs\": \"费\"\n\t\t},\n\t\t\"贸\": {\n\t\t\t\"jp\": \"貿\",\n\t\t\t\"zht\": \"貿\",\n\t\t\t\"zhs\": \"贸\"\n\t\t},\n\t\t\"贺\": {\n\t\t\t\"jp\": \"賀\",\n\t\t\t\"zht\": \"賀\",\n\t\t\t\"zhs\": \"贺\"\n\t\t},\n\t\t\"赁\": {\n\t\t\t\"jp\": \"賃\",\n\t\t\t\"zht\": \"賃\",\n\t\t\t\"zhs\": \"赁\"\n\t\t},\n\t\t\"贿\": {\n\t\t\t\"jp\": \"賄\",\n\t\t\t\"zht\": \"賄\",\n\t\t\t\"zhs\": \"贿\"\n\t\t},\n\t\t\"资\": {\n\t\t\t\"jp\": \"資\",\n\t\t\t\"zht\": \"資\",\n\t\t\t\"zhs\": \"资\"\n\t\t},\n\t\t\"贼\": {\n\t\t\t\"jp\": \"賊\",\n\t\t\t\"zht\": \"賊\",\n\t\t\t\"zhs\": \"贼\"\n\t\t},\n\t\t\"贱\": {\n\t\t\t\"jp\": \"賎\",\n\t\t\t\"zht\": \"賤\",\n\t\t\t\"zhs\": \"贱\"\n\t\t},\n\t\t\"赞\": {\n\t\t\t\"jp\": \"賛\",\n\t\t\t\"zht\": \"贊\",\n\t\t\t\"zhs\": \"赞\"\n\t\t},\n\t\t\"赐\": {\n\t\t\t\"jp\": \"賜\",\n\t\t\t\"zht\": \"賜\",\n\t\t\t\"zhs\": \"赐\"\n\t\t},\n\t\t\"赏\": {\n\t\t\t\"jp\": \"賞\",\n\t\t\t\"zht\": \"賞\",\n\t\t\t\"zhs\": \"赏\"\n\t\t},\n\t\t\"赔\": {\n\t\t\t\"jp\": \"賠\",\n\t\t\t\"zht\": \"賠\",\n\t\t\t\"zhs\": \"赔\"\n\t\t},\n\t\t\"贤\": {\n\t\t\t\"jp\": \"賢\",\n\t\t\t\"zht\": \"賢\",\n\t\t\t\"zhs\": \"贤\"\n\t\t},\n\t\t\"赋\": {\n\t\t\t\"jp\": \"賦\",\n\t\t\t\"zht\": \"賦\",\n\t\t\t\"zhs\": \"赋\"\n\t\t},\n\t\t\"质\": {\n\t\t\t\"jp\": \"質\",\n\t\t\t\"zht\": \"質\",\n\t\t\t\"zhs\": \"质\"\n\t\t},\n\t\t\"赖\": {\n\t\t\t\"jp\": \"頼\",\n\t\t\t\"zht\": \"賴\",\n\t\t\t\"zhs\": \"赖\"\n\t\t},\n\t\t\"赠\": {\n\t\t\t\"jp\": \"贈\",\n\t\t\t\"zht\": \"贈\",\n\t\t\t\"zhs\": \"赠\"\n\t\t},\n\t\t\"赃\": {\n\t\t\t\"jp\": \"贓\",\n\t\t\t\"zht\": \"贓\",\n\t\t\t\"zhs\": \"赃\"\n\t\t},\n\t\t\"跃\": {\n\t\t\t\"jp\": \"躍\",\n\t\t\t\"zht\": \"躍\",\n\t\t\t\"zhs\": \"跃\"\n\t\t},\n\t\t\"践\": {\n\t\t\t\"jp\": \"践\",\n\t\t\t\"zht\": \"踐\",\n\t\t\t\"zhs\": \"践\"\n\t\t},\n\t\t\"踪\": {\n\t\t\t\"jp\": \"踪\",\n\t\t\t\"zht\": \"蹤\",\n\t\t\t\"zhs\": \"踪\"\n\t\t},\n\t\t\"车\": {\n\t\t\t\"jp\": \"車\",\n\t\t\t\"zht\": \"車\",\n\t\t\t\"zhs\": \"车\"\n\t\t},\n\t\t\"轨\": {\n\t\t\t\"jp\": \"軌\",\n\t\t\t\"zht\": \"軌\",\n\t\t\t\"zhs\": \"轨\"\n\t\t},\n\t\t\"轩\": {\n\t\t\t\"jp\": \"軒\",\n\t\t\t\"zht\": \"軒\",\n\t\t\t\"zhs\": \"轩\"\n\t\t},\n\t\t\"软\": {\n\t\t\t\"jp\": \"軟\",\n\t\t\t\"zht\": \"軟\",\n\t\t\t\"zhs\": \"软\"\n\t\t},\n\t\t\"转\": {\n\t\t\t\"jp\": \"転\",\n\t\t\t\"zht\": \"轉\",\n\t\t\t\"zhs\": \"转\"\n\t\t},\n\t\t\"轴\": {\n\t\t\t\"jp\": \"軸\",\n\t\t\t\"zht\": \"軸\",\n\t\t\t\"zhs\": \"轴\"\n\t\t},\n\t\t\"轻\": {\n\t\t\t\"jp\": \"軽\",\n\t\t\t\"zht\": \"輕\",\n\t\t\t\"zhs\": \"轻\"\n\t\t},\n\t\t\"较\": {\n\t\t\t\"jp\": \"較\",\n\t\t\t\"zht\": \"較\",\n\t\t\t\"zhs\": \"较\"\n\t\t},\n\t\t\"载\": {\n\t\t\t\"jp\": \"載\",\n\t\t\t\"zht\": \"載\",\n\t\t\t\"zhs\": \"载\"\n\t\t},\n\t\t\"辉\": {\n\t\t\t\"jp\": \"輝\",\n\t\t\t\"zht\": \"輝\",\n\t\t\t\"zhs\": \"辉\"\n\t\t},\n\t\t\"辈\": {\n\t\t\t\"jp\": \"輩\",\n\t\t\t\"zht\": \"輩\",\n\t\t\t\"zhs\": \"辈\"\n\t\t},\n\t\t\"轮\": {\n\t\t\t\"jp\": \"輪\",\n\t\t\t\"zht\": \"輪\",\n\t\t\t\"zhs\": \"轮\"\n\t\t},\n\t\t\"输\": {\n\t\t\t\"jp\": \"輸\",\n\t\t\t\"zht\": \"輸\",\n\t\t\t\"zhs\": \"输\"\n\t\t},\n\t\t\"辖\": {\n\t\t\t\"jp\": \"轄\",\n\t\t\t\"zht\": \"轄\",\n\t\t\t\"zhs\": \"辖\"\n\t\t},\n\t\t\"辞\": {\n\t\t\t\"jp\": \"辞\",\n\t\t\t\"zht\": \"辭\",\n\t\t\t\"zhs\": \"辞\"\n\t\t},\n\t\t\"边\": {\n\t\t\t\"jp\": \"辺\",\n\t\t\t\"zht\": \"邊\",\n\t\t\t\"zhs\": \"边\"\n\t\t},\n\t\t\"达\": {\n\t\t\t\"jp\": \"達\",\n\t\t\t\"zht\": \"達\",\n\t\t\t\"zhs\": \"达\"\n\t\t},\n\t\t\"迁\": {\n\t\t\t\"jp\": \"遷\",\n\t\t\t\"zht\": \"遷\",\n\t\t\t\"zhs\": \"迁\"\n\t\t},\n\t\t\"过\": {\n\t\t\t\"jp\": \"過\",\n\t\t\t\"zht\": \"過\",\n\t\t\t\"zhs\": \"过\"\n\t\t},\n\t\t\"运\": {\n\t\t\t\"jp\": \"運\",\n\t\t\t\"zht\": \"運\",\n\t\t\t\"zhs\": \"运\"\n\t\t},\n\t\t\"还\": {\n\t\t\t\"jp\": \"還\",\n\t\t\t\"zht\": \"還\",\n\t\t\t\"zhs\": \"还\"\n\t\t},\n\t\t\"进\": {\n\t\t\t\"jp\": \"進\",\n\t\t\t\"zht\": \"進\",\n\t\t\t\"zhs\": \"进\"\n\t\t},\n\t\t\"远\": {\n\t\t\t\"jp\": \"遠\",\n\t\t\t\"zht\": \"遠\",\n\t\t\t\"zhs\": \"远\"\n\t\t},\n\t\t\"违\": {\n\t\t\t\"jp\": \"違\",\n\t\t\t\"zht\": \"違\",\n\t\t\t\"zhs\": \"违\"\n\t\t},\n\t\t\"连\": {\n\t\t\t\"jp\": \"連\",\n\t\t\t\"zht\": \"連\",\n\t\t\t\"zhs\": \"连\"\n\t\t},\n\t\t\"迟\": {\n\t\t\t\"jp\": \"遅\",\n\t\t\t\"zht\": \"遲\",\n\t\t\t\"zhs\": \"迟\"\n\t\t},\n\t\t\"适\": {\n\t\t\t\"jp\": \"適\",\n\t\t\t\"zht\": \"適\",\n\t\t\t\"zhs\": \"适\"\n\t\t},\n\t\t\"选\": {\n\t\t\t\"jp\": \"選\",\n\t\t\t\"zht\": \"選\",\n\t\t\t\"zhs\": \"选\"\n\t\t},\n\t\t\"递\": {\n\t\t\t\"jp\": \"逓\",\n\t\t\t\"zht\": \"遞\",\n\t\t\t\"zhs\": \"递\"\n\t\t},\n\t\t\"遗\": {\n\t\t\t\"jp\": \"遺\",\n\t\t\t\"zht\": \"遺\",\n\t\t\t\"zhs\": \"遗\"\n\t\t},\n\t\t\"遥\": {\n\t\t\t\"jp\": \"遥\",\n\t\t\t\"zht\": \"遙\",\n\t\t\t\"zhs\": \"遥\"\n\t\t},\n\t\t\"邮\": {\n\t\t\t\"jp\": \"郵\",\n\t\t\t\"zht\": \"郵\",\n\t\t\t\"zhs\": \"邮\"\n\t\t},\n\t\t\"邻\": {\n\t\t\t\"jp\": \"隣\",\n\t\t\t\"zht\": \"鄰\",\n\t\t\t\"zhs\": \"邻\"\n\t\t},\n\t\t\"醉\": {\n\t\t\t\"jp\": \"酔\",\n\t\t\t\"zht\": \"醉\",\n\t\t\t\"zhs\": \"醉\"\n\t\t},\n\t\t\"酿\": {\n\t\t\t\"jp\": \"醸\",\n\t\t\t\"zht\": \"釀\",\n\t\t\t\"zhs\": \"酿\"\n\t\t},\n\t\t\"释\": {\n\t\t\t\"jp\": \"釈\",\n\t\t\t\"zht\": \"釋\",\n\t\t\t\"zhs\": \"释\"\n\t\t},\n\t\t\"针\": {\n\t\t\t\"jp\": \"針\",\n\t\t\t\"zht\": \"針\",\n\t\t\t\"zhs\": \"针\"\n\t\t},\n\t\t\"钓\": {\n\t\t\t\"jp\": \"釣\",\n\t\t\t\"zht\": \"釣\",\n\t\t\t\"zhs\": \"钓\"\n\t\t},\n\t\t\"钝\": {\n\t\t\t\"jp\": \"鈍\",\n\t\t\t\"zht\": \"鈍\",\n\t\t\t\"zhs\": \"钝\"\n\t\t},\n\t\t\"铃\": {\n\t\t\t\"jp\": \"鈴\",\n\t\t\t\"zht\": \"鈴\",\n\t\t\t\"zhs\": \"铃\"\n\t\t},\n\t\t\"铁\": {\n\t\t\t\"jp\": \"鉄\",\n\t\t\t\"zht\": \"鐵\",\n\t\t\t\"zhs\": \"铁\"\n\t\t},\n\t\t\"铅\": {\n\t\t\t\"jp\": \"鉛\",\n\t\t\t\"zht\": \"鉛\",\n\t\t\t\"zhs\": \"铅\"\n\t\t},\n\t\t\"鉴\": {\n\t\t\t\"jp\": \"鑑\",\n\t\t\t\"zht\": \"鑑\",\n\t\t\t\"zhs\": \"鉴\"\n\t\t},\n\t\t\"银\": {\n\t\t\t\"jp\": \"銀\",\n\t\t\t\"zht\": \"銀\",\n\t\t\t\"zhs\": \"银\"\n\t\t},\n\t\t\"铳\": {\n\t\t\t\"jp\": \"銃\",\n\t\t\t\"zht\": \"銃\",\n\t\t\t\"zhs\": \"铳\"\n\t\t},\n\t\t\"铜\": {\n\t\t\t\"jp\": \"銅\",\n\t\t\t\"zht\": \"銅\",\n\t\t\t\"zhs\": \"铜\"\n\t\t},\n\t\t\"铣\": {\n\t\t\t\"jp\": \"銑\",\n\t\t\t\"zht\": \"銑\",\n\t\t\t\"zhs\": \"铣\"\n\t\t},\n\t\t\"铭\": {\n\t\t\t\"jp\": \"銘\",\n\t\t\t\"zht\": \"銘\",\n\t\t\t\"zhs\": \"铭\"\n\t\t},\n\t\t\"钱\": {\n\t\t\t\"jp\": \"銭\",\n\t\t\t\"zht\": \"錢\",\n\t\t\t\"zhs\": \"钱\"\n\t\t},\n\t\t\"锐\": {\n\t\t\t\"jp\": \"鋭\",\n\t\t\t\"zht\": \"鋭\",\n\t\t\t\"zhs\": \"锐\"\n\t\t},\n\t\t\"铸\": {\n\t\t\t\"jp\": \"鋳\",\n\t\t\t\"zht\": \"鑄\",\n\t\t\t\"zhs\": \"铸\"\n\t\t},\n\t\t\"钢\": {\n\t\t\t\"jp\": \"鋼\",\n\t\t\t\"zht\": \"鋼\",\n\t\t\t\"zhs\": \"钢\"\n\t\t},\n\t\t\"锤\": {\n\t\t\t\"jp\": \"錘\",\n\t\t\t\"zht\": \"錘\",\n\t\t\t\"zhs\": \"锤\"\n\t\t},\n\t\t\"锭\": {\n\t\t\t\"jp\": \"錠\",\n\t\t\t\"zht\": \"錠\",\n\t\t\t\"zhs\": \"锭\"\n\t\t},\n\t\t\"错\": {\n\t\t\t\"jp\": \"錯\",\n\t\t\t\"zht\": \"錯\",\n\t\t\t\"zhs\": \"错\"\n\t\t},\n\t\t\"钟\": {\n\t\t\t\"jp\": \"鍾\",\n\t\t\t\"zht\": \"鍾\",\n\t\t\t\"zhs\": \"钟\"\n\t\t},\n\t\t\"锁\": {\n\t\t\t\"jp\": \"鎖\",\n\t\t\t\"zht\": \"鎖\",\n\t\t\t\"zhs\": \"锁\"\n\t\t},\n\t\t\"镇\": {\n\t\t\t\"jp\": \"鎮\",\n\t\t\t\"zht\": \"鎮\",\n\t\t\t\"zhs\": \"镇\"\n\t\t},\n\t\t\"镜\": {\n\t\t\t\"jp\": \"鏡\",\n\t\t\t\"zht\": \"鏡\",\n\t\t\t\"zhs\": \"镜\"\n\t\t},\n\t\t\"长\": {\n\t\t\t\"jp\": \"長\",\n\t\t\t\"zht\": \"長\",\n\t\t\t\"zhs\": \"长\"\n\t\t},\n\t\t\"门\": {\n\t\t\t\"jp\": \"門\",\n\t\t\t\"zht\": \"門\",\n\t\t\t\"zhs\": \"门\"\n\t\t},\n\t\t\"闭\": {\n\t\t\t\"jp\": \"閉\",\n\t\t\t\"zht\": \"閉\",\n\t\t\t\"zhs\": \"闭\"\n\t\t},\n\t\t\"闲\": {\n\t\t\t\"jp\": \"閑\",\n\t\t\t\"zht\": \"閒\",\n\t\t\t\"zhs\": \"闲\"\n\t\t},\n\t\t\"间\": {\n\t\t\t\"jp\": \"間\",\n\t\t\t\"zht\": \"間\",\n\t\t\t\"zhs\": \"间\"\n\t\t},\n\t\t\"阁\": {\n\t\t\t\"jp\": \"閣\",\n\t\t\t\"zht\": \"閣\",\n\t\t\t\"zhs\": \"阁\"\n\t\t},\n\t\t\"阀\": {\n\t\t\t\"jp\": \"閥\",\n\t\t\t\"zht\": \"閥\",\n\t\t\t\"zhs\": \"阀\"\n\t\t},\n\t\t\"阅\": {\n\t\t\t\"jp\": \"閲\",\n\t\t\t\"zht\": \"閲\",\n\t\t\t\"zhs\": \"阅\"\n\t\t},\n\t\t\"队\": {\n\t\t\t\"jp\": \"隊\",\n\t\t\t\"zht\": \"隊\",\n\t\t\t\"zhs\": \"队\"\n\t\t},\n\t\t\"阳\": {\n\t\t\t\"jp\": \"陽\",\n\t\t\t\"zht\": \"陽\",\n\t\t\t\"zhs\": \"阳\"\n\t\t},\n\t\t\"阴\": {\n\t\t\t\"jp\": \"陰\",\n\t\t\t\"zht\": \"陰\",\n\t\t\t\"zhs\": \"阴\"\n\t\t},\n\t\t\"阵\": {\n\t\t\t\"jp\": \"陣\",\n\t\t\t\"zht\": \"陣\",\n\t\t\t\"zhs\": \"阵\"\n\t\t},\n\t\t\"阶\": {\n\t\t\t\"jp\": \"階\",\n\t\t\t\"zht\": \"階\",\n\t\t\t\"zhs\": \"阶\"\n\t\t},\n\t\t\"际\": {\n\t\t\t\"jp\": \"際\",\n\t\t\t\"zht\": \"際\",\n\t\t\t\"zhs\": \"际\"\n\t\t},\n\t\t\"陆\": {\n\t\t\t\"jp\": \"陸\",\n\t\t\t\"zht\": \"陸\",\n\t\t\t\"zhs\": \"陆\"\n\t\t},\n\t\t\"陈\": {\n\t\t\t\"jp\": \"陳\",\n\t\t\t\"zht\": \"陳\",\n\t\t\t\"zhs\": \"陈\"\n\t\t},\n\t\t\"陷\": {\n\t\t\t\"jp\": \"陥\",\n\t\t\t\"zht\": \"陷\",\n\t\t\t\"zhs\": \"陷\"\n\t\t},\n\t\t\"随\": {\n\t\t\t\"jp\": \"随\",\n\t\t\t\"zht\": \"隨\",\n\t\t\t\"zhs\": \"随\"\n\t\t},\n\t\t\"隐\": {\n\t\t\t\"jp\": \"隠\",\n\t\t\t\"zht\": \"隱\",\n\t\t\t\"zhs\": \"隐\"\n\t\t},\n\t\t\"隶\": {\n\t\t\t\"jp\": \"隷\",\n\t\t\t\"zht\": \"隸\",\n\t\t\t\"zhs\": \"隶\"\n\t\t},\n\t\t\"难\": {\n\t\t\t\"jp\": \"難\",\n\t\t\t\"zht\": \"難\",\n\t\t\t\"zhs\": \"难\"\n\t\t},\n\t\t\"雾\": {\n\t\t\t\"jp\": \"霧\",\n\t\t\t\"zht\": \"霧\",\n\t\t\t\"zhs\": \"雾\"\n\t\t},\n\t\t\"静\": {\n\t\t\t\"jp\": \"静\",\n\t\t\t\"zht\": \"靜\",\n\t\t\t\"zhs\": \"静\"\n\t\t},\n\t\t\"顶\": {\n\t\t\t\"jp\": \"頂\",\n\t\t\t\"zht\": \"頂\",\n\t\t\t\"zhs\": \"顶\"\n\t\t},\n\t\t\"项\": {\n\t\t\t\"jp\": \"項\",\n\t\t\t\"zht\": \"項\",\n\t\t\t\"zhs\": \"项\"\n\t\t},\n\t\t\"顺\": {\n\t\t\t\"jp\": \"順\",\n\t\t\t\"zht\": \"順\",\n\t\t\t\"zhs\": \"顺\"\n\t\t},\n\t\t\"顽\": {\n\t\t\t\"jp\": \"頑\",\n\t\t\t\"zht\": \"頑\",\n\t\t\t\"zhs\": \"顽\"\n\t\t},\n\t\t\"颁\": {\n\t\t\t\"jp\": \"頒\",\n\t\t\t\"zht\": \"頒\",\n\t\t\t\"zhs\": \"颁\"\n\t\t},\n\t\t\"领\": {\n\t\t\t\"jp\": \"領\",\n\t\t\t\"zht\": \"領\",\n\t\t\t\"zhs\": \"领\"\n\t\t},\n\t\t\"频\": {\n\t\t\t\"jp\": \"頻\",\n\t\t\t\"zht\": \"頻\",\n\t\t\t\"zhs\": \"频\"\n\t\t},\n\t\t\"题\": {\n\t\t\t\"jp\": \"題\",\n\t\t\t\"zht\": \"題\",\n\t\t\t\"zhs\": \"题\"\n\t\t},\n\t\t\"额\": {\n\t\t\t\"jp\": \"額\",\n\t\t\t\"zht\": \"額\",\n\t\t\t\"zhs\": \"额\"\n\t\t},\n\t\t\"颜\": {\n\t\t\t\"jp\": \"顔\",\n\t\t\t\"zht\": \"顏\",\n\t\t\t\"zhs\": \"颜\"\n\t\t},\n\t\t\"风\": {\n\t\t\t\"jp\": \"風\",\n\t\t\t\"zht\": \"風\",\n\t\t\t\"zhs\": \"风\"\n\t\t},\n\t\t\"飞\": {\n\t\t\t\"jp\": \"飛\",\n\t\t\t\"zht\": \"飛\",\n\t\t\t\"zhs\": \"飞\"\n\t\t},\n\t\t\"饥\": {\n\t\t\t\"jp\": \"飢\",\n\t\t\t\"zht\": \"饑\",\n\t\t\t\"zhs\": \"饥\"\n\t\t},\n\t\t\"饭\": {\n\t\t\t\"jp\": \"飯\",\n\t\t\t\"zht\": \"飯\",\n\t\t\t\"zhs\": \"饭\"\n\t\t},\n\t\t\"饮\": {\n\t\t\t\"jp\": \"飲\",\n\t\t\t\"zht\": \"飲\",\n\t\t\t\"zhs\": \"饮\"\n\t\t},\n\t\t\"饲\": {\n\t\t\t\"jp\": \"飼\",\n\t\t\t\"zht\": \"飼\",\n\t\t\t\"zhs\": \"饲\"\n\t\t},\n\t\t\"饱\": {\n\t\t\t\"jp\": \"飽\",\n\t\t\t\"zht\": \"飽\",\n\t\t\t\"zhs\": \"饱\"\n\t\t},\n\t\t\"饰\": {\n\t\t\t\"jp\": \"飾\",\n\t\t\t\"zht\": \"飾\",\n\t\t\t\"zhs\": \"饰\"\n\t\t},\n\t\t\"饿\": {\n\t\t\t\"jp\": \"餓\",\n\t\t\t\"zht\": \"餓\",\n\t\t\t\"zhs\": \"饿\"\n\t\t},\n\t\t\"马\": {\n\t\t\t\"jp\": \"馬\",\n\t\t\t\"zht\": \"馬\",\n\t\t\t\"zhs\": \"马\"\n\t\t},\n\t\t\"驿\": {\n\t\t\t\"jp\": \"駅\",\n\t\t\t\"zht\": \"驛\",\n\t\t\t\"zhs\": \"驿\"\n\t\t},\n\t\t\"驱\": {\n\t\t\t\"jp\": \"駆\",\n\t\t\t\"zht\": \"驅\",\n\t\t\t\"zhs\": \"驱\"\n\t\t},\n\t\t\"驻\": {\n\t\t\t\"jp\": \"駐\",\n\t\t\t\"zht\": \"駐\",\n\t\t\t\"zhs\": \"驻\"\n\t\t},\n\t\t\"骑\": {\n\t\t\t\"jp\": \"騎\",\n\t\t\t\"zht\": \"騎\",\n\t\t\t\"zhs\": \"骑\"\n\t\t},\n\t\t\"验\": {\n\t\t\t\"jp\": \"験\",\n\t\t\t\"zht\": \"驗\",\n\t\t\t\"zhs\": \"验\"\n\t\t},\n\t\t\"骚\": {\n\t\t\t\"jp\": \"騒\",\n\t\t\t\"zht\": \"騷\",\n\t\t\t\"zhs\": \"骚\"\n\t\t},\n\t\t\"驔\": {\n\t\t\t\"jp\": \"騨\",\n\t\t\t\"zht\": \"驔\",\n\t\t\t\"zhs\": \"驔\"\n\t\t},\n\t\t\"髓\": {\n\t\t\t\"jp\": \"髄\",\n\t\t\t\"zht\": \"髓\",\n\t\t\t\"zhs\": \"髓\"\n\t\t},\n\t\t\"鱼\": {\n\t\t\t\"jp\": \"魚\",\n\t\t\t\"zht\": \"魚\",\n\t\t\t\"zhs\": \"鱼\"\n\t\t},\n\t\t\"鲁\": {\n\t\t\t\"jp\": \"魯\",\n\t\t\t\"zht\": \"魯\",\n\t\t\t\"zhs\": \"鲁\"\n\t\t},\n\t\t\"鲜\": {\n\t\t\t\"jp\": \"鮮\",\n\t\t\t\"zht\": \"鮮\",\n\t\t\t\"zhs\": \"鲜\"\n\t\t},\n\t\t\"鲸\": {\n\t\t\t\"jp\": \"鯨\",\n\t\t\t\"zht\": \"鯨\",\n\t\t\t\"zhs\": \"鲸\"\n\t\t},\n\t\t\"鸟\": {\n\t\t\t\"jp\": \"鳥\",\n\t\t\t\"zht\": \"鳥\",\n\t\t\t\"zhs\": \"鸟\"\n\t\t},\n\t\t\"鸣\": {\n\t\t\t\"jp\": \"鳴\",\n\t\t\t\"zht\": \"鳴\",\n\t\t\t\"zhs\": \"鸣\"\n\t\t},\n\t\t\"麦\": {\n\t\t\t\"jp\": \"麦\",\n\t\t\t\"zht\": \"麥\",\n\t\t\t\"zhs\": \"麦\"\n\t\t},\n\t\t\"黄\": {\n\t\t\t\"jp\": \"黄\",\n\t\t\t\"zht\": \"黃\",\n\t\t\t\"zhs\": \"黄\"\n\t\t},\n\t\t\"黑\": {\n\t\t\t\"jp\": \"黒\",\n\t\t\t\"zht\": \"黑\",\n\t\t\t\"zhs\": \"黑\"\n\t\t},\n\t\t\"默\": {\n\t\t\t\"jp\": \"黙\",\n\t\t\t\"zht\": \"默\",\n\t\t\t\"zhs\": \"默\"\n\t\t},\n\t\t\"龄\": {\n\t\t\t\"jp\": \"齢\",\n\t\t\t\"zht\": \"齡\",\n\t\t\t\"zhs\": \"龄\"\n\t\t}\n\t}\n};\n\n", "\nexport const KEY_JP = 'jp' as const;\nexport const KEY_ZHT = 'zht' as const;\nexport const KEY_ZHS = 'zhs' as const;\n\nexport type IKEY_FROM_TO = typeof KEY_JP | typeof KEY_ZHT | typeof KEY_ZHS | 'jp' | 'zht' | 'zhs';\n\nexport interface ITABLE_MAIN\n{\n\t[KEY_JP]: ITABLE,\n\t[KEY_ZHT]: ITABLE,\n\t[KEY_ZHS]: ITABLE,\n}\n\nexport interface ITABLE\n{\n\t[key: string]: ITABLESUB\n}\n\nexport interface ITABLESUB\n{\n\t[KEY_JP]: string,\n\t[KEY_ZHT]: string,\n\t[KEY_ZHS]: string,\n}\n\nexport interface IOptions\n{\n\t/**\n\t * 忽略的字 or 任何支援 indexOf 的 Object\n\t */\n\tskip?,\n\t/**\n\t * safe mode\n\t */\n\tsafe?: boolean,\n}\n\nexport interface IFrom2To extends Function\n{\n\t(str, options?: IOptions): string;\n}\n\n", "import { IKEY_FROM_TO } from './types';\nimport { TABLE_SAFE, TABLE } from './table';\n\nexport function _getdata(char: string, from: IKEY_FROM_TO, to: IKEY_FROM_TO, safe?: boolean): string\n{\n\treturn (safe ? TABLE_SAFE : TABLE)[from][char]?.[to];\n}\n", "import { IFrom2To, IOptions, KEY_ZHT, KEY_ZHS, KEY_JP } from './types';\nimport { TABLE, TABLE_KEYS } from './table';\nimport { _re_cjk_conv } from 'regexp-helper/lib/cjk-conv';\nimport { UString } from 'uni-string';\nimport { _getdata } from './util';\n\n// /[\\u4E00-\\u9FFF\\u{20000}-\\u{2FA1F}]+/u\nconst REGEXP_TEST = new RegExp(_re_cjk_conv('u').source + '+', 'u');\n\nconst defaultOptions: IOptions = {\n\tsafe: true,\n};\n\nnamespace _\n{\n\texport let jp2zht: IFrom2To;\n\texport let jp2zhs: IFrom2To;\n\texport let zht2jp: IFrom2To;\n\texport let zht2zhs: IFrom2To;\n\texport let zhs2jp: IFrom2To;\n\texport let zhs2zht: IFrom2To;\n\n\tlet langs = Object.keys(TABLE);\n\n\t// @ts-ignore\n\tlangs.forEach(function (from: IKEY_FROM_TO)\n\t{\n\t\t// @ts-ignore\n\t\tlangs.forEach(function (to: IKEY_FROM_TO)\n\t\t{\n\t\t\tif (from == to) return;\n\n\t\t\t_[`${from}2${to}`] = function (str, options?: IOptions): string\n\t\t\t{\n\t\t\t\tif (!REGEXP_TEST.test(str.toString()))\n\t\t\t\t{\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\n\t\t\t\toptions = Object.assign({}, defaultOptions, options);\n\n\t\t\t\treturn UString.split(str, '')\n\t\t\t\t\t.map(function (char: string)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet c: string;\n\t\t\t\t\t\tif (c = _getdata(char, from, to, options.safe))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn char;\n\t\t\t\t\t})\n\t\t\t\t\t.join('')\n\t\t\t\t\t;\n\t\t\t} as IFrom2To;\n\t\t});\n\t});\n}\n\n/**\n * only 只將 日文漢字 => 轉為繁漢字\n * @type {IFrom2To}\n */\nexport const jp2zht = _.jp2zht as IFrom2To;\n/**\n * only 只將 日文漢字 => 轉為簡漢字\n * @type {IFrom2To}\n */\nexport const jp2zhs = _.jp2zhs as IFrom2To;\n\n/**\n * only 簡漢字 => 轉為日漢字\n * @type {IFrom2To}\n */\nexport const zhs2jp = _.zhs2jp;\n\n/**\n * only 只將 繁漢字 => 轉為日文漢字\n * @type {IFrom2To}\n */\nexport const zht2jp = _.zht2jp;\n\n/**\n * only 只將簡繁日 當中共通的 繁漢字 => 轉為簡漢字\n * 請勿作為簡繁轉換用\n * @type {IFrom2To}\n */\nexport const zht2zhs = _.zht2zhs;\n\n/**\n * only 只將簡繁日 當中共通的 簡漢字 => 轉為繁漢字\n * 請勿作為簡繁轉換用\n * @type {IFrom2To}\n */\nexport const zhs2zht = _.zhs2zht;\n\n/**\n * only 只將簡繁日 當中共通的 簡繁漢字 => 轉為日文漢字\n *\n * @alias cjk2jp\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport function zh2jp(str, options?: IOptions): string\n{\n\tif (!REGEXP_TEST.test(str.toString()))\n\t{\n\t\treturn str;\n\t}\n\n\toptions = Object.assign({}, defaultOptions, options);\n\n\treturn UString.split(str, '')\n\t\t.map(function (char: string)\n\t\t{\n\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t{\n\t\t\t\treturn char;\n\t\t\t}\n\n\t\t\tlet c: string;\n\t\t\tif (c = _getdata(char, KEY_ZHT, KEY_JP, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\telse if (c = _getdata(char, KEY_ZHS, KEY_JP, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\treturn char;\n\t\t})\n\t\t.join('')\n\t\t;\n}\n\n/**\n * only 只將簡繁日 當中共通的 簡繁漢字 => 轉為日文漢字\n *\n * @alias zh2jp\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport const cjk2jp = zh2jp;\n\n/**\n * only 只將簡繁日 當中共通的 漢字 => 轉為繁體漢字\n * 請勿作為簡繁轉換用\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport function cjk2zht(str, options?: IOptions): string\n{\n\tif (!REGEXP_TEST.test(str.toString()))\n\t{\n\t\treturn str;\n\t}\n\n\toptions = Object.assign({}, defaultOptions, options);\n\n\treturn UString.split(str, '')\n\t\t.map(function (char: string)\n\t\t{\n\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t{\n\t\t\t\treturn char;\n\t\t\t}\n\n\t\t\tlet c: string;\n\t\t\tif (c = _getdata(char, KEY_JP, KEY_ZHT, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\telse if (c = _getdata(char, KEY_ZHS, KEY_ZHT, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\treturn char;\n\t\t})\n\t\t.join('')\n\t\t;\n}\n\n/**\n * only 只將簡繁日 當中共通的 漢字 => 轉為簡體漢字\n * 請勿作為簡繁轉換用\n *\n * @param str\n * @param {IOptions} options\n * @returns {string}\n */\nexport function cjk2zhs(str, options?: IOptions): string\n{\n\tif (!REGEXP_TEST.test(str.toString()))\n\t{\n\t\treturn str;\n\t}\n\n\toptions = Object.assign({}, defaultOptions, options);\n\n\treturn UString.split(str, '')\n\t\t.map(function (char: string)\n\t\t{\n\t\t\tif (options.skip && options.skip.indexOf(char) != -1)\n\t\t\t{\n\t\t\t\treturn char;\n\t\t\t}\n\n\t\t\tlet c: string;\n\t\t\tif (c = _getdata(char, KEY_JP, KEY_ZHS, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t\telse if (c = _getdata(char, KEY_ZHT, KEY_ZHS, options.safe))\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\n\t\t\treturn char;\n\t\t})\n\t\t.join('')\n\t\t;\n}\n\nexport default exports as typeof import('./index');\n", "\n\nimport { IKanjiComparisonTable } from './types';\n\n/**\n * Code generated from @lazy-cjk/jp-table-comparison/lib/table/core.ts;\n * DO NOT EDIT.\n * @see {@link ./table/core.ts}\n */\n\nexport const TABLE: IKanjiComparisonTable = [\n\t[[\"会\"],[\"會\"],[\"会\"]],\n\t[[\"箋\"],[\"箋\"],[\"笺\"]],\n\t[[\"網\"],[\"網\"],[\"网\"]],\n\t[[\"処\"],[\"處\"],[\"处\"]],\n\t[[\"話\"],[\"話\"],[\"话\"]],\n\t[[\"駄\"],[\"馱\"],[\"驮\"]],\n\t[[\"馱\"],[\"馱\"],[\"驮\"]],\n\t[[\"万\"],[\"萬\"],[\"万\"]],\n\t[[\"与\"],[\"與\"],[\"与\"]],\n\t[[\"醜\"],[\"醜\"],[\"丑\"]],\n\t[[\"専\"],[\"專\"],[\"专\"]],\n\t[[\"業\"],[\"業\"],[\"业\"]],\n\t[[\"東\"],[\"東\"],[\"东\"]],\n\t[[\"絲\"],[\"絲\"],[\"丝\"]],\n\t[[\"糸\"],[\"絲\"],[\"丝\"]],\n\t[[\"両\"],[\"兩\"],[\"两\"]],\n\t[[\"厳\"],[\"嚴\"],[\"严\"]],\n\t[[\"並\"],[\"並\"],[\"并\"]],\n\t[[\"喪\"],[\"喪\"],[\"丧\"]],\n\t[[\"個\"],[\"個\"],[\"个\"]],\n\t[[\"豊\"],[\"豐\"],[\"丰\"]],\n\t[[\"臨\"],[\"臨\"],[\"临\"]],\n\t[[\"為\"],[\"為\"],[\"为\"]],\n\t[[\"麗\"],[\"麗\"],[\"丽\"]],\n\t[[\"挙\"],[\"舉\"],[\"举\"]],\n\t[[\"廼\"],[\"迺\"],[\"迺\"]],\n\t[[\"義\"],[\"義\"],[\"义\"]],\n\t[[\"楽\"],[\"樂\"],[\"乐\"]],\n\t[[\"乗\"],[\"乘\"],[\"乘\"]],\n\t[[\"習\"],[\"習\"],[\"习\"]],\n\t[[\"郷\"],[\"鄉\"],[\"乡\"]],\n\t[[\"書\"],[\"書\"],[\"书\"]],\n\t[[\"買\"],[\"買\"],[\"买\"]],\n\t[[\"乱\"],[\"亂\"],[\"乱\"]],\n\t[[\"乾\"],[\"乾\"],[\"干\"]],\n\t[[\"亀\"],[\"龜\"],[\"龟\"]],\n\t[[\"予\"],[\"預\"],[\"预\"]],\n\t[[\"弐\"],[\"貳\"],[\"贰\"]],\n\t[[\"雲\"],[\"雲\"],[\"云\"]],\n\t[[\"亜\"],[\"亞\"],[\"亚\"]],\n\t[[\"産\"],[\"產\"],[\"产\"]],\n\t[[\"畝\"],[\"畝\"],[\"亩\"]],\n\t[[\"親\"],[\"親\"],[\"亲\"]],\n\t[[\"億\"],[\"億\"],[\"亿\"]],\n\t[[\"僕\"],[\"僕\"],[\"仆\"]],\n\t[[\"従\"],[\"從\"],[\"从\"]],\n\t[[\"仏\"],[\"佛\"],[\"佛\"]],\n\t[[\"倉\"],[\"倉\"],[\"仓\"]],\n\t[[\"儀\"],[\"儀\"],[\"仪\"]],\n\t[[\"仮\"],[\"假\"],[\"假\"]],\n\t[[\"価\"],[\"價\"],[\"价\"]],\n\t[[\"衆\"],[\"眾\"],[\"众\"]],\n\t[[\"優\"],[\"優\"],[\"优\"]],\n\t[[\"伝\"],[\"傳\"],[\"传\"]],\n\t[[\"傘\"],[\"傘\"],[\"伞\"]],\n\t[[\"偉\"],[\"偉\"],[\"伟\"]],\n\t[[\"傷\"],[\"傷\"],[\"伤\"]],\n\t[[\"倫\"],[\"倫\"],[\"伦\"]],\n\t[[\"偽\"],[\"偽\"],[\"伪\"]],\n\t[[\"体\"],[\"體\"],[\"体\"]],\n\t[[\"余\"],[\"餘\"],[\"余\"]],\n\t[[\"来\"],[\"來\"],[\"来\"]],\n\t[[\"偵\"],[\"偵\"],[\"侦\"]],\n\t[[\"側\"],[\"側\"],[\"侧\"]],\n\t[[\"倹\"],[\"儉\"],[\"俭\"]],\n\t[[\"倶\"],[\"俱\"],[\"俱\"]],\n\t[[\"債\"],[\"債\"],[\"债\"]],\n\t[[\"傾\"],[\"傾\"],[\"倾\"]],\n\t[[\"償\"],[\"償\"],[\"偿\"]],\n\t[[\"傑\"],[\"傑\"],[\"杰\"]],\n\t[[\"備\"],[\"備\"],[\"备\"]],\n\t[[\"当\"],[\"當\"],[\"当\"]],\n\t[[\"尽\"],[\"盡\"],[\"尽\"]],\n\t[[\"児\"],[\"兒\"],[\"儿\"]],\n\t[[\"党\"],[\"黨\"],[\"党\"]],\n\t[[\"内\"],[\"內\"],[\"内\"]],\n\t[[\"関\"],[\"關\"],[\"关\"]],\n\t[[\"興\"],[\"興\"],[\"兴\"]],\n\t[[\"養\"],[\"養\"],[\"养\"]],\n\t[[\"獣\"],[\"獸\"],[\"兽\"]],\n\t[[\"円\"],[\"圓\"],[\"圆\"]],\n\t[[\"写\"],[\"寫\"],[\"写\"]],\n\t[[\"軍\"],[\"軍\"],[\"军\"]],\n\t[[\"農\"],[\"農\"],[\"农\"]],\n\t[[\"冨\"],[\"富\"],[\"富\"]],\n\t[[\"氷\"],[\"冰\"],[\"冰\"]],\n\t[[\"衝\"],[\"衝\"],[\"冲\"]],\n\t[[\"決\"],[\"決\"],[\"决\"]],\n\t[[\"凍\"],[\"凍\"],[\"冻\"]],\n\t[[\"塗\"],[\"塗\"],[\"涂\"]],\n\t[[\"凄\"],[\"淒\"],[\"凄\"]],\n\t[[\"凄\"],[\"悽\"],[\"凄\"]],\n\t[[\"准\"],[\"準\"],[\"准\"]],\n\t[[\"準\"],[\"準\"],[\"准\"]],\n\t[[\"幾\"],[\"幾\"],[\"几\"]],\n\t[[\"撃\"],[\"擊\"],[\"击\"]],\n\t[[\"画\"],[\"劃\"],[\"划\"]],\n\t[[\"画\"],[\"畫\"],[\"画\"]],\n\t[[\"則\"],[\"則\"],[\"则\"]],\n\t[[\"剛\"],[\"剛\"],[\"刚\"]],\n\t[[\"創\"],[\"創\"],[\"创\"]],\n\t[[\"別\"],[\"別\"],[\"别\"]],\n\t[[\"製\"],[\"製\"],[\"制\"]],\n\t[[\"券\"],[\"卷\"],[\"卷\"]],\n\t[[\"巻\"],[\"卷\"],[\"卷\"]],\n\t[[\"刹\"],[\"剎\"],[\"刹\"]],\n\t[[\"剤\"],[\"劑\"],[\"剂\"]],\n\t[[\"剣\"],[\"劍\"],[\"剑\"]],\n\t[[\"劇\"],[\"劇\"],[\"剧\"]],\n\t[[\"剰\"],[\"剩\"],[\"剩\"]],\n\t[[\"勧\"],[\"勸\"],[\"劝\"]],\n\t[[\"務\"],[\"務\"],[\"务\"]],\n\t[[\"動\"],[\"動\"],[\"动\"]],\n\t[[\"励\"],[\"勵\"],[\"励\"]],\n\t[[\"労\"],[\"勞\"],[\"劳\"]],\n\t[[\"効\"],[\"效\"],[null]],\n\t[[\"勢\"],[\"勢\"],[\"势\"]],\n\t[[\"勲\"],[\"勳\"],[\"勋\"]],\n\t[[\"勝\"],[\"勝\"],[\"胜\"]],\n\t[[\"区\"],[\"區\"],[\"区\"]],\n\t[[\"医\"],[\"醫\"],[\"医\"]],\n\t[[\"華\"],[\"華\"],[\"华\"]],\n\t[[\"協\"],[\"協\"],[\"协\"]],\n\t[[\"単\"],[\"單\"],[\"单\"]],\n\t[[\"売\"],[\"賣\"],[\"卖\"]],\n\t[[\"衛\"],[\"衛\"],[\"卫\"]],\n\t[[\"庁\"],[\"廳\"],[\"厅\"]],\n\t[[\"歴\"],[\"歷\"],[\"历\"]],\n\t[[\"暦\"],[\"曆\"],[\"历\"]],\n\t[[\"圧\"],[\"壓\"],[\"压\"]],\n\t[[\"県\"],[\"縣\"],[\"县\"]],\n\t[[\"参\"],[\"參\"],[\"参\"]],\n\t[[\"双\"],[\"雙\"],[\"双\"]],\n\t[[\"収\"],[\"收\"],[\"收\"]],\n\t[[\"発\"],[\"發\"],[\"发\"]],\n\t[[\"変\"],[\"變\"],[\"变\"]],\n\t[[\"畳\"],[\"疊\"],[\"叠\"]],\n\t[[\"号\"],[\"號\"],[\"号\"]],\n\t[[\"嘆\"],[\"嘆\"],[\"叹\"]],\n\t[[\"嚇\"],[\"嚇\"],[\"吓\"]],\n\t[[\"聴\"],[\"聽\"],[\"听\"]],\n\t[[\"啓\"],[\"啟\"],[\"启\"]],\n\t[[\"員\"],[\"員\"],[\"员\"]],\n\t[[\"諮\"],[\"諮\"],[\"谘\"]],\n\t[[\"鹹\"],[\"鹹\"],[\"咸\"]],\n\t[[\"響\"],[\"響\"],[\"响\"]],\n\t[[\"問\"],[\"問\"],[\"问\"]],\n\t[[\"営\"],[\"營\"],[\"营\"]],\n\t[[\"噴\"],[\"噴\"],[\"喷\"]],\n\t[[\"嘱\"],[\"囑\"],[\"嘱\"]],\n\t[[\"蘇\"],[\"蘇\"],[\"苏\"]],\n\t[[\"団\"],[\"團\"],[\"团\"]],\n\t[[\"園\"],[\"園\"],[\"园\"]],\n\t[[\"国\"],[\"國\"],[\"国\"]],\n\t[[\"囲\"],[\"圍\"],[\"围\"]],\n\t[[\"図\"],[\"圖\"],[\"图\"]],\n\t[[\"圏\"],[\"圈\"],[\"圈\"]],\n\t[[\"聖\"],[\"聖\"],[\"圣\"]],\n\t[[\"場\"],[\"場\"],[\"场\"]],\n\t[[\"壊\"],[\"壞\"],[\"坏\"]],\n\t[[\"塊\"],[\"塊\"],[\"块\"]],\n\t[[\"堅\"],[\"堅\"],[\"坚\"]],\n\t[[\"壇\"],[\"壇\"],[\"坛\"]],\n\t[[\"墳\"],[\"墳\"],[\"坟\"]],\n\t[[\"墜\"],[\"墜\"],[\"坠\"]],\n\t[[\"塁\"],[\"壘\"],[\"垒\"]],\n\t[[\"墾\"],[\"墾\"],[\"垦\"]],\n\t[[\"執\"],[\"執\"],[\"执\"]],\n\t[[\"堕\"],[\"墮\"],[\"堕\"]],\n\t[[\"報\"],[\"報\"],[\"报\"]],\n\t[[\"塩\"],[\"鹽\"],[\"盐\"]],\n\t[[\"増\"],[\"增\"],[\"增\"]],\n\t[[\"壌\"],[\"壤\"],[\"壤\"]],\n\t[[\"壮\"],[\"壯\"],[\"壮\"]],\n\t[[\"声\"],[\"聲\"],[\"声\"]],\n\t[[\"壱\"],[\"壹\"],[\"壹\"]],\n\t[[\"殻\"],[\"殻\"],[\"壳\"]],\n\t[[\"殼\"],[\"殼\"],[\"壳\"]],\n\t[[\"寿\"],[\"壽\"],[\"寿\"]],\n\t[[\"復\"],[\"復\"],[\"复\"]],\n\t[[\"複\"],[\"複\"],[\"复\"]],\n\t[[\"夢\"],[\"夢\"],[\"梦\"]],\n\t[[\"頭\"],[\"頭\"],[\"头\"]],\n\t[[\"誇\"],[\"誇\"],[\"夸\"]],\n\t[[\"奪\"],[\"奪\"],[\"夺\"]],\n\t[[\"奮\"],[\"奮\"],[\"奋\"]],\n\t[[\"奨\"],[\"獎\"],[\"奖\"]],\n\t[[\"粧\"],[\"妝\"],[\"妆\"]],\n\t[[\"婦\"],[\"婦\"],[\"妇\"]],\n\t[[\"姉\"],[\"姐\"],[\"姐\"]],\n\t[[\"姫\"],[\"姬\"],[\"姬\"]],\n\t[[\"嬢\"],[\"孃\"],[\"娘\"]],\n\t[[\"娯\"],[\"娛\"],[\"娱\"]],\n\t[[\"孫\"],[\"孫\"],[\"孙\"]],\n\t[[\"学\"],[\"學\"],[\"学\"]],\n\t[[\"寧\"],[\"寧\"],[\"宁\"]],\n\t[[\"宝\"],[\"寶\"],[\"宝\"]],\n\t[[\"実\"],[\"實\"],[\"实\"]],\n\t[[\"審\"],[\"審\"],[\"审\"]],\n\t[[\"憲\"],[\"憲\"],[\"宪\"]],\n\t[[\"宮\"],[\"宮\"],[\"宫\"]],\n\t[[\"寬\"],[\"寬\"],[\"宽\"]],\n\t[[\"賓\"],[\"賓\"],[\"宾\"]],\n\t[[\"秘\"],[\"祕\"],[\"秘\"]],\n\t[[\"寛\"],[\"寬\"],[\"宽\"]],\n\t[[\"寝\"],[\"寢\"],[\"寝\"]],\n\t[[\"対\"],[\"對\"],[\"对\"]],\n\t[[\"尋\"],[\"尋\"],[\"寻\"]],\n\t[[\"導\"],[\"導\"],[\"导\"]],\n\t[[\"将\"],[\"將\"],[\"将\"]],\n\t[[\"層\"],[\"層\"],[\"层\"]],\n\t[[\"属\"],[\"屬\"],[\"属\"]],\n\t[[\"歳\"],[\"歲\"],[\"岁\"]],\n\t[[\"島\"],[\"島\"],[\"岛\"]],\n\t[[\"巌\"],[\"巖\"],[\"巖\"]],\n\t[[\"峡\"],[\"峽\"],[\"峡\"]],\n\t[[\"険\"],[\"險\"],[\"险\"]],\n\t[[\"幣\"],[\"幣\"],[\"币\"]],\n\t[[\"帥\"],[\"帥\"],[\"帅\"]],\n\t[[\"師\"],[\"師\"],[\"师\"]],\n\t[[\"帳\"],[\"帳\"],[\"帐\"]],\n\t[[\"帶\"],[\"帶\"],[\"带\"]],\n\t[[\"帯\"],[\"帶\"],[\"带\"]],\n\t[[\"帰\"],[\"歸\"],[\"归\"]],\n\t[[\"幹\"],[\"幹\"],[\"干\"]],\n\t[[\"広\"],[\"廣\"],[\"广\"]],\n\t[[\"庄\"],[\"莊\"],[\"庄\"]],\n\t[[\"慶\"],[\"慶\"],[\"庆\"]],\n\t[[\"庫\"],[\"庫\"],[\"库\"]],\n\t[[\"応\"],[\"應\"],[\"应\"]],\n\t[[\"廃\"],[\"廢\"],[\"废\"]],\n\t[[\"開\"],[\"開\"],[\"开\"]],\n\t[[\"弁\"],[\"辨\",\"瓣\",\"辯\"],[\"辨\",\"瓣\",\"辩\"]],\n\t[[\"異\"],[\"異\"],[\"异\"]],\n\t[[\"棄\"],[\"棄\"],[\"弃\"]],\n\t[[\"弍\"],[\"貳\"],[\"贰\"]],\n\t[[\"張\"],[\"張\"],[\"张\"]],\n\t[[\"弥\"],[\"彌\"],[\"弥\"]],\n\t[[\"強\"],[\"強\"],[\"强\"]],\n\t[[\"弾\"],[\"彈\"],[\"弹\"]],\n\t[[\"録\"],[\"錄\"],[\"录\"]],\n\t[[\"彦\"],[\"彥\"],[\"彥\"]],\n\t[[\"徹\"],[\"徹\"],[\"彻\"]],\n\t[[\"徴\"],[\"徵\"],[\"征\"]],\n\t[[\"径\"],[\"徑\"],[\"径\"]],\n\t[[\"徳\"],[\"德\"],[\"德\"]],\n\t[[\"憶\"],[\"憶\"],[\"忆\"]],\n\t[[\"誌\"],[\"誌\"],[\"志\"]],\n\t[[\"憂\"],[\"憂\"],[\"忧\"]],\n\t[[\"懐\"],[\"懷\"],[\"怀\"]],\n\t[[\"態\"],[\"態\"],[\"态\"]],\n\t[[\"総\"],[\"總\"],[\"总\"]],\n\t[[\"恒\"],[\"恆\"],[\"恒\"]],\n\t[[\"恋\"],[\"戀\"],[\"恋\"]],\n\t[[\"懇\"],[\"懇\"],[\"恳\"]],\n\t[[\"恵\"],[\"惠\"],[\"惠\"]],\n\t[[\"悪\"],[\"惡\"],[\"恶\"]],\n\t[[\"悩\"],[\"惱\"],[\"恼\"]],\n\t[[\"悦\"],[\"悅\"],[\"悅\"]],\n\t[[\"懸\"],[\"懸\"],[\"悬\"]],\n\t[[\"驚\"],[\"驚\"],[\"惊\"]],\n\t[[\"惨\"],[\"慘\"],[\"惨\"]],\n\t[[\"懲\"],[\"懲\"],[\"惩\"]],\n\t[[\"愛\"],[\"愛\"],[\"爱\"]],\n\t[[\"憤\"],[\"憤\"],[\"愤\"]],\n\t[[\"願\"],[\"願\"],[\"愿\"]],\n\t[[\"慮\"],[\"慮\"],[\"虑\"]],\n\t[[\"戯\"],[\"戲\"],[\"戏\"]],\n\t[[\"戦\"],[\"戰\"],[\"战\"]],\n\t[[\"戸\"],[\"戶\"],[\"户\"]],\n\t[[\"払\"],[\"拂\"],[\"拂\"]],\n\t[[\"拡\"],[\"擴\"],[\"扩\"]],\n\t[[\"掃\"],[\"掃\"],[\"扫\"]],\n\t[[\"揚\"],[\"揚\"],[\"扬\"]],\n\t[[\"抜\"],[\"拔\"],[null]],\n\t[[\"択\"],[\"擇\"],[\"择\"]],\n\t[[\"護\"],[\"護\"],[\"护\"]],\n\t[[\"担\"],[\"擔\"],[\"担\"]],\n\t[[\"拝\"],[\"拜\"],[\"拜\"]],\n\t[[\"擬\"],[\"擬\"],[\"拟\"]],\n\t[[\"拠\"],[\"據\"],[\"据\"]],\n\t[[\"擁\"],[\"擁\"],[\"拥\"]],\n\t[[\"挟\"],[\"挾\"],[\"挟\"]],\n\t[[\"揮\"],[\"揮\"],[\"挥\"]],\n\t[[\"揷\"],[\"插\"],[\"插\"]],\n\t[[\"挿\"],[\"插\"],[\"插\"]],\n\t[[\"損\"],[\"損\"],[\"损\"]],\n\t[[\"捨\"],[\"捨\"],[\"舍\"]],\n\t[[\"掲\"],[\"揭\"],[\"揭\"]],\n\t[[\"掴\"],[\"摑\"],[\"掴\"]],\n\t[[\"揺\"],[\"搖\"],[\"摇\"]],\n\t[[\"摂\"],[\"攝\"],[\"摄\"]],\n\t[[\"撮\"],[\"攝\"],[\"摄\"]],\n\t[[\"敵\"],[\"敵\"],[\"敌\"]],\n\t[[\"敗\"],[\"敗\"],[\"败\"]],\n\t[[\"数\"],[\"數\"],[\"数\"]],\n\t[[\"斉\"],[\"齊\"],[\"齐\"]],\n\t[[\"斎\"],[\"齋\"],[\"斋\"]],\n\t[[\"闘\"],[\"鬥\"],[\"斗\"]],\n\t[[\"鬪\"],[\"鬥\"],[\"斗\"]],\n\t[[\"断\"],[\"斷\"],[\"断\"]],\n\t[[\"旧\"],[\"舊\"],[\"旧\"]],\n\t[[\"時\"],[\"時\"],[\"时\"]],\n\t[[\"曇\"],[\"曇\"],[\"昙\"]],\n\t[[\"昼\"],[\"晝\"],[\"昼\"]],\n\t[[\"顕\"],[\"顯\"],[\"显\"]],\n\t[[\"暁\"],[\"曉\"],[\"晓\"]],\n\t[[\"晩\"],[\"晚\"],[\"晚\"]],\n\t[[\"暫\"],[\"暫\"],[\"暂\"]],\n\t[[\"曽\"],[\"曾\"],[\"曾\"]],\n\t[[\"術\"],[\"術\"],[\"术\"]],\n\t[[\"樸\"],[\"樸\"],[\"朴\"]],\n\t[[\"機\"],[\"機\"],[\"机\"]],\n\t[[\"殺\"],[\"殺\"],[\"杀\"]],\n\t[[\"雑\"],[\"雜\"],[\"杂\"]],\n\t[[\"権\"],[\"權\"],[\"权\"]],\n\t[[\"条\"],[\"條\"],[\"条\"]],\n\t[[\"極\"],[\"極\"],[\"极\"]],\n\t[[\"枢\"],[\"樞\"],[\"枢\"]],\n\t[[\"槍\"],[\"槍\"],[\"枪\"]],\n\t[[\"査\"],[\"查\"],[\"查\"]],\n\t[[\"栄\"],[\"榮\"],[\"荣\"]],\n\t[[\"標\"],[\"標\"],[\"标\"]],\n\t[[\"桟\"],[\"棧\"],[\"栈\"]],\n\t[[\"棟\"],[\"棟\"],[\"栋\"]],\n\t[[\"欄\"],[\"欄\"],[\"栏\"]],\n\t[[\"樹\"],[\"樹\"],[\"树\"]],\n\t[[\"様\"],[\"樣\"],[\"样\"]],\n\t[[\"桜\"],[\"櫻\"],[\"樱\"]],\n\t[[\"橋\"],[\"橋\"],[\"桥\"]],\n\t[[\"検\"],[\"檢\"],[\"检\"]],\n\t[[\"楼\"],[\"樓\"],[\"楼\"]],\n\t[[\"歓\"],[\"歡\"],[\"欢\"]],\n\t[[\"欧\"],[\"歐\"],[\"欧\"]],\n\t[[\"歩\"],[\"步\"],[\"步\"]],\n\t[[\"歯\"],[\"齒\"],[\"齿\"]],\n\t[[\"残\"],[\"殘\"],[\"残\"]],\n\t[[\"殴\"],[\"毆\"],[\"殴\"]],\n\t[[\"気\"],[\"氣\"],[\"气\"]],\n\t[[\"漢\"],[\"漢\"],[\"汉\"]],\n\t[[\"湯\"],[\"湯\"],[\"汤\"]],\n\t[[\"溝\"],[\"溝\"],[\"沟\"]],\n\t[[\"沢\"],[\"澤\"],[\"泽\"]],\n\t[[\"涙\"],[\"淚\"],[\"泪\"]],\n\t[[\"滝\"],[\"瀧\"],[\"泷\"]],\n\t[[\"潔\"],[\"潔\"],[\"洁\"]],\n\t[[\"浅\"],[\"淺\"],[\"浅\"]],\n\t[[\"濁\"],[\"濁\"],[\"浊\"]],\n\t[[\"測\"],[\"測\"],[\"测\"]],\n\t[[\"済\"],[\"濟\"],[\"济\"]],\n\t[[\"濃\"],[\"濃\"],[\"浓\"]],\n\t[[\"浜\"],[\"濱\"],[\"滨\"]],\n\t[[\"渋\"],[\"涉\",\"澀\"],[\"涉\",\"涩\"]],\n\t[[\"渦\"],[\"渦\"],[\"涡\"]],\n\t[[\"潤\"],[\"潤\"],[\"润\"]],\n\t[[\"漬\"],[\"漬\"],[\"渍\"]],\n\t[[\"漸\"],[\"漸\"],[\"渐\"]],\n\t[[\"渓\"],[\"溪\"],[\"溪\"]],\n\t[[\"漁\"],[\"漁\"],[\"渔\"]],\n\t[[\"湾\"],[\"灣\"],[\"湾\"]],\n\t[[\"湿\"],[\"濕\"],[\"湿\"]],\n\t[[\"満\"],[\"滿\"],[\"满\"]],\n\t[[\"滅\"],[\"滅\"],[\"灭\"]],\n\t[[\"滞\"],[\"滯\"],[\"滞\"]],\n\t[[\"濫\"],[\"濫\"],[\"滥\"]],\n\t[[\"瀬\"],[\"瀨\"],[\"濑\"]],\n\t[[\"灯\"],[\"燈\"],[\"灯\"]],\n\t[[\"霊\"],[\"靈\"],[\"灵\"]],\n\t[[\"炉\"],[\"爐\"],[\"炉\"]],\n\t[[\"点\"],[\"點\"],[\"点\"]],\n\t[[\"錬\"],[\"鍊\"],[\"炼\"]],\n\t[[\"練\"],[\"練\"],[\"练\"]],\n\t[[\"煙\"],[\"煙\"],[\"烟\"]],\n\t[[\"煩\"],[\"煩\"],[\"烦\"]],\n\t[[\"焼\"],[\"燒\"],[\"烧\"]],\n\t[[\"熱\"],[\"熱\"],[\"热\"]],\n\t[[\"焔\"],[\"焰\"],[\"焰\"]],\n\t[[\"鍛\"],[\"鍛\"],[\"锻\"]],\n\t[[\"犠\"],[\"犧\"],[\"牺\"]],\n\t[[\"状\"],[\"狀\"],[\"状\"]],\n\t[[\"猶\"],[\"猶\"],[\"犹\"]],\n\t[[\"独\"],[\"獨\"],[\"独\"]],\n\t[[\"狭\"],[\"狹\"],[\"狭\"]],\n\t[[\"獄\"],[\"獄\"],[\"狱\"]],\n\t[[\"猟\"],[\"獵\"],[\"猎\"]],\n\t[[\"猫\"],[\"貓\"],[\"猫\"]],\n\t[[\"献\"],[\"獻\"],[\"献\"]],\n\t[[\"獲\"],[\"獲\"],[\"获\"]],\n\t[[\"穫\"],[\"穫\"],[\"获\"]],\n\t[[\"環\"],[\"環\"],[\"环\"]],\n\t[[\"現\"],[\"現\"],[\"现\"]],\n\t[[\"璽\"],[\"璽\"],[\"玺\"]],\n\t[[\"甦\"],[\"甦\"],[\"苏\"]],\n\t[[\"電\"],[\"電\"],[\"电\"]],\n\t[[\"療\"],[\"療\"],[\"疗\"]],\n\t[[\"監\"],[\"監\"],[\"监\"]],\n\t[[\"蓋\"],[\"蓋\"],[\"盖\"]],\n\t[[\"盤\"],[\"盤\"],[\"盘\"]],\n\t[[\"視\"],[\"視\"],[\"视\"]],\n\t[[\"着\"],[\"著\"],[\"著\"]],\n\t[[\"矯\"],[\"矯\"],[\"矫\"]],\n\t[[\"鉱\"],[\"礦\"],[\"矿\"]],\n\t[[\"砕\"],[\"碎\"],[\"碎\"]],\n\t[[\"礎\"],[\"礎\"],[\"础\"]],\n\t[[\"確\"],[\"確\"],[\"确\"]],\n\t[[\"礼\"],[\"禮\"],[\"礼\"]],\n\t[[\"禍\"],[\"禍\"],[\"祸\"]],\n\t[[\"禅\"],[\"禪\"],[\"禅\"]],\n\t[[\"離\"],[\"離\"],[\"离\"]],\n\t[[\"種\"],[\"種\"],[\"种\"]],\n\t[[\"積\"],[\"積\"],[\"积\"]],\n\t[[\"称\"],[\"稱\"],[\"称\"]],\n\t[[\"稲\"],[\"稻\"],[\"稻\"]],\n\t[[\"穏\"],[\"穩\"],[\"稳\"]],\n\t[[\"穀\"],[\"穀\"],[\"谷\"]],\n\t[[\"穂\"],[\"穗\"],[\"穗\"]],\n\t[[\"窮\"],[\"窮\"],[\"穷\"]],\n\t[[\"窃\"],[\"竊\"],[\"窃\"]],\n\t[[\"窓\"],[\"窗\"],[\"窗\"]],\n\t[[\"竜\"],[\"龍\"],[\"龙\"]],\n\t[[\"競\"],[\"競\"],[\"竞\"]],\n\t[[\"篤\"],[\"篤\"],[\"笃\"]],\n\t[[\"筆\"],[\"筆\"],[\"笔\"]],\n\t[[\"築\"],[\"築\"],[\"筑\"]],\n\t[[\"簡\"],[\"簡\"],[\"简\"]],\n\t[[\"箇\"],[\"個\"],[\"个\"]],\n\t[[\"節\"],[\"節\"],[\"节\"]],\n\t[[\"範\"],[\"範\"],[\"范\"]],\n\t[[\"類\"],[\"類\"],[\"类\"]],\n\t[[\"粋\"],[\"粹\"],[\"粹\"]],\n\t[[\"粛\"],[\"肅\"],[\"肃\"]],\n\t[[\"糧\"],[\"糧\"],[\"粮\"]],\n\t[[\"糾\"],[\"糾\"],[\"纠\"]],\n\t[[\"紀\"],[\"紀\"],[\"纪\"]],\n\t[[\"約\"],[\"約\"],[\"约\"]],\n\t[[\"紅\"],[\"紅\"],[\"红\"]],\n\t[[\"紋\"],[\"紋\"],[\"纹\"]],\n\t[[\"納\"],[\"納\"],[\"纳\"]],\n\t[[\"純\"],[\"純\"],[\"纯\"]],\n\t[[\"紙\"],[\"紙\"],[\"纸\"]],\n\t[[\"級\"],[\"級\"],[\"级\"]],\n\t[[\"紛\"],[\"紛\"],[\"纷\"]],\n\t[[\"紡\"],[\"紡\"],[\"纺\"]],\n\t[[\"緊\"],[\"緊\"],[\"紧\"]],\n\t[[\"細\"],[\"細\"],[\"细\"]],\n\t[[\"紳\"],[\"紳\"],[\"绅\"]],\n\t[[\"紹\"],[\"紹\"],[\"绍\"]],\n\t[[\"紺\"],[\"紺\"],[\"绀\"]],\n\t[[\"終\"],[\"終\"],[\"终\"]],\n\t[[\"組\"],[\"組\"],[\"组\"]],\n\t[[\"経\"],[\"經\"],[\"经\"]],\n\t[[\"結\"],[\"結\"],[\"结\"]],\n\t[[\"絶\"],[\"絶\"],[\"绝\"]],\n\t[[\"絶\"],[\"絕\"],[\"绝\"]],\n\t[[\"絞\"],[\"絞\"],[\"绞\"]],\n\t[[\"絡\"],[\"絡\"],[\"络\"]],\n\t[[\"給\"],[\"給\"],[\"给\"]],\n\t[[\"統\"],[\"統\"],[\"统\"]],\n\t[[\"絵\"],[\"繪\"],[\"绘\"]],\n\t[[\"絹\"],[\"絹\"],[\"绢\"]],\n\t[[\"継\"],[\"繼\"],[\"继\"]],\n\t[[\"続\"],[\"續\"],[\"续\"]],\n\t[[\"緑\"],[\"綠\"],[\"绿\"]],\n\t[[\"線\"],[\"線\"],[\"线\"]],\n\t[[\"維\"],[\"維\"],[\"维\"]],\n\t[[\"綱\"],[\"綱\"],[\"纲\"]],\n\t[[\"綿\"],[\"綿\"],[\"绵\"]],\n\t[[\"緒\"],[\"緒\"],[\"绪\"]],\n\t[[\"締\"],[\"締\"],[\"缔\"]],\n\t[[\"縁\"],[\"緣\"],[\"缘\"]],\n\t[[\"編\"],[\"編\"],[\"编\"]],\n\t[[\"緩\"],[\"緩\"],[\"缓\"]],\n\t[[\"緯\"],[\"緯\"],[\"纬\"]],\n\t[[\"縄\"],[\"繩\"],[\"绳\"]],\n\t[[\"縛\"],[\"縛\"],[\"缚\"]],\n\t[[\"縦\"],[\"縱\"],[\"纵\"]],\n\t[[\"縫\"],[\"縫\"],[\"缝\"]],\n\t[[\"縮\"],[\"縮\"],[\"缩\"]],\n\t[[\"繊\"],[\"纖\"],[\"纤\"]],\n\t[[\"績\"],[\"績\"],[\"绩\"]],\n\t[[\"織\"],[\"織\"],[\"织\"]],\n\t[[\"繕\"],[\"繕\"],[\"缮\"]],\n\t[[\"繭\"],[\"繭\"],[\"茧\"]],\n\t[[\"繰\"],[\"繰\"],[\"缲\"]],\n\t[[\"缶\"],[\"罐\"],[\"罐\"]],\n\t[[\"鉢\"],[\"鉢\"],[\"钵\"]],\n\t[[\"羅\"],[\"羅\"],[\"罗\"]],\n\t[[\"罸\"],[\"罰\"],[\"罚\"]],\n\t[[\"罷\"],[\"罷\"],[\"罢\"]],\n\t[[\"罵\"],[\"罵\"],[\"骂\"]],\n\t[[\"職\"],[\"職\"],[\"职\"]],\n\t[[\"聞\"],[\"聞\"],[\"闻\"]],\n\t[[\"聡\"],[\"聰\"],[\"聪\"]],\n\t[[\"腸\"],[\"腸\"],[\"肠\"]],\n\t[[\"膚\"],[\"膚\"],[\"肤\"]],\n\t[[\"脹\"],[\"脹\"],[\"胀\"]],\n\t[[\"脅\"],[\"脅\"],[\"胁\"]],\n\t[[\"胆\"],[\"膽\"],[\"胆\"]],\n\t[[\"臓\"],[\"臟\"],[\"脏\"]],\n\t[[\"脳\"],[\"腦\"],[\"脑\"]],\n\t[[\"脚\"],[\"腳\"],[\"脚\"]],\n\t[[\"騰\"],[\"騰\"],[\"腾\"]],\n\t[[\"舗\"],[\"舖\"],[\"铺\"]],\n\t[[\"館\"],[\"館\"],[\"馆\"]],\n\t[[\"艦\"],[\"艦\"],[\"舰\"]],\n\t[[\"芸\"],[\"藝\"],[\"艺\"]],\n\t[[\"茎\"],[\"莖\"],[\"茎\"]],\n\t[[\"薦\"],[\"薦\"],[\"荐\"]],\n\t[[\"荘\"],[\"莊\"],[\"庄\"]],\n\t[[\"薬\"],[\"藥\"],[\"药\"]],\n\t[[\"蛍\"],[\"螢\"],[\"萤\"]],\n\t[[\"蒋\"],[\"蔣\"],[\"蒋\"]],\n\t[[\"蔵\"],[\"藏\"],[\"藏\"]],\n\t[[\"虜\"],[\"虜\"],[\"虏\"]],\n\t[[\"虚\"],[\"虛\"],[\"虚\"]],\n\t[[\"虫\"],[\"蟲\"],[\"虫\"]],\n\t[[\"蝕\"],[\"蝕\"],[\"蚀\"]],\n\t[[\"蚕\"],[\"蠶\"],[\"蚕\"]],\n\t[[\"蛮\"],[\"蠻\"],[\"蛮\"]],\n\t[[\"補\"],[\"補\"],[\"补\"]],\n\t[[\"襲\"],[\"襲\"],[\"袭\"]],\n\t[[\"装\"],[\"裝\"],[\"装\"]],\n\t[[\"裏\"],[\"裡\"],[\"里\"]],\n\t[[\"覇\"],[\"霸\"],[\"霸\"]],\n\t[[\"見\"],[\"見\"],[\"见\"]],\n\t[[\"観\"],[\"觀\"],[\"观\"]],\n\t[[\"規\"],[\"規\"],[\"规\"]],\n\t[[\"覚\"],[\"覺\"],[\"觉\"]],\n\t[[\"覧\"],[\"覽\"],[\"览\"]],\n\t[[\"触\"],[\"觸\"],[\"触\"]],\n\t[[\"訂\"],[\"訂\"],[\"订\"]],\n\t[[\"計\"],[\"計\"],[\"计\"]],\n\t[[\"討\"],[\"討\"],[\"讨\"]],\n\t[[\"訓\"],[\"訓\"],[\"训\"]],\n\t[[\"記\"],[\"記\"],[\"记\"]],\n\t[[\"訟\"],[\"訟\"],[\"讼\"]],\n\t[[\"訪\"],[\"訪\"],[\"访\"]],\n\t[[\"設\"],[\"設\"],[\"设\"]],\n\t[[\"許\"],[\"許\"],[\"许\"]],\n\t[[\"訳\"],[\"譯\"],[\"译\"]],\n\t[[\"訴\"],[\"訴\"],[\"诉\"]],\n\t[[\"診\"],[\"診\"],[\"诊\"]],\n\t[[\"証\"],[\"證\"],[\"证\"]],\n\t[[\"詐\"],[\"詐\"],[\"诈\"]],\n\t[[\"詔\"],[\"詔\"],[\"诏\"]],\n\t[[\"評\"],[\"評\"],[\"评\"]],\n\t[[\"詛\"],[\"詛\"],[\"诅\"]],\n\t[[\"詞\"],[\"詞\"],[\"词\"]],\n\t[[\"試\"],[\"試\"],[\"试\"]],\n\t[[\"詩\"],[\"詩\"],[\"诗\"]],\n\t[[\"詰\"],[\"詰\"],[\"诘\"]],\n\t[[\"該\"],[\"該\"],[\"该\"]],\n\t[[\"詳\"],[\"詳\"],[\"详\"]],\n\t[[\"誉\"],[\"譽\"],[\"誉\"]],\n\t[[\"謄\"],[\"謄\"],[\"誊\"]],\n\t[[\"認\"],[\"認\"],[\"认\"]],\n\t[[\"誕\"],[\"誕\"],[\"诞\"]],\n\t[[\"誘\"],[\"誘\"],[\"诱\"]],\n\t[[\"語\"],[\"語\"],[\"语\"]],\n\t[[\"誠\"],[\"誠\"],[\"诚\"]],\n\t[[\"誤\"],[\"誤\"],[\"误\"]],\n\t[[\"説\"],[\"說\"],[\"说\"]],\n\t[[\"読\"],[\"讀\"],[\"读\"]],\n\t[[\"誰\"],[\"誰\"],[\"谁\"]],\n\t[[\"課\"],[\"課\"],[\"课\"]],\n\t[[\"調\"],[\"調\"],[\"调\"]],\n\t[[\"談\"],[\"談\"],[\"谈\"]],\n\t[[\"請\"],[\"請\"],[\"请\"]],\n\t[[\"論\"],[\"論\"],[\"论\"]],\n\t[[\"諭\"],[\"諭\"],[\"谕\"]],\n\t[[\"諸\"],[\"諸\"],[\"诸\"]],\n\t[[\"諾\"],[\"諾\"],[\"诺\"]],\n\t[[\"謀\"],[\"謀\"],[\"谋\"]],\n\t[[\"謁\"],[\"謁\"],[\"谒\"]],\n\t[[\"謎\"],[\"謎\"],[\"谜\"]],\n\t[[\"謙\"],[\"謙\"],[\"谦\"]],\n\t[[\"講\"],[\"講\"],[\"讲\"]],\n\t[[\"謝\"],[\"謝\"],[\"谢\"]],\n\t[[\"謡\"],[\"謠\"],[\"谣\"]],\n\t[[\"謹\"],[\"謹\"],[\"谨\"]],\n\t[[\"識\"],[\"識\"],[\"识\"]],\n\t[[\"譜\"],[\"譜\"],[\"谱\"]],\n\t[[\"議\"],[\"議\"],[\"议\"]],\n\t[[\"譲\"],[\"讓\"],[\"让\"]],\n\t[[\"貝\"],[\"貝\"],[\"贝\"]],\n\t[[\"貞\"],[\"貞\"],[\"贞\"]],\n\t[[\"負\"],[\"負\"],[\"负\"]],\n\t[[\"財\"],[\"財\"],[\"财\"]],\n\t[[\"貢\"],[\"貢\"],[\"贡\"]],\n\t[[\"貧\"],[\"貧\"],[\"贫\"]],\n\t[[\"貨\"],[\"貨\"],[\"货\"]],\n\t[[\"販\"],[\"販\"],[\"贩\"]],\n\t[[\"貪\"],[\"貪\"],[\"贪\"]],\n\t[[\"責\"],[\"責\"],[\"责\"]],\n\t[[\"貯\"],[\"貯\"],[\"贮\"]],\n\t[[\"貴\"],[\"貴\"],[\"贵\"]],\n\t[[\"貸\"],[\"貸\"],[\"贷\"]],\n\t[[\"費\"],[\"費\"],[\"费\"]],\n\t[[\"貿\"],[\"貿\"],[\"贸\"]],\n\t[[\"賀\"],[\"賀\"],[\"贺\"]],\n\t[[\"賃\"],[\"賃\"],[\"赁\"]],\n\t[[\"賄\"],[\"賄\"],[\"贿\"]],\n\t[[\"資\"],[\"資\"],[\"资\"]],\n\t[[\"賊\"],[\"賊\"],[\"贼\"]],\n\t[[\"賎\"],[\"賤\"],[\"贱\"]],\n\t[[\"賛\"],[\"贊\"],[\"赞\"]],\n\t[[\"賜\"],[\"賜\"],[\"赐\"]],\n\t[[\"賞\"],[\"賞\"],[\"赏\"]],\n\t[[\"賠\"],[\"賠\"],[\"赔\"]],\n\t[[\"賢\"],[\"賢\"],[\"贤\"]],\n\t[[\"賦\"],[\"賦\"],[\"赋\"]],\n\t[[\"質\"],[\"質\"],[\"质\"]],\n\t[[\"頼\"],[\"賴\"],[\"赖\"]],\n\t[[\"贈\"],[\"贈\"],[\"赠\"]],\n\t[[\"贓\"],[\"贓\"],[\"赃\"]],\n\t[[\"躍\"],[\"躍\"],[\"跃\"]],\n\t[[\"践\"],[\"踐\"],[\"践\"]],\n\t[[\"踪\"],[\"蹤\"],[\"踪\"]],\n\t[[\"車\"],[\"車\"],[\"车\"]],\n\t[[\"軌\"],[\"軌\"],[\"轨\"]],\n\t[[\"軒\"],[\"軒\"],[\"轩\"]],\n\t[[\"軟\"],[\"軟\"],[\"软\"]],\n\t[[\"転\"],[\"轉\"],[\"转\"]],\n\t[[\"軸\"],[\"軸\"],[\"轴\"]],\n\t[[\"軽\"],[\"輕\"],[\"轻\"]],\n\t[[\"較\"],[\"較\"],[\"较\"]],\n\t[[\"載\"],[\"載\"],[\"载\"]],\n\t[[\"輝\"],[\"輝\"],[\"辉\"]],\n\t[[\"輩\"],[\"輩\"],[\"辈\"]],\n\t[[\"輪\"],[\"輪\"],[\"轮\"]],\n\t[[\"輸\"],[\"輸\"],[\"输\"]],\n\t[[\"轄\"],[\"轄\"],[\"辖\"]],\n\t[[\"辞\"],[\"辭\"],[\"辞\"]],\n\t[[\"辺\"],[\"邊\"],[\"边\"]],\n\t[[\"達\"],[\"達\"],[\"达\"]],\n\t[[\"遷\"],[\"遷\"],[\"迁\"]],\n\t[[\"過\"],[\"過\"],[\"过\"]],\n\t[[\"運\"],[\"運\"],[\"运\"]],\n\t[[\"還\"],[\"還\"],[\"还\"]],\n\t[[\"進\"],[\"進\"],[\"进\"]],\n\t[[\"遠\"],[\"遠\"],[\"远\"]],\n\t[[\"違\"],[\"違\"],[\"违\"]],\n\t[[\"連\"],[\"連\"],[\"连\"]],\n\t[[\"遅\"],[\"遲\"],[\"迟\"]],\n\t[[\"適\"],[\"適\"],[\"适\"]],\n\t[[\"選\"],[\"選\"],[\"选\"]],\n\t[[\"逓\"],[\"遞\"],[\"递\"]],\n\t[[\"遺\"],[\"遺\"],[\"遗\"]],\n\t[[\"遥\"],[\"遙\"],[\"遥\"]],\n\t[[\"郵\"],[\"郵\"],[\"邮\"]],\n\t[[\"隣\"],[\"鄰\"],[\"邻\"]],\n\t[[\"酔\"],[\"醉\"],[\"醉\"]],\n\t[[\"醸\"],[\"釀\"],[\"酿\"]],\n\t[[\"釈\"],[\"釋\"],[\"释\"]],\n\t[[\"針\"],[\"針\"],[\"针\"]],\n\t[[\"釣\"],[\"釣\"],[\"钓\"]],\n\t[[\"鈍\"],[\"鈍\"],[\"钝\"]],\n\t[[\"鈴\"],[\"鈴\"],[\"铃\"]],\n\t[[\"鉄\"],[\"鐵\"],[\"铁\"]],\n\t[[\"鉛\"],[\"鉛\"],[\"铅\"]],\n\t[[\"鑑\"],[\"鑑\"],[\"鉴\"]],\n\t[[\"銀\"],[\"銀\"],[\"银\"]],\n\t[[\"銃\"],[\"銃\"],[\"铳\"]],\n\t[[\"銅\"],[\"銅\"],[\"铜\"]],\n\t[[\"銑\"],[\"銑\"],[\"铣\"]],\n\t[[\"銘\"],[\"銘\"],[\"铭\"]],\n\t[[\"銭\"],[\"錢\"],[\"钱\"]],\n\t[[\"鋭\"],[\"鋭\"],[\"锐\"]],\n\t[[\"鋳\"],[\"鑄\"],[\"铸\"]],\n\t[[\"鋼\"],[\"鋼\"],[\"钢\"]],\n\t[[\"錘\"],[\"錘\"],[\"锤\"]],\n\t[[\"錠\"],[\"錠\"],[\"锭\"]],\n\t[[\"錯\"],[\"錯\"],[\"错\"]],\n\t[[\"鍾\"],[\"鍾\"],[\"钟\"]],\n\t[[\"鎖\"],[\"鎖\"],[\"锁\"]],\n\t[[\"鎮\"],[\"鎮\"],[\"镇\"]],\n\t[[\"鏡\"],[\"鏡\"],[\"镜\"]],\n\t[[\"長\"],[\"長\"],[\"长\"]],\n\t[[\"門\"],[\"門\"],[\"门\"]],\n\t[[\"閉\"],[\"閉\"],[\"闭\"]],\n\t[[\"閑\"],[\"閒\"],[\"闲\"]],\n\t[[\"間\"],[\"間\"],[\"间\"]],\n\t[[\"閣\"],[\"閣\"],[\"阁\"]],\n\t[[\"閥\"],[\"閥\"],[\"阀\"]],\n\t[[\"閲\"],[\"閲\"],[\"阅\"]],\n\t[[\"隊\"],[\"隊\"],[\"队\"]],\n\t[[\"陽\"],[\"陽\"],[\"阳\"]],\n\t[[\"陰\"],[\"陰\"],[\"阴\"]],\n\t[[\"陣\"],[\"陣\"],[\"阵\"]],\n\t[[\"階\"],[\"階\"],[\"阶\"]],\n\t[[\"際\"],[\"際\"],[\"际\"]],\n\t[[\"陸\"],[\"陸\"],[\"陆\"]],\n\t[[\"陳\"],[\"陳\"],[\"陈\"]],\n\t[[\"陥\"],[\"陷\"],[\"陷\"]],\n\t[[\"随\"],[\"隨\"],[\"随\"]],\n\t[[\"隠\"],[\"隱\"],[\"隐\"]],\n\t[[\"隷\"],[\"隷\"],[\"隶\"]],\n\t[[\"隷\"],[\"隸\"],[\"隶\"]],\n\t[[\"難\"],[\"難\"],[\"难\"]],\n\t[[\"鶏\"],[\"雞\"],[\"鸡\"]],\n\t[[\"鶏\"],[\"鷄\"],[\"鸡\"]],\n\t[[\"霧\"],[\"霧\"],[\"雾\"]],\n\t[[\"静\"],[\"靜\"],[\"静\"]],\n\t[[\"頂\"],[\"頂\"],[\"顶\"]],\n\t[[\"項\"],[\"項\"],[\"项\"]],\n\t[[\"順\"],[\"順\"],[\"顺\"]],\n\t[[\"預\"],[\"預\"],[\"预\"]],\n\t[[\"頑\"],[\"頑\"],[\"顽\"]],\n\t[[\"頒\"],[\"頒\"],[\"颁\"]],\n\t[[\"領\"],[\"領\"],[\"领\"]],\n\t[[\"頻\"],[\"頻\"],[\"频\"]],\n\t[[\"題\"],[\"題\"],[\"题\"]],\n\t[[\"額\"],[\"額\"],[\"额\"]],\n\t[[\"顔\"],[\"顏\"],[\"颜\"]],\n\t[[\"風\"],[\"風\"],[\"风\"]],\n\t[[\"飛\"],[\"飛\"],[\"飞\"]],\n\t[[\"飢\"],[\"饑\"],[\"饥\"]],\n\t[[\"飯\"],[\"飯\"],[\"饭\"]],\n\t[[\"飲\"],[\"飲\"],[\"饮\"]],\n\t[[\"飼\"],[\"飼\"],[\"饲\"]],\n\t[[\"飽\"],[\"飽\"],[\"饱\"]],\n\t[[\"飾\"],[\"飾\"],[\"饰\"]],\n\t[[\"餓\"],[\"餓\"],[\"饿\"]],\n\t[[\"馬\"],[\"馬\"],[\"马\"]],\n\t[[\"駅\"],[\"驛\"],[\"驿\"]],\n\t[[\"駆\"],[\"驅\"],[\"驱\"]],\n\t[[\"駐\"],[\"駐\"],[\"驻\"]],\n\t[[\"騎\"],[\"騎\"],[\"骑\"]],\n\t[[\"験\"],[\"驗\"],[\"验\"]],\n\t[[\"騒\"],[\"騷\"],[\"骚\"]],\n\t[[\"騨\"],[\"驔\"],[\"驔\"]],\n\t[[\"髄\"],[\"髓\"],[\"髓\"]],\n\t[[\"髪\"],[\"髮\"],[null]],\n\t[[\"魚\"],[\"魚\"],[\"鱼\"]],\n\t[[\"魯\"],[\"魯\"],[\"鲁\"]],\n\t[[\"鮮\"],[\"鮮\"],[\"鲜\"]],\n\t[[\"鯨\"],[\"鯨\"],[\"鲸\"]],\n\t[[\"鳥\"],[\"鳥\"],[\"鸟\"]],\n\t[[\"鳴\"],[\"鳴\"],[\"鸣\"]],\n\t[[\"鶫\"],[\"鶇\"],[\"鸫\"]],\n\t[[\"鶇\"],[\"鶇\"],[\"鸫\"]],\n\t[[\"麦\"],[\"麥\"],[\"麦\"]],\n\t[[\"黄\"],[\"黃\"],[\"黄\"]],\n\t[[\"黒\"],[\"黑\"],[\"黑\"]],\n\t[[\"黙\"],[\"默\"],[\"默\"]],\n\t[[\"齢\"],[\"齡\"],[\"龄\"]],\n];\n\n/**\n * Code generated from @lazy-cjk/jp-table-comparison/lib/table/core.ts;\n * DO NOT EDIT.\n * @see {@link ./table/core.ts}\n */\n\nexport const TABLE_SAFE: IKanjiComparisonTable = [\n\t[[\"会\"],[\"會\"],[\"会\"]],\n\t[[\"箋\"],[\"箋\"],[\"笺\"]],\n\t[[\"網\"],[\"網\"],[\"网\"]],\n\t[[\"処\"],[\"處\"],[\"处\"]],\n\t[[\"話\"],[\"話\"],[\"话\"]],\n\t[[\"万\"],[\"萬\"],[\"万\"]],\n\t[[\"与\"],[\"與\"],[\"与\"]],\n\t[[\"醜\"],[\"醜\"],[\"丑\"]],\n\t[[\"専\"],[\"專\"],[\"专\"]],\n\t[[\"業\"],[\"業\"],[\"业\"]],\n\t[[\"東\"],[\"東\"],[\"东\"]],\n\t[[\"両\"],[\"兩\"],[\"两\"]],\n\t[[\"厳\"],[\"嚴\"],[\"严\"]],\n\t[[\"並\"],[\"並\"],[\"并\"]],\n\t[[\"喪\"],[\"喪\"],[\"丧\"]],\n\t[[\"豊\"],[\"豐\"],[\"丰\"]],\n\t[[\"臨\"],[\"臨\"],[\"临\"]],\n\t[[\"為\"],[\"為\"],[\"为\"]],\n\t[[\"麗\"],[\"麗\"],[\"丽\"]],\n\t[[\"挙\"],[\"舉\"],[\"举\"]],\n\t[[\"廼\"],[\"迺\"],[\"迺\"]],\n\t[[\"義\"],[\"義\"],[\"义\"]],\n\t[[\"楽\"],[\"樂\"],[\"乐\"]],\n\t[[\"乗\"],[\"乘\"],[\"乘\"]],\n\t[[\"習\"],[\"習\"],[\"习\"]],\n\t[[\"郷\"],[\"鄉\"],[\"乡\"]],\n\t[[\"書\"],[\"書\"],[\"书\"]],\n\t[[\"買\"],[\"買\"],[\"买\"]],\n\t[[\"乱\"],[\"亂\"],[\"乱\"]],\n\t[[\"亀\"],[\"龜\"],[\"龟\"]],\n\t[[\"弐\"],[\"貳\"],[\"贰\"]],\n\t[[\"雲\"],[\"雲\"],[\"云\"]],\n\t[[\"亜\"],[\"亞\"],[\"亚\"]],\n\t[[\"産\"],[\"產\"],[\"产\"]],\n\t[[\"畝\"],[\"畝\"],[\"亩\"]],\n\t[[\"親\"],[\"親\"],[\"亲\"]],\n\t[[\"億\"],[\"億\"],[\"亿\"]],\n\t[[\"僕\"],[\"僕\"],[\"仆\"]],\n\t[[\"従\"],[\"從\"],[\"从\"]],\n\t[[\"仏\"],[\"佛\"],[\"佛\"]],\n\t[[\"倉\"],[\"倉\"],[\"仓\"]],\n\t[[\"儀\"],[\"儀\"],[\"仪\"]],\n\t[[\"仮\"],[\"假\"],[\"假\"]],\n\t[[\"価\"],[\"價\"],[\"价\"]],\n\t[[\"衆\"],[\"眾\"],[\"众\"]],\n\t[[\"優\"],[\"優\"],[\"优\"]],\n\t[[\"伝\"],[\"傳\"],[\"传\"]],\n\t[[\"傘\"],[\"傘\"],[\"伞\"]],\n\t[[\"偉\"],[\"偉\"],[\"伟\"]],\n\t[[\"傷\"],[\"傷\"],[\"伤\"]],\n\t[[\"倫\"],[\"倫\"],[\"伦\"]],\n\t[[\"偽\"],[\"偽\"],[\"伪\"]],\n\t[[\"体\"],[\"體\"],[\"体\"]],\n\t[[\"余\"],[\"餘\"],[\"余\"]],\n\t[[\"来\"],[\"來\"],[\"来\"]],\n\t[[\"偵\"],[\"偵\"],[\"侦\"]],\n\t[[\"側\"],[\"側\"],[\"侧\"]],\n\t[[\"倹\"],[\"儉\"],[\"俭\"]],\n\t[[\"倶\"],[\"俱\"],[\"俱\"]],\n\t[[\"債\"],[\"債\"],[\"债\"]],\n\t[[\"傾\"],[\"傾\"],[\"倾\"]],\n\t[[\"償\"],[\"償\"],[\"偿\"]],\n\t[[\"傑\"],[\"傑\"],[\"杰\"]],\n\t[[\"備\"],[\"備\"],[\"备\"]],\n\t[[\"当\"],[\"當\"],[\"当\"]],\n\t[[\"尽\"],[\"盡\"],[\"尽\"]],\n\t[[\"児\"],[\"兒\"],[\"儿\"]],\n\t[[\"党\"],[\"黨\"],[\"党\"]],\n\t[[\"内\"],[\"內\"],[\"内\"]],\n\t[[\"関\"],[\"關\"],[\"关\"]],\n\t[[\"興\"],[\"興\"],[\"兴\"]],\n\t[[\"養\"],[\"養\"],[\"养\"]],\n\t[[\"獣\"],[\"獸\"],[\"兽\"]],\n\t[[\"円\"],[\"圓\"],[\"圆\"]],\n\t[[\"写\"],[\"寫\"],[\"写\"]],\n\t[[\"軍\"],[\"軍\"],[\"军\"]],\n\t[[\"農\"],[\"農\"],[\"农\"]],\n\t[[\"冨\"],[\"富\"],[\"富\"]],\n\t[[\"氷\"],[\"冰\"],[\"冰\"]],\n\t[[\"衝\"],[\"衝\"],[\"冲\"]],\n\t[[\"決\"],[\"決\"],[\"决\"]],\n\t[[\"凍\"],[\"凍\"],[\"冻\"]],\n\t[[\"塗\"],[\"塗\"],[\"涂\"]],\n\t[[\"幾\"],[\"幾\"],[\"几\"]],\n\t[[\"撃\"],[\"擊\"],[\"击\"]],\n\t[[\"画\"],[\"劃\"],[\"划\"]],\n\t[[\"画\"],[\"畫\"],[\"画\"]],\n\t[[\"則\"],[\"則\"],[\"则\"]],\n\t[[\"剛\"],[\"剛\"],[\"刚\"]],\n\t[[\"創\"],[\"創\"],[\"创\"]],\n\t[[\"別\"],[\"別\"],[\"别\"]],\n\t[[\"製\"],[\"製\"],[\"制\"]],\n\t[[\"巻\"],[\"卷\"],[\"卷\"]],\n\t[[\"刹\"],[\"剎\"],[\"刹\"]],\n\t[[\"剤\"],[\"劑\"],[\"剂\"]],\n\t[[\"剣\"],[\"劍\"],[\"剑\"]],\n\t[[\"劇\"],[\"劇\"],[\"剧\"]],\n\t[[\"剰\"],[\"剩\"],[\"剩\"]],\n\t[[\"勧\"],[\"勸\"],[\"劝\"]],\n\t[[\"務\"],[\"務\"],[\"务\"]],\n\t[[\"動\"],[\"動\"],[\"动\"]],\n\t[[\"励\"],[\"勵\"],[\"励\"]],\n\t[[\"労\"],[\"勞\"],[\"劳\"]],\n\t[[\"勢\"],[\"勢\"],[\"势\"]],\n\t[[\"勲\"],[\"勳\"],[\"勋\"]],\n\t[[\"勝\"],[\"勝\"],[\"胜\"]],\n\t[[\"区\"],[\"區\"],[\"区\"]],\n\t[[\"医\"],[\"醫\"],[\"医\"]],\n\t[[\"華\"],[\"華\"],[\"华\"]],\n\t[[\"協\"],[\"協\"],[\"协\"]],\n\t[[\"単\"],[\"單\"],[\"单\"]],\n\t[[\"売\"],[\"賣\"],[\"卖\"]],\n\t[[\"衛\"],[\"衛\"],[\"卫\"]],\n\t[[\"庁\"],[\"廳\"],[\"厅\"]],\n\t[[\"圧\"],[\"壓\"],[\"压\"]],\n\t[[\"県\"],[\"縣\"],[\"县\"]],\n\t[[\"参\"],[\"參\"],[\"参\"]],\n\t[[\"双\"],[\"雙\"],[\"双\"]],\n\t[[\"収\"],[\"收\"],[\"收\"]],\n\t[[\"発\"],[\"發\"],[\"发\"]],\n\t[[\"変\"],[\"變\"],[\"变\"]],\n\t[[\"畳\"],[\"疊\"],[\"叠\"]],\n\t[[\"号\"],[\"號\"],[\"号\"]],\n\t[[\"嘆\"],[\"嘆\"],[\"叹\"]],\n\t[[\"嚇\"],[\"嚇\"],[\"吓\"]],\n\t[[\"聴\"],[\"聽\"],[\"听\"]],\n\t[[\"啓\"],[\"啟\"],[\"启\"]],\n\t[[\"員\"],[\"員\"],[\"员\"]],\n\t[[\"諮\"],[\"諮\"],[\"谘\"]],\n\t[[\"鹹\"],[\"鹹\"],[\"咸\"]],\n\t[[\"響\"],[\"響\"],[\"响\"]],\n\t[[\"問\"],[\"問\"],[\"问\"]],\n\t[[\"営\"],[\"營\"],[\"营\"]],\n\t[[\"噴\"],[\"噴\"],[\"喷\"]],\n\t[[\"嘱\"],[\"囑\"],[\"嘱\"]],\n\t[[\"蘇\"],[\"蘇\"],[\"苏\"]],\n\t[[\"団\"],[\"團\"],[\"团\"]],\n\t[[\"園\"],[\"園\"],[\"园\"]],\n\t[[\"国\"],[\"國\"],[\"国\"]],\n\t[[\"囲\"],[\"圍\"],[\"围\"]],\n\t[[\"図\"],[\"圖\"],[\"图\"]],\n\t[[\"圏\"],[\"圈\"],[\"圈\"]],\n\t[[\"聖\"],[\"聖\"],[\"圣\"]],\n\t[[\"場\"],[\"場\"],[\"场\"]],\n\t[[\"壊\"],[\"壞\"],[\"坏\"]],\n\t[[\"塊\"],[\"塊\"],[\"块\"]],\n\t[[\"堅\"],[\"堅\"],[\"坚\"]],\n\t[[\"壇\"],[\"壇\"],[\"坛\"]],\n\t[[\"墳\"],[\"墳\"],[\"坟\"]],\n\t[[\"墜\"],[\"墜\"],[\"坠\"]],\n\t[[\"塁\"],[\"壘\"],[\"垒\"]],\n\t[[\"墾\"],[\"墾\"],[\"垦\"]],\n\t[[\"執\"],[\"執\"],[\"执\"]],\n\t[[\"堕\"],[\"墮\"],[\"堕\"]],\n\t[[\"報\"],[\"報\"],[\"报\"]],\n\t[[\"塩\"],[\"鹽\"],[\"盐\"]],\n\t[[\"増\"],[\"增\"],[\"增\"]],\n\t[[\"壌\"],[\"壤\"],[\"壤\"]],\n\t[[\"壮\"],[\"壯\"],[\"壮\"]],\n\t[[\"声\"],[\"聲\"],[\"声\"]],\n\t[[\"壱\"],[\"壹\"],[\"壹\"]],\n\t[[\"寿\"],[\"壽\"],[\"寿\"]],\n\t[[\"夢\"],[\"夢\"],[\"梦\"]],\n\t[[\"頭\"],[\"頭\"],[\"头\"]],\n\t[[\"誇\"],[\"誇\"],[\"夸\"]],\n\t[[\"奪\"],[\"奪\"],[\"夺\"]],\n\t[[\"奮\"],[\"奮\"],[\"奋\"]],\n\t[[\"奨\"],[\"獎\"],[\"奖\"]],\n\t[[\"粧\"],[\"妝\"],[\"妆\"]],\n\t[[\"婦\"],[\"婦\"],[\"妇\"]],\n\t[[\"姉\"],[\"姐\"],[\"姐\"]],\n\t[[\"姫\"],[\"姬\"],[\"姬\"]],\n\t[[\"嬢\"],[\"孃\"],[\"娘\"]],\n\t[[\"娯\"],[\"娛\"],[\"娱\"]],\n\t[[\"孫\"],[\"孫\"],[\"孙\"]],\n\t[[\"学\"],[\"學\"],[\"学\"]],\n\t[[\"寧\"],[\"寧\"],[\"宁\"]],\n\t[[\"宝\"],[\"寶\"],[\"宝\"]],\n\t[[\"実\"],[\"實\"],[\"实\"]],\n\t[[\"審\"],[\"審\"],[\"审\"]],\n\t[[\"憲\"],[\"憲\"],[\"宪\"]],\n\t[[\"宮\"],[\"宮\"],[\"宫\"]],\n\t[[\"賓\"],[\"賓\"],[\"宾\"]],\n\t[[\"秘\"],[\"祕\"],[\"秘\"]],\n\t[[\"寝\"],[\"寢\"],[\"寝\"]],\n\t[[\"対\"],[\"對\"],[\"对\"]],\n\t[[\"尋\"],[\"尋\"],[\"寻\"]],\n\t[[\"導\"],[\"導\"],[\"导\"]],\n\t[[\"将\"],[\"將\"],[\"将\"]],\n\t[[\"層\"],[\"層\"],[\"层\"]],\n\t[[\"属\"],[\"屬\"],[\"属\"]],\n\t[[\"歳\"],[\"歲\"],[\"岁\"]],\n\t[[\"島\"],[\"島\"],[\"岛\"]],\n\t[[\"巌\"],[\"巖\"],[\"巖\"]],\n\t[[\"峡\"],[\"峽\"],[\"峡\"]],\n\t[[\"険\"],[\"險\"],[\"险\"]],\n\t[[\"幣\"],[\"幣\"],[\"币\"]],\n\t[[\"帥\"],[\"帥\"],[\"帅\"]],\n\t[[\"師\"],[\"師\"],[\"师\"]],\n\t[[\"帳\"],[\"帳\"],[\"帐\"]],\n\t[[\"帰\"],[\"歸\"],[\"归\"]],\n\t[[\"広\"],[\"廣\"],[\"广\"]],\n\t[[\"慶\"],[\"慶\"],[\"庆\"]],\n\t[[\"庫\"],[\"庫\"],[\"库\"]],\n\t[[\"応\"],[\"應\"],[\"应\"]],\n\t[[\"廃\"],[\"廢\"],[\"废\"]],\n\t[[\"開\"],[\"開\"],[\"开\"]],\n\t[[\"弁\"],[\"辨\",\"瓣\",\"辯\"],[\"辨\",\"瓣\",\"辩\"]],\n\t[[\"異\"],[\"異\"],[\"异\"]],\n\t[[\"棄\"],[\"棄\"],[\"弃\"]],\n\t[[\"張\"],[\"張\"],[\"张\"]],\n\t[[\"弥\"],[\"彌\"],[\"弥\"]],\n\t[[\"強\"],[\"強\"],[\"强\"]],\n\t[[\"弾\"],[\"彈\"],[\"弹\"]],\n\t[[\"録\"],[\"錄\"],[\"录\"]],\n\t[[\"彦\"],[\"彥\"],[\"彥\"]],\n\t[[\"徹\"],[\"徹\"],[\"彻\"]],\n\t[[\"徴\"],[\"徵\"],[\"征\"]],\n\t[[\"径\"],[\"徑\"],[\"径\"]],\n\t[[\"徳\"],[\"德\"],[\"德\"]],\n\t[[\"憶\"],[\"憶\"],[\"忆\"]],\n\t[[\"誌\"],[\"誌\"],[\"志\"]],\n\t[[\"憂\"],[\"憂\"],[\"忧\"]],\n\t[[\"懐\"],[\"懷\"],[\"怀\"]],\n\t[[\"態\"],[\"態\"],[\"态\"]],\n\t[[\"総\"],[\"總\"],[\"总\"]],\n\t[[\"恒\"],[\"恆\"],[\"恒\"]],\n\t[[\"恋\"],[\"戀\"],[\"恋\"]],\n\t[[\"懇\"],[\"懇\"],[\"恳\"]],\n\t[[\"恵\"],[\"惠\"],[\"惠\"]],\n\t[[\"悪\"],[\"惡\"],[\"恶\"]],\n\t[[\"悩\"],[\"惱\"],[\"恼\"]],\n\t[[\"悦\"],[\"悅\"],[\"悅\"]],\n\t[[\"懸\"],[\"懸\"],[\"悬\"]],\n\t[[\"驚\"],[\"驚\"],[\"惊\"]],\n\t[[\"惨\"],[\"慘\"],[\"惨\"]],\n\t[[\"懲\"],[\"懲\"],[\"惩\"]],\n\t[[\"愛\"],[\"愛\"],[\"爱\"]],\n\t[[\"憤\"],[\"憤\"],[\"愤\"]],\n\t[[\"願\"],[\"願\"],[\"愿\"]],\n\t[[\"慮\"],[\"慮\"],[\"虑\"]],\n\t[[\"戯\"],[\"戲\"],[\"戏\"]],\n\t[[\"戦\"],[\"戰\"],[\"战\"]],\n\t[[\"戸\"],[\"戶\"],[\"户\"]],\n\t[[\"払\"],[\"拂\"],[\"拂\"]],\n\t[[\"拡\"],[\"擴\"],[\"扩\"]],\n\t[[\"掃\"],[\"掃\"],[\"扫\"]],\n\t[[\"揚\"],[\"揚\"],[\"扬\"]],\n\t[[\"択\"],[\"擇\"],[\"择\"]],\n\t[[\"護\"],[\"護\"],[\"护\"]],\n\t[[\"担\"],[\"擔\"],[\"担\"]],\n\t[[\"拝\"],[\"拜\"],[\"拜\"]],\n\t[[\"擬\"],[\"擬\"],[\"拟\"]],\n\t[[\"拠\"],[\"據\"],[\"据\"]],\n\t[[\"擁\"],[\"擁\"],[\"拥\"]],\n\t[[\"挟\"],[\"挾\"],[\"挟\"]],\n\t[[\"揮\"],[\"揮\"],[\"挥\"]],\n\t[[\"挿\"],[\"插\"],[\"插\"]],\n\t[[\"損\"],[\"損\"],[\"损\"]],\n\t[[\"捨\"],[\"捨\"],[\"舍\"]],\n\t[[\"掲\"],[\"揭\"],[\"揭\"]],\n\t[[\"掴\"],[\"摑\"],[\"掴\"]],\n\t[[\"揺\"],[\"搖\"],[\"摇\"]],\n\t[[\"敵\"],[\"敵\"],[\"敌\"]],\n\t[[\"敗\"],[\"敗\"],[\"败\"]],\n\t[[\"数\"],[\"數\"],[\"数\"]],\n\t[[\"斉\"],[\"齊\"],[\"齐\"]],\n\t[[\"斎\"],[\"齋\"],[\"斋\"]],\n\t[[\"断\"],[\"斷\"],[\"断\"]],\n\t[[\"旧\"],[\"舊\"],[\"旧\"]],\n\t[[\"時\"],[\"時\"],[\"时\"]],\n\t[[\"曇\"],[\"曇\"],[\"昙\"]],\n\t[[\"昼\"],[\"晝\"],[\"昼\"]],\n\t[[\"顕\"],[\"顯\"],[\"显\"]],\n\t[[\"暁\"],[\"曉\"],[\"晓\"]],\n\t[[\"晩\"],[\"晚\"],[\"晚\"]],\n\t[[\"暫\"],[\"暫\"],[\"暂\"]],\n\t[[\"曽\"],[\"曾\"],[\"曾\"]],\n\t[[\"術\"],[\"術\"],[\"术\"]],\n\t[[\"樸\"],[\"樸\"],[\"朴\"]],\n\t[[\"機\"],[\"機\"],[\"机\"]],\n\t[[\"殺\"],[\"殺\"],[\"杀\"]],\n\t[[\"雑\"],[\"雜\"],[\"杂\"]],\n\t[[\"権\"],[\"權\"],[\"权\"]],\n\t[[\"条\"],[\"條\"],[\"条\"]],\n\t[[\"極\"],[\"極\"],[\"极\"]],\n\t[[\"枢\"],[\"樞\"],[\"枢\"]],\n\t[[\"槍\"],[\"槍\"],[\"枪\"]],\n\t[[\"査\"],[\"查\"],[\"查\"]],\n\t[[\"栄\"],[\"榮\"],[\"荣\"]],\n\t[[\"標\"],[\"標\"],[\"标\"]],\n\t[[\"桟\"],[\"棧\"],[\"栈\"]],\n\t[[\"棟\"],[\"棟\"],[\"栋\"]],\n\t[[\"欄\"],[\"欄\"],[\"栏\"]],\n\t[[\"樹\"],[\"樹\"],[\"树\"]],\n\t[[\"様\"],[\"樣\"],[\"样\"]],\n\t[[\"桜\"],[\"櫻\"],[\"樱\"]],\n\t[[\"橋\"],[\"橋\"],[\"桥\"]],\n\t[[\"検\"],[\"檢\"],[\"检\"]],\n\t[[\"楼\"],[\"樓\"],[\"楼\"]],\n\t[[\"歓\"],[\"歡\"],[\"欢\"]],\n\t[[\"欧\"],[\"歐\"],[\"欧\"]],\n\t[[\"歩\"],[\"步\"],[\"步\"]],\n\t[[\"歯\"],[\"齒\"],[\"齿\"]],\n\t[[\"残\"],[\"殘\"],[\"残\"]],\n\t[[\"殴\"],[\"毆\"],[\"殴\"]],\n\t[[\"気\"],[\"氣\"],[\"气\"]],\n\t[[\"漢\"],[\"漢\"],[\"汉\"]],\n\t[[\"湯\"],[\"湯\"],[\"汤\"]],\n\t[[\"溝\"],[\"溝\"],[\"沟\"]],\n\t[[\"沢\"],[\"澤\"],[\"泽\"]],\n\t[[\"涙\"],[\"淚\"],[\"泪\"]],\n\t[[\"滝\"],[\"瀧\"],[\"泷\"]],\n\t[[\"潔\"],[\"潔\"],[\"洁\"]],\n\t[[\"浅\"],[\"淺\"],[\"浅\"]],\n\t[[\"濁\"],[\"濁\"],[\"浊\"]],\n\t[[\"測\"],[\"測\"],[\"测\"]],\n\t[[\"済\"],[\"濟\"],[\"济\"]],\n\t[[\"濃\"],[\"濃\"],[\"浓\"]],\n\t[[\"浜\"],[\"濱\"],[\"滨\"]],\n\t[[\"渋\"],[\"涉\",\"澀\"],[\"涉\",\"涩\"]],\n\t[[\"渦\"],[\"渦\"],[\"涡\"]],\n\t[[\"潤\"],[\"潤\"],[\"润\"]],\n\t[[\"漬\"],[\"漬\"],[\"渍\"]],\n\t[[\"漸\"],[\"漸\"],[\"渐\"]],\n\t[[\"渓\"],[\"溪\"],[\"溪\"]],\n\t[[\"漁\"],[\"漁\"],[\"渔\"]],\n\t[[\"湾\"],[\"灣\"],[\"湾\"]],\n\t[[\"湿\"],[\"濕\"],[\"湿\"]],\n\t[[\"満\"],[\"滿\"],[\"满\"]],\n\t[[\"滅\"],[\"滅\"],[\"灭\"]],\n\t[[\"滞\"],[\"滯\"],[\"滞\"]],\n\t[[\"濫\"],[\"濫\"],[\"滥\"]],\n\t[[\"瀬\"],[\"瀨\"],[\"濑\"]],\n\t[[\"灯\"],[\"燈\"],[\"灯\"]],\n\t[[\"霊\"],[\"靈\"],[\"灵\"]],\n\t[[\"炉\"],[\"爐\"],[\"炉\"]],\n\t[[\"点\"],[\"點\"],[\"点\"]],\n\t[[\"錬\"],[\"鍊\"],[\"炼\"]],\n\t[[\"練\"],[\"練\"],[\"练\"]],\n\t[[\"煙\"],[\"煙\"],[\"烟\"]],\n\t[[\"煩\"],[\"煩\"],[\"烦\"]],\n\t[[\"焼\"],[\"燒\"],[\"烧\"]],\n\t[[\"熱\"],[\"熱\"],[\"热\"]],\n\t[[\"焔\"],[\"焰\"],[\"焰\"]],\n\t[[\"鍛\"],[\"鍛\"],[\"锻\"]],\n\t[[\"犠\"],[\"犧\"],[\"牺\"]],\n\t[[\"状\"],[\"狀\"],[\"状\"]],\n\t[[\"猶\"],[\"猶\"],[\"犹\"]],\n\t[[\"独\"],[\"獨\"],[\"独\"]],\n\t[[\"狭\"],[\"狹\"],[\"狭\"]],\n\t[[\"獄\"],[\"獄\"],[\"狱\"]],\n\t[[\"猟\"],[\"獵\"],[\"猎\"]],\n\t[[\"猫\"],[\"貓\"],[\"猫\"]],\n\t[[\"献\"],[\"獻\"],[\"献\"]],\n\t[[\"環\"],[\"環\"],[\"环\"]],\n\t[[\"現\"],[\"現\"],[\"现\"]],\n\t[[\"璽\"],[\"璽\"],[\"玺\"]],\n\t[[\"電\"],[\"電\"],[\"电\"]],\n\t[[\"療\"],[\"療\"],[\"疗\"]],\n\t[[\"監\"],[\"監\"],[\"监\"]],\n\t[[\"蓋\"],[\"蓋\"],[\"盖\"]],\n\t[[\"盤\"],[\"盤\"],[\"盘\"]],\n\t[[\"視\"],[\"視\"],[\"视\"]],\n\t[[\"着\"],[\"著\"],[\"著\"]],\n\t[[\"矯\"],[\"矯\"],[\"矫\"]],\n\t[[\"鉱\"],[\"礦\"],[\"矿\"]],\n\t[[\"砕\"],[\"碎\"],[\"碎\"]],\n\t[[\"礎\"],[\"礎\"],[\"础\"]],\n\t[[\"確\"],[\"確\"],[\"确\"]],\n\t[[\"礼\"],[\"禮\"],[\"礼\"]],\n\t[[\"禍\"],[\"禍\"],[\"祸\"]],\n\t[[\"禅\"],[\"禪\"],[\"禅\"]],\n\t[[\"離\"],[\"離\"],[\"离\"]],\n\t[[\"種\"],[\"種\"],[\"种\"]],\n\t[[\"積\"],[\"積\"],[\"积\"]],\n\t[[\"称\"],[\"稱\"],[\"称\"]],\n\t[[\"稲\"],[\"稻\"],[\"稻\"]],\n\t[[\"穏\"],[\"穩\"],[\"稳\"]],\n\t[[\"穀\"],[\"穀\"],[\"谷\"]],\n\t[[\"穂\"],[\"穗\"],[\"穗\"]],\n\t[[\"窮\"],[\"窮\"],[\"穷\"]],\n\t[[\"窃\"],[\"竊\"],[\"窃\"]],\n\t[[\"窓\"],[\"窗\"],[\"窗\"]],\n\t[[\"竜\"],[\"龍\"],[\"龙\"]],\n\t[[\"競\"],[\"競\"],[\"竞\"]],\n\t[[\"篤\"],[\"篤\"],[\"笃\"]],\n\t[[\"筆\"],[\"筆\"],[\"笔\"]],\n\t[[\"築\"],[\"築\"],[\"筑\"]],\n\t[[\"簡\"],[\"簡\"],[\"简\"]],\n\t[[\"節\"],[\"節\"],[\"节\"]],\n\t[[\"範\"],[\"範\"],[\"范\"]],\n\t[[\"類\"],[\"類\"],[\"类\"]],\n\t[[\"粋\"],[\"粹\"],[\"粹\"]],\n\t[[\"粛\"],[\"肅\"],[\"肃\"]],\n\t[[\"糧\"],[\"糧\"],[\"粮\"]],\n\t[[\"糾\"],[\"糾\"],[\"纠\"]],\n\t[[\"紀\"],[\"紀\"],[\"纪\"]],\n\t[[\"約\"],[\"約\"],[\"约\"]],\n\t[[\"紅\"],[\"紅\"],[\"红\"]],\n\t[[\"紋\"],[\"紋\"],[\"纹\"]],\n\t[[\"納\"],[\"納\"],[\"纳\"]],\n\t[[\"純\"],[\"純\"],[\"纯\"]],\n\t[[\"紙\"],[\"紙\"],[\"纸\"]],\n\t[[\"級\"],[\"級\"],[\"级\"]],\n\t[[\"紛\"],[\"紛\"],[\"纷\"]],\n\t[[\"紡\"],[\"紡\"],[\"纺\"]],\n\t[[\"緊\"],[\"緊\"],[\"紧\"]],\n\t[[\"細\"],[\"細\"],[\"细\"]],\n\t[[\"紳\"],[\"紳\"],[\"绅\"]],\n\t[[\"紹\"],[\"紹\"],[\"绍\"]],\n\t[[\"紺\"],[\"紺\"],[\"绀\"]],\n\t[[\"終\"],[\"終\"],[\"终\"]],\n\t[[\"組\"],[\"組\"],[\"组\"]],\n\t[[\"経\"],[\"經\"],[\"经\"]],\n\t[[\"結\"],[\"結\"],[\"结\"]],\n\t[[\"絶\"],[\"絕\"],[\"绝\"]],\n\t[[\"絞\"],[\"絞\"],[\"绞\"]],\n\t[[\"絡\"],[\"絡\"],[\"络\"]],\n\t[[\"給\"],[\"給\"],[\"给\"]],\n\t[[\"統\"],[\"統\"],[\"统\"]],\n\t[[\"絵\"],[\"繪\"],[\"绘\"]],\n\t[[\"絹\"],[\"絹\"],[\"绢\"]],\n\t[[\"継\"],[\"繼\"],[\"继\"]],\n\t[[\"続\"],[\"續\"],[\"续\"]],\n\t[[\"緑\"],[\"綠\"],[\"绿\"]],\n\t[[\"線\"],[\"線\"],[\"线\"]],\n\t[[\"維\"],[\"維\"],[\"维\"]],\n\t[[\"綱\"],[\"綱\"],[\"纲\"]],\n\t[[\"綿\"],[\"綿\"],[\"绵\"]],\n\t[[\"緒\"],[\"緒\"],[\"绪\"]],\n\t[[\"締\"],[\"締\"],[\"缔\"]],\n\t[[\"縁\"],[\"緣\"],[\"缘\"]],\n\t[[\"編\"],[\"編\"],[\"编\"]],\n\t[[\"緩\"],[\"緩\"],[\"缓\"]],\n\t[[\"緯\"],[\"緯\"],[\"纬\"]],\n\t[[\"縄\"],[\"繩\"],[\"绳\"]],\n\t[[\"縛\"],[\"縛\"],[\"缚\"]],\n\t[[\"縦\"],[\"縱\"],[\"纵\"]],\n\t[[\"縫\"],[\"縫\"],[\"缝\"]],\n\t[[\"縮\"],[\"縮\"],[\"缩\"]],\n\t[[\"繊\"],[\"纖\"],[\"纤\"]],\n\t[[\"績\"],[\"績\"],[\"绩\"]],\n\t[[\"織\"],[\"織\"],[\"织\"]],\n\t[[\"繕\"],[\"繕\"],[\"缮\"]],\n\t[[\"繭\"],[\"繭\"],[\"茧\"]],\n\t[[\"繰\"],[\"繰\"],[\"缲\"]],\n\t[[\"缶\"],[\"罐\"],[\"罐\"]],\n\t[[\"鉢\"],[\"鉢\"],[\"钵\"]],\n\t[[\"羅\"],[\"羅\"],[\"罗\"]],\n\t[[\"罸\"],[\"罰\"],[\"罚\"]],\n\t[[\"罷\"],[\"罷\"],[\"罢\"]],\n\t[[\"罵\"],[\"罵\"],[\"骂\"]],\n\t[[\"職\"],[\"職\"],[\"职\"]],\n\t[[\"聞\"],[\"聞\"],[\"闻\"]],\n\t[[\"聡\"],[\"聰\"],[\"聪\"]],\n\t[[\"腸\"],[\"腸\"],[\"肠\"]],\n\t[[\"膚\"],[\"膚\"],[\"肤\"]],\n\t[[\"脹\"],[\"脹\"],[\"胀\"]],\n\t[[\"脅\"],[\"脅\"],[\"胁\"]],\n\t[[\"胆\"],[\"膽\"],[\"胆\"]],\n\t[[\"臓\"],[\"臟\"],[\"脏\"]],\n\t[[\"脳\"],[\"腦\"],[\"脑\"]],\n\t[[\"脚\"],[\"腳\"],[\"脚\"]],\n\t[[\"騰\"],[\"騰\"],[\"腾\"]],\n\t[[\"舗\"],[\"舖\"],[\"铺\"]],\n\t[[\"館\"],[\"館\"],[\"馆\"]],\n\t[[\"艦\"],[\"艦\"],[\"舰\"]],\n\t[[\"芸\"],[\"藝\"],[\"艺\"]],\n\t[[\"茎\"],[\"莖\"],[\"茎\"]],\n\t[[\"薦\"],[\"薦\"],[\"荐\"]],\n\t[[\"薬\"],[\"藥\"],[\"药\"]],\n\t[[\"蛍\"],[\"螢\"],[\"萤\"]],\n\t[[\"蒋\"],[\"蔣\"],[\"蒋\"]],\n\t[[\"蔵\"],[\"藏\"],[\"藏\"]],\n\t[[\"虜\"],[\"虜\"],[\"虏\"]],\n\t[[\"虚\"],[\"虛\"],[\"虚\"]],\n\t[[\"虫\"],[\"蟲\"],[\"虫\"]],\n\t[[\"蝕\"],[\"蝕\"],[\"蚀\"]],\n\t[[\"蚕\"],[\"蠶\"],[\"蚕\"]],\n\t[[\"蛮\"],[\"蠻\"],[\"蛮\"]],\n\t[[\"補\"],[\"補\"],[\"补\"]],\n\t[[\"襲\"],[\"襲\"],[\"袭\"]],\n\t[[\"装\"],[\"裝\"],[\"装\"]],\n\t[[\"裏\"],[\"裡\"],[\"里\"]],\n\t[[\"覇\"],[\"霸\"],[\"霸\"]],\n\t[[\"見\"],[\"見\"],[\"见\"]],\n\t[[\"観\"],[\"觀\"],[\"观\"]],\n\t[[\"規\"],[\"規\"],[\"规\"]],\n\t[[\"覚\"],[\"覺\"],[\"觉\"]],\n\t[[\"覧\"],[\"覽\"],[\"览\"]],\n\t[[\"触\"],[\"觸\"],[\"触\"]],\n\t[[\"訂\"],[\"訂\"],[\"订\"]],\n\t[[\"計\"],[\"計\"],[\"计\"]],\n\t[[\"討\"],[\"討\"],[\"讨\"]],\n\t[[\"訓\"],[\"訓\"],[\"训\"]],\n\t[[\"記\"],[\"記\"],[\"记\"]],\n\t[[\"訟\"],[\"訟\"],[\"讼\"]],\n\t[[\"訪\"],[\"訪\"],[\"访\"]],\n\t[[\"設\"],[\"設\"],[\"设\"]],\n\t[[\"許\"],[\"許\"],[\"许\"]],\n\t[[\"訳\"],[\"譯\"],[\"译\"]],\n\t[[\"訴\"],[\"訴\"],[\"诉\"]],\n\t[[\"診\"],[\"診\"],[\"诊\"]],\n\t[[\"証\"],[\"證\"],[\"证\"]],\n\t[[\"詐\"],[\"詐\"],[\"诈\"]],\n\t[[\"詔\"],[\"詔\"],[\"诏\"]],\n\t[[\"評\"],[\"評\"],[\"评\"]],\n\t[[\"詛\"],[\"詛\"],[\"诅\"]],\n\t[[\"詞\"],[\"詞\"],[\"词\"]],\n\t[[\"試\"],[\"試\"],[\"试\"]],\n\t[[\"詩\"],[\"詩\"],[\"诗\"]],\n\t[[\"詰\"],[\"詰\"],[\"诘\"]],\n\t[[\"該\"],[\"該\"],[\"该\"]],\n\t[[\"詳\"],[\"詳\"],[\"详\"]],\n\t[[\"誉\"],[\"譽\"],[\"誉\"]],\n\t[[\"謄\"],[\"謄\"],[\"誊\"]],\n\t[[\"認\"],[\"認\"],[\"认\"]],\n\t[[\"誕\"],[\"誕\"],[\"诞\"]],\n\t[[\"誘\"],[\"誘\"],[\"诱\"]],\n\t[[\"語\"],[\"語\"],[\"语\"]],\n\t[[\"誠\"],[\"誠\"],[\"诚\"]],\n\t[[\"誤\"],[\"誤\"],[\"误\"]],\n\t[[\"説\"],[\"說\"],[\"说\"]],\n\t[[\"読\"],[\"讀\"],[\"读\"]],\n\t[[\"誰\"],[\"誰\"],[\"谁\"]],\n\t[[\"課\"],[\"課\"],[\"课\"]],\n\t[[\"調\"],[\"調\"],[\"调\"]],\n\t[[\"談\"],[\"談\"],[\"谈\"]],\n\t[[\"請\"],[\"請\"],[\"请\"]],\n\t[[\"論\"],[\"論\"],[\"论\"]],\n\t[[\"諭\"],[\"諭\"],[\"谕\"]],\n\t[[\"諸\"],[\"諸\"],[\"诸\"]],\n\t[[\"諾\"],[\"諾\"],[\"诺\"]],\n\t[[\"謀\"],[\"謀\"],[\"谋\"]],\n\t[[\"謁\"],[\"謁\"],[\"谒\"]],\n\t[[\"謎\"],[\"謎\"],[\"谜\"]],\n\t[[\"謙\"],[\"謙\"],[\"谦\"]],\n\t[[\"講\"],[\"講\"],[\"讲\"]],\n\t[[\"謝\"],[\"謝\"],[\"谢\"]],\n\t[[\"謡\"],[\"謠\"],[\"谣\"]],\n\t[[\"謹\"],[\"謹\"],[\"谨\"]],\n\t[[\"識\"],[\"識\"],[\"识\"]],\n\t[[\"譜\"],[\"譜\"],[\"谱\"]],\n\t[[\"議\"],[\"議\"],[\"议\"]],\n\t[[\"譲\"],[\"讓\"],[\"让\"]],\n\t[[\"貝\"],[\"貝\"],[\"贝\"]],\n\t[[\"貞\"],[\"貞\"],[\"贞\"]],\n\t[[\"負\"],[\"負\"],[\"负\"]],\n\t[[\"財\"],[\"財\"],[\"财\"]],\n\t[[\"貢\"],[\"貢\"],[\"贡\"]],\n\t[[\"貧\"],[\"貧\"],[\"贫\"]],\n\t[[\"貨\"],[\"貨\"],[\"货\"]],\n\t[[\"販\"],[\"販\"],[\"贩\"]],\n\t[[\"貪\"],[\"貪\"],[\"贪\"]],\n\t[[\"責\"],[\"責\"],[\"责\"]],\n\t[[\"貯\"],[\"貯\"],[\"贮\"]],\n\t[[\"貴\"],[\"貴\"],[\"贵\"]],\n\t[[\"貸\"],[\"貸\"],[\"贷\"]],\n\t[[\"費\"],[\"費\"],[\"费\"]],\n\t[[\"貿\"],[\"貿\"],[\"贸\"]],\n\t[[\"賀\"],[\"賀\"],[\"贺\"]],\n\t[[\"賃\"],[\"賃\"],[\"赁\"]],\n\t[[\"賄\"],[\"賄\"],[\"贿\"]],\n\t[[\"資\"],[\"資\"],[\"资\"]],\n\t[[\"賊\"],[\"賊\"],[\"贼\"]],\n\t[[\"賎\"],[\"賤\"],[\"贱\"]],\n\t[[\"賛\"],[\"贊\"],[\"赞\"]],\n\t[[\"賜\"],[\"賜\"],[\"赐\"]],\n\t[[\"賞\"],[\"賞\"],[\"赏\"]],\n\t[[\"賠\"],[\"賠\"],[\"赔\"]],\n\t[[\"賢\"],[\"賢\"],[\"贤\"]],\n\t[[\"賦\"],[\"賦\"],[\"赋\"]],\n\t[[\"質\"],[\"質\"],[\"质\"]],\n\t[[\"頼\"],[\"賴\"],[\"赖\"]],\n\t[[\"贈\"],[\"贈\"],[\"赠\"]],\n\t[[\"贓\"],[\"贓\"],[\"赃\"]],\n\t[[\"躍\"],[\"躍\"],[\"跃\"]],\n\t[[\"践\"],[\"踐\"],[\"践\"]],\n\t[[\"踪\"],[\"蹤\"],[\"踪\"]],\n\t[[\"車\"],[\"車\"],[\"车\"]],\n\t[[\"軌\"],[\"軌\"],[\"轨\"]],\n\t[[\"軒\"],[\"軒\"],[\"轩\"]],\n\t[[\"軟\"],[\"軟\"],[\"软\"]],\n\t[[\"転\"],[\"轉\"],[\"转\"]],\n\t[[\"軸\"],[\"軸\"],[\"轴\"]],\n\t[[\"軽\"],[\"輕\"],[\"轻\"]],\n\t[[\"較\"],[\"較\"],[\"较\"]],\n\t[[\"載\"],[\"載\"],[\"载\"]],\n\t[[\"輝\"],[\"輝\"],[\"辉\"]],\n\t[[\"輩\"],[\"輩\"],[\"辈\"]],\n\t[[\"輪\"],[\"輪\"],[\"轮\"]],\n\t[[\"輸\"],[\"輸\"],[\"输\"]],\n\t[[\"轄\"],[\"轄\"],[\"辖\"]],\n\t[[\"辞\"],[\"辭\"],[\"辞\"]],\n\t[[\"辺\"],[\"邊\"],[\"边\"]],\n\t[[\"達\"],[\"達\"],[\"达\"]],\n\t[[\"遷\"],[\"遷\"],[\"迁\"]],\n\t[[\"過\"],[\"過\"],[\"过\"]],\n\t[[\"運\"],[\"運\"],[\"运\"]],\n\t[[\"還\"],[\"還\"],[\"还\"]],\n\t[[\"進\"],[\"進\"],[\"进\"]],\n\t[[\"遠\"],[\"遠\"],[\"远\"]],\n\t[[\"違\"],[\"違\"],[\"违\"]],\n\t[[\"連\"],[\"連\"],[\"连\"]],\n\t[[\"遅\"],[\"遲\"],[\"迟\"]],\n\t[[\"適\"],[\"適\"],[\"适\"]],\n\t[[\"選\"],[\"選\"],[\"选\"]],\n\t[[\"逓\"],[\"遞\"],[\"递\"]],\n\t[[\"遺\"],[\"遺\"],[\"遗\"]],\n\t[[\"遥\"],[\"遙\"],[\"遥\"]],\n\t[[\"郵\"],[\"郵\"],[\"邮\"]],\n\t[[\"隣\"],[\"鄰\"],[\"邻\"]],\n\t[[\"酔\"],[\"醉\"],[\"醉\"]],\n\t[[\"醸\"],[\"釀\"],[\"酿\"]],\n\t[[\"釈\"],[\"釋\"],[\"释\"]],\n\t[[\"針\"],[\"針\"],[\"针\"]],\n\t[[\"釣\"],[\"釣\"],[\"钓\"]],\n\t[[\"鈍\"],[\"鈍\"],[\"钝\"]],\n\t[[\"鈴\"],[\"鈴\"],[\"铃\"]],\n\t[[\"鉄\"],[\"鐵\"],[\"铁\"]],\n\t[[\"鉛\"],[\"鉛\"],[\"铅\"]],\n\t[[\"鑑\"],[\"鑑\"],[\"鉴\"]],\n\t[[\"銀\"],[\"銀\"],[\"银\"]],\n\t[[\"銃\"],[\"銃\"],[\"铳\"]],\n\t[[\"銅\"],[\"銅\"],[\"铜\"]],\n\t[[\"銑\"],[\"銑\"],[\"铣\"]],\n\t[[\"銘\"],[\"銘\"],[\"铭\"]],\n\t[[\"銭\"],[\"錢\"],[\"钱\"]],\n\t[[\"鋭\"],[\"鋭\"],[\"锐\"]],\n\t[[\"鋳\"],[\"鑄\"],[\"铸\"]],\n\t[[\"鋼\"],[\"鋼\"],[\"钢\"]],\n\t[[\"錘\"],[\"錘\"],[\"锤\"]],\n\t[[\"錠\"],[\"錠\"],[\"锭\"]],\n\t[[\"錯\"],[\"錯\"],[\"错\"]],\n\t[[\"鍾\"],[\"鍾\"],[\"钟\"]],\n\t[[\"鎖\"],[\"鎖\"],[\"锁\"]],\n\t[[\"鎮\"],[\"鎮\"],[\"镇\"]],\n\t[[\"鏡\"],[\"鏡\"],[\"镜\"]],\n\t[[\"長\"],[\"長\"],[\"长\"]],\n\t[[\"門\"],[\"門\"],[\"门\"]],\n\t[[\"閉\"],[\"閉\"],[\"闭\"]],\n\t[[\"閑\"],[\"閒\"],[\"闲\"]],\n\t[[\"間\"],[\"間\"],[\"间\"]],\n\t[[\"閣\"],[\"閣\"],[\"阁\"]],\n\t[[\"閥\"],[\"閥\"],[\"阀\"]],\n\t[[\"閲\"],[\"閲\"],[\"阅\"]],\n\t[[\"隊\"],[\"隊\"],[\"队\"]],\n\t[[\"陽\"],[\"陽\"],[\"阳\"]],\n\t[[\"陰\"],[\"陰\"],[\"阴\"]],\n\t[[\"陣\"],[\"陣\"],[\"阵\"]],\n\t[[\"階\"],[\"階\"],[\"阶\"]],\n\t[[\"際\"],[\"際\"],[\"际\"]],\n\t[[\"陸\"],[\"陸\"],[\"陆\"]],\n\t[[\"陳\"],[\"陳\"],[\"陈\"]],\n\t[[\"陥\"],[\"陷\"],[\"陷\"]],\n\t[[\"随\"],[\"隨\"],[\"随\"]],\n\t[[\"隠\"],[\"隱\"],[\"隐\"]],\n\t[[\"隷\"],[\"隸\"],[\"隶\"]],\n\t[[\"難\"],[\"難\"],[\"难\"]],\n\t[[\"霧\"],[\"霧\"],[\"雾\"]],\n\t[[\"静\"],[\"靜\"],[\"静\"]],\n\t[[\"頂\"],[\"頂\"],[\"顶\"]],\n\t[[\"項\"],[\"項\"],[\"项\"]],\n\t[[\"順\"],[\"順\"],[\"顺\"]],\n\t[[\"頑\"],[\"頑\"],[\"顽\"]],\n\t[[\"頒\"],[\"頒\"],[\"颁\"]],\n\t[[\"領\"],[\"領\"],[\"领\"]],\n\t[[\"頻\"],[\"頻\"],[\"频\"]],\n\t[[\"題\"],[\"題\"],[\"题\"]],\n\t[[\"額\"],[\"額\"],[\"额\"]],\n\t[[\"顔\"],[\"顏\"],[\"颜\"]],\n\t[[\"風\"],[\"風\"],[\"风\"]],\n\t[[\"飛\"],[\"飛\"],[\"飞\"]],\n\t[[\"飢\"],[\"饑\"],[\"饥\"]],\n\t[[\"飯\"],[\"飯\"],[\"饭\"]],\n\t[[\"飲\"],[\"飲\"],[\"饮\"]],\n\t[[\"飼\"],[\"飼\"],[\"饲\"]],\n\t[[\"飽\"],[\"飽\"],[\"饱\"]],\n\t[[\"飾\"],[\"飾\"],[\"饰\"]],\n\t[[\"餓\"],[\"餓\"],[\"饿\"]],\n\t[[\"馬\"],[\"馬\"],[\"马\"]],\n\t[[\"駅\"],[\"驛\"],[\"驿\"]],\n\t[[\"駆\"],[\"驅\"],[\"驱\"]],\n\t[[\"駐\"],[\"駐\"],[\"驻\"]],\n\t[[\"騎\"],[\"騎\"],[\"骑\"]],\n\t[[\"験\"],[\"驗\"],[\"验\"]],\n\t[[\"騒\"],[\"騷\"],[\"骚\"]],\n\t[[\"騨\"],[\"驔\"],[\"驔\"]],\n\t[[\"髄\"],[\"髓\"],[\"髓\"]],\n\t[[\"魚\"],[\"魚\"],[\"鱼\"]],\n\t[[\"魯\"],[\"魯\"],[\"鲁\"]],\n\t[[\"鮮\"],[\"鮮\"],[\"鲜\"]],\n\t[[\"鯨\"],[\"鯨\"],[\"鲸\"]],\n\t[[\"鳥\"],[\"鳥\"],[\"鸟\"]],\n\t[[\"鳴\"],[\"鳴\"],[\"鸣\"]],\n\t[[\"麦\"],[\"麥\"],[\"麦\"]],\n\t[[\"黄\"],[\"黃\"],[\"黄\"]],\n\t[[\"黒\"],[\"黑\"],[\"黑\"]],\n\t[[\"黙\"],[\"默\"],[\"默\"]],\n\t[[\"齢\"],[\"齡\"],[\"龄\"]],\n];\n\n", "\n/**\n * Created by user on 2017/12/24/024.\n *\n * @see https://www.jcinfo.net/tw/tools/kanji\n * @see http://dict.variants.moe.edu.tw/variants/rbt/japan_chinese_character_tiles.rbt?pageId=2981908\n * @see https://en.wikipedia.org/wiki/List_of_j%C5%8Dy%C5%8D_kanji\n * @see https://hanzi.unihan.com.cn/CJKCompare\n * @see http://www5b.biglobe.ne.jp/%7Eharigaya/variants.html\n */\nimport { TABLE, TABLE_SAFE } from './lib/table';\nimport { TABLE as ZHJP_TABLE, TABLE_SAFE as ZHJP_TABLE_SAFE } from './lib/table';\nexport * from './lib/table';\n\nexport { TABLE, TABLE_SAFE }\nexport { ZHJP_TABLE, ZHJP_TABLE_SAFE }\n\nexport default TABLE;\n", "/**\n * Created by user on 2017/12/24/024.\n *\n * this module only do the char is exists in jp, zht, zhs\n * so don't use this module when u wanna fully zht <=> zhs\n *\n * 目前只支援 簡繁日漢字 並非全 cjk 漢字支援\n */\n\nimport { TABLE, TABLE_SAFE } from './lib/table';\n\nexport * from \"./lib/types\";\nexport * from \"./lib/index\";\n\nimport { ZHJP_TABLE, ZHJP_TABLE_SAFE } from \"@lazy-cjk/jp-table-comparison\";\nimport { IOptions } from './lib/types';\n\nexport { ZHJP_TABLE, ZHJP_TABLE_SAFE };\nexport { TABLE, TABLE_SAFE };\n\nexport const defaultOptions: IOptions = {\n\tsafe: true,\n};\n\nexport default exports as typeof import('./index');\n", "/**\n * Created by user on 2019/7/26.\n */\n\nimport { array_unique_overwrite } from 'array-hyper-unique';\nimport { KEY_JP, KEY_ZHT, KEY_ZHS, IKEY_FROM_TO } from '@lazy-cjk/jp-table-convert/lib/types';\nimport { TABLE, TABLE_SAFE } from '@lazy-cjk/jp-table-convert/lib/table';\n\nexport interface IOptions\n{\n\tsafe?: boolean,\n\tincludeSelf?: boolean,\n}\n\nexport function _fromA2B(char: string, from: IKEY_FROM_TO, to: IKEY_FROM_TO, options: IOptions = {})\n{\n\tconst _table = options && options.safe ? TABLE_SAFE : TABLE;\n\n\tif (_table[from] && _table[to])\n\t{\n\t\tlet list: string[] = [];\n\n\t\tif (_table[from][char])\n\t\t{\n\t\t\tif (_table[from][char][to])\n\t\t\t{\n\t\t\t\tlist.push(_table[from][char][to]);\n\t\t\t}\n\n\t\t\tObject.values(_table[to])\n\t\t\t\t.forEach(row => {\n\n\t\t\t\t\tif (row[from] === char && row[to])\n\t\t\t\t\t{\n\t\t\t\t\t\tlist.push(row[to]);\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t;\n\n\t\t\tif (options && options.includeSelf)\n\t\t\t{\n\t\t\t\tlist.push(char);\n\t\t\t}\n\n\t\t\tlist = array_unique_overwrite(list);\n\t\t}\n\n\t\treturn list\n\t}\n\n\tthrow new RangeError(`${from}, ${to} is not exists in TABLE`)\n}\n\nexport function jp2zht(char: string, options?: IOptions)\n{\n\treturn _fromA2B(char, KEY_JP, KEY_ZHT, options)\n}\n\nexport function jp2zhs(char: string, options?: IOptions)\n{\n\treturn _fromA2B(char, KEY_JP, KEY_ZHS, options)\n}\n\nexport function zht2jp(char: string, options?: IOptions)\n{\n\treturn _fromA2B(char, KEY_ZHT, KEY_JP, options)\n}\n\nexport function zhs2jp(char: string, options?: IOptions)\n{\n\treturn _fromA2B(char, KEY_ZHS, KEY_JP, options)\n}\n\nexport function zh2jp(char: string, options?: IOptions)\n{\n\tlet arr = zht2jp(char, options)\n\t\t.concat(zhs2jp(char, options));\n\n\treturn array_unique_overwrite(arr)\n}\n\nexport function jp2zh(char: string, options?: IOptions)\n{\n\tlet arr = jp2zht(char, options)\n\t\t.concat(jp2zhs(char, options));\n\n\treturn array_unique_overwrite(arr)\n}\n\nexport function lazyAll(char: string, options?: IOptions)\n{\n\tlet arr = zh2jp(char, options)\n\t\t.reduce((a, b) => {\n\n\t\t\ta.push(b, ...jp2zh(b, options));\n\n\t\t\treturn a;\n\t\t}, [] as string[])\n\t\t.concat(jp2zh(char, options)\n\t\t\t.reduce((a, b) => {\n\n\t\t\t\ta.push(b, ...zh2jp(b, options));\n\n\t\t\t\treturn a;\n\t\t\t}, [] as string[]))\n\t;\n\n\treturn array_unique_overwrite(arr)\n}\n\nexport default exports as typeof import('./index');\n", "import { UString } from 'uni-string';\nimport { array_unique_overwrite } from 'array-hyper-unique';\n\nexport function reToStringList(re: RegExp, char: string): string[]\n{\n\tconst s = re.source\n\t\t.replace(/^.*\\[|\\].*$/ug, '')\n\t;\n\n\tconst a = UString.split(s, '').concat(char).sort();\n\n\treturn array_unique_overwrite(a);\n}\n", "/**\n * Created by user on 2020/5/22.\n */\n\nimport { array_unique, array_unique_overwrite } from 'array-hyper-unique';\nimport { reToStringList } from './util';\n\nexport function _greedyTableBuild(data: [RegExp, string][] | readonly (readonly [RegExp, string])[]): {\n\n\t_greedyTableCacheRegexp: readonly (readonly [RegExp, string])[];\n\t_greedyTableCacheMap: Map<string, readonly string[]>;\n\t_greedyTableCacheTest: RegExp;\n}\n{\n\t// @ts-ignore\n\tconst _greedyTableCacheRegexp: [RegExp, string][] = data;\n\n\tlet _greedyTableCacheMap: Map<string, string[]>;\n\tlet _greedyTableCacheTest: RegExp;\n\n\t_greedyTableCacheMap = new Map<string, string[]>();\n\n\tconst arr = _greedyTableCacheRegexp\n\t\t.reduce(function (arr, r)\n\t\t{\n\t\t\tconst a = reToStringList(r[0], r[1])\n\n\t\t\ta.forEach(c =>\n\t\t\t{\n\t\t\t\t_greedyTableCacheMap.set(c, a)\n\t\t\t});\n\n\t\t\tarr.push(...a);\n\n\t\t\treturn arr;\n\t\t}, [] as string[])\n\t;\n\n\t_greedyTableCacheTest = new RegExp(`[${array_unique(arr).join('')}]`, 'u');\n\n\treturn {\n\t\t_greedyTableCacheRegexp,\n\t\t_greedyTableCacheMap,\n\t\t_greedyTableCacheTest,\n\t};\n}\n", "/**\n * Created by user on 2020/5/22.\n */\n\nexport const _greedyTableCacheRegexp: readonly (readonly [RegExp, string])[] = [\n\n\t[/[噁悪惡]/g, '恶'],\n\t[/[繋繫係]/g, '系'],\n\t[/[糊鬍葫衚楜煳]/g, '胡'],\n\t[/[儅噹當]/g, '当'],\n\t[/[復複覆]/g, '复'],\n\t[/[囌蘇甦]/g, '苏'],\n\t[/[採彩睬踩埰綵䌽倸]/g, '采'],\n\t[/[囉啰羅㑩儸萝蘿箩籮]/g, '罗'],\n\t[/[浏瀏劉]/g, '刘'],\n\t[/[劵卷巻捲蜷]/g, '券'],\n\t[/[划劃畫]/g, '画'],\n\t[/[鬥闘鬭鬪]/g, '斗'],\n\t[/[乾亁乹幹]/g, '干'],\n\t[/[図图]/g, '圖'],\n\t[/[暦曆歴歷]/g, '历'],\n\t[/[麪麵麺]/g, '面'],\n\t[/[讃讚賛贊赞]/g, '赞'],\n\t[/[發髪髮]/g, '发'],\n\t[/[侭儘盡]/g, '尽'],\n\t[/[優忧憂]/g, '忧'],\n\t[/[俱倶]/g, '具'],\n\t[/[之的得]/g, 'の'],\n\t[/[與与]/g, 'と'],\n\t[/[她他牠祂佗]/g, '它'],\n\t[/[支隻枝祇]/g, '只'],\n\t[/[炮砲炰]/g, '泡'],\n\t[/[仲㊥]/g, '中'],\n\t[/[原]/g, '元'],\n\t[/[迴廻]/g, '回'],\n\t[/[避闢]/g, '辟'],\n\t[/[滷鹵卤鲁]/g, '魯'],\n\t[/[檯臺颱儓]/g, '台'],\n\t[/[宻祕秘]/g, '密'],\n\t[/[謎谜]/g, '迷'],\n\t[/[砂莎紗纱]/g, '沙'],\n\t[/[編篇编]/g, '篇'],\n\t[/[冶]/g, '治'],\n\t[/[䃛炼練练錬鍊鏈链𧹯𫔀]/ug, '煉'],\n\t[/[亞亚婭娅椏桠亜]/ug, '亚'],\n\t[/[塞賽]/ug, '赛'],\n\t[/[腾騰籐籘]/ug, '藤'],\n\t[/[妳祢禰]/ug, '你'],\n\t[/[喰飠⻞飧蝕蚀]/ug, '食'],\n\t[/[瑪馬玛]/ug, '马'],\n\t[/[餸餚]/ug, '餚'],\n\t[/[裸]/ug, '果'],\n\t[/[凱凯鎧铠]/ug, '凱'],\n\t[/[帖贴]/ug, '貼'],\n\t[/[甚]/ug, '什'],\n\t[/[聯联連连]/ug, '連'],\n\t[/[像]/ug, '象'],\n\t[/[藉]/ug, '借'],\n\t[/[蕾鐳镭靁]/ug, '雷'],\n\t[/[訂订釘钉]/ug, '定'],\n\t[/[嚮]/ug, '向'],\n\t[/[糸糹丝]/ug, '絲'],\n\t[/[筒]/ug, '桶'],\n\t[/[兹玆滋]/ug, '茲'],\n\t[/[呐訥讷]/ug, '吶'],\n\t[/[穀糓]/ug, '谷'],\n\t[/[两兩倆俩]/ug, '両'],\n\t[/[帳賬账]/ug, '帐'],\n\t[/[板版闆阪]/ug, '坂'],\n\t[/[待獃]/ug, '呆'],\n\t[/[熔鎔镕融螎]/ug, '溶'],\n\t[/[匯汇]/ug, '彙'],\n\t[/[彿仏拂弗]/ug, '佛'],\n\t[/[阿]/ug, '啊'],\n\t[/[家]/ug, '傢'],\n\t[/[曝爆]/ug, '暴'],\n\t[/[䋄䋞冈刚剛堈岗岡崗綱網纲缸鋼钢]/ug, '网'],\n\t[/[註]/ug, '注'],\n\t[/[灌贯潅]/ug, '貫'],\n\t[/[倒]/ug, '到'],\n\t[/[儭秤称稱衬襯]/ug, '平'],\n\t[/[勛勲勳]/ug, '勋'],\n\t[/[麗丽莉]/ug, '利'],\n\t[/[已巳]/ug, '己'],\n\t[/[嗬]/ug, '呵'],\n\t[/[哊哟唷唹喲]/ug, '呦'],\n\t[/[婕杰洁潔絜]/ug, '傑'],\n\t[/[嘻]/ug, '嬉'],\n\t[/[痲痳嘛]/ug, '麻'],\n\t[/[狗]/ug, '犬'],\n\n\t[/[亙恆恒]/ug, '亘'],\n\t[/[附副]/ug, '付'],\n\t[/[伽枷珈迦]/ug, '加'],\n\t[/[褔]/ug, '福'],\n\t[/[捱]/ug, '挨'],\n\t[/[拼]/ug, '拚'],\n\t[/[飄飘飃]/ug, '漂'],\n\t[/[佔沾]/ug, '占'],\n\t[/[気氣汽滊炁]/ug, '气'],\n\t[/[撩遼]/ug, '辽'],\n\t[/[做]/ug, '作'],\n\t[/[搜捜]/ug, '蒐'],\n\t[/[叟傁]/ug, '叟'],\n\t[/[谢榭]/ug, '謝'],\n\t[/[形行]/ug, '型'],\n\t[/[雇頋顧顾]/ug, '僱'],\n\t[/[廬芦蘆]/ug, '庐'],\n\t[/[耽躭]/ug, '眈'],\n\t[/[傹竟競竸誩𥪰𧡟𧫘𧫙𧮣𨐼]/ug, '竞'],\n\t[/[殖]/ug, '植'],\n\t[/[佬姥]/ug, '老'],\n\t[/[倖]/ug, '幸'],\n\t[/[㠪炬矩鉅钜榘]/ug, '巨'],\n\n\t[/[刴剁剐剮劏]/ug, '㓥'],\n\t[/[枏楠]/ug, '南'],\n\t[/[璐𡽘𨱴]/ug, '路'],\n\t[/[侂拓杔託讬拖拕]/ug, '托'],\n\t[/[悕睎稀]/ug, '希'],\n\t[/[帼幗国國]/ug, '囯'],\n\t[/[返]/ug, '反'],\n\t[/[扬揚旸暘杨楊炀烊煬阳陽]/ug, '佯'],\n\t[/[来莱萊]/ug, '來'],\n\t[/[葆堡褓緥]/ug, '保'],\n\t[/[渡]/ug, '度'],\n\t[/[剳札箚紮劄]/ug, '扎'],\n\t[/[媞提湜禔緹缇隄]/ug, '堤'],\n\t[/[臘蜡蠟]/ug, '腊'],\n\t[/[鬱𨚼𨟝]/ug, '郁'],\n\t[/[擀杆桿]/ug, '扞'],\n\t[/[脼郞𥇑]/ug, '郎'],\n\t[/[芭]/ug, '巴'],\n\t[/[涅湼]/ug, '捏'],\n\t[/[择擇沢泽澤]/ug, '択'],\n\t[/[幵開]/ug, '开'],\n\t[/[珮]/ug, '佩'],\n\t[/[喩籲龥吁]/ug, '喻'],\n\t[/[值値]/ug, '直'],\n\t[/[臓臟贓赃髒]/ug, '脏'],\n\t[/[㊤]/ug, '上'],\n\t[/[㊦]/ug, '下'],\n\t[/[唿]/ug, '呼'],\n\t[/[詳详]/ug, '祥'],\n\t[/[妮泥]/ug, '尼'],\n\t[/[剋尅]/ug, '克'],\n\t[/[撥播]/ug, '拨'],\n\t[/[挿揷]/ug, '插'],\n\t[/[汀]/ug, '丁'],\n\t[/[娜哪]/ug, '那'],\n\t[/[菈]/ug, '拉'],\n\t[/[玲琳鈴铃淋]/ug, '林'],\n\t[/[銘铭]/ug, '名'],\n\t[/[齣]/ug, '出'],\n\t[/[欸誒诶]/ug, '唉'],\n\t[/[哞姆]/ug, '呣'],\n\t[/[㖿吔]/ug, '耶'],\n\t[/[魅]/ug, '媚'],\n\t[/[扉斐緋绯翡菲蜚誹诽霏非]/ug, '匪'],\n\t[/[衩釵钗]/ug, '叉'],\n\t[/[淇琪祺]/ug, '其'],\n\t[/[壇談譚谈谭]/ug, '坛'],\n\t[/[材柴]/ug, '才'],\n\t[/[唸]/ug, '念'],\n\t[/[趾]/ug, '指'],\n\t[/[仕]/ug, '士'],\n\t[/[嬢孃]/ug, '娘'],\n\t[/[哑唖瘂痖]/ug, '啞'],\n\t[/[动働仂]/ug, '動'],\n\t[/[查査]/ug, '察'],\n\t[/[鉄銕鐡鐵铁𨫓]/ug, '鉃'],\n\t[/[归歸皈]/ug, '帰'],\n\t[/[瘡疮創]/ug, '创'],\n\t[/[拷烤]/ug, '考'],\n\t[/[込]/ug, '入'],\n\t[/[伦侖倫]/ug, '仑'],\n\t[/[仔]/ug, '子'],\n\t[/[彎湾灣]/ug, '弯'],\n\t[/[荧萤蛍螢]/ug, '熒'],\n\t[/[挣掙爭]/ug, '争'],\n\t[/[漲胀脹]/ug, '涨'],\n\t[/[無冇沒没]/ug, '无'],\n\t[/[噸訰]/ug, '吨'],\n\t[/[鈎鉤钩]/ug, '勾'],\n\t[/[沉]/ug, '沈'],\n\t[/[畳疊迭]/ug, '叠'],\n\t[/[繮缰韁僵疆]/ug, '殭'],\n\t[/[背]/ug, '揹'],\n\t[/[団團糰]/ug, '团'],\n\t[/[榚]/ug, '糕'],\n\t[/[須须鬚]/ug, '需'],\n\t[/[紆紓纡纾]/ug, '抒'],\n\t[/[洲]/ug, '州'],\n\t[/[厰場廠场]/ug, '厂'],\n\t[/[筿篠]/ug, '筱'],\n\t[/[跟]/ug, '根'],\n\n\t[/[㬅嫚曼熳蔓]/ug, '漫'],\n\t[/[昇陞]/ug, '升'],\n\n\t[/[煙腌菸醃]/ug, '烟'],\n\t[/[錄録陆陸]/ug, '录'],\n\t[/[擄虏虜]/ug, '掳'],\n\t[/[翹跷蹺]/ug, '翘'],\n\t[/[腳角]/ug, '脚'],\n\n\t[/[词辞辭]/ug, '詞'],\n\t[/[意義]/ug, '义'],\n\t[/[梗]/ug, '哏'],\n\t[/[咫尺]/ug, '呎'],\n\t[/[怜憐]/ug, '伶'],\n\t[/[荽萎]/ug, '委'],\n\t[/[岺嶺阾領领]/ug, '岭'],\n\t[/[決絕絶绝訣诀]/ug, '决'],\n\t[/[嶽𡶦]/ug, '岳'],\n\t[/[授]/ug, '受'],\n\t[/[線线缐腺]/ug, '綫'],\n\t[/[壱壹]/ug, '一'],\n\t[/[荒]/ug, '慌'],\n\t[/[廷]/ug, '庭'],\n\t[/[喧暄諠煊]/ug, '宣'],\n\t[/[略畧]/ug, '掠'],\n\t[/[牋笺签箋簽籖籤]/ug, '䇳'],\n\t[/[幺庅麼麽]/ug, '么'],\n\t[/[芒茫]/ug, '杧'],\n\t[/[跃躍]/ug, '趯'],\n\t[/[弥彌瀰弭㳽]/ug, '米'],\n\t[/[袜襪]/ug, '抹'],\n\t[/[囪囱窓窗窻]/ug, '䆫'],\n\t[/[凾涵]/ug, '函'],\n\t[/[耸聳]/ug, '悚'],\n\t[/[落]/ug, '洛'],\n\t[/[標鏢鑣镳镖]/ug, '标'],\n\t[/[恠]/ug, '怪'],\n\t[/[併倂并幷竝𠀤]/ug, '並'],\n\t[/[鶫鸫𪂝]/ug, '鶇'],\n\n\t[/[鉑铂]/ug, '白'],\n\t[/[弔]/ug, '吊'],\n\t[/[誡诫𢌵]/ug, '戒'],\n\t[/[窟]/ug, '堀'],\n\t[/[厲砺礪]/ug, '厉'],\n\t[/[島嶋]/ug, '岛'],\n\n\t[/[再]/ug, '在'],\n\t[/[淪輪轮]/ug, '沦'],\n\n\t[/[磨]/ug, '摩'],\n\n\t[/[傍彷徬]/ug, '旁'],\n\t[/[戇灨贑贛赣𥫔𧹄𧹉]/ug, '戆'],\n\n\t[/[萨蕯薩]/ug, '撒'],\n\t[/[崕漄厓]/ug, '崖'],\n\t[/[巌壧嵒巖巗碞礹𡾏]/ug, '岩'],\n\n\t[/[譟]/ug, '噪'],\n\n\t[/[彫琱雕鵰]/ug, '凋'],\n\t[/[衊]/ug, '蔑'],\n\n\t[/[汚污誣诬]/ug, '汙'],\n\n\t[/[闇黯]/ug, '暗'],\n\n\t[/[幪懞懵曚朦濛矇]/ug, '蒙'],\n\n\t[/[摆襬]/ug, '擺'],\n\n\t[/[搀摻攙]/ug, '掺'],\n\n\t[/[啣銜]/ug, '衔'],\n\t[/[媮]/ug, '偷'],\n\n\t[/[漩碹鏇镟]/ug, '旋'],\n\t[/[澹]/ug, '淡'],\n\t[/[惶徨]/ug, '皇'],\n\n\t[/[鞦]/ug, '秋'],\n\t[/[閧鬨]/ug, '哄'],\n\n\t[/[嗯摁]/ug, '恩'],\n\n\t[/[楔偰]/ug, '契'],\n\t[/[座]/ug, '坐'],\n\n\t[/[崎嵜碕]/ug, '埼'],\n\n\t[/[徴徵怔愣]/ug, '征'],\n\n\t[/[份芬]/ug, '分'],\n\n\t[/[嫒嬡爱瑷璦]/ug, '愛'],\n\n\t[/[性]/ug, '姓'],\n\n\t[/[嬌驕骄]/ug, '娇'],\n\n\t[/[招]/ug, '召'],\n\n\t[/[薇]/ug, '微'],\n\n\t[/[熬璈遨傲]/ug, '敖'],\n\n\t[/[奧澳袄襖]/ug, '奥'],\n\n\t[/[震]/ug, '振'],\n\t[/[恬]/ug, '忝'],\n\n\t[/[擔檐簷]/ug, '担'],\n\n\t[/[瞑]/ug, '冥'],\n\t[/[妇媍]/ug, '婦'],\n\n\t[/[䰗阄鬮𨷺]/ug, '䦰'],\n\n\t[/[箒菷掃扫]/ug, '帚'],\n\n\t[/[拣揀撿检検檢]/ug, '捡'],\n\n\t[/[濂簾]/ug, '帘'],\n\n\t[/[妓技]/ug, '伎'],\n\n\t[/[珐琺]/ug, '法'],\n\n\t[/[暉煇輝辉𪸩]/ug, '晖'],\n\t[/[炫眩]/ug, '昡'],\n\n\t[/[逾]/ug, '踰'],\n\n\t[/[茜]/ug, '西'],\n\n\t[/[堪]/ug, '勘'],\n\n\t[/[篱籬]/ug, '筣'],\n\t[/[箆篦]/ug, '笓'],\n\n\t[/[倉怆愴沧滄舱艙苍蒼]/ug, '仓'],\n\n\t[/[幾机機]/ug, '几'],\n\n\t[/[徹澈]/ug, '彻'],\n\n\t[/[個各箇]/ug, '个'],\n\n\t[/[乆灸玖镹]/ug, '久'],\n\n\t[/[鳞麐麟]/ug, '鱗'],\n\n\t[/[翦]/ug, '剪'],\n\n\t[/[僖憙禧囍]/ug, '喜'],\n\n\t[/[㷉慰熨罻]/ug, '尉'],\n\n\t[/[勐]/ug, '猛'],\n\n\t[/[湌飡]/ug, '餐'],\n\n\t[/[逬]/ug, '迸'],\n\n\t[/[埜]/ug, '野'],\n\n\t[/[吐]/ug, '土'],\n\n\t[/[婉惌琬碗]/ug, '宛'],\n\n\t[/[鈺]/ug, '玉'],\n\t[/[妤兪伃諭谕瑜]/ug, '俞'],\n\t[/[毓]/ug, '育'],\n\n\t[/[椿樁]/ug, '桩'],\n\n\t[/[旦]/ug, '但'],\n\n\t[/[嵌]/ug, '崁'],\n\n\t[/[踏]/ug, '塌'],\n\n\t[/[陌默黙]/ug, '漠'],\n\n\t[/[絀绌黜]/ug, '拙'],\n\n\t[/[洽]/ug, '恰'],\n\n\t[/[鱼渔漁䁩䐳䲆𩵋𤉯𤋳𩥭𩺰]/ug, '魚'],\n\n\t[/[奖奨獎奬]/ug, '奖'],\n\n\t[/[劫刦𠛗刧刼𠉨㤼𠞏]/ug, '劫'],\n\n\t[/[吒咤詫诧]/ug, '吒'],\n\n\t[/[殒殞磒陨隕]/ug, '殒'],\n\n\t[/[佰百𦣻]/ug, '百'],\n\n\t[/[滥濫烂爛]/ug, '滥'],\n\n\t[/[勿毋]/ug, '勿'],\n\n\t[/[裏裡里𥚃]/ug, '裏'],\n\n\t[/[曵抴栧拽]/ug, '曳'],\n\n\t[/[捶搥椎槌錘鎚锤]/ug, '捶'],\n\n\t[/[薫薰燻熏]/ug, '熏'],\n\n]\n", "import { _greedyTableCacheRegexp } from './table/re';\n\nexport { _greedyTableCacheRegexp };\n\nexport const _greedyTableCacheTest = /[噁恶悪惡係系繋繫楜煳糊胡葫衚鬍儅噹当當复復複覆囌甦苏蘇䌽倸埰彩採睬綵踩采㑩儸啰囉箩籮罗羅萝蘿刘劉浏瀏券劵卷巻捲蜷划劃画畫斗闘鬥鬪鬭乹乾亁干幹図图圖历暦曆歴歷面麪麵麺讃讚賛贊赞发發髪髮侭儘尽盡優忧憂俱倶具の之得的と与與他佗她它牠祂只支枝祇隻泡炮炰砲㊥中仲元原回廻迴辟避闢卤滷魯鲁鹵儓台檯臺颱宻密祕秘謎谜迷沙砂紗纱莎篇編编冶治䃛炼煉練练錬鍊鏈链𧹯𫔀亚亜亞娅婭桠椏塞賽赛籐籘腾藤騰你妳祢禰⻞喰蚀蝕食飠飧玛瑪馬马餚餸果裸凯凱鎧铠帖貼贴什甚联聯连連像象借藉蕾鐳镭雷靁定訂订釘钉向嚮丝糸糹絲桶筒兹滋玆茲吶呐訥讷穀糓谷両两俩倆兩帐帳賬账坂板版闆阪呆待獃溶熔融螎鎔镕匯彙汇仏佛弗彿拂啊阿傢家暴曝爆䋄䋞冈刚剛堈岗岡崗綱網纲缸网鋼钢注註潅灌貫贯倒到儭平秤称稱衬襯勋勛勲勳丽利莉麗己已巳呵嗬呦哊哟唷唹喲傑婕杰洁潔絜嘻嬉嘛痲痳麻犬狗亘亙恆恒付副附伽加枷珈迦福褔挨捱拚拼漂飃飄飘佔占沾气気氣汽滊炁撩辽遼作做捜搜蒐傁叟榭謝谢型形行僱雇頋顧顾庐廬芦蘆眈耽躭傹竞竟競竸誩𥪰𧡟𧫘𧫙𧮣𨐼植殖佬姥老倖幸㠪巨榘炬矩鉅钜㓥刴剁剐剮劏南枏楠璐路𡽘𨱴侂托拓拕拖杔託讬希悕睎稀囯国國帼幗反返佯扬揚旸暘杨楊炀烊煬阳陽來来莱萊保堡緥葆褓度渡剳劄扎札箚紮堤媞提湜禔緹缇隄腊臘蜡蠟郁鬱𨚼𨟝扞擀杆桿脼郎郞𥇑巴芭捏涅湼択择擇沢泽澤幵开開佩珮吁喩喻籲龥値值直脏臓臟贓赃髒㊤上㊦下呼唿祥詳详妮尼泥克剋尅拨撥播挿插揷丁汀哪娜那拉菈林淋玲琳鈴铃名銘铭出齣唉欸誒诶呣哞姆㖿吔耶媚魅匪扉斐緋绯翡菲蜚誹诽霏非叉衩釵钗其淇琪祺坛壇談譚谈谭才材柴唸念指趾仕士娘嬢孃哑唖啞痖瘂仂働动動察查査鉃鉄銕鐡鐵铁𨫓帰归歸皈创創疮瘡拷烤考入込仑伦侖倫仔子弯彎湾灣熒荧萤蛍螢争挣掙爭涨漲胀脹冇无沒没無吨噸訰勾鈎鉤钩沈沉叠畳疊迭僵殭疆繮缰韁揹背团団團糰榚糕需須须鬚抒紆紓纡纾州洲厂厰场場廠筱筿篠根跟㬅嫚曼漫熳蔓升昇陞烟煙腌菸醃录錄録陆陸掳擄虏虜翘翹跷蹺脚腳角詞词辞辭义意義哏梗呎咫尺伶怜憐委荽萎岭岺嶺阾領领决決絕絶绝訣诀岳嶽𡶦受授綫線线缐腺一壱壹慌荒庭廷喧宣暄煊諠掠略畧䇳牋笺签箋簽籖籤么幺庅麼麽杧芒茫趯跃躍㳽弥弭彌瀰米抹袜襪䆫囪囱窓窗窻函凾涵悚耸聳洛落标標鏢鑣镖镳怪恠並併倂并幷竝𠀤鶇鶫鸫𪂝白鉑铂吊弔戒誡诫𢌵堀窟厉厲砺礪岛島嶋再在沦淪輪轮摩磨傍彷徬旁戆戇灨贑贛赣𥫔𧹄𧹉撒萨蕯薩厓崕崖漄壧岩嵒巌巖巗碞礹𡾏噪譟凋彫琱雕鵰蔑衊汙汚污誣诬暗闇黯幪懞懵曚朦濛矇蒙摆擺襬掺搀摻攙啣衔銜偷媮旋漩碹鏇镟淡澹徨惶皇秋鞦哄閧鬨嗯恩摁偰契楔坐座埼崎嵜碕征徴徵怔愣份分芬嫒嬡愛爱瑷璦姓性娇嬌驕骄召招微薇傲敖熬璈遨奥奧澳袄襖振震忝恬担擔檐簷冥瞑妇婦媍䦰䰗阄鬮𨷺帚扫掃箒菷拣捡揀撿检検檢帘濂簾伎妓技法珐琺晖暉煇輝辉𪸩昡炫眩踰逾茜西勘堪筣篱籬笓箆篦仓倉怆愴沧滄舱艙苍蒼几幾机機彻徹澈个個各箇久乆灸玖镹鱗鳞麐麟剪翦僖喜囍憙禧㷉尉慰熨罻勐猛湌飡餐迸逬埜野吐土婉宛惌琬碗玉鈺伃俞兪妤瑜諭谕毓育桩椿樁但旦崁嵌塌踏漠陌默黙拙絀绌黜恰洽䁩䐳䲆渔漁魚鱼𤉯𤋳𩥭𩵋𩺰奖奨奬獎㤼刦刧刼劫𠉨𠛗𠞏吒咤詫诧殒殞磒陨隕佰百𦣻滥濫烂爛勿毋裏裡里𥚃抴拽曳曵栧捶搥椎槌錘鎚锤熏燻薫薰]/u;\n\nexport const _greedyTableCacheMap = new Map<string, readonly string[]>([\n\t[\"噁\", [\"噁\",\"恶\",\"悪\",\"惡\"]],\n\t[\"恶\", [\"噁\",\"恶\",\"悪\",\"惡\"]],\n\t[\"悪\", [\"噁\",\"恶\",\"悪\",\"惡\"]],\n\t[\"惡\", [\"噁\",\"恶\",\"悪\",\"惡\"]],\n\t[\"係\", [\"係\",\"系\",\"繋\",\"繫\"]],\n\t[\"系\", [\"係\",\"系\",\"繋\",\"繫\"]],\n\t[\"繋\", [\"係\",\"系\",\"繋\",\"繫\"]],\n\t[\"繫\", [\"係\",\"系\",\"繋\",\"繫\"]],\n\t[\"楜\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"煳\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"糊\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"胡\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"葫\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"衚\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"鬍\", [\"楜\",\"煳\",\"糊\",\"胡\",\"葫\",\"衚\",\"鬍\"]],\n\t[\"儅\", [\"儅\",\"噹\",\"当\",\"當\"]],\n\t[\"噹\", [\"儅\",\"噹\",\"当\",\"當\"]],\n\t[\"当\", [\"儅\",\"噹\",\"当\",\"當\"]],\n\t[\"當\", [\"儅\",\"噹\",\"当\",\"當\"]],\n\t[\"复\", [\"复\",\"復\",\"複\",\"覆\"]],\n\t[\"復\", [\"复\",\"復\",\"複\",\"覆\"]],\n\t[\"複\", [\"复\",\"復\",\"複\",\"覆\"]],\n\t[\"覆\", [\"复\",\"復\",\"複\",\"覆\"]],\n\t[\"囌\", [\"囌\",\"甦\",\"苏\",\"蘇\"]],\n\t[\"甦\", [\"囌\",\"甦\",\"苏\",\"蘇\"]],\n\t[\"苏\", [\"囌\",\"甦\",\"苏\",\"蘇\"]],\n\t[\"蘇\", [\"囌\",\"甦\",\"苏\",\"蘇\"]],\n\t[\"䌽\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"倸\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"埰\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"彩\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"採\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"睬\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"綵\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"踩\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"采\", [\"䌽\",\"倸\",\"埰\",\"彩\",\"採\",\"睬\",\"綵\",\"踩\",\"采\"]],\n\t[\"㑩\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"儸\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"啰\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"囉\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"箩\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"籮\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"罗\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"羅\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"萝\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"蘿\", [\"㑩\",\"儸\",\"啰\",\"囉\",\"箩\",\"籮\",\"罗\",\"羅\",\"萝\",\"蘿\"]],\n\t[\"刘\", [\"刘\",\"劉\",\"浏\",\"瀏\"]],\n\t[\"劉\", [\"刘\",\"劉\",\"浏\",\"瀏\"]],\n\t[\"浏\", [\"刘\",\"劉\",\"浏\",\"瀏\"]],\n\t[\"瀏\", [\"刘\",\"劉\",\"浏\",\"瀏\"]],\n\t[\"券\", [\"券\",\"劵\",\"卷\",\"巻\",\"捲\",\"蜷\"]],\n\t[\"劵\", [\"券\",\"劵\",\"卷\",\"巻\",\"捲\",\"蜷\"]],\n\t[\"卷\", [\"券\",\"劵\",\"卷\",\"巻\",\"捲\",\"蜷\"]],\n\t[\"巻\", [\"券\",\"劵\",\"卷\",\"巻\",\"捲\",\"蜷\"]],\n\t[\"捲\", [\"券\",\"劵\",\"卷\",\"巻\",\"捲\",\"蜷\"]],\n\t[\"蜷\", [\"券\",\"劵\",\"卷\",\"巻\",\"捲\",\"蜷\"]],\n\t[\"划\", [\"划\",\"劃\",\"画\",\"畫\"]],\n\t[\"劃\", [\"划\",\"劃\",\"画\",\"畫\"]],\n\t[\"画\", [\"划\",\"劃\",\"画\",\"畫\"]],\n\t[\"畫\", [\"划\",\"劃\",\"画\",\"畫\"]],\n\t[\"斗\", [\"斗\",\"闘\",\"鬥\",\"鬪\",\"鬭\"]],\n\t[\"闘\", [\"斗\",\"闘\",\"鬥\",\"鬪\",\"鬭\"]],\n\t[\"鬥\", [\"斗\",\"闘\",\"鬥\",\"鬪\",\"鬭\"]],\n\t[\"鬪\", [\"斗\",\"闘\",\"鬥\",\"鬪\",\"鬭\"]],\n\t[\"鬭\", [\"斗\",\"闘\",\"鬥\",\"鬪\",\"鬭\"]],\n\t[\"乹\", [\"乹\",\"乾\",\"亁\",\"干\",\"幹\"]],\n\t[\"乾\", [\"乹\",\"乾\",\"亁\",\"干\",\"幹\"]],\n\t[\"亁\", [\"乹\",\"乾\",\"亁\",\"干\",\"幹\"]],\n\t[\"干\", [\"乹\",\"乾\",\"亁\",\"干\",\"幹\"]],\n\t[\"幹\", [\"乹\",\"乾\",\"亁\",\"干\",\"幹\"]],\n\t[\"図\", [\"図\",\"图\",\"圖\"]],\n\t[\"图\", [\"図\",\"图\",\"圖\"]],\n\t[\"圖\", [\"図\",\"图\",\"圖\"]],\n\t[\"历\", [\"历\",\"暦\",\"曆\",\"歴\",\"歷\"]],\n\t[\"暦\", [\"历\",\"暦\",\"曆\",\"歴\",\"歷\"]],\n\t[\"曆\", [\"历\",\"暦\",\"曆\",\"歴\",\"歷\"]],\n\t[\"歴\", [\"历\",\"暦\",\"曆\",\"歴\",\"歷\"]],\n\t[\"歷\", [\"历\",\"暦\",\"曆\",\"歴\",\"歷\"]],\n\t[\"面\", [\"面\",\"麪\",\"麵\",\"麺\"]],\n\t[\"麪\", [\"面\",\"麪\",\"麵\",\"麺\"]],\n\t[\"麵\", [\"面\",\"麪\",\"麵\",\"麺\"]],\n\t[\"麺\", [\"面\",\"麪\",\"麵\",\"麺\"]],\n\t[\"讃\", [\"讃\",\"讚\",\"賛\",\"贊\",\"赞\"]],\n\t[\"讚\", [\"讃\",\"讚\",\"賛\",\"贊\",\"赞\"]],\n\t[\"賛\", [\"讃\",\"讚\",\"賛\",\"贊\",\"赞\"]],\n\t[\"贊\", [\"讃\",\"讚\",\"賛\",\"贊\",\"赞\"]],\n\t[\"赞\", [\"讃\",\"讚\",\"賛\",\"贊\",\"赞\"]],\n\t[\"发\", [\"发\",\"發\",\"髪\",\"髮\"]],\n\t[\"發\", [\"发\",\"發\",\"髪\",\"髮\"]],\n\t[\"髪\", [\"发\",\"發\",\"髪\",\"髮\"]],\n\t[\"髮\", [\"发\",\"發\",\"髪\",\"髮\"]],\n\t[\"侭\", [\"侭\",\"儘\",\"尽\",\"盡\"]],\n\t[\"儘\", [\"侭\",\"儘\",\"尽\",\"盡\"]],\n\t[\"尽\", [\"侭\",\"儘\",\"尽\",\"盡\"]],\n\t[\"盡\", [\"侭\",\"儘\",\"尽\",\"盡\"]],\n\t[\"優\", [\"優\",\"忧\",\"憂\"]],\n\t[\"忧\", [\"優\",\"忧\",\"憂\"]],\n\t[\"憂\", [\"優\",\"忧\",\"憂\"]],\n\t[\"俱\", [\"俱\",\"倶\",\"具\"]],\n\t[\"倶\", [\"俱\",\"倶\",\"具\"]],\n\t[\"具\", [\"俱\",\"倶\",\"具\"]],\n\t[\"の\", [\"の\",\"之\",\"得\",\"的\"]],\n\t[\"之\", [\"の\",\"之\",\"得\",\"的\"]],\n\t[\"得\", [\"の\",\"之\",\"得\",\"的\"]],\n\t[\"的\", [\"の\",\"之\",\"得\",\"的\"]],\n\t[\"と\", [\"と\",\"与\",\"與\"]],\n\t[\"与\", [\"と\",\"与\",\"與\"]],\n\t[\"與\", [\"と\",\"与\",\"與\"]],\n\t[\"他\", [\"他\",\"佗\",\"她\",\"它\",\"牠\",\"祂\"]],\n\t[\"佗\", [\"他\",\"佗\",\"她\",\"它\",\"牠\",\"祂\"]],\n\t[\"她\", [\"他\",\"佗\",\"她\",\"它\",\"牠\",\"祂\"]],\n\t[\"它\", [\"他\",\"佗\",\"她\",\"它\",\"牠\",\"祂\"]],\n\t[\"牠\", [\"他\",\"佗\",\"她\",\"它\",\"牠\",\"祂\"]],\n\t[\"祂\", [\"他\",\"佗\",\"她\",\"它\",\"牠\",\"祂\"]],\n\t[\"只\", [\"只\",\"支\",\"枝\",\"祇\",\"隻\"]],\n\t[\"支\", [\"只\",\"支\",\"枝\",\"祇\",\"隻\"]],\n\t[\"枝\", [\"只\",\"支\",\"枝\",\"祇\",\"隻\"]],\n\t[\"祇\", [\"只\",\"支\",\"枝\",\"祇\",\"隻\"]],\n\t[\"隻\", [\"只\",\"支\",\"枝\",\"祇\",\"隻\"]],\n\t[\"泡\", [\"泡\",\"炮\",\"炰\",\"砲\"]],\n\t[\"炮\", [\"泡\",\"炮\",\"炰\",\"砲\"]],\n\t[\"炰\", [\"泡\",\"炮\",\"炰\",\"砲\"]],\n\t[\"砲\", [\"泡\",\"炮\",\"炰\",\"砲\"]],\n\t[\"㊥\", [\"㊥\",\"中\",\"仲\"]],\n\t[\"中\", [\"㊥\",\"中\",\"仲\"]],\n\t[\"仲\", [\"㊥\",\"中\",\"仲\"]],\n\t[\"元\", [\"元\",\"原\"]],\n\t[\"原\", [\"元\",\"原\"]],\n\t[\"回\", [\"回\",\"廻\",\"迴\"]],\n\t[\"廻\", [\"回\",\"廻\",\"迴\"]],\n\t[\"迴\", [\"回\",\"廻\",\"迴\"]],\n\t[\"辟\", [\"辟\",\"避\",\"闢\"]],\n\t[\"避\", [\"辟\",\"避\",\"闢\"]],\n\t[\"闢\", [\"辟\",\"避\",\"闢\"]],\n\t[\"卤\", [\"卤\",\"滷\",\"魯\",\"鲁\",\"鹵\"]],\n\t[\"滷\", [\"卤\",\"滷\",\"魯\",\"鲁\",\"鹵\"]],\n\t[\"魯\", [\"卤\",\"滷\",\"魯\",\"鲁\",\"鹵\"]],\n\t[\"鲁\", [\"卤\",\"滷\",\"魯\",\"鲁\",\"鹵\"]],\n\t[\"鹵\", [\"卤\",\"滷\",\"魯\",\"鲁\",\"鹵\"]],\n\t[\"儓\", [\"儓\",\"台\",\"檯\",\"臺\",\"颱\"]],\n\t[\"台\", [\"儓\",\"台\",\"檯\",\"臺\",\"颱\"]],\n\t[\"檯\", [\"儓\",\"台\",\"檯\",\"臺\",\"颱\"]],\n\t[\"臺\", [\"儓\",\"台\",\"檯\",\"臺\",\"颱\"]],\n\t[\"颱\", [\"儓\",\"台\",\"檯\",\"臺\",\"颱\"]],\n\t[\"宻\", [\"宻\",\"密\",\"祕\",\"秘\"]],\n\t[\"密\", [\"宻\",\"密\",\"祕\",\"秘\"]],\n\t[\"祕\", [\"宻\",\"密\",\"祕\",\"秘\"]],\n\t[\"秘\", [\"宻\",\"密\",\"祕\",\"秘\"]],\n\t[\"謎\", [\"謎\",\"谜\",\"迷\"]],\n\t[\"谜\", [\"謎\",\"谜\",\"迷\"]],\n\t[\"迷\", [\"謎\",\"谜\",\"迷\"]],\n\t[\"沙\", [\"沙\",\"砂\",\"紗\",\"纱\",\"莎\"]],\n\t[\"砂\", [\"沙\",\"砂\",\"紗\",\"纱\",\"莎\"]],\n\t[\"紗\", [\"沙\",\"砂\",\"紗\",\"纱\",\"莎\"]],\n\t[\"纱\", [\"沙\",\"砂\",\"紗\",\"纱\",\"莎\"]],\n\t[\"莎\", [\"沙\",\"砂\",\"紗\",\"纱\",\"莎\"]],\n\t[\"篇\", [\"篇\",\"編\",\"编\"]],\n\t[\"編\", [\"篇\",\"編\",\"编\"]],\n\t[\"编\", [\"篇\",\"編\",\"编\"]],\n\t[\"冶\", [\"冶\",\"治\"]],\n\t[\"治\", [\"冶\",\"治\"]],\n\t[\"䃛\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"炼\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"煉\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"練\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"练\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"錬\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"鍊\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"鏈\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"链\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"𧹯\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"𫔀\", [\"䃛\",\"炼\",\"煉\",\"練\",\"练\",\"錬\",\"鍊\",\"鏈\",\"链\",\"𧹯\",\"𫔀\"]],\n\t[\"亚\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"亜\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"亞\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"娅\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"婭\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"桠\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"椏\", [\"亚\",\"亜\",\"亞\",\"娅\",\"婭\",\"桠\",\"椏\"]],\n\t[\"塞\", [\"塞\",\"賽\",\"赛\"]],\n\t[\"賽\", [\"塞\",\"賽\",\"赛\"]],\n\t[\"赛\", [\"塞\",\"賽\",\"赛\"]],\n\t[\"籐\", [\"籐\",\"籘\",\"腾\",\"藤\",\"騰\"]],\n\t[\"籘\", [\"籐\",\"籘\",\"腾\",\"藤\",\"騰\"]],\n\t[\"腾\", [\"籐\",\"籘\",\"腾\",\"藤\",\"騰\"]],\n\t[\"藤\", [\"籐\",\"籘\",\"腾\",\"藤\",\"騰\"]],\n\t[\"騰\", [\"籐\",\"籘\",\"腾\",\"藤\",\"騰\"]],\n\t[\"你\", [\"你\",\"妳\",\"祢\",\"禰\"]],\n\t[\"妳\", [\"你\",\"妳\",\"祢\",\"禰\"]],\n\t[\"祢\", [\"你\",\"妳\",\"祢\",\"禰\"]],\n\t[\"禰\", [\"你\",\"妳\",\"祢\",\"禰\"]],\n\t[\"⻞\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"喰\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"蚀\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"蝕\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"食\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"飠\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"飧\", [\"⻞\",\"喰\",\"蚀\",\"蝕\",\"食\",\"飠\",\"飧\"]],\n\t[\"玛\", [\"玛\",\"瑪\",\"馬\",\"马\"]],\n\t[\"瑪\", [\"玛\",\"瑪\",\"馬\",\"马\"]],\n\t[\"馬\", [\"玛\",\"瑪\",\"馬\",\"马\"]],\n\t[\"马\", [\"玛\",\"瑪\",\"馬\",\"马\"]],\n\t[\"餚\", [\"餚\",\"餸\"]],\n\t[\"餸\", [\"餚\",\"餸\"]],\n\t[\"果\", [\"果\",\"裸\"]],\n\t[\"裸\", [\"果\",\"裸\"]],\n\t[\"凯\", [\"凯\",\"凱\",\"鎧\",\"铠\"]],\n\t[\"凱\", [\"凯\",\"凱\",\"鎧\",\"铠\"]],\n\t[\"鎧\", [\"凯\",\"凱\",\"鎧\",\"铠\"]],\n\t[\"铠\", [\"凯\",\"凱\",\"鎧\",\"铠\"]],\n\t[\"帖\", [\"帖\",\"貼\",\"贴\"]],\n\t[\"貼\", [\"帖\",\"貼\",\"贴\"]],\n\t[\"贴\", [\"帖\",\"貼\",\"贴\"]],\n\t[\"什\", [\"什\",\"甚\"]],\n\t[\"甚\", [\"什\",\"甚\"]],\n\t[\"联\", [\"联\",\"聯\",\"连\",\"連\"]],\n\t[\"聯\", [\"联\",\"聯\",\"连\",\"連\"]],\n\t[\"连\", [\"联\",\"聯\",\"连\",\"連\"]],\n\t[\"連\", [\"联\",\"聯\",\"连\",\"連\"]],\n\t[\"像\", [\"像\",\"象\"]],\n\t[\"象\", [\"像\",\"象\"]],\n\t[\"借\", [\"借\",\"藉\"]],\n\t[\"藉\", [\"借\",\"藉\"]],\n\t[\"蕾\", [\"蕾\",\"鐳\",\"镭\",\"雷\",\"靁\"]],\n\t[\"鐳\", [\"蕾\",\"鐳\",\"镭\",\"雷\",\"靁\"]],\n\t[\"镭\", [\"蕾\",\"鐳\",\"镭\",\"雷\",\"靁\"]],\n\t[\"雷\", [\"蕾\",\"鐳\",\"镭\",\"雷\",\"靁\"]],\n\t[\"靁\", [\"蕾\",\"鐳\",\"镭\",\"雷\",\"靁\"]],\n\t[\"定\", [\"定\",\"訂\",\"订\",\"釘\",\"钉\"]],\n\t[\"訂\", [\"定\",\"訂\",\"订\",\"釘\",\"钉\"]],\n\t[\"订\", [\"定\",\"訂\",\"订\",\"釘\",\"钉\"]],\n\t[\"釘\", [\"定\",\"訂\",\"订\",\"釘\",\"钉\"]],\n\t[\"钉\", [\"定\",\"訂\",\"订\",\"釘\",\"钉\"]],\n\t[\"向\", [\"向\",\"嚮\"]],\n\t[\"嚮\", [\"向\",\"嚮\"]],\n\t[\"丝\", [\"丝\",\"糸\",\"糹\",\"絲\"]],\n\t[\"糸\", [\"丝\",\"糸\",\"糹\",\"絲\"]],\n\t[\"糹\", [\"丝\",\"糸\",\"糹\",\"絲\"]],\n\t[\"絲\", [\"丝\",\"糸\",\"糹\",\"絲\"]],\n\t[\"桶\", [\"桶\",\"筒\"]],\n\t[\"筒\", [\"桶\",\"筒\"]],\n\t[\"兹\", [\"兹\",\"滋\",\"玆\",\"茲\"]],\n\t[\"滋\", [\"兹\",\"滋\",\"玆\",\"茲\"]],\n\t[\"玆\", [\"兹\",\"滋\",\"玆\",\"茲\"]],\n\t[\"茲\", [\"兹\",\"滋\",\"玆\",\"茲\"]],\n\t[\"吶\", [\"吶\",\"呐\",\"訥\",\"讷\"]],\n\t[\"呐\", [\"吶\",\"呐\",\"訥\",\"讷\"]],\n\t[\"訥\", [\"吶\",\"呐\",\"訥\",\"讷\"]],\n\t[\"讷\", [\"吶\",\"呐\",\"訥\",\"讷\"]],\n\t[\"穀\", [\"穀\",\"糓\",\"谷\"]],\n\t[\"糓\", [\"穀\",\"糓\",\"谷\"]],\n\t[\"谷\", [\"穀\",\"糓\",\"谷\"]],\n\t[\"両\", [\"両\",\"两\",\"俩\",\"倆\",\"兩\"]],\n\t[\"两\", [\"両\",\"两\",\"俩\",\"倆\",\"兩\"]],\n\t[\"俩\", [\"両\",\"两\",\"俩\",\"倆\",\"兩\"]],\n\t[\"倆\", [\"両\",\"两\",\"俩\",\"倆\",\"兩\"]],\n\t[\"兩\", [\"両\",\"两\",\"俩\",\"倆\",\"兩\"]],\n\t[\"帐\", [\"帐\",\"帳\",\"賬\",\"账\"]],\n\t[\"帳\", [\"帐\",\"帳\",\"賬\",\"账\"]],\n\t[\"賬\", [\"帐\",\"帳\",\"賬\",\"账\"]],\n\t[\"账\", [\"帐\",\"帳\",\"賬\",\"账\"]],\n\t[\"坂\", [\"坂\",\"板\",\"版\",\"闆\",\"阪\"]],\n\t[\"板\", [\"坂\",\"板\",\"版\",\"闆\",\"阪\"]],\n\t[\"版\", [\"坂\",\"板\",\"版\",\"闆\",\"阪\"]],\n\t[\"闆\", [\"坂\",\"板\",\"版\",\"闆\",\"阪\"]],\n\t[\"阪\", [\"坂\",\"板\",\"版\",\"闆\",\"阪\"]],\n\t[\"呆\", [\"呆\",\"待\",\"獃\"]],\n\t[\"待\", [\"呆\",\"待\",\"獃\"]],\n\t[\"獃\", [\"呆\",\"待\",\"獃\"]],\n\t[\"溶\", [\"溶\",\"熔\",\"融\",\"螎\",\"鎔\",\"镕\"]],\n\t[\"熔\", [\"溶\",\"熔\",\"融\",\"螎\",\"鎔\",\"镕\"]],\n\t[\"融\", [\"溶\",\"熔\",\"融\",\"螎\",\"鎔\",\"镕\"]],\n\t[\"螎\", [\"溶\",\"熔\",\"融\",\"螎\",\"鎔\",\"镕\"]],\n\t[\"鎔\", [\"溶\",\"熔\",\"融\",\"螎\",\"鎔\",\"镕\"]],\n\t[\"镕\", [\"溶\",\"熔\",\"融\",\"螎\",\"鎔\",\"镕\"]],\n\t[\"匯\", [\"匯\",\"彙\",\"汇\"]],\n\t[\"彙\", [\"匯\",\"彙\",\"汇\"]],\n\t[\"汇\", [\"匯\",\"彙\",\"汇\"]],\n\t[\"仏\", [\"仏\",\"佛\",\"弗\",\"彿\",\"拂\"]],\n\t[\"佛\", [\"仏\",\"佛\",\"弗\",\"彿\",\"拂\"]],\n\t[\"弗\", [\"仏\",\"佛\",\"弗\",\"彿\",\"拂\"]],\n\t[\"彿\", [\"仏\",\"佛\",\"弗\",\"彿\",\"拂\"]],\n\t[\"拂\", [\"仏\",\"佛\",\"弗\",\"彿\",\"拂\"]],\n\t[\"啊\", [\"啊\",\"阿\"]],\n\t[\"阿\", [\"啊\",\"阿\"]],\n\t[\"傢\", [\"傢\",\"家\"]],\n\t[\"家\", [\"傢\",\"家\"]],\n\t[\"暴\", [\"暴\",\"曝\",\"爆\"]],\n\t[\"曝\", [\"暴\",\"曝\",\"爆\"]],\n\t[\"爆\", [\"暴\",\"曝\",\"爆\"]],\n\t[\"䋄\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"䋞\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"冈\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"刚\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"剛\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"堈\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"岗\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"岡\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"崗\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"綱\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"網\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"纲\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"缸\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"网\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"鋼\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"钢\", [\"䋄\",\"䋞\",\"冈\",\"刚\",\"剛\",\"堈\",\"岗\",\"岡\",\"崗\",\"綱\",\"網\",\"纲\",\"缸\",\"网\",\"鋼\",\"钢\"]],\n\t[\"注\", [\"注\",\"註\"]],\n\t[\"註\", [\"注\",\"註\"]],\n\t[\"潅\", [\"潅\",\"灌\",\"貫\",\"贯\"]],\n\t[\"灌\", [\"潅\",\"灌\",\"貫\",\"贯\"]],\n\t[\"貫\", [\"潅\",\"灌\",\"貫\",\"贯\"]],\n\t[\"贯\", [\"潅\",\"灌\",\"貫\",\"贯\"]],\n\t[\"倒\", [\"倒\",\"到\"]],\n\t[\"到\", [\"倒\",\"到\"]],\n\t[\"儭\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"平\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"秤\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"称\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"稱\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"衬\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"襯\", [\"儭\",\"平\",\"秤\",\"称\",\"稱\",\"衬\",\"襯\"]],\n\t[\"勋\", [\"勋\",\"勛\",\"勲\",\"勳\"]],\n\t[\"勛\", [\"勋\",\"勛\",\"勲\",\"勳\"]],\n\t[\"勲\", [\"勋\",\"勛\",\"勲\",\"勳\"]],\n\t[\"勳\", [\"勋\",\"勛\",\"勲\",\"勳\"]],\n\t[\"丽\", [\"丽\",\"利\",\"莉\",\"麗\"]],\n\t[\"利\", [\"丽\",\"利\",\"莉\",\"麗\"]],\n\t[\"莉\", [\"丽\",\"利\",\"莉\",\"麗\"]],\n\t[\"麗\", [\"丽\",\"利\",\"莉\",\"麗\"]],\n\t[\"己\", [\"己\",\"已\",\"巳\"]],\n\t[\"已\", [\"己\",\"已\",\"巳\"]],\n\t[\"巳\", [\"己\",\"已\",\"巳\"]],\n\t[\"呵\", [\"呵\",\"嗬\"]],\n\t[\"嗬\", [\"呵\",\"嗬\"]],\n\t[\"呦\", [\"呦\",\"哊\",\"哟\",\"唷\",\"唹\",\"喲\"]],\n\t[\"哊\", [\"呦\",\"哊\",\"哟\",\"唷\",\"唹\",\"喲\"]],\n\t[\"哟\", [\"呦\",\"哊\",\"哟\",\"唷\",\"唹\",\"喲\"]],\n\t[\"唷\", [\"呦\",\"哊\",\"哟\",\"唷\",\"唹\",\"喲\"]],\n\t[\"唹\", [\"呦\",\"哊\",\"哟\",\"唷\",\"唹\",\"喲\"]],\n\t[\"喲\", [\"呦\",\"哊\",\"哟\",\"唷\",\"唹\",\"喲\"]],\n\t[\"傑\", [\"傑\",\"婕\",\"杰\",\"洁\",\"潔\",\"絜\"]],\n\t[\"婕\", [\"傑\",\"婕\",\"杰\",\"洁\",\"潔\",\"絜\"]],\n\t[\"杰\", [\"傑\",\"婕\",\"杰\",\"洁\",\"潔\",\"絜\"]],\n\t[\"洁\", [\"傑\",\"婕\",\"杰\",\"洁\",\"潔\",\"絜\"]],\n\t[\"潔\", [\"傑\",\"婕\",\"杰\",\"洁\",\"潔\",\"絜\"]],\n\t[\"絜\", [\"傑\",\"婕\",\"杰\",\"洁\",\"潔\",\"絜\"]],\n\t[\"嘻\", [\"嘻\",\"嬉\"]],\n\t[\"嬉\", [\"嘻\",\"嬉\"]],\n\t[\"嘛\", [\"嘛\",\"痲\",\"痳\",\"麻\"]],\n\t[\"痲\", [\"嘛\",\"痲\",\"痳\",\"麻\"]],\n\t[\"痳\", [\"嘛\",\"痲\",\"痳\",\"麻\"]],\n\t[\"麻\", [\"嘛\",\"痲\",\"痳\",\"麻\"]],\n\t[\"犬\", [\"犬\",\"狗\"]],\n\t[\"狗\", [\"犬\",\"狗\"]],\n\t[\"亘\", [\"亘\",\"亙\",\"恆\",\"恒\"]],\n\t[\"亙\", [\"亘\",\"亙\",\"恆\",\"恒\"]],\n\t[\"恆\", [\"亘\",\"亙\",\"恆\",\"恒\"]],\n\t[\"恒\", [\"亘\",\"亙\",\"恆\",\"恒\"]],\n\t[\"付\", [\"付\",\"副\",\"附\"]],\n\t[\"副\", [\"付\",\"副\",\"附\"]],\n\t[\"附\", [\"付\",\"副\",\"附\"]],\n\t[\"伽\", [\"伽\",\"加\",\"枷\",\"珈\",\"迦\"]],\n\t[\"加\", [\"伽\",\"加\",\"枷\",\"珈\",\"迦\"]],\n\t[\"枷\", [\"伽\",\"加\",\"枷\",\"珈\",\"迦\"]],\n\t[\"珈\", [\"伽\",\"加\",\"枷\",\"珈\",\"迦\"]],\n\t[\"迦\", [\"伽\",\"加\",\"枷\",\"珈\",\"迦\"]],\n\t[\"福\", [\"福\",\"褔\"]],\n\t[\"褔\", [\"福\",\"褔\"]],\n\t[\"挨\", [\"挨\",\"捱\"]],\n\t[\"捱\", [\"挨\",\"捱\"]],\n\t[\"拚\", [\"拚\",\"拼\"]],\n\t[\"拼\", [\"拚\",\"拼\"]],\n\t[\"漂\", [\"漂\",\"飃\",\"飄\",\"飘\"]],\n\t[\"飃\", [\"漂\",\"飃\",\"飄\",\"飘\"]],\n\t[\"飄\", [\"漂\",\"飃\",\"飄\",\"飘\"]],\n\t[\"飘\", [\"漂\",\"飃\",\"飄\",\"飘\"]],\n\t[\"佔\", [\"佔\",\"占\",\"沾\"]],\n\t[\"占\", [\"佔\",\"占\",\"沾\"]],\n\t[\"沾\", [\"佔\",\"占\",\"沾\"]],\n\t[\"气\", [\"气\",\"気\",\"氣\",\"汽\",\"滊\",\"炁\"]],\n\t[\"気\", [\"气\",\"気\",\"氣\",\"汽\",\"滊\",\"炁\"]],\n\t[\"氣\", [\"气\",\"気\",\"氣\",\"汽\",\"滊\",\"炁\"]],\n\t[\"汽\", [\"气\",\"気\",\"氣\",\"汽\",\"滊\",\"炁\"]],\n\t[\"滊\", [\"气\",\"気\",\"氣\",\"汽\",\"滊\",\"炁\"]],\n\t[\"炁\", [\"气\",\"気\",\"氣\",\"汽\",\"滊\",\"炁\"]],\n\t[\"撩\", [\"撩\",\"辽\",\"遼\"]],\n\t[\"辽\", [\"撩\",\"辽\",\"遼\"]],\n\t[\"遼\", [\"撩\",\"辽\",\"遼\"]],\n\t[\"作\", [\"作\",\"做\"]],\n\t[\"做\", [\"作\",\"做\"]],\n\t[\"捜\", [\"捜\",\"搜\",\"蒐\"]],\n\t[\"搜\", [\"捜\",\"搜\",\"蒐\"]],\n\t[\"蒐\", [\"捜\",\"搜\",\"蒐\"]],\n\t[\"傁\", [\"傁\",\"叟\"]],\n\t[\"叟\", [\"傁\",\"叟\"]],\n\t[\"榭\", [\"榭\",\"謝\",\"谢\"]],\n\t[\"謝\", [\"榭\",\"謝\",\"谢\"]],\n\t[\"谢\", [\"榭\",\"謝\",\"谢\"]],\n\t[\"型\", [\"型\",\"形\",\"行\"]],\n\t[\"形\", [\"型\",\"形\",\"行\"]],\n\t[\"行\", [\"型\",\"形\",\"行\"]],\n\t[\"僱\", [\"僱\",\"雇\",\"頋\",\"顧\",\"顾\"]],\n\t[\"雇\", [\"僱\",\"雇\",\"頋\",\"顧\",\"顾\"]],\n\t[\"頋\", [\"僱\",\"雇\",\"頋\",\"顧\",\"顾\"]],\n\t[\"顧\", [\"僱\",\"雇\",\"頋\",\"顧\",\"顾\"]],\n\t[\"顾\", [\"僱\",\"雇\",\"頋\",\"顧\",\"顾\"]],\n\t[\"庐\", [\"庐\",\"廬\",\"芦\",\"蘆\"]],\n\t[\"廬\", [\"庐\",\"廬\",\"芦\",\"蘆\"]],\n\t[\"芦\", [\"庐\",\"廬\",\"芦\",\"蘆\"]],\n\t[\"蘆\", [\"庐\",\"廬\",\"芦\",\"蘆\"]],\n\t[\"眈\", [\"眈\",\"耽\",\"躭\"]],\n\t[\"耽\", [\"眈\",\"耽\",\"躭\"]],\n\t[\"躭\", [\"眈\",\"耽\",\"躭\"]],\n\t[\"傹\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"竞\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"竟\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"競\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"竸\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"誩\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"𥪰\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"𧡟\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"𧫘\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"𧫙\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"𧮣\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"𨐼\", [\"傹\",\"竞\",\"竟\",\"競\",\"竸\",\"誩\",\"𥪰\",\"𧡟\",\"𧫘\",\"𧫙\",\"𧮣\",\"𨐼\"]],\n\t[\"植\", [\"植\",\"殖\"]],\n\t[\"殖\", [\"植\",\"殖\"]],\n\t[\"佬\", [\"佬\",\"姥\",\"老\"]],\n\t[\"姥\", [\"佬\",\"姥\",\"老\"]],\n\t[\"老\", [\"佬\",\"姥\",\"老\"]],\n\t[\"倖\", [\"倖\",\"幸\"]],\n\t[\"幸\", [\"倖\",\"幸\"]],\n\t[\"㠪\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"巨\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"榘\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"炬\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"矩\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"鉅\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"钜\", [\"㠪\",\"巨\",\"榘\",\"炬\",\"矩\",\"鉅\",\"钜\"]],\n\t[\"㓥\", [\"㓥\",\"刴\",\"剁\",\"剐\",\"剮\",\"劏\"]],\n\t[\"刴\", [\"㓥\",\"刴\",\"剁\",\"剐\",\"剮\",\"劏\"]],\n\t[\"剁\", [\"㓥\",\"刴\",\"剁\",\"剐\",\"剮\",\"劏\"]],\n\t[\"剐\", [\"㓥\",\"刴\",\"剁\",\"剐\",\"剮\",\"劏\"]],\n\t[\"剮\", [\"㓥\",\"刴\",\"剁\",\"剐\",\"剮\",\"劏\"]],\n\t[\"劏\", [\"㓥\",\"刴\",\"剁\",\"剐\",\"剮\",\"劏\"]],\n\t[\"南\", [\"南\",\"枏\",\"楠\"]],\n\t[\"枏\", [\"南\",\"枏\",\"楠\"]],\n\t[\"楠\", [\"南\",\"枏\",\"楠\"]],\n\t[\"璐\", [\"璐\",\"路\",\"𡽘\",\"𨱴\"]],\n\t[\"路\", [\"璐\",\"路\",\"𡽘\",\"𨱴\"]],\n\t[\"𡽘\", [\"璐\",\"路\",\"𡽘\",\"𨱴\"]],\n\t[\"𨱴\", [\"璐\",\"路\",\"𡽘\",\"𨱴\"]],\n\t[\"侂\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"托\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"拓\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"拕\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"拖\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"杔\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"託\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"讬\", [\"侂\",\"托\",\"拓\",\"拕\",\"拖\",\"杔\",\"託\",\"讬\"]],\n\t[\"希\", [\"希\",\"悕\",\"睎\",\"稀\"]],\n\t[\"悕\", [\"希\",\"悕\",\"睎\",\"稀\"]],\n\t[\"睎\", [\"希\",\"悕\",\"睎\",\"稀\"]],\n\t[\"稀\", [\"希\",\"悕\",\"睎\",\"稀\"]],\n\t[\"囯\", [\"囯\",\"国\",\"國\",\"帼\",\"幗\"]],\n\t[\"国\", [\"囯\",\"国\",\"國\",\"帼\",\"幗\"]],\n\t[\"國\", [\"囯\",\"国\",\"國\",\"帼\",\"幗\"]],\n\t[\"帼\", [\"囯\",\"国\",\"國\",\"帼\",\"幗\"]],\n\t[\"幗\", [\"囯\",\"国\",\"國\",\"帼\",\"幗\"]],\n\t[\"反\", [\"反\",\"返\"]],\n\t[\"返\", [\"反\",\"返\"]],\n\t[\"佯\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"扬\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"揚\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"旸\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"暘\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"杨\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"楊\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"炀\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"烊\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"煬\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"阳\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"陽\", [\"佯\",\"扬\",\"揚\",\"旸\",\"暘\",\"杨\",\"楊\",\"炀\",\"烊\",\"煬\",\"阳\",\"陽\"]],\n\t[\"來\", [\"來\",\"来\",\"莱\",\"萊\"]],\n\t[\"来\", [\"來\",\"来\",\"莱\",\"萊\"]],\n\t[\"莱\", [\"來\",\"来\",\"莱\",\"萊\"]],\n\t[\"萊\", [\"來\",\"来\",\"莱\",\"萊\"]],\n\t[\"保\", [\"保\",\"堡\",\"緥\",\"葆\",\"褓\"]],\n\t[\"堡\", [\"保\",\"堡\",\"緥\",\"葆\",\"褓\"]],\n\t[\"緥\", [\"保\",\"堡\",\"緥\",\"葆\",\"褓\"]],\n\t[\"葆\", [\"保\",\"堡\",\"緥\",\"葆\",\"褓\"]],\n\t[\"褓\", [\"保\",\"堡\",\"緥\",\"葆\",\"褓\"]],\n\t[\"度\", [\"度\",\"渡\"]],\n\t[\"渡\", [\"度\",\"渡\"]],\n\t[\"剳\", [\"剳\",\"劄\",\"扎\",\"札\",\"箚\",\"紮\"]],\n\t[\"劄\", [\"剳\",\"劄\",\"扎\",\"札\",\"箚\",\"紮\"]],\n\t[\"扎\", [\"剳\",\"劄\",\"扎\",\"札\",\"箚\",\"紮\"]],\n\t[\"札\", [\"剳\",\"劄\",\"扎\",\"札\",\"箚\",\"紮\"]],\n\t[\"箚\", [\"剳\",\"劄\",\"扎\",\"札\",\"箚\",\"紮\"]],\n\t[\"紮\", [\"剳\",\"劄\",\"扎\",\"札\",\"箚\",\"紮\"]],\n\t[\"堤\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"媞\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"提\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"湜\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"禔\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"緹\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"缇\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"隄\", [\"堤\",\"媞\",\"提\",\"湜\",\"禔\",\"緹\",\"缇\",\"隄\"]],\n\t[\"腊\", [\"腊\",\"臘\",\"蜡\",\"蠟\"]],\n\t[\"臘\", [\"腊\",\"臘\",\"蜡\",\"蠟\"]],\n\t[\"蜡\", [\"腊\",\"臘\",\"蜡\",\"蠟\"]],\n\t[\"蠟\", [\"腊\",\"臘\",\"蜡\",\"蠟\"]],\n\t[\"郁\", [\"郁\",\"鬱\",\"𨚼\",\"𨟝\"]],\n\t[\"鬱\", [\"郁\",\"鬱\",\"𨚼\",\"𨟝\"]],\n\t[\"𨚼\", [\"郁\",\"鬱\",\"𨚼\",\"𨟝\"]],\n\t[\"𨟝\", [\"郁\",\"鬱\",\"𨚼\",\"𨟝\"]],\n\t[\"扞\", [\"扞\",\"擀\",\"杆\",\"桿\"]],\n\t[\"擀\", [\"扞\",\"擀\",\"杆\",\"桿\"]],\n\t[\"杆\", [\"扞\",\"擀\",\"杆\",\"桿\"]],\n\t[\"桿\", [\"扞\",\"擀\",\"杆\",\"桿\"]],\n\t[\"脼\", [\"脼\",\"郎\",\"郞\",\"𥇑\"]],\n\t[\"郎\", [\"脼\",\"郎\",\"郞\",\"𥇑\"]],\n\t[\"郞\", [\"脼\",\"郎\",\"郞\",\"𥇑\"]],\n\t[\"𥇑\", [\"脼\",\"郎\",\"郞\",\"𥇑\"]],\n\t[\"巴\", [\"巴\",\"芭\"]],\n\t[\"芭\", [\"巴\",\"芭\"]],\n\t[\"捏\", [\"捏\",\"涅\",\"湼\"]],\n\t[\"涅\", [\"捏\",\"涅\",\"湼\"]],\n\t[\"湼\", [\"捏\",\"涅\",\"湼\"]],\n\t[\"択\", [\"択\",\"择\",\"擇\",\"沢\",\"泽\",\"澤\"]],\n\t[\"择\", [\"択\",\"择\",\"擇\",\"沢\",\"泽\",\"澤\"]],\n\t[\"擇\", [\"択\",\"择\",\"擇\",\"沢\",\"泽\",\"澤\"]],\n\t[\"沢\", [\"択\",\"择\",\"擇\",\"沢\",\"泽\",\"澤\"]],\n\t[\"泽\", [\"択\",\"择\",\"擇\",\"沢\",\"泽\",\"澤\"]],\n\t[\"澤\", [\"択\",\"择\",\"擇\",\"沢\",\"泽\",\"澤\"]],\n\t[\"幵\", [\"幵\",\"开\",\"開\"]],\n\t[\"开\", [\"幵\",\"开\",\"開\"]],\n\t[\"開\", [\"幵\",\"开\",\"開\"]],\n\t[\"佩\", [\"佩\",\"珮\"]],\n\t[\"珮\", [\"佩\",\"珮\"]],\n\t[\"吁\", [\"吁\",\"喩\",\"喻\",\"籲\",\"龥\"]],\n\t[\"喩\", [\"吁\",\"喩\",\"喻\",\"籲\",\"龥\"]],\n\t[\"喻\", [\"吁\",\"喩\",\"喻\",\"籲\",\"龥\"]],\n\t[\"籲\", [\"吁\",\"喩\",\"喻\",\"籲\",\"龥\"]],\n\t[\"龥\", [\"吁\",\"喩\",\"喻\",\"籲\",\"龥\"]],\n\t[\"値\", [\"値\",\"值\",\"直\"]],\n\t[\"值\", [\"値\",\"值\",\"直\"]],\n\t[\"直\", [\"値\",\"值\",\"直\"]],\n\t[\"脏\", [\"脏\",\"臓\",\"臟\",\"贓\",\"赃\",\"髒\"]],\n\t[\"臓\", [\"脏\",\"臓\",\"臟\",\"贓\",\"赃\",\"髒\"]],\n\t[\"臟\", [\"脏\",\"臓\",\"臟\",\"贓\",\"赃\",\"髒\"]],\n\t[\"贓\", [\"脏\",\"臓\",\"臟\",\"贓\",\"赃\",\"髒\"]],\n\t[\"赃\", [\"脏\",\"臓\",\"臟\",\"贓\",\"赃\",\"髒\"]],\n\t[\"髒\", [\"脏\",\"臓\",\"臟\",\"贓\",\"赃\",\"髒\"]],\n\t[\"㊤\", [\"㊤\",\"上\"]],\n\t[\"上\", [\"㊤\",\"上\"]],\n\t[\"㊦\", [\"㊦\",\"下\"]],\n\t[\"下\", [\"㊦\",\"下\"]],\n\t[\"呼\", [\"呼\",\"唿\"]],\n\t[\"唿\", [\"呼\",\"唿\"]],\n\t[\"祥\", [\"祥\",\"詳\",\"详\"]],\n\t[\"詳\", [\"祥\",\"詳\",\"详\"]],\n\t[\"详\", [\"祥\",\"詳\",\"详\"]],\n\t[\"妮\", [\"妮\",\"尼\",\"泥\"]],\n\t[\"尼\", [\"妮\",\"尼\",\"泥\"]],\n\t[\"泥\", [\"妮\",\"尼\",\"泥\"]],\n\t[\"克\", [\"克\",\"剋\",\"尅\"]],\n\t[\"剋\", [\"克\",\"剋\",\"尅\"]],\n\t[\"尅\", [\"克\",\"剋\",\"尅\"]],\n\t[\"拨\", [\"拨\",\"撥\",\"播\"]],\n\t[\"撥\", [\"拨\",\"撥\",\"播\"]],\n\t[\"播\", [\"拨\",\"撥\",\"播\"]],\n\t[\"挿\", [\"挿\",\"插\",\"揷\"]],\n\t[\"插\", [\"挿\",\"插\",\"揷\"]],\n\t[\"揷\", [\"挿\",\"插\",\"揷\"]],\n\t[\"丁\", [\"丁\",\"汀\"]],\n\t[\"汀\", [\"丁\",\"汀\"]],\n\t[\"哪\", [\"哪\",\"娜\",\"那\"]],\n\t[\"娜\", [\"哪\",\"娜\",\"那\"]],\n\t[\"那\", [\"哪\",\"娜\",\"那\"]],\n\t[\"拉\", [\"拉\",\"菈\"]],\n\t[\"菈\", [\"拉\",\"菈\"]],\n\t[\"林\", [\"林\",\"淋\",\"玲\",\"琳\",\"鈴\",\"铃\"]],\n\t[\"淋\", [\"林\",\"淋\",\"玲\",\"琳\",\"鈴\",\"铃\"]],\n\t[\"玲\", [\"林\",\"淋\",\"玲\",\"琳\",\"鈴\",\"铃\"]],\n\t[\"琳\", [\"林\",\"淋\",\"玲\",\"琳\",\"鈴\",\"铃\"]],\n\t[\"鈴\", [\"林\",\"淋\",\"玲\",\"琳\",\"鈴\",\"铃\"]],\n\t[\"铃\", [\"林\",\"淋\",\"玲\",\"琳\",\"鈴\",\"铃\"]],\n\t[\"名\", [\"名\",\"銘\",\"铭\"]],\n\t[\"銘\", [\"名\",\"銘\",\"铭\"]],\n\t[\"铭\", [\"名\",\"銘\",\"铭\"]],\n\t[\"出\", [\"出\",\"齣\"]],\n\t[\"齣\", [\"出\",\"齣\"]],\n\t[\"唉\", [\"唉\",\"欸\",\"誒\",\"诶\"]],\n\t[\"欸\", [\"唉\",\"欸\",\"誒\",\"诶\"]],\n\t[\"誒\", [\"唉\",\"欸\",\"誒\",\"诶\"]],\n\t[\"诶\", [\"唉\",\"欸\",\"誒\",\"诶\"]],\n\t[\"呣\", [\"呣\",\"哞\",\"姆\"]],\n\t[\"哞\", [\"呣\",\"哞\",\"姆\"]],\n\t[\"姆\", [\"呣\",\"哞\",\"姆\"]],\n\t[\"㖿\", [\"㖿\",\"吔\",\"耶\"]],\n\t[\"吔\", [\"㖿\",\"吔\",\"耶\"]],\n\t[\"耶\", [\"㖿\",\"吔\",\"耶\"]],\n\t[\"媚\", [\"媚\",\"魅\"]],\n\t[\"魅\", [\"媚\",\"魅\"]],\n\t[\"匪\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"扉\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"斐\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"緋\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"绯\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"翡\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"菲\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"蜚\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"誹\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"诽\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"霏\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"非\", [\"匪\",\"扉\",\"斐\",\"緋\",\"绯\",\"翡\",\"菲\",\"蜚\",\"誹\",\"诽\",\"霏\",\"非\"]],\n\t[\"叉\", [\"叉\",\"衩\",\"釵\",\"钗\"]],\n\t[\"衩\", [\"叉\",\"衩\",\"釵\",\"钗\"]],\n\t[\"釵\", [\"叉\",\"衩\",\"釵\",\"钗\"]],\n\t[\"钗\", [\"叉\",\"衩\",\"釵\",\"钗\"]],\n\t[\"其\", [\"其\",\"淇\",\"琪\",\"祺\"]],\n\t[\"淇\", [\"其\",\"淇\",\"琪\",\"祺\"]],\n\t[\"琪\", [\"其\",\"淇\",\"琪\",\"祺\"]],\n\t[\"祺\", [\"其\",\"淇\",\"琪\",\"祺\"]],\n\t[\"坛\", [\"坛\",\"壇\",\"談\",\"譚\",\"谈\",\"谭\"]],\n\t[\"壇\", [\"坛\",\"壇\",\"談\",\"譚\",\"谈\",\"谭\"]],\n\t[\"談\", [\"坛\",\"壇\",\"談\",\"譚\",\"谈\",\"谭\"]],\n\t[\"譚\", [\"坛\",\"壇\",\"談\",\"譚\",\"谈\",\"谭\"]],\n\t[\"谈\", [\"坛\",\"壇\",\"談\",\"譚\",\"谈\",\"谭\"]],\n\t[\"谭\", [\"坛\",\"壇\",\"談\",\"譚\",\"谈\",\"谭\"]],\n\t[\"才\", [\"才\",\"材\",\"柴\"]],\n\t[\"材\", [\"才\",\"材\",\"柴\"]],\n\t[\"柴\", [\"才\",\"材\",\"柴\"]],\n\t[\"唸\", [\"唸\",\"念\"]],\n\t[\"念\", [\"唸\",\"念\"]],\n\t[\"指\", [\"指\",\"趾\"]],\n\t[\"趾\", [\"指\",\"趾\"]],\n\t[\"仕\", [\"仕\",\"士\"]],\n\t[\"士\", [\"仕\",\"士\"]],\n\t[\"娘\", [\"娘\",\"嬢\",\"孃\"]],\n\t[\"嬢\", [\"娘\",\"嬢\",\"孃\"]],\n\t[\"孃\", [\"娘\",\"嬢\",\"孃\"]],\n\t[\"哑\", [\"哑\",\"唖\",\"啞\",\"痖\",\"瘂\"]],\n\t[\"唖\", [\"哑\",\"唖\",\"啞\",\"痖\",\"瘂\"]],\n\t[\"啞\", [\"哑\",\"唖\",\"啞\",\"痖\",\"瘂\"]],\n\t[\"痖\", [\"哑\",\"唖\",\"啞\",\"痖\",\"瘂\"]],\n\t[\"瘂\", [\"哑\",\"唖\",\"啞\",\"痖\",\"瘂\"]],\n\t[\"仂\", [\"仂\",\"働\",\"动\",\"動\"]],\n\t[\"働\", [\"仂\",\"働\",\"动\",\"動\"]],\n\t[\"动\", [\"仂\",\"働\",\"动\",\"動\"]],\n\t[\"動\", [\"仂\",\"働\",\"动\",\"動\"]],\n\t[\"察\", [\"察\",\"查\",\"査\"]],\n\t[\"查\", [\"察\",\"查\",\"査\"]],\n\t[\"査\", [\"察\",\"查\",\"査\"]],\n\t[\"鉃\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"鉄\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"銕\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"鐡\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"鐵\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"铁\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"𨫓\", [\"鉃\",\"鉄\",\"銕\",\"鐡\",\"鐵\",\"铁\",\"𨫓\"]],\n\t[\"帰\", [\"帰\",\"归\",\"歸\",\"皈\"]],\n\t[\"归\", [\"帰\",\"归\",\"歸\",\"皈\"]],\n\t[\"歸\", [\"帰\",\"归\",\"歸\",\"皈\"]],\n\t[\"皈\", [\"帰\",\"归\",\"歸\",\"皈\"]],\n\t[\"创\", [\"创\",\"創\",\"疮\",\"瘡\"]],\n\t[\"創\", [\"创\",\"創\",\"疮\",\"瘡\"]],\n\t[\"疮\", [\"创\",\"創\",\"疮\",\"瘡\"]],\n\t[\"瘡\", [\"创\",\"創\",\"疮\",\"瘡\"]],\n\t[\"拷\", [\"拷\",\"烤\",\"考\"]],\n\t[\"烤\", [\"拷\",\"烤\",\"考\"]],\n\t[\"考\", [\"拷\",\"烤\",\"考\"]],\n\t[\"入\", [\"入\",\"込\"]],\n\t[\"込\", [\"入\",\"込\"]],\n\t[\"仑\", [\"仑\",\"伦\",\"侖\",\"倫\"]],\n\t[\"伦\", [\"仑\",\"伦\",\"侖\",\"倫\"]],\n\t[\"侖\", [\"仑\",\"伦\",\"侖\",\"倫\"]],\n\t[\"倫\", [\"仑\",\"伦\",\"侖\",\"倫\"]],\n\t[\"仔\", [\"仔\",\"子\"]],\n\t[\"子\", [\"仔\",\"子\"]],\n\t[\"弯\", [\"弯\",\"彎\",\"湾\",\"灣\"]],\n\t[\"彎\", [\"弯\",\"彎\",\"湾\",\"灣\"]],\n\t[\"湾\", [\"弯\",\"彎\",\"湾\",\"灣\"]],\n\t[\"灣\", [\"弯\",\"彎\",\"湾\",\"灣\"]],\n\t[\"熒\", [\"熒\",\"荧\",\"萤\",\"蛍\",\"螢\"]],\n\t[\"荧\", [\"熒\",\"荧\",\"萤\",\"蛍\",\"螢\"]],\n\t[\"萤\", [\"熒\",\"荧\",\"萤\",\"蛍\",\"螢\"]],\n\t[\"蛍\", [\"熒\",\"荧\",\"萤\",\"蛍\",\"螢\"]],\n\t[\"螢\", [\"熒\",\"荧\",\"萤\",\"蛍\",\"螢\"]],\n\t[\"争\", [\"争\",\"挣\",\"掙\",\"爭\"]],\n\t[\"挣\", [\"争\",\"挣\",\"掙\",\"爭\"]],\n\t[\"掙\", [\"争\",\"挣\",\"掙\",\"爭\"]],\n\t[\"爭\", [\"争\",\"挣\",\"掙\",\"爭\"]],\n\t[\"涨\", [\"涨\",\"漲\",\"胀\",\"脹\"]],\n\t[\"漲\", [\"涨\",\"漲\",\"胀\",\"脹\"]],\n\t[\"胀\", [\"涨\",\"漲\",\"胀\",\"脹\"]],\n\t[\"脹\", [\"涨\",\"漲\",\"胀\",\"脹\"]],\n\t[\"冇\", [\"冇\",\"无\",\"沒\",\"没\",\"無\"]],\n\t[\"无\", [\"冇\",\"无\",\"沒\",\"没\",\"無\"]],\n\t[\"沒\", [\"冇\",\"无\",\"沒\",\"没\",\"無\"]],\n\t[\"没\", [\"冇\",\"无\",\"沒\",\"没\",\"無\"]],\n\t[\"無\", [\"冇\",\"无\",\"沒\",\"没\",\"無\"]],\n\t[\"吨\", [\"吨\",\"噸\",\"訰\"]],\n\t[\"噸\", [\"吨\",\"噸\",\"訰\"]],\n\t[\"訰\", [\"吨\",\"噸\",\"訰\"]],\n\t[\"勾\", [\"勾\",\"鈎\",\"鉤\",\"钩\"]],\n\t[\"鈎\", [\"勾\",\"鈎\",\"鉤\",\"钩\"]],\n\t[\"鉤\", [\"勾\",\"鈎\",\"鉤\",\"钩\"]],\n\t[\"钩\", [\"勾\",\"鈎\",\"鉤\",\"钩\"]],\n\t[\"沈\", [\"沈\",\"沉\"]],\n\t[\"沉\", [\"沈\",\"沉\"]],\n\t[\"叠\", [\"叠\",\"畳\",\"疊\",\"迭\"]],\n\t[\"畳\", [\"叠\",\"畳\",\"疊\",\"迭\"]],\n\t[\"疊\", [\"叠\",\"畳\",\"疊\",\"迭\"]],\n\t[\"迭\", [\"叠\",\"畳\",\"疊\",\"迭\"]],\n\t[\"僵\", [\"僵\",\"殭\",\"疆\",\"繮\",\"缰\",\"韁\"]],\n\t[\"殭\", [\"僵\",\"殭\",\"疆\",\"繮\",\"缰\",\"韁\"]],\n\t[\"疆\", [\"僵\",\"殭\",\"疆\",\"繮\",\"缰\",\"韁\"]],\n\t[\"繮\", [\"僵\",\"殭\",\"疆\",\"繮\",\"缰\",\"韁\"]],\n\t[\"缰\", [\"僵\",\"殭\",\"疆\",\"繮\",\"缰\",\"韁\"]],\n\t[\"韁\", [\"僵\",\"殭\",\"疆\",\"繮\",\"缰\",\"韁\"]],\n\t[\"揹\", [\"揹\",\"背\"]],\n\t[\"背\", [\"揹\",\"背\"]],\n\t[\"团\", [\"团\",\"団\",\"團\",\"糰\"]],\n\t[\"団\", [\"团\",\"団\",\"團\",\"糰\"]],\n\t[\"團\", [\"团\",\"団\",\"團\",\"糰\"]],\n\t[\"糰\", [\"团\",\"団\",\"團\",\"糰\"]],\n\t[\"榚\", [\"榚\",\"糕\"]],\n\t[\"糕\", [\"榚\",\"糕\"]],\n\t[\"需\", [\"需\",\"須\",\"须\",\"鬚\"]],\n\t[\"須\", [\"需\",\"須\",\"须\",\"鬚\"]],\n\t[\"须\", [\"需\",\"須\",\"须\",\"鬚\"]],\n\t[\"鬚\", [\"需\",\"須\",\"须\",\"鬚\"]],\n\t[\"抒\", [\"抒\",\"紆\",\"紓\",\"纡\",\"纾\"]],\n\t[\"紆\", [\"抒\",\"紆\",\"紓\",\"纡\",\"纾\"]],\n\t[\"紓\", [\"抒\",\"紆\",\"紓\",\"纡\",\"纾\"]],\n\t[\"纡\", [\"抒\",\"紆\",\"紓\",\"纡\",\"纾\"]],\n\t[\"纾\", [\"抒\",\"紆\",\"紓\",\"纡\",\"纾\"]],\n\t[\"州\", [\"州\",\"洲\"]],\n\t[\"洲\", [\"州\",\"洲\"]],\n\t[\"厂\", [\"厂\",\"厰\",\"场\",\"場\",\"廠\"]],\n\t[\"厰\", [\"厂\",\"厰\",\"场\",\"場\",\"廠\"]],\n\t[\"场\", [\"厂\",\"厰\",\"场\",\"場\",\"廠\"]],\n\t[\"場\", [\"厂\",\"厰\",\"场\",\"場\",\"廠\"]],\n\t[\"廠\", [\"厂\",\"厰\",\"场\",\"場\",\"廠\"]],\n\t[\"筱\", [\"筱\",\"筿\",\"篠\"]],\n\t[\"筿\", [\"筱\",\"筿\",\"篠\"]],\n\t[\"篠\", [\"筱\",\"筿\",\"篠\"]],\n\t[\"根\", [\"根\",\"跟\"]],\n\t[\"跟\", [\"根\",\"跟\"]],\n\t[\"㬅\", [\"㬅\",\"嫚\",\"曼\",\"漫\",\"熳\",\"蔓\"]],\n\t[\"嫚\", [\"㬅\",\"嫚\",\"曼\",\"漫\",\"熳\",\"蔓\"]],\n\t[\"曼\", [\"㬅\",\"嫚\",\"曼\",\"漫\",\"熳\",\"蔓\"]],\n\t[\"漫\", [\"㬅\",\"嫚\",\"曼\",\"漫\",\"熳\",\"蔓\"]],\n\t[\"熳\", [\"㬅\",\"嫚\",\"曼\",\"漫\",\"熳\",\"蔓\"]],\n\t[\"蔓\", [\"㬅\",\"嫚\",\"曼\",\"漫\",\"熳\",\"蔓\"]],\n\t[\"升\", [\"升\",\"昇\",\"陞\"]],\n\t[\"昇\", [\"升\",\"昇\",\"陞\"]],\n\t[\"陞\", [\"升\",\"昇\",\"陞\"]],\n\t[\"烟\", [\"烟\",\"煙\",\"腌\",\"菸\",\"醃\"]],\n\t[\"煙\", [\"烟\",\"煙\",\"腌\",\"菸\",\"醃\"]],\n\t[\"腌\", [\"烟\",\"煙\",\"腌\",\"菸\",\"醃\"]],\n\t[\"菸\", [\"烟\",\"煙\",\"腌\",\"菸\",\"醃\"]],\n\t[\"醃\", [\"烟\",\"煙\",\"腌\",\"菸\",\"醃\"]],\n\t[\"录\", [\"录\",\"錄\",\"録\",\"陆\",\"陸\"]],\n\t[\"錄\", [\"录\",\"錄\",\"録\",\"陆\",\"陸\"]],\n\t[\"録\", [\"录\",\"錄\",\"録\",\"陆\",\"陸\"]],\n\t[\"陆\", [\"录\",\"錄\",\"録\",\"陆\",\"陸\"]],\n\t[\"陸\", [\"录\",\"錄\",\"録\",\"陆\",\"陸\"]],\n\t[\"掳\", [\"掳\",\"擄\",\"虏\",\"虜\"]],\n\t[\"擄\", [\"掳\",\"擄\",\"虏\",\"虜\"]],\n\t[\"虏\", [\"掳\",\"擄\",\"虏\",\"虜\"]],\n\t[\"虜\", [\"掳\",\"擄\",\"虏\",\"虜\"]],\n\t[\"翘\", [\"翘\",\"翹\",\"跷\",\"蹺\"]],\n\t[\"翹\", [\"翘\",\"翹\",\"跷\",\"蹺\"]],\n\t[\"跷\", [\"翘\",\"翹\",\"跷\",\"蹺\"]],\n\t[\"蹺\", [\"翘\",\"翹\",\"跷\",\"蹺\"]],\n\t[\"脚\", [\"脚\",\"腳\",\"角\"]],\n\t[\"腳\", [\"脚\",\"腳\",\"角\"]],\n\t[\"角\", [\"脚\",\"腳\",\"角\"]],\n\t[\"詞\", [\"詞\",\"词\",\"辞\",\"辭\"]],\n\t[\"词\", [\"詞\",\"词\",\"辞\",\"辭\"]],\n\t[\"辞\", [\"詞\",\"词\",\"辞\",\"辭\"]],\n\t[\"辭\", [\"詞\",\"词\",\"辞\",\"辭\"]],\n\t[\"义\", [\"义\",\"意\",\"義\"]],\n\t[\"意\", [\"义\",\"意\",\"義\"]],\n\t[\"義\", [\"义\",\"意\",\"義\"]],\n\t[\"哏\", [\"哏\",\"梗\"]],\n\t[\"梗\", [\"哏\",\"梗\"]],\n\t[\"呎\", [\"呎\",\"咫\",\"尺\"]],\n\t[\"咫\", [\"呎\",\"咫\",\"尺\"]],\n\t[\"尺\", [\"呎\",\"咫\",\"尺\"]],\n\t[\"伶\", [\"伶\",\"怜\",\"憐\"]],\n\t[\"怜\", [\"伶\",\"怜\",\"憐\"]],\n\t[\"憐\", [\"伶\",\"怜\",\"憐\"]],\n\t[\"委\", [\"委\",\"荽\",\"萎\"]],\n\t[\"荽\", [\"委\",\"荽\",\"萎\"]],\n\t[\"萎\", [\"委\",\"荽\",\"萎\"]],\n\t[\"岭\", [\"岭\",\"岺\",\"嶺\",\"阾\",\"領\",\"领\"]],\n\t[\"岺\", [\"岭\",\"岺\",\"嶺\",\"阾\",\"領\",\"领\"]],\n\t[\"嶺\", [\"岭\",\"岺\",\"嶺\",\"阾\",\"領\",\"领\"]],\n\t[\"阾\", [\"岭\",\"岺\",\"嶺\",\"阾\",\"領\",\"领\"]],\n\t[\"領\", [\"岭\",\"岺\",\"嶺\",\"阾\",\"領\",\"领\"]],\n\t[\"领\", [\"岭\",\"岺\",\"嶺\",\"阾\",\"領\",\"领\"]],\n\t[\"决\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"決\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"絕\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"絶\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"绝\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"訣\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"诀\", [\"决\",\"決\",\"絕\",\"絶\",\"绝\",\"訣\",\"诀\"]],\n\t[\"岳\", [\"岳\",\"嶽\",\"𡶦\"]],\n\t[\"嶽\", [\"岳\",\"嶽\",\"𡶦\"]],\n\t[\"𡶦\", [\"岳\",\"嶽\",\"𡶦\"]],\n\t[\"受\", [\"受\",\"授\"]],\n\t[\"授\", [\"受\",\"授\"]],\n\t[\"綫\", [\"綫\",\"線\",\"线\",\"缐\",\"腺\"]],\n\t[\"線\", [\"綫\",\"線\",\"线\",\"缐\",\"腺\"]],\n\t[\"线\", [\"綫\",\"線\",\"线\",\"缐\",\"腺\"]],\n\t[\"缐\", [\"綫\",\"線\",\"线\",\"缐\",\"腺\"]],\n\t[\"腺\", [\"綫\",\"線\",\"线\",\"缐\",\"腺\"]],\n\t[\"一\", [\"一\",\"壱\",\"壹\"]],\n\t[\"壱\", [\"一\",\"壱\",\"壹\"]],\n\t[\"壹\", [\"一\",\"壱\",\"壹\"]],\n\t[\"慌\", [\"慌\",\"荒\"]],\n\t[\"荒\", [\"慌\",\"荒\"]],\n\t[\"庭\", [\"庭\",\"廷\"]],\n\t[\"廷\", [\"庭\",\"廷\"]],\n\t[\"喧\", [\"喧\",\"宣\",\"暄\",\"煊\",\"諠\"]],\n\t[\"宣\", [\"喧\",\"宣\",\"暄\",\"煊\",\"諠\"]],\n\t[\"暄\", [\"喧\",\"宣\",\"暄\",\"煊\",\"諠\"]],\n\t[\"煊\", [\"喧\",\"宣\",\"暄\",\"煊\",\"諠\"]],\n\t[\"諠\", [\"喧\",\"宣\",\"暄\",\"煊\",\"諠\"]],\n\t[\"掠\", [\"掠\",\"略\",\"畧\"]],\n\t[\"略\", [\"掠\",\"略\",\"畧\"]],\n\t[\"畧\", [\"掠\",\"略\",\"畧\"]],\n\t[\"䇳\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"牋\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"笺\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"签\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"箋\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"簽\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"籖\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"籤\", [\"䇳\",\"牋\",\"笺\",\"签\",\"箋\",\"簽\",\"籖\",\"籤\"]],\n\t[\"么\", [\"么\",\"幺\",\"庅\",\"麼\",\"麽\"]],\n\t[\"幺\", [\"么\",\"幺\",\"庅\",\"麼\",\"麽\"]],\n\t[\"庅\", [\"么\",\"幺\",\"庅\",\"麼\",\"麽\"]],\n\t[\"麼\", [\"么\",\"幺\",\"庅\",\"麼\",\"麽\"]],\n\t[\"麽\", [\"么\",\"幺\",\"庅\",\"麼\",\"麽\"]],\n\t[\"杧\", [\"杧\",\"芒\",\"茫\"]],\n\t[\"芒\", [\"杧\",\"芒\",\"茫\"]],\n\t[\"茫\", [\"杧\",\"芒\",\"茫\"]],\n\t[\"趯\", [\"趯\",\"跃\",\"躍\"]],\n\t[\"跃\", [\"趯\",\"跃\",\"躍\"]],\n\t[\"躍\", [\"趯\",\"跃\",\"躍\"]],\n\t[\"㳽\", [\"㳽\",\"弥\",\"弭\",\"彌\",\"瀰\",\"米\"]],\n\t[\"弥\", [\"㳽\",\"弥\",\"弭\",\"彌\",\"瀰\",\"米\"]],\n\t[\"弭\", [\"㳽\",\"弥\",\"弭\",\"彌\",\"瀰\",\"米\"]],\n\t[\"彌\", [\"㳽\",\"弥\",\"弭\",\"彌\",\"瀰\",\"米\"]],\n\t[\"瀰\", [\"㳽\",\"弥\",\"弭\",\"彌\",\"瀰\",\"米\"]],\n\t[\"米\", [\"㳽\",\"弥\",\"弭\",\"彌\",\"瀰\",\"米\"]],\n\t[\"抹\", [\"抹\",\"袜\",\"襪\"]],\n\t[\"袜\", [\"抹\",\"袜\",\"襪\"]],\n\t[\"襪\", [\"抹\",\"袜\",\"襪\"]],\n\t[\"䆫\", [\"䆫\",\"囪\",\"囱\",\"窓\",\"窗\",\"窻\"]],\n\t[\"囪\", [\"䆫\",\"囪\",\"囱\",\"窓\",\"窗\",\"窻\"]],\n\t[\"囱\", [\"䆫\",\"囪\",\"囱\",\"窓\",\"窗\",\"窻\"]],\n\t[\"窓\", [\"䆫\",\"囪\",\"囱\",\"窓\",\"窗\",\"窻\"]],\n\t[\"窗\", [\"䆫\",\"囪\",\"囱\",\"窓\",\"窗\",\"窻\"]],\n\t[\"窻\", [\"䆫\",\"囪\",\"囱\",\"窓\",\"窗\",\"窻\"]],\n\t[\"函\", [\"函\",\"凾\",\"涵\"]],\n\t[\"凾\", [\"函\",\"凾\",\"涵\"]],\n\t[\"涵\", [\"函\",\"凾\",\"涵\"]],\n\t[\"悚\", [\"悚\",\"耸\",\"聳\"]],\n\t[\"耸\", [\"悚\",\"耸\",\"聳\"]],\n\t[\"聳\", [\"悚\",\"耸\",\"聳\"]],\n\t[\"洛\", [\"洛\",\"落\"]],\n\t[\"落\", [\"洛\",\"落\"]],\n\t[\"标\", [\"标\",\"標\",\"鏢\",\"鑣\",\"镖\",\"镳\"]],\n\t[\"標\", [\"标\",\"標\",\"鏢\",\"鑣\",\"镖\",\"镳\"]],\n\t[\"鏢\", [\"标\",\"標\",\"鏢\",\"鑣\",\"镖\",\"镳\"]],\n\t[\"鑣\", [\"标\",\"標\",\"鏢\",\"鑣\",\"镖\",\"镳\"]],\n\t[\"镖\", [\"标\",\"標\",\"鏢\",\"鑣\",\"镖\",\"镳\"]],\n\t[\"镳\", [\"标\",\"標\",\"鏢\",\"鑣\",\"镖\",\"镳\"]],\n\t[\"怪\", [\"怪\",\"恠\"]],\n\t[\"恠\", [\"怪\",\"恠\"]],\n\t[\"並\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"併\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"倂\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"并\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"幷\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"竝\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"𠀤\", [\"並\",\"併\",\"倂\",\"并\",\"幷\",\"竝\",\"𠀤\"]],\n\t[\"鶇\", [\"鶇\",\"鶫\",\"鸫\",\"𪂝\"]],\n\t[\"鶫\", [\"鶇\",\"鶫\",\"鸫\",\"𪂝\"]],\n\t[\"鸫\", [\"鶇\",\"鶫\",\"鸫\",\"𪂝\"]],\n\t[\"𪂝\", [\"鶇\",\"鶫\",\"鸫\",\"𪂝\"]],\n\t[\"白\", [\"白\",\"鉑\",\"铂\"]],\n\t[\"鉑\", [\"白\",\"鉑\",\"铂\"]],\n\t[\"铂\", [\"白\",\"鉑\",\"铂\"]],\n\t[\"吊\", [\"吊\",\"弔\"]],\n\t[\"弔\", [\"吊\",\"弔\"]],\n\t[\"戒\", [\"戒\",\"誡\",\"诫\",\"𢌵\"]],\n\t[\"誡\", [\"戒\",\"誡\",\"诫\",\"𢌵\"]],\n\t[\"诫\", [\"戒\",\"誡\",\"诫\",\"𢌵\"]],\n\t[\"𢌵\", [\"戒\",\"誡\",\"诫\",\"𢌵\"]],\n\t[\"堀\", [\"堀\",\"窟\"]],\n\t[\"窟\", [\"堀\",\"窟\"]],\n\t[\"厉\", [\"厉\",\"厲\",\"砺\",\"礪\"]],\n\t[\"厲\", [\"厉\",\"厲\",\"砺\",\"礪\"]],\n\t[\"砺\", [\"厉\",\"厲\",\"砺\",\"礪\"]],\n\t[\"礪\", [\"厉\",\"厲\",\"砺\",\"礪\"]],\n\t[\"岛\", [\"岛\",\"島\",\"嶋\"]],\n\t[\"島\", [\"岛\",\"島\",\"嶋\"]],\n\t[\"嶋\", [\"岛\",\"島\",\"嶋\"]],\n\t[\"再\", [\"再\",\"在\"]],\n\t[\"在\", [\"再\",\"在\"]],\n\t[\"沦\", [\"沦\",\"淪\",\"輪\",\"轮\"]],\n\t[\"淪\", [\"沦\",\"淪\",\"輪\",\"轮\"]],\n\t[\"輪\", [\"沦\",\"淪\",\"輪\",\"轮\"]],\n\t[\"轮\", [\"沦\",\"淪\",\"輪\",\"轮\"]],\n\t[\"摩\", [\"摩\",\"磨\"]],\n\t[\"磨\", [\"摩\",\"磨\"]],\n\t[\"傍\", [\"傍\",\"彷\",\"徬\",\"旁\"]],\n\t[\"彷\", [\"傍\",\"彷\",\"徬\",\"旁\"]],\n\t[\"徬\", [\"傍\",\"彷\",\"徬\",\"旁\"]],\n\t[\"旁\", [\"傍\",\"彷\",\"徬\",\"旁\"]],\n\t[\"戆\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"戇\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"灨\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"贑\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"贛\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"赣\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"𥫔\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"𧹄\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"𧹉\", [\"戆\",\"戇\",\"灨\",\"贑\",\"贛\",\"赣\",\"𥫔\",\"𧹄\",\"𧹉\"]],\n\t[\"撒\", [\"撒\",\"萨\",\"蕯\",\"薩\"]],\n\t[\"萨\", [\"撒\",\"萨\",\"蕯\",\"薩\"]],\n\t[\"蕯\", [\"撒\",\"萨\",\"蕯\",\"薩\"]],\n\t[\"薩\", [\"撒\",\"萨\",\"蕯\",\"薩\"]],\n\t[\"厓\", [\"厓\",\"崕\",\"崖\",\"漄\"]],\n\t[\"崕\", [\"厓\",\"崕\",\"崖\",\"漄\"]],\n\t[\"崖\", [\"厓\",\"崕\",\"崖\",\"漄\"]],\n\t[\"漄\", [\"厓\",\"崕\",\"崖\",\"漄\"]],\n\t[\"壧\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"岩\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"嵒\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"巌\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"巖\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"巗\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"碞\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"礹\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"𡾏\", [\"壧\",\"岩\",\"嵒\",\"巌\",\"巖\",\"巗\",\"碞\",\"礹\",\"𡾏\"]],\n\t[\"噪\", [\"噪\",\"譟\"]],\n\t[\"譟\", [\"噪\",\"譟\"]],\n\t[\"凋\", [\"凋\",\"彫\",\"琱\",\"雕\",\"鵰\"]],\n\t[\"彫\", [\"凋\",\"彫\",\"琱\",\"雕\",\"鵰\"]],\n\t[\"琱\", [\"凋\",\"彫\",\"琱\",\"雕\",\"鵰\"]],\n\t[\"雕\", [\"凋\",\"彫\",\"琱\",\"雕\",\"鵰\"]],\n\t[\"鵰\", [\"凋\",\"彫\",\"琱\",\"雕\",\"鵰\"]],\n\t[\"蔑\", [\"蔑\",\"衊\"]],\n\t[\"衊\", [\"蔑\",\"衊\"]],\n\t[\"汙\", [\"汙\",\"汚\",\"污\",\"誣\",\"诬\"]],\n\t[\"汚\", [\"汙\",\"汚\",\"污\",\"誣\",\"诬\"]],\n\t[\"污\", [\"汙\",\"汚\",\"污\",\"誣\",\"诬\"]],\n\t[\"誣\", [\"汙\",\"汚\",\"污\",\"誣\",\"诬\"]],\n\t[\"诬\", [\"汙\",\"汚\",\"污\",\"誣\",\"诬\"]],\n\t[\"暗\", [\"暗\",\"闇\",\"黯\"]],\n\t[\"闇\", [\"暗\",\"闇\",\"黯\"]],\n\t[\"黯\", [\"暗\",\"闇\",\"黯\"]],\n\t[\"幪\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"懞\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"懵\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"曚\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"朦\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"濛\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"矇\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"蒙\", [\"幪\",\"懞\",\"懵\",\"曚\",\"朦\",\"濛\",\"矇\",\"蒙\"]],\n\t[\"摆\", [\"摆\",\"擺\",\"襬\"]],\n\t[\"擺\", [\"摆\",\"擺\",\"襬\"]],\n\t[\"襬\", [\"摆\",\"擺\",\"襬\"]],\n\t[\"掺\", [\"掺\",\"搀\",\"摻\",\"攙\"]],\n\t[\"搀\", [\"掺\",\"搀\",\"摻\",\"攙\"]],\n\t[\"摻\", [\"掺\",\"搀\",\"摻\",\"攙\"]],\n\t[\"攙\", [\"掺\",\"搀\",\"摻\",\"攙\"]],\n\t[\"啣\", [\"啣\",\"衔\",\"銜\"]],\n\t[\"衔\", [\"啣\",\"衔\",\"銜\"]],\n\t[\"銜\", [\"啣\",\"衔\",\"銜\"]],\n\t[\"偷\", [\"偷\",\"媮\"]],\n\t[\"媮\", [\"偷\",\"媮\"]],\n\t[\"旋\", [\"旋\",\"漩\",\"碹\",\"鏇\",\"镟\"]],\n\t[\"漩\", [\"旋\",\"漩\",\"碹\",\"鏇\",\"镟\"]],\n\t[\"碹\", [\"旋\",\"漩\",\"碹\",\"鏇\",\"镟\"]],\n\t[\"鏇\", [\"旋\",\"漩\",\"碹\",\"鏇\",\"镟\"]],\n\t[\"镟\", [\"旋\",\"漩\",\"碹\",\"鏇\",\"镟\"]],\n\t[\"淡\", [\"淡\",\"澹\"]],\n\t[\"澹\", [\"淡\",\"澹\"]],\n\t[\"徨\", [\"徨\",\"惶\",\"皇\"]],\n\t[\"惶\", [\"徨\",\"惶\",\"皇\"]],\n\t[\"皇\", [\"徨\",\"惶\",\"皇\"]],\n\t[\"秋\", [\"秋\",\"鞦\"]],\n\t[\"鞦\", [\"秋\",\"鞦\"]],\n\t[\"哄\", [\"哄\",\"閧\",\"鬨\"]],\n\t[\"閧\", [\"哄\",\"閧\",\"鬨\"]],\n\t[\"鬨\", [\"哄\",\"閧\",\"鬨\"]],\n\t[\"嗯\", [\"嗯\",\"恩\",\"摁\"]],\n\t[\"恩\", [\"嗯\",\"恩\",\"摁\"]],\n\t[\"摁\", [\"嗯\",\"恩\",\"摁\"]],\n\t[\"偰\", [\"偰\",\"契\",\"楔\"]],\n\t[\"契\", [\"偰\",\"契\",\"楔\"]],\n\t[\"楔\", [\"偰\",\"契\",\"楔\"]],\n\t[\"坐\", [\"坐\",\"座\"]],\n\t[\"座\", [\"坐\",\"座\"]],\n\t[\"埼\", [\"埼\",\"崎\",\"嵜\",\"碕\"]],\n\t[\"崎\", [\"埼\",\"崎\",\"嵜\",\"碕\"]],\n\t[\"嵜\", [\"埼\",\"崎\",\"嵜\",\"碕\"]],\n\t[\"碕\", [\"埼\",\"崎\",\"嵜\",\"碕\"]],\n\t[\"征\", [\"征\",\"徴\",\"徵\",\"怔\",\"愣\"]],\n\t[\"徴\", [\"征\",\"徴\",\"徵\",\"怔\",\"愣\"]],\n\t[\"徵\", [\"征\",\"徴\",\"徵\",\"怔\",\"愣\"]],\n\t[\"怔\", [\"征\",\"徴\",\"徵\",\"怔\",\"愣\"]],\n\t[\"愣\", [\"征\",\"徴\",\"徵\",\"怔\",\"愣\"]],\n\t[\"份\", [\"份\",\"分\",\"芬\"]],\n\t[\"分\", [\"份\",\"分\",\"芬\"]],\n\t[\"芬\", [\"份\",\"分\",\"芬\"]],\n\t[\"嫒\", [\"嫒\",\"嬡\",\"愛\",\"爱\",\"瑷\",\"璦\"]],\n\t[\"嬡\", [\"嫒\",\"嬡\",\"愛\",\"爱\",\"瑷\",\"璦\"]],\n\t[\"愛\", [\"嫒\",\"嬡\",\"愛\",\"爱\",\"瑷\",\"璦\"]],\n\t[\"爱\", [\"嫒\",\"嬡\",\"愛\",\"爱\",\"瑷\",\"璦\"]],\n\t[\"瑷\", [\"嫒\",\"嬡\",\"愛\",\"爱\",\"瑷\",\"璦\"]],\n\t[\"璦\", [\"嫒\",\"嬡\",\"愛\",\"爱\",\"瑷\",\"璦\"]],\n\t[\"姓\", [\"姓\",\"性\"]],\n\t[\"性\", [\"姓\",\"性\"]],\n\t[\"娇\", [\"娇\",\"嬌\",\"驕\",\"骄\"]],\n\t[\"嬌\", [\"娇\",\"嬌\",\"驕\",\"骄\"]],\n\t[\"驕\", [\"娇\",\"嬌\",\"驕\",\"骄\"]],\n\t[\"骄\", [\"娇\",\"嬌\",\"驕\",\"骄\"]],\n\t[\"召\", [\"召\",\"招\"]],\n\t[\"招\", [\"召\",\"招\"]],\n\t[\"微\", [\"微\",\"薇\"]],\n\t[\"薇\", [\"微\",\"薇\"]],\n\t[\"傲\", [\"傲\",\"敖\",\"熬\",\"璈\",\"遨\"]],\n\t[\"敖\", [\"傲\",\"敖\",\"熬\",\"璈\",\"遨\"]],\n\t[\"熬\", [\"傲\",\"敖\",\"熬\",\"璈\",\"遨\"]],\n\t[\"璈\", [\"傲\",\"敖\",\"熬\",\"璈\",\"遨\"]],\n\t[\"遨\", [\"傲\",\"敖\",\"熬\",\"璈\",\"遨\"]],\n\t[\"奥\", [\"奥\",\"奧\",\"澳\",\"袄\",\"襖\"]],\n\t[\"奧\", [\"奥\",\"奧\",\"澳\",\"袄\",\"襖\"]],\n\t[\"澳\", [\"奥\",\"奧\",\"澳\",\"袄\",\"襖\"]],\n\t[\"袄\", [\"奥\",\"奧\",\"澳\",\"袄\",\"襖\"]],\n\t[\"襖\", [\"奥\",\"奧\",\"澳\",\"袄\",\"襖\"]],\n\t[\"振\", [\"振\",\"震\"]],\n\t[\"震\", [\"振\",\"震\"]],\n\t[\"忝\", [\"忝\",\"恬\"]],\n\t[\"恬\", [\"忝\",\"恬\"]],\n\t[\"担\", [\"担\",\"擔\",\"檐\",\"簷\"]],\n\t[\"擔\", [\"担\",\"擔\",\"檐\",\"簷\"]],\n\t[\"檐\", [\"担\",\"擔\",\"檐\",\"簷\"]],\n\t[\"簷\", [\"担\",\"擔\",\"檐\",\"簷\"]],\n\t[\"冥\", [\"冥\",\"瞑\"]],\n\t[\"瞑\", [\"冥\",\"瞑\"]],\n\t[\"妇\", [\"妇\",\"婦\",\"媍\"]],\n\t[\"婦\", [\"妇\",\"婦\",\"媍\"]],\n\t[\"媍\", [\"妇\",\"婦\",\"媍\"]],\n\t[\"䦰\", [\"䦰\",\"䰗\",\"阄\",\"鬮\",\"𨷺\"]],\n\t[\"䰗\", [\"䦰\",\"䰗\",\"阄\",\"鬮\",\"𨷺\"]],\n\t[\"阄\", [\"䦰\",\"䰗\",\"阄\",\"鬮\",\"𨷺\"]],\n\t[\"鬮\", [\"䦰\",\"䰗\",\"阄\",\"鬮\",\"𨷺\"]],\n\t[\"𨷺\", [\"䦰\",\"䰗\",\"阄\",\"鬮\",\"𨷺\"]],\n\t[\"帚\", [\"帚\",\"扫\",\"掃\",\"箒\",\"菷\"]],\n\t[\"扫\", [\"帚\",\"扫\",\"掃\",\"箒\",\"菷\"]],\n\t[\"掃\", [\"帚\",\"扫\",\"掃\",\"箒\",\"菷\"]],\n\t[\"箒\", [\"帚\",\"扫\",\"掃\",\"箒\",\"菷\"]],\n\t[\"菷\", [\"帚\",\"扫\",\"掃\",\"箒\",\"菷\"]],\n\t[\"拣\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"捡\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"揀\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"撿\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"检\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"検\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"檢\", [\"拣\",\"捡\",\"揀\",\"撿\",\"检\",\"検\",\"檢\"]],\n\t[\"帘\", [\"帘\",\"濂\",\"簾\"]],\n\t[\"濂\", [\"帘\",\"濂\",\"簾\"]],\n\t[\"簾\", [\"帘\",\"濂\",\"簾\"]],\n\t[\"伎\", [\"伎\",\"妓\",\"技\"]],\n\t[\"妓\", [\"伎\",\"妓\",\"技\"]],\n\t[\"技\", [\"伎\",\"妓\",\"技\"]],\n\t[\"法\", [\"法\",\"珐\",\"琺\"]],\n\t[\"珐\", [\"法\",\"珐\",\"琺\"]],\n\t[\"琺\", [\"法\",\"珐\",\"琺\"]],\n\t[\"晖\", [\"晖\",\"暉\",\"煇\",\"輝\",\"辉\",\"𪸩\"]],\n\t[\"暉\", [\"晖\",\"暉\",\"煇\",\"輝\",\"辉\",\"𪸩\"]],\n\t[\"煇\", [\"晖\",\"暉\",\"煇\",\"輝\",\"辉\",\"𪸩\"]],\n\t[\"輝\", [\"晖\",\"暉\",\"煇\",\"輝\",\"辉\",\"𪸩\"]],\n\t[\"辉\", [\"晖\",\"暉\",\"煇\",\"輝\",\"辉\",\"𪸩\"]],\n\t[\"𪸩\", [\"晖\",\"暉\",\"煇\",\"輝\",\"辉\",\"𪸩\"]],\n\t[\"昡\", [\"昡\",\"炫\",\"眩\"]],\n\t[\"炫\", [\"昡\",\"炫\",\"眩\"]],\n\t[\"眩\", [\"昡\",\"炫\",\"眩\"]],\n\t[\"踰\", [\"踰\",\"逾\"]],\n\t[\"逾\", [\"踰\",\"逾\"]],\n\t[\"茜\", [\"茜\",\"西\"]],\n\t[\"西\", [\"茜\",\"西\"]],\n\t[\"勘\", [\"勘\",\"堪\"]],\n\t[\"堪\", [\"勘\",\"堪\"]],\n\t[\"筣\", [\"筣\",\"篱\",\"籬\"]],\n\t[\"篱\", [\"筣\",\"篱\",\"籬\"]],\n\t[\"籬\", [\"筣\",\"篱\",\"籬\"]],\n\t[\"笓\", [\"笓\",\"箆\",\"篦\"]],\n\t[\"箆\", [\"笓\",\"箆\",\"篦\"]],\n\t[\"篦\", [\"笓\",\"箆\",\"篦\"]],\n\t[\"仓\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"倉\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"怆\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"愴\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"沧\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"滄\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"舱\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"艙\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"苍\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"蒼\", [\"仓\",\"倉\",\"怆\",\"愴\",\"沧\",\"滄\",\"舱\",\"艙\",\"苍\",\"蒼\"]],\n\t[\"几\", [\"几\",\"幾\",\"机\",\"機\"]],\n\t[\"幾\", [\"几\",\"幾\",\"机\",\"機\"]],\n\t[\"机\", [\"几\",\"幾\",\"机\",\"機\"]],\n\t[\"機\", [\"几\",\"幾\",\"机\",\"機\"]],\n\t[\"彻\", [\"彻\",\"徹\",\"澈\"]],\n\t[\"徹\", [\"彻\",\"徹\",\"澈\"]],\n\t[\"澈\", [\"彻\",\"徹\",\"澈\"]],\n\t[\"个\", [\"个\",\"個\",\"各\",\"箇\"]],\n\t[\"個\", [\"个\",\"個\",\"各\",\"箇\"]],\n\t[\"各\", [\"个\",\"個\",\"各\",\"箇\"]],\n\t[\"箇\", [\"个\",\"個\",\"各\",\"箇\"]],\n\t[\"久\", [\"久\",\"乆\",\"灸\",\"玖\",\"镹\"]],\n\t[\"乆\", [\"久\",\"乆\",\"灸\",\"玖\",\"镹\"]],\n\t[\"灸\", [\"久\",\"乆\",\"灸\",\"玖\",\"镹\"]],\n\t[\"玖\", [\"久\",\"乆\",\"灸\",\"玖\",\"镹\"]],\n\t[\"镹\", [\"久\",\"乆\",\"灸\",\"玖\",\"镹\"]],\n\t[\"鱗\", [\"鱗\",\"鳞\",\"麐\",\"麟\"]],\n\t[\"鳞\", [\"鱗\",\"鳞\",\"麐\",\"麟\"]],\n\t[\"麐\", [\"鱗\",\"鳞\",\"麐\",\"麟\"]],\n\t[\"麟\", [\"鱗\",\"鳞\",\"麐\",\"麟\"]],\n\t[\"剪\", [\"剪\",\"翦\"]],\n\t[\"翦\", [\"剪\",\"翦\"]],\n\t[\"僖\", [\"僖\",\"喜\",\"囍\",\"憙\",\"禧\"]],\n\t[\"喜\", [\"僖\",\"喜\",\"囍\",\"憙\",\"禧\"]],\n\t[\"囍\", [\"僖\",\"喜\",\"囍\",\"憙\",\"禧\"]],\n\t[\"憙\", [\"僖\",\"喜\",\"囍\",\"憙\",\"禧\"]],\n\t[\"禧\", [\"僖\",\"喜\",\"囍\",\"憙\",\"禧\"]],\n\t[\"㷉\", [\"㷉\",\"尉\",\"慰\",\"熨\",\"罻\"]],\n\t[\"尉\", [\"㷉\",\"尉\",\"慰\",\"熨\",\"罻\"]],\n\t[\"慰\", [\"㷉\",\"尉\",\"慰\",\"熨\",\"罻\"]],\n\t[\"熨\", [\"㷉\",\"尉\",\"慰\",\"熨\",\"罻\"]],\n\t[\"罻\", [\"㷉\",\"尉\",\"慰\",\"熨\",\"罻\"]],\n\t[\"勐\", [\"勐\",\"猛\"]],\n\t[\"猛\", [\"勐\",\"猛\"]],\n\t[\"湌\", [\"湌\",\"飡\",\"餐\"]],\n\t[\"飡\", [\"湌\",\"飡\",\"餐\"]],\n\t[\"餐\", [\"湌\",\"飡\",\"餐\"]],\n\t[\"迸\", [\"迸\",\"逬\"]],\n\t[\"逬\", [\"迸\",\"逬\"]],\n\t[\"埜\", [\"埜\",\"野\"]],\n\t[\"野\", [\"埜\",\"野\"]],\n\t[\"吐\", [\"吐\",\"土\"]],\n\t[\"土\", [\"吐\",\"土\"]],\n\t[\"婉\", [\"婉\",\"宛\",\"惌\",\"琬\",\"碗\"]],\n\t[\"宛\", [\"婉\",\"宛\",\"惌\",\"琬\",\"碗\"]],\n\t[\"惌\", [\"婉\",\"宛\",\"惌\",\"琬\",\"碗\"]],\n\t[\"琬\", [\"婉\",\"宛\",\"惌\",\"琬\",\"碗\"]],\n\t[\"碗\", [\"婉\",\"宛\",\"惌\",\"琬\",\"碗\"]],\n\t[\"玉\", [\"玉\",\"鈺\"]],\n\t[\"鈺\", [\"玉\",\"鈺\"]],\n\t[\"伃\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"俞\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"兪\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"妤\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"瑜\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"諭\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"谕\", [\"伃\",\"俞\",\"兪\",\"妤\",\"瑜\",\"諭\",\"谕\"]],\n\t[\"毓\", [\"毓\",\"育\"]],\n\t[\"育\", [\"毓\",\"育\"]],\n\t[\"桩\", [\"桩\",\"椿\",\"樁\"]],\n\t[\"椿\", [\"桩\",\"椿\",\"樁\"]],\n\t[\"樁\", [\"桩\",\"椿\",\"樁\"]],\n\t[\"但\", [\"但\",\"旦\"]],\n\t[\"旦\", [\"但\",\"旦\"]],\n\t[\"崁\", [\"崁\",\"嵌\"]],\n\t[\"嵌\", [\"崁\",\"嵌\"]],\n\t[\"塌\", [\"塌\",\"踏\"]],\n\t[\"踏\", [\"塌\",\"踏\"]],\n\t[\"漠\", [\"漠\",\"陌\",\"默\",\"黙\"]],\n\t[\"陌\", [\"漠\",\"陌\",\"默\",\"黙\"]],\n\t[\"默\", [\"漠\",\"陌\",\"默\",\"黙\"]],\n\t[\"黙\", [\"漠\",\"陌\",\"默\",\"黙\"]],\n\t[\"拙\", [\"拙\",\"絀\",\"绌\",\"黜\"]],\n\t[\"絀\", [\"拙\",\"絀\",\"绌\",\"黜\"]],\n\t[\"绌\", [\"拙\",\"絀\",\"绌\",\"黜\"]],\n\t[\"黜\", [\"拙\",\"絀\",\"绌\",\"黜\"]],\n\t[\"恰\", [\"恰\",\"洽\"]],\n\t[\"洽\", [\"恰\",\"洽\"]],\n\t[\"䁩\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"䐳\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"䲆\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"渔\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"漁\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"魚\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"鱼\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"𤉯\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"𤋳\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"𩥭\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"𩵋\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"𩺰\", [\"䁩\",\"䐳\",\"䲆\",\"渔\",\"漁\",\"魚\",\"鱼\",\"𤉯\",\"𤋳\",\"𩥭\",\"𩵋\",\"𩺰\"]],\n\t[\"奖\", [\"奖\",\"奨\",\"奬\",\"獎\"]],\n\t[\"奨\", [\"奖\",\"奨\",\"奬\",\"獎\"]],\n\t[\"奬\", [\"奖\",\"奨\",\"奬\",\"獎\"]],\n\t[\"獎\", [\"奖\",\"奨\",\"奬\",\"獎\"]],\n\t[\"㤼\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"刦\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"刧\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"刼\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"劫\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"𠉨\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"𠛗\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"𠞏\", [\"㤼\",\"刦\",\"刧\",\"刼\",\"劫\",\"𠉨\",\"𠛗\",\"𠞏\"]],\n\t[\"吒\", [\"吒\",\"咤\",\"詫\",\"诧\"]],\n\t[\"咤\", [\"吒\",\"咤\",\"詫\",\"诧\"]],\n\t[\"詫\", [\"吒\",\"咤\",\"詫\",\"诧\"]],\n\t[\"诧\", [\"吒\",\"咤\",\"詫\",\"诧\"]],\n\t[\"殒\", [\"殒\",\"殞\",\"磒\",\"陨\",\"隕\"]],\n\t[\"殞\", [\"殒\",\"殞\",\"磒\",\"陨\",\"隕\"]],\n\t[\"磒\", [\"殒\",\"殞\",\"磒\",\"陨\",\"隕\"]],\n\t[\"陨\", [\"殒\",\"殞\",\"磒\",\"陨\",\"隕\"]],\n\t[\"隕\", [\"殒\",\"殞\",\"磒\",\"陨\",\"隕\"]],\n\t[\"佰\", [\"佰\",\"百\",\"𦣻\"]],\n\t[\"百\", [\"佰\",\"百\",\"𦣻\"]],\n\t[\"𦣻\", [\"佰\",\"百\",\"𦣻\"]],\n\t[\"滥\", [\"滥\",\"濫\",\"烂\",\"爛\"]],\n\t[\"濫\", [\"滥\",\"濫\",\"烂\",\"爛\"]],\n\t[\"烂\", [\"滥\",\"濫\",\"烂\",\"爛\"]],\n\t[\"爛\", [\"滥\",\"濫\",\"烂\",\"爛\"]],\n\t[\"勿\", [\"勿\",\"毋\"]],\n\t[\"毋\", [\"勿\",\"毋\"]],\n\t[\"裏\", [\"裏\",\"裡\",\"里\",\"𥚃\"]],\n\t[\"裡\", [\"裏\",\"裡\",\"里\",\"𥚃\"]],\n\t[\"里\", [\"裏\",\"裡\",\"里\",\"𥚃\"]],\n\t[\"𥚃\", [\"裏\",\"裡\",\"里\",\"𥚃\"]],\n\t[\"抴\", [\"抴\",\"拽\",\"曳\",\"曵\",\"栧\"]],\n\t[\"拽\", [\"抴\",\"拽\",\"曳\",\"曵\",\"栧\"]],\n\t[\"曳\", [\"抴\",\"拽\",\"曳\",\"曵\",\"栧\"]],\n\t[\"曵\", [\"抴\",\"拽\",\"曳\",\"曵\",\"栧\"]],\n\t[\"栧\", [\"抴\",\"拽\",\"曳\",\"曵\",\"栧\"]],\n\t[\"捶\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"搥\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"椎\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"槌\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"錘\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"鎚\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"锤\", [\"捶\",\"搥\",\"椎\",\"槌\",\"錘\",\"鎚\",\"锤\"]],\n\t[\"熏\", [\"熏\",\"燻\",\"薫\",\"薰\"]],\n\t[\"燻\", [\"熏\",\"燻\",\"薫\",\"薰\"]],\n\t[\"薫\", [\"熏\",\"燻\",\"薫\",\"薰\"]],\n\t[\"薰\", [\"熏\",\"燻\",\"薫\",\"薰\"]],\n]);\n\n", "/**\n * Created by user on 2020/5/22.\n */\n\nimport { _greedyTableBuild } from './lib/core';\nimport { _greedyTableCacheTest, _greedyTableCacheMap, _greedyTableCacheRegexp } from './lib/table';\n\nexport { _greedyTableCacheTest, _greedyTableCacheMap, _greedyTableCacheRegexp }\n\nexport { _greedyTableBuild }\n\nexport function greedyTableTest(input: string)\n{\n\treturn _greedyTableCacheTest.test(input)\n}\n\nexport function greedyTableCharArray(char: string)\n{\n\treturn _greedyTableCacheMap.get(char)\n}\n\nexport function greedyTableReplace(input: string): string\n{\n\tif (greedyTableTest(input))\n\t{\n\t\treturn _greedyTableCacheRegexp\n\t\t\t.reduce(function (input, r)\n\t\t\t{\n\t\t\t\treturn input.replace(r[0], r[1])\n\t\t\t}, input)\n\t\t\t;\n\t}\n\n\treturn input\n}\n\nexport default exports as typeof import('./index');\n", "/**\n * Created by user on 2018/6/10/010.\n */\n\nimport { jp2zht, jp2zhs, cjk2jp, cjk2zhs, cjk2zht } from '@lazy-cjk/jp-table-convert';\nimport libTable from '@lazy-cjk/zh-table-alias';\nimport jpList from '@lazy-cjk/jp-table-alias';\nimport { greedyTableCharArray } from '@lazy-cjk/zh-table-greedy';\nimport { _wrapFn, _get } from './lib/util';\nimport { IOptions } from './lib/types';\n\nexport * from './lib/types';\n\n/**\n * 取出此漢字所對應的繁漢字\n * @type {(char: string, options?: IOptions) => string[]}\n */\nexport const tw = _wrapFn('tw');\n\n/**\n * 取出此漢字所對應的簡漢字\n * @type {(char: string, options?: IOptions) => string[]}\n */\nexport const cn = _wrapFn('cn');\n\n/**\n * 取出此漢字所對應的日漢字\n * @type {(char: string, options?: IOptions) => string[]}\n */\nexport const jp = _wrapFn('jp');\n\n/**\n * 自動取出此漢字所對應的簡繁日漢字\n *\n * @param {string} char\n * @param {IOptions} options\n * @returns {string[]}\n */\nexport function auto(char: string, options: IOptions = {}): string[]\n{\n\tif (!char)\n\t{\n\t\treturn null;\n\t}\n\n\tif (options.skip && options.skip.indexOf(char) != -1)\n\t{\n\t\treturn [char];\n\t}\n\n\tlet jt = jp2zht(char);\n\tlet js = jp2zhs(char);\n\n\tlet greedyTable: number = (options.greedyTable as any) | 0;\n\n\tlet a = _get([],\n\t\tchar,\n\t\tlibTable.tw(char, options),\n\t\tlibTable.cn(char, options),\n\t\t(!options.skip || options.skip.indexOf(jt) == -1) && libTable.cn(jt, options),\n\t\t(!options.skip || options.skip.indexOf(js) == -1) && libTable.tw(js, options),\n\t\tlibTable.jp(char, options),\n\n\t\t(greedyTable && cjk2jp(char)),\n\t\t(greedyTable && cjk2zhs(char)),\n\t\t(greedyTable && cjk2zht(char)),\n\n\t\t(greedyTable && jpList.zh2jp(char, {\n\t\t\tsafe: greedyTable <= 1\n\t\t})),\n\t\t(greedyTable && jpList.jp2zh(char, {\n\t\t\tsafe: greedyTable <= 1\n\t\t})),\n\n\t\t(greedyTable > 1 && greedyTableCharArray(char)),\n\t);\n\n\t/*\n\tif (!skip || skip.indexOf(jt) == -1)\n\t{\n\t\ta = a.concat(...cn(jt));\n\t}\n\tif (!skip || skip.indexOf(js) == -1)\n\t{\n\t\ta = a.concat(...tw(js));\n\t}\n\n\tif (zhtw_convert.table_jp[char])\n\t{\n\t\ta = a.concat(jp(char));\n\t}\n\n\ta = array_unique(a);\n\ta.sort();\n\t*/\n\n\treturn a;\n}\n\nexport default exports as typeof import('./index');\n", "/**\n * Created by user on 2018/2/17/017.\n */\n\nimport libTable from '@lazy-cjk/zh-table-alias';\nimport { _get } from '@lazy-cjk/zh-table-list/lib/util';\n\nexport * from '@lazy-cjk/zh-table-list/lib/types';\n\nexport * from '@lazy-cjk/zh-table-list';\n\nexport { libTable }\nexport { _get }\n\nexport default exports as typeof import('./index');\n", "/**\n * Created by user on 2018/2/17/017.\n */\n\nexport { zh2jp, zht2jp, zhs2jp, zhs2zht, zht2zhs, cjk2zhs, jp2zhs, jp2zht, cjk2zht, cjk2jp, IOptions } from '@lazy-cjk/jp-table-convert';\n\nexport default exports as typeof import('./index');\n", "import { zh2jp } from '@lazy-cjk/jp-table-convert';\nimport { cn2tw } from '@lazy-cjk/zh-convert';\n\nexport interface IOptions\n{\n\tskip?: string,\n\tsafe?: boolean,\n}\n\nexport function filename(name: string, options: IOptions = {}): string\n{\n\treturn jp(name, options)\n\t\t.replace(/·/g, '・')\n\t\t;\n}\n\nexport function word(name: string, options: IOptions = {}): string\n{\n\treturn jp(name, options);\n}\n\nexport function jp(txt: string, options: IOptions = {}): string\n{\n\treturn zh(zh2jp(zh(txt), {\n\t\t// @ts-ignore\n\t\tskip: '竜龍制征里像拜冰澤涉丑兒娘姐姉志儿從辨勞' + (options.skip || ''),\n\t\tsafe: typeof options.safe == 'boolean' ? options.safe : true,\n\t}))\n\t\t.replace(/诅/g, '詛')\n\t\t.replace(/复仇/g, '復仇')\n\t\t.replace(/戦斗/g, '戦闘')\n\t\t.replace(/^プロローグ/, '序')\n\t\t.replace(/^エピローグ/, '終章')\n\t\t.replace(/総/g, '總')\n\t\t.replace(/帰|归/g, '歸')\n\t\t.replace(/辺/g, '邊')\n\t\t.replace(/対/g, '對')\n\t\t.replace(/独/g, '獨')\n\t\t.replace(/実/g, '實')\n\t\t.replace(/決斗/g, '決闘')\n\t\t.replace(/仮/g, '假')\n\t\t.replace(/戦/g, '戰')\n\t\t;\n}\n\nexport function zh(txt: string, options: IOptions = {}): string\n{\n\treturn txt\n\n\t\t.replace(/[\\u2000-\\u200F]/g, '')\n\t\t.replace(/[\\u2028-\\u202F]/g, '')\n\t\t.replace(/[\\u205F-\\u2060]/g, '')\n\n\t\t//.replace(/儿/g, '兒')\n\n\t\t.replace(/与/g, '與')\n\t\t.replace(/[亜亚亞]/g, '亞')\n\t\t.replace(/価/, '價')\n\t\t.replace(/[觉覚覺]/g, '覺')\n\t\t.replace(/亏/g, '虧')\n\t\t.replace(/[·‧・···•]/g, '・')\n\t\t.replace(/泽/g, '澤')\n\t\t.replace(/^(?:后)(記|日)/, '後$1')\n\t\t.replace(/(身)(?:后)/, '$1後')\n\t\t.replace(/(?:后)(悔)/, '後$1')\n\t\t.replace(/回复/g, '回復')\n\t\t.replace(/复(仇|讐)/g, '復$1')\n\n\t\t.replace(/里面/g, '裡面')\n\t\t.replace(/([今此])后/g, '$1後')\n\n\t\t.replace(/[么预枪丛迈这个尔儿从龙丝风劳弃别驯卢妈称号]+/ug, function (s)\n\t\t{\n\t\t\treturn cn2tw(s)\n\t\t})\n\n\t\t//.replace(/死后/g, '死後')\n\t\t//.replace(/当/g, '當')\n\n\t\t;\n}\n\nexport default exports as typeof import('./index');\n", "/**\n * Created by user on 2018/2/17/017.\n */\n\nexport * from '@lazy-cjk/novel-filename';\nimport m from '@lazy-cjk/novel-filename';\n\nexport default m;\n", "/**\n * Created by user on 2018/2/17/017.\n */\n\nexport { default as zhConvert, tw2cn, cn2tw } from './zh/convert/index';\nexport { default as zhTable, IOptions as IOptionsZhTable } from './zh/table/index';\nexport { default as jpConvert, zh2jp, jp2zht, jp2zhs, cjk2zht, cjk2zhs, cjk2jp } from './jp/index';\n\nexport { default as novelFilename } from './novel/filename';\n\nexport default exports as typeof import('./index');\n", "{\n  \"name\": \"cjk-conv\",\n  \"version\": \"1.2.146\",\n  \"description\": \"convert chinese, japanese \u7C21\u7E41\u65E5\u6F22\u5B57\u8F49\u63DB ( merge/split submodule from node-novel, regexp-cjk, str-util )\",\n  \"keywords\": [\n    \"char\",\n    \"character\",\n    \"characters\",\n    \"chinese\",\n    \"cjk\",\n    \"cjk-conv\",\n    \"regexp-cjk\",\n    \"cn\",\n    \"cn2tw\",\n    \"conv\",\n    \"conversion\",\n    \"convert\",\n    \"greedy\",\n    \"hanja\",\n    \"hanzi\",\n    \"japanese\",\n    \"jp2zhs\",\n    \"jp2zht\",\n    \"kanji\",\n    \"node-novel\",\n    \"regex\",\n    \"regexp\",\n    \"regular\",\n    \"regular expression\",\n    \"simplified\",\n    \"slugify\",\n    \"str-util\",\n    \"table\",\n    \"traditional\",\n    \"transform\",\n    \"tw\",\n    \"tw2cn\",\n    \"unicode\",\n    \"util\",\n    \"words\",\n    \"zh\",\n    \"zh-cn\",\n    \"zh-tw\",\n    \"zh2jp\",\n    \"zhs\",\n    \"zht\"\n  ],\n  \"homepage\": \"https://github.com/bluelovers/ws-regexp/tree/master/packages/cjk-conv#readme\",\n  \"bugs\": {\n    \"url\": \"https://github.com/bluelovers/ws-regexp/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/bluelovers/ws-regexp.git\",\n    \"directory\": \"packages/cjk-conv\"\n  },\n  \"license\": \"ISC\",\n  \"author\": \"bluelovers\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"lib\": \"lib\",\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"coverage\": \"npx nyc npm run test\",\n    \"pretest\": \"yarn run check\",\n    \"test\": \"jest\",\n    \"test:jest\": \"jest --passWithNoTests\",\n    \"test:jest:snapshot\": \"yarn run test:jest -- -u\",\n    \"test:snapshot\": \"yarn run test -- -u\",\n    \"test:tsd\": \"ynpx tsd\",\n    \"build-table\": \"ynpx @yarn-tool/fix-ws-links && yarn workspace @lazy-cjk/zh-convert-table run build && yarn workspace @lazy-cjk/zh-table-alias run build && yarn workspace @lazy-cjk/zh-convert run build && yarn workspace @lazy-cjk/zh-table-greedy run build && yarn workspace @lazy-cjk/static-build-zh-convert run build\",\n    \"build-table:commit\": \"yarn workspace @lazy-cjk/zh-convert-table run build:commit && yarn workspace @lazy-cjk/zh-table-alias run build:commit && yarn workspace @lazy-cjk/zh-convert run build:commit && yarn workspace @lazy-cjk/zh-table-greedy run build:commit && yarn workspace @lazy-cjk/static-build-zh-convert run build:commit\",\n    \"npm:publish\": \"npm publish\",\n    \"npm:publish:lerna\": \"npx lerna publish --yes --cd-version patch\",\n    \"preversion\": \"yarn run test && yarn run build-table:commit\",\n    \"prepublish:lockfile\": \"npx sync-lockfile .\",\n    \"prepublishOnly_\": \"yarn run test\",\n    \"postpublish\": \"yarn run postpublishOnly:add\",\n    \"postpublish_\": \"git commit -m \\\"chore(release): publish\\\" .\",\n    \"postpublishOnly:add\": \"npx yarn-tool root run postpublishOnly:add cjk-conv\",\n    \"check\": \"yarn run build-table && yarn run check:list\",\n    \"check:list\": \"ts-node ./test/list.ts\",\n    \"ncu\": \"npx yarn-tool ncu -u\",\n    \"precommit\": \"yarn run build-table\",\n    \"sort-package-json\": \"npx yarn-tool sort\",\n    \"travis\": \"typedoc --options ./typedoc.config.js\"\n  },\n  \"dependencies\": {\n    \"@lazy-cjk/jp-table-alias\": \"^1.0.43\",\n    \"@lazy-cjk/jp-table-comparison\": \"^1.0.30\",\n    \"@lazy-cjk/jp-table-convert\": \"^1.0.48\",\n    \"@lazy-cjk/jp-table-voice\": \"^1.0.38\",\n    \"@lazy-cjk/novel-filename\": \"^1.0.53\",\n    \"@lazy-cjk/util\": \"^1.0.19\",\n    \"@lazy-cjk/zh-convert\": \"^1.0.51\",\n    \"@lazy-cjk/zh-convert-table\": \"^1.0.25\",\n    \"@lazy-cjk/zh-slugify\": \"^1.0.89\",\n    \"@lazy-cjk/zh-table-alias\": \"^1.0.65\",\n    \"@lazy-cjk/zh-table-greedy\": \"^1.0.92\",\n    \"@lazy-cjk/zh-table-list\": \"^1.0.87\",\n    \"tslib\": \">=2\",\n    \"uni-string\": \"^2.0.7\"\n  },\n  \"gitHead\": \"e905ea55dc6433024806ea9db77147b282b5566d\"\n}\n", "/**\n * Created by user on 2020/6/2.\n */\n\n// @ts-ignore\nexport const version: string;\nexport default version\n\nObject.defineProperty(exports, \"version\", {\n\tget()\n\t{\n\t\treturn require('./package.json').version\n\t}\n});\n\nObject.defineProperty(exports, \"default\", {\n\tget()\n\t{\n\t\treturn version\n\t}\n});\n\n", "/**\n * Created by user on 2018/2/17/017.\n */\n\nimport cjkConv from './lib/index';\nexport * from './version';\n\nexport { cjkConv }\n\nexport * from './lib/index';\nexport default cjkConv;\n", "import { cn2tw } from \"cjk-conv\";\nimport { fetchInputItem } from \"./utils/input-item\";\nimport { Clipboard, getPreferenceValues, LaunchProps, showHUD } from \"@raycast/api\";\nimport { Preferences } from \"./types/preferences\";\nimport { TextArguments } from \"./types/types\";\n\nexport default async (props: LaunchProps<{ arguments: TextArguments }>) => {\n  const { text } = props.arguments;\n  const { actionAfterConversion, simplifiedToTraditionalQuoteStyle } = getPreferenceValues<Preferences>();\n  let input = text;\n  if (!input) {\n    input = await fetchInputItem();\n  }\n  const tw = cn2tw(input, { safe: false });\n  let finalTw = tw;\n  if (simplifiedToTraditionalQuoteStyle) {\n    finalTw = tw.replace(/\u2018/g, \"\u300C\").replace(/\u2019/g, \"\u300D\").replace(/\u201C/g, \"\u300E\").replace(/\u201D/g, \"\u300F\");\n  }\n  if (actionAfterConversion === \"Paste\") {\n    await Clipboard.paste(finalTw);\n    await showHUD(`\uD83D\uDCCB ${finalTw}`);\n  } else {\n    await Clipboard.copy(finalTw);\n    await showHUD(`\uD83D\uDCCB ${finalTw}`);\n  }\n};\n", "import { Clipboard, getSelectedText } from \"@raycast/api\";\nimport { isEmpty } from \"./common-utils\";\n\nexport const fetchInputItem = async () => {\n  try {\n    const selectedText = await getSelectedText();\n    if (!isEmpty(selectedText)) {\n      return selectedText;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  try {\n    const clipboardText = await Clipboard.readText();\n    if (clipboardText) {\n      return clipboardText;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  return \"\";\n};\n", "export const isEmpty = (string: string | null | undefined) => {\n  return !(string != null && String(string).length > 0);\n};\n"],
  "mappings": "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oB,CAAA,EAClB,OAAOD,CAAK,EACZ,OAAO,GAAGC,CAAM,EAChB,OAAO,SAAUC,EAAC,CAElB,OAAOA,CACR,CAAC,CAMH,CAdAL,GAAA,KAAAC,gICPaK,GAAA,WAAiD,CAC7D,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aaAED,OAAK,CACJ,SACA,YACA,YACA,YACA,SACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,YACA,YACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aaAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,aaAED,YAAM,CACL,SACA,SACA,aAED,SAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,aaAED,YAAM,CACL,SACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aAED,OAAK,CACJ,SACA,YACA,YACA,YACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aaAED,OAAK,CACJ,SACA,SACA,SACA,YACA,YACA,aAED,YAAM,CACL,SACA,SACA,SACA,YACA,YACA,aAED,YAAM,CACL,SACA,SACA,SACA,YACA,YACA,aAED,YAAM,CACL,SACA,SACA,SACA,YACA,YACA,aaAED,OAAK,CACJ,SACA,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,YAAM,CACL,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,YAAM,CACL,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,YAAM,CACL,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,aaAED,OAAK,CACJ,SACA,UAED,YAAM,CACL,SACA,avaAED,YAAM,CACL,SACA,SACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aaAED,OAAK,CACJ,SACA,YACA,YACA,YACA,SACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,YACA,YACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,aaaaAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,aAED,SAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,aaAED,YAAM,CACL,SACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aAED,OAAK,CACJ,SACA,YACA,YACA,YACA,SACA,aAED,YAAM,CACL,SACA,YACA,YACA,YACA,SACA,aaAED,OAAK,CACJ,SACA,SACA,SACA,YACA,YACA,aAED,YAAM,CACL,SACA,SACA,SACA,YACA,YACA,aAED,YAAM,CACL,SACA,SACA,SACA,YACA,YACA,aAED,YAAM,CACL,SACA,SACA,SACA,YACA,YACA,aaAED,OAAK,CACJ,SACA,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,YAAM,CACL,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,YAAM,CACL,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,YAAM,CACL,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,YAAM,CACL,SACA,SACA,aaAED,OAAK,CACJ,SACA,UAED,YAAM,CACL,SACA,atC,OAAK,SACL,OAAK,SACL,OAAK,SACL,OAAK,iJC77POC,GAAA,UAAY,CACxB,OAAK,SACL,OAAK,SACL,OAAK,SACL,OAAK,UAMOA,GAAA,cAAgaAED,YAAM,CACL,SACA,SACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,WAOWA,GAAA,gBAAkB,CAC9B,OAAK,CACJ,SACA,SACA,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,aaAED,OAAK,CACJ,SACA,YACA,YACA,YACA,SACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,YACA,YACA,aAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,YACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,aAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,YACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,YACA,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,UAED,OAAK,CACJ,SACA,SACA,UAED,OAAK,CACJ,SACA,SAC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,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,IAAI,CAAC,EACnB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,SAAI,SAAI,QAAG,EAAE,CAAC,SAAI,SAAI,QAAG,CAAC,EAClC,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,IAAI,CAAC,EACnB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,SAAI,QAAG,EAAE,CAAC,SAAI,QAAG,CAAC,EAC1B,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,IAAI,CAAC,EACnB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,GASNA,GAAA,WAAoC,CAChD,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,SAAI,SAAI,QAAG,EAAE,CAAC,SAAI,SAAI,QAAG,CAAC,EAClC,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,SAAI,QAAG,EAAE,CAAC,SAAI,QAAG,CAAC,EAC1B,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAAG,CAAC,EAClB,CAAC,CAAC,QAAG,EAAE,CAAC,QAAG,EAAE,CAAC,QAA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AAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAA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,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvE,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAA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SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,YAAK,WAAI,CAAC,EACzB,CAAC,SAAK,CAAC,SAAI,SAAI,YAAK,WAAI,CAAC,EACzB,CAAC,YAAM,CAAC,SAAI,SAAI,YAAK,WAAI,CAAC,EAC1B,CAAC,YAAM,CAAC,SAAI,SAAI,YAAK,WAAI,CAAC,EAC1B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,WAAI,CAAC,EACxB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,WAAI,CAAC,EACxB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,WAAI,CAAC,EACxB,CAAC,YAAM,CAAC,SAAI,SAAI,SAAI,WAAI,CAAC,EACzB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvD,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACpC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACpC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACpC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACpC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACpC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACpC,CAAC,YAAM,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,WAAI,CAAC,EACrC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,WAAI,CAAC,EACpB,CAAC,SAAK,CAAC,SAAI,SAAI,WAAI,CAAC,EACpB,CAAC,YAAM,CAAC,SAAI,SAAI,WAAI,CAAC,EACrB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAA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,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACvC,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,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C,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC/C,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,QAAG,CAAC,EACvB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,SAAI,QAAG,CAAC,EACnB,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EAC3B,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,QAAG,CAAC,EACf,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,EACnC,CAAC,SAAK,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,SAAI,QAAG,CAAC,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",
  "names": ["tslib_es6_exports", "__export", "__addDisposableResource", "__assign", "__asyncDelegator", "__asyncGenerator", "__asyncValues", "__await", "__awaiter", "__classPrivateFieldGet", "__classPrivateFieldIn", "__classPrivateFieldSet", "__createBinding", "__decorate", "__disposeResources", "__esDecorate", "__exportStar", "__extends", "__generator", "__importDefault", "__importStar", "__makeTemplateObject", "__metadata", "__param", "__propKey", "__read", "__rest", "__runInitializers", "__setFunctionName", "__spread", "__spreadArray", "__spreadArrays", "__values", "tslib_es6_default", "d", "b", "extendStatics", "__", "s", "e", "t", "p", "i", "decorators", "target", "key", "desc", "c", "r", "paramIndex", "decorator", "ctor", "descriptorIn", "contextIn", "initializers", "extraInitializers", "accept", "f", "kind", "descriptor", "_", "done", "context", "result", "thisArg", "value", "useValue", "x", "name", "prefix", "metadataKey", "metadataValue", "_arguments", "P", "generator", "adopt", "resolve", "reject", "fulfilled", "step", "rejected", "body", "y", "g", "verb", "n", "v", "op", "m", "o", "ar", "error", "il", "k", "a", "j", "jl", "to", "from", "pack", "l", "q", "awaitReturn", "resume", "settle", "fulfill", "cooked", "raw", "mod", "__setModuleDefault", "receiver", "state", "env", "async", "dispose", "inner", "fail", "_SuppressedError", "next", "rec", "init_tslib_es6", "__esmMin", "k2", "suppressed", "message", "_re_cjk_conv", "flags", "addSource", "exports", "require_type_detect", "__commonJSMin", "exports", "module", "global", "factory", "promiseExists", "globalObject", "symbolExists", "mapExists", "setExists", "weakMapExists", "weakSetExists", "dataViewExists", "symbolIteratorExists", "symbolToStringTagExists", "setEntriesExists", "mapEntriesExists", "setIteratorPrototype", "mapIteratorPrototype", "arrayIteratorExists", "arrayIteratorPrototype", "stringIteratorExists", "stringIteratorPrototype", "toStringLeftSliceLength", "toStringRightSliceLength", "typeDetect", "obj", "typeofObj", "stringTag", "objPrototype", "require_deep_eql", "__commonJSMin", "exports", "module", "type", "FakeMap", "key", "value", "MemoizeMap", "memoizeCompare", "leftHandOperand", "rightHandOperand", "memoizeMap", "isPrimitive", "leftHandMap", "result", "memoizeSet", "deepEqual", "options", "extensiveDeepEqual", "simpleResult", "simpleEqual", "comparator", "memoizeResultLeft", "memoizeResultRight", "comparatorResult", "leftHandType", "extensiveDeepEqualByType", "keysEqual", "iterableEqual", "regexpEqual", "generatorEqual", "entriesEqual", "objectEqual", "leftHandItems", "rightHandItems", "length", "index", "getGeneratorEntries", "hasIteratorFunction", "target", "getIteratorEntries", "generator", "generatorResult", "accumulator", "getEnumerableKeys", "keys", "i", "leftHandKeys", "rightHandKeys", "leftHandEntries", "rightHandEntries", "require_lodash", "__commonJSMin", "exports", "module", "undefined", "VERSION", "LARGE_ARRAY_SIZE", "CORE_ERROR_TEXT", "FUNC_ERROR_TEXT", "INVALID_TEMPL_VAR_ERROR_TEXT", "HASH_UNDEFINED", "MAX_MEMOIZE_SIZE", "PLACEHOLDER", "CLONE_DEEP_FLAG", "CLONE_FLAT_FLAG", "CLONE_SYMBOLS_FLAG", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "WRAP_BIND_FLAG", "WRAP_BIND_KEY_FLAG", "WRAP_CURRY_BOUND_FLAG", "WRAP_CURRY_FLAG", "WRAP_CURRY_RIGHT_FLAG", "WRAP_PARTIAL_FLAG", "WRAP_PARTIAL_RIGHT_FLAG", "WRAP_ARY_FLAG", "WRAP_REARG_FLAG", "WRAP_FLIP_FLAG", "DEFAULT_TRUNC_LENGTH", "DEFAULT_TRUNC_OMISSION", "HOT_COUNT", "HOT_SPAN", "LAZY_FILTER_FLAG", "LAZY_MAP_FLAG", "LAZY_WHILE_FLAG", "INFINITY", "MAX_SAFE_INTEGER", "MAX_INTEGER", "NAN", "MAX_ARRAY_LENGTH", "MAX_ARRAY_INDEX", "HALF_MAX_ARRAY_LENGTH", "wrapFlags", "argsTag", "arrayTag", "asyncTag", "boolTag", "dateTag", "domExcTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "nullTag", "objectTag", "promiseTag", "proxyTag", "regexpTag", "setTag", "stringTag", "symbolTag", "undefinedTag", "weakMapTag", "weakSetTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reEmptyStringLeading", "reEmptyStringMiddle", "reEmptyStringTrailing", "reEscapedHtml", "reUnescapedHtml", "reHasEscapedHtml", "reHasUnescapedHtml", "reEscape", "reEvaluate", "reInterpolate", "reIsDeepProp", "reIsPlainProp", "rePropName", "reRegExpChar", "reHasRegExpChar", "reTrimStart", "reWhitespace", "reWrapComment", "reWrapDetails", "reSplitDetails", "reAsciiWord", "reForbiddenIdentifierChars", "reEscapeChar", "reEsTemplate", "reFlags", "reIsBadHex", "reIsBinary", "reIsHostCtor", "reIsOctal", "reIsUint", "reLatin", "reNoMatch", "reUnescapedString", "rsAstralRange", "rsComboMarksRange", "reComboHalfMarksRange", "rsComboSymbolsRange", "rsComboRange", "rsDingbatRange", "rsLowerRange", "rsMathOpRange", "rsNonCharRange", "rsPunctuationRange", "rsSpaceRange", "rsUpperRange", "rsVarRange", "rsBreakRange", "rsApos", "rsAstral", "rsBreak", "rsCombo", "rsDigits", "rsDingbat", "rsLower", "rsMisc", "rsFitz", "rsModifier", "rsNonAstral", "rsRegional", "rsSurrPair", "rsUpper", "rsZWJ", "rsMiscLower", "rsMiscUpper", "rsOptContrLower", "rsOptContrUpper", "reOptMod", "rsOptVar", "rsOptJoin", "rsOrdLower", "rsOrdUpper", "rsSeq", "rsEmoji", "rsSymbol", "reApos", "reComboMark", "reUnicode", "reUnicodeWord", "reHasUnicode", "reHasUnicodeWord", "contextProps", "templateCounter", "typedArrayTags", "cloneableTags", "deburredLetters", "htmlEscapes", "htmlUnescapes", "stringEscapes", "freeParseFloat", "freeParseInt", "freeGlobal", "freeSelf", "root", "freeExports", "freeModule", "moduleExports", "freeProcess", "nodeUtil", "types", "nodeIsArrayBuffer", "nodeIsDate", "nodeIsMap", "nodeIsRegExp", "nodeIsSet", "nodeIsTypedArray", "apply", "func", "thisArg", "args", "arrayAggregator", "array", "setter", "iteratee", "accumulator", "index", "length", "value", "arrayEach", "arrayEachRight", "arrayEvery", "predicate", "arrayFilter", "resIndex", "result", "arrayIncludes", "baseIndexOf", "arrayIncludesWith", "comparator", "arrayMap", "arrayPush", "values", "offset", "arrayReduce", "initAccum", "arrayReduceRight", "arraySome", "asciiSize", "baseProperty", "asciiToArray", "string", "asciiWords", "baseFindKey", "collection", "eachFunc", "key", "baseFindIndex", "fromIndex", "fromRight", "strictIndexOf", "baseIsNaN", "baseIndexOfWith", "baseMean", "baseSum", "object", "basePropertyOf", "baseReduce", "baseSortBy", "comparer", "current", "baseTimes", "n", "baseToPairs", "props", "baseTrim", "trimmedEndIndex", "baseUnary", "baseValues", "cacheHas", "cache", "charsStartIndex", "strSymbols", "chrSymbols", "charsEndIndex", "countHolders", "placeholder", "deburrLetter", "escapeHtmlChar", "escapeStringChar", "chr", "getValue", "hasUnicode", "hasUnicodeWord", "iteratorToArray", "iterator", "data", "mapToArray", "map", "overArg", "transform", "arg", "replaceHolders", "setToArray", "set", "setToPairs", "strictLastIndexOf", "stringSize", "unicodeSize", "stringToArray", "unicodeToArray", "unescapeHtmlChar", "unicodeWords", "runInContext", "context", "_", "Array", "Date", "Error", "Function", "Math", "Object", "RegExp", "String", "TypeError", "arrayProto", "funcProto", "objectProto", "coreJsData", "funcToString", "hasOwnProperty", "idCounter", "maskSrcKey", "uid", "nativeObjectToString", "objectCtorString", "oldDash", "reIsNative", "Buffer", "Symbol", "Uint8Array", "allocUnsafe", "getPrototype", "objectCreate", "propertyIsEnumerable", "splice", "spreadableSymbol", "symIterator", "symToStringTag", "defineProperty", "getNative", "ctxClearTimeout", "ctxNow", "ctxSetTimeout", "nativeCeil", "nativeFloor", "nativeGetSymbols", "nativeIsBuffer", "nativeIsFinite", "nativeJoin", "nativeKeys", "nativeMax", "nativeMin", "nativeNow", "nativeParseInt", "nativeRandom", "nativeReverse", "DataView", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "metaMap", "realNames", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "symbolToString", "lodash", "isObjectLike", "isArray", "LazyWrapper", "LodashWrapper", "wrapperClone", "baseCreate", "proto", "isObject", "baseLodash", "chainAll", "lazyClone", "copyArray", "lazyReverse", "lazyValue", "dir", "isArr", "isRight", "arrLength", "view", "getView", "start", "end", "iteratees", "iterLength", "takeCount", "baseWrapperValue", "outer", "iterIndex", "type", "computed", "Hash", "entries", "entry", "hashClear", "hashDelete", "hashGet", "hashHas", "hashSet", "ListCache", "listCacheClear", "listCacheDelete", "assocIndexOf", "lastIndex", "listCacheGet", "listCacheHas", "listCacheSet", "MapCache", "mapCacheClear", "mapCacheDelete", "getMapData", "mapCacheGet", "mapCacheHas", "mapCacheSet", "size", "SetCache", "setCacheAdd", "setCacheHas", "Stack", "stackClear", "stackDelete", "stackGet", "stackHas", "stackSet", "pairs", "arrayLikeKeys", "inherited", "isArg", "isArguments", "isBuff", "isBuffer", "isType", "isTypedArray", "skipIndexes", "isIndex", "arraySample", "baseRandom", "arraySampleSize", "shuffleSelf", "baseClamp", "arrayShuffle", "assignMergeValue", "eq", "baseAssignValue", "assignValue", "objValue", "baseAggregator", "baseEach", "baseAssign", "source", "copyObject", "keys", "baseAssignIn", "keysIn", "baseAt", "paths", "skip", "get", "number", "lower", "upper", "baseClone", "bitmask", "customizer", "stack", "isDeep", "isFlat", "isFull", "initCloneArray", "tag", "getTag", "isFunc", "cloneBuffer", "initCloneObject", "copySymbolsIn", "copySymbols", "initCloneByTag", "stacked", "isSet", "subValue", "isMap", "keysFunc", "getAllKeysIn", "getAllKeys", "baseConforms", "baseConformsTo", "baseDelay", "wait", "setTimeout", "baseDifference", "includes", "isCommon", "valuesLength", "valuesIndex", "createBaseEach", "baseForOwn", "baseEachRight", "baseForOwnRight", "baseEvery", "baseExtremum", "isSymbol", "baseFill", "toInteger", "toLength", "baseFilter", "baseFlatten", "depth", "isStrict", "isFlattenable", "baseFor", "createBaseFor", "baseForRight", "baseFunctions", "isFunction", "baseGet", "path", "castPath", "toKey", "baseGetAllKeys", "symbolsFunc", "baseGetTag", "getRawTag", "objectToString", "baseGt", "other", "baseHas", "baseHasIn", "baseInRange", "baseIntersection", "arrays", "othLength", "othIndex", "caches", "maxLength", "seen", "baseInverter", "baseInvoke", "parent", "last", "baseIsArguments", "baseIsArrayBuffer", "baseIsDate", "baseIsEqual", "baseIsEqualDeep", "equalFunc", "objIsArr", "othIsArr", "objTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "equalByTag", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "equalObjects", "baseIsMap", "baseIsMatch", "matchData", "noCustomizer", "srcValue", "baseIsNative", "isMasked", "pattern", "baseIsRegExp", "baseIsSet", "baseIsTypedArray", "isLength", "baseIteratee", "identity", "baseMatchesProperty", "baseMatches", "property", "baseKeys", "isPrototype", "baseKeysIn", "nativeKeysIn", "isProto", "baseLt", "baseMap", "isArrayLike", "getMatchData", "matchesStrictComparable", "isKey", "isStrictComparable", "hasIn", "baseMerge", "srcIndex", "baseMergeDeep", "newValue", "safeGet", "mergeFunc", "isTyped", "isArrayLikeObject", "cloneTypedArray", "isPlainObject", "toPlainObject", "baseNth", "baseOrderBy", "orders", "getIteratee", "criteria", "compareMultiple", "basePick", "basePickBy", "baseSet", "basePropertyDeep", "basePullAll", "indexOf", "basePullAt", "indexes", "previous", "baseUnset", "baseRange", "step", "baseRepeat", "baseRest", "setToString", "overRest", "baseSample", "baseSampleSize", "nested", "baseSetData", "baseSetToString", "constant", "baseShuffle", "baseSlice", "baseSome", "baseSortedIndex", "retHighest", "low", "high", "mid", "baseSortedIndexBy", "valIsNaN", "valIsNull", "valIsSymbol", "valIsUndefined", "othIsDefined", "othIsNull", "othIsReflexive", "othIsSymbol", "setLow", "baseSortedUniq", "baseToNumber", "baseToString", "baseUniq", "createSet", "seenIndex", "baseUpdate", "updater", "baseWhile", "isDrop", "actions", "action", "baseXor", "baseZipObject", "assignFunc", "valsLength", "castArrayLikeObject", "castFunction", "stringToPath", "toString", "castRest", "castSlice", "clearTimeout", "id", "buffer", "cloneArrayBuffer", "arrayBuffer", "cloneDataView", "dataView", "cloneRegExp", "regexp", "cloneSymbol", "symbol", "typedArray", "compareAscending", "valIsDefined", "valIsReflexive", "objCriteria", "othCriteria", "ordersLength", "order", "composeArgs", "partials", "holders", "isCurried", "argsIndex", "argsLength", "holdersLength", "leftIndex", "leftLength", "rangeLength", "isUncurried", "composeArgsRight", "holdersIndex", "rightIndex", "rightLength", "isNew", "getSymbols", "getSymbolsIn", "createAggregator", "initializer", "createAssigner", "assigner", "sources", "guard", "isIterateeCall", "iterable", "createBind", "isBind", "Ctor", "createCtor", "wrapper", "fn", "createCaseFirst", "methodName", "trailing", "createCompounder", "callback", "words", "deburr", "thisBinding", "createCurry", "arity", "getHolder", "createRecurry", "createHybrid", "createFind", "findIndexFunc", "createFlow", "flatRest", "funcs", "prereq", "getFuncName", "funcName", "getData", "isLaziable", "partialsRight", "holdersRight", "argPos", "ary", "isAry", "isBindKey", "isFlip", "holdersCount", "newHolders", "reorder", "createInverter", "toIteratee", "createMathOperation", "operator", "defaultValue", "createOver", "arrayFunc", "createPadding", "chars", "charsLength", "createPartial", "createRange", "toFinite", "createRelationalOperation", "toNumber", "wrapFunc", "isCurry", "newHoldersRight", "newPartials", "newPartialsRight", "newData", "setData", "setWrapToString", "createRound", "precision", "pair", "noop", "createToPairs", "createWrap", "mergeData", "customDefaultsAssignIn", "customDefaultsMerge", "customOmitClone", "isPartial", "arrStacked", "othStacked", "arrValue", "othValue", "compared", "convert", "objProps", "objLength", "othProps", "objStacked", "skipCtor", "objCtor", "othCtor", "flatten", "otherFunc", "isKeyable", "isOwn", "unmasked", "stubArray", "ctorString", "transforms", "getWrapDetails", "match", "hasPath", "hasFunc", "insertWrapDetails", "details", "isMaskable", "stubFalse", "memoizeCapped", "memoize", "srcBitmask", "newBitmask", "isCombo", "otherArgs", "oldArray", "shortOut", "reference", "updateWrapDetails", "count", "lastCalled", "stamp", "remaining", "rand", "quote", "subString", "chunk", "compact", "concat", "difference", "differenceBy", "differenceWith", "drop", "dropRight", "dropRightWhile", "dropWhile", "fill", "findIndex", "findLastIndex", "flattenDeep", "flattenDepth", "fromPairs", "head", "initial", "intersection", "mapped", "intersectionBy", "intersectionWith", "join", "separator", "lastIndexOf", "nth", "pull", "pullAll", "pullAllBy", "pullAllWith", "pullAt", "remove", "reverse", "slice", "sortedIndex", "sortedIndexBy", "sortedIndexOf", "sortedLastIndex", "sortedLastIndexBy", "sortedLastIndexOf", "sortedUniq", "sortedUniqBy", "tail", "take", "takeRight", "takeRightWhile", "takeWhile", "union", "unionBy", "unionWith", "uniq", "uniqBy", "uniqWith", "unzip", "group", "unzipWith", "without", "xor", "xorBy", "xorWith", "zip", "zipObject", "zipObjectDeep", "zipWith", "chain", "tap", "interceptor", "thru", "wrapperAt", "wrapperChain", "wrapperCommit", "wrapperNext", "toArray", "done", "wrapperToIterator", "wrapperPlant", "clone", "wrapperReverse", "wrapped", "wrapperValue", "countBy", "every", "filter", "find", "findLast", "flatMap", "flatMapDeep", "flatMapDepth", "forEach", "forEachRight", "groupBy", "isString", "invokeMap", "keyBy", "orderBy", "partition", "reduce", "reduceRight", "reject", "negate", "sample", "sampleSize", "shuffle", "some", "sortBy", "now", "after", "before", "bind", "bindKey", "curry", "curryRight", "debounce", "options", "lastArgs", "lastThis", "maxWait", "timerId", "lastCallTime", "lastInvokeTime", "leading", "maxing", "invokeFunc", "time", "leadingEdge", "timerExpired", "remainingWait", "timeSinceLastCall", "timeSinceLastInvoke", "timeWaiting", "shouldInvoke", "trailingEdge", "cancel", "flush", "debounced", "isInvoking", "defer", "delay", "flip", "resolver", "memoized", "once", "overArgs", "funcsLength", "partial", "partialRight", "rearg", "rest", "spread", "throttle", "unary", "wrap", "castArray", "cloneWith", "cloneDeep", "cloneDeepWith", "conformsTo", "gt", "gte", "isArrayBuffer", "isBoolean", "isDate", "isElement", "isEmpty", "isEqual", "isEqualWith", "isError", "isFinite", "isInteger", "isMatch", "isMatchWith", "isNaN", "isNumber", "isNative", "isNull", "isNil", "isRegExp", "isSafeInteger", "isUndefined", "isWeakMap", "isWeakSet", "lt", "lte", "sign", "remainder", "isBinary", "toSafeInteger", "assign", "assignIn", "assignInWith", "assignWith", "at", "create", "prototype", "properties", "defaults", "propsIndex", "propsLength", "defaultsDeep", "mergeWith", "findKey", "findLastKey", "forIn", "forInRight", "forOwn", "forOwnRight", "functions", "functionsIn", "has", "invert", "invertBy", "invoke", "mapKeys", "mapValues", "merge", "omit", "omitBy", "pickBy", "pick", "prop", "setWith", "toPairs", "toPairsIn", "isArrLike", "unset", "update", "updateWith", "valuesIn", "clamp", "inRange", "random", "floating", "temp", "camelCase", "word", "capitalize", "upperFirst", "endsWith", "target", "position", "escape", "escapeRegExp", "kebabCase", "lowerCase", "lowerFirst", "pad", "strLength", "padEnd", "padStart", "parseInt", "radix", "repeat", "replace", "snakeCase", "split", "limit", "startCase", "startsWith", "template", "settings", "imports", "importsKeys", "importsValues", "isEscaping", "isEvaluating", "interpolate", "reDelimiters", "sourceURL", "escapeValue", "interpolateValue", "esTemplateValue", "evaluateValue", "variable", "attempt", "toLower", "toUpper", "trim", "trimEnd", "trimStart", "truncate", "omission", "substring", "newEnd", "unescape", "upperCase", "e", "bindAll", "methodNames", "cond", "conforms", "defaultTo", "flow", "flowRight", "matches", "matchesProperty", "method", "methodOf", "mixin", "noConflict", "nthArg", "over", "overEvery", "overSome", "propertyOf", "range", "rangeRight", "stubObject", "stubString", "stubTrue", "times", "toPath", "uniqueId", "prefix", "add", "augend", "addend", "ceil", "divide", "dividend", "divisor", "floor", "max", "maxBy", "mean", "meanBy", "min", "minBy", "multiply", "multiplier", "multiplicand", "round", "subtract", "minuend", "subtrahend", "sum", "sumBy", "isFilter", "takeName", "dropName", "checkIteratee", "isTaker", "lodashFunc", "retUnwrapped", "isLazy", "useLazy", "isHybrid", "isUnwrapped", "onlyLazy", "chainName", "equals", "a1", "a2", "_equals", "defaultFilter", "options", "checker", "defaultChecker", "filter", "find", "removeFromFirst", "findLastIndex", "findIndex", "cb", "val", "index", "arr", "a", "element", "value", "arr_new", "arr_old", "array_unique", "Array", "isArray", "TypeError", "overwrite", "length", "splice", "array_unique_overwrite", "lazy_unique", "lazy_unique_overwrite", "Object", "defineProperty", "module", "exports", "defaultFilter", "options", "checker", "defaultChecker", "filter", "find", "removeFromFirst", "findLastIndex", "findIndex", "cb", "val", "index", "arr", "a", "element", "value", "arr_new", "arr_old", "_equals", "array_unique", "Array", "isArray", "TypeError", "overwrite", "length", "splice", "array_unique_overwrite", "lazy_unique", "Object", "defineProperty", "a1", "a2", "module", "exports", "require_dist", "__commonJSMin", "exports", "module", "cjk_conv_1", "array_hyper_unique_1", "exports", "const_1", "getOptionsSkip", "options", "skip", "a", "b", "exports", "getOptions", "defaultOpts", "_call", "fn", "text", "argv", "table", "tableOnly", "not_tableOnly", "ret", "exports", "EnumRunesCode", "GRAPHEMES", "Object", "freeze", "EnumCodeUnits", "runes", "string", "TypeError", "result", "i", "increment", "length", "nextUnits", "isGrapheme", "isVariationSelector", "isDiacriticalMark", "isZeroWidthJoiner", "push", "substring", "current", "isFirstOfSurrogatePair", "currentPair", "nextPair", "isRegionalIndicator", "isSubdivisionFlag", "isSupplementarySpecialpurposePlane", "slice", "indexOf", "String", "fromCodePoint", "isFitzpatrickModifier", "betweenInclusive", "charCodeAt", "codePointFromSurrogatePair", "codePoint", "codePointAt", "includes", "pair", "highOffset", "lowOffset", "value", "lower", "upper", "start", "width", "chars", "undefined", "rest", "endIndex", "join", "defineProperty", "module", "exports", "_", "EnumRunesCode", "GRAPHEMES", "Object", "freeze", "EnumCodeUnits", "runes", "string", "TypeError", "result", "i", "increment", "length", "nextUnits", "isGrapheme", "isVariationSelector", "isDiacriticalMark", "isZeroWidthJoiner", "push", "substring", "current", "betweenInclusive", "charCodeAt", "currentPair", "nextPair", "isRegionalIndicator", "codePointFromSurrogatePair", "codePoint", "codePointAt", "slice", "indexOf", "String", "fromCodePoint", "includes", "pair", "value", "lower", "upper", "start", "width", "chars", "rest", "endIndex", "join", "defineProperty", "module", "exports", "_", "require_dist", "__commonJSMin", "exports", "module", "classPrototype", "target", "all", "desc", "Object", "getOwnPropertyDescriptors", "prototype", "keys", "reduce", "a", "b", "get", "set", "assign", "defineProperty", "value", "module", "_", "classPrototype", "target", "all", "desc", "Object", "getOwnPropertyDescriptors", "prototype", "keys", "reduce", "a", "b", "get", "set", "assign", "defineProperty", "value", "module", "exports", "_", "require_dist", "__commonJSMin", "exports", "module", "STRING_PROTOTYPE", "Object", "getOwnPropertyNames", "String", "prototype", "UString", "_arr", "constructor", "str", "argv", "d", "getOwnPropertyDescriptor", "defineProperty", "assign", "configurable", "enumerable", "Symbol", "iterator", "toArray", "isString", "runes", "split", "separator", "limit", "ret", "slice", "call", "substr", "start", "length", "join", "substring", "indexEnd", "Number", "isNaN", "indexOf", "search", "a", "Math", "max", "min", "s", "i", "j", "se", "includes", "charAt", "index", "startsWith", "pos", "endsWith", "padEnd", "targetLength", "padString", "pad", "repeat", "padStart", "codePointAt", "default", "create", "support", "classPrototype", "keys", "reduce", "b", "charLength", "size", "value", "module", "exports", "STRING_PROTOTYPE", "Object", "getOwnPropertyNames", "String", "prototype", "UString", "_arr", "constructor", "str", "argv", "super", "d", "getOwnPropertyDescriptor", "this", "defineProperty", "assign", "configurable", "enumerable", "Symbol", "iterator", "toArray", "runes", "split", "separator", "limit", "ret", "slice", "call", "substr", "start", "length", "join", "substring", "indexEnd", "Number", "isNaN", "indexOf", "search", "a", "Math", "max", "min", "s", "i", "j", "se", "includes", "charAt", "index", "startsWith", "pos", "endsWith", "padEnd", "targetLength", "padString", "pad", "repeat", "padStart", "codePointAt", "static", "support", "classPrototype", "keys", "reduce", "b", "create", "charLength", "size", "value", "module", "exports", "require_dist", "__commonJSMin", "exports", "module", "uni_string_1", "const_1", "charMap", "s", "table", "t", "exports", "textMap1", "text", "toText", "len", "i", "textMap2", "textMap3", "textMap4", "map_1", "exports", "table_1", "map_1", "_cn2tw", "text", "exports", "_tw2cn", "require_types", "__commonJSMin", "exports", "util_1", "core_1", "tslib_1", "exports", "cn2tw", "text", "options", "argv", "tw2cn", "util_1", "exports", "const_1", "zh_convert_1", "core_1", "table_1", "_update", "target", "source", "a", "b", "exports", "_get", "arr", "value", "values", "v", "exports", "exports", "core_1", "table_1", "raw_1", "zh_convert_1", "jp", "char", "options", "a", "exports", "tw", "cn", "array_hyper_unique_1", "core_1", "zh_table_alias_1", "tslib_1", "_get", "a", "value", "values", "exports", "_wrapFn", "fn", "char", "options", "require_types", "__commonJSMin", "exports", "exports", "exports", "table_1", "_getdata", "char", "from", "to", "safe", "_a", "exports", "types_1", "table_1", "cjk_conv_1", "uni_string_1", "util_1", "REGEXP_TEST", "defaultOptions", "_", "langs", "from", "to", "str", "options", "char", "c", "exports", "zh2jp", "cjk2zht", "cjk2zhs", "exports", "table_1", "exports", "table_2", "tslib_1", "table_1", "exports", "tslib_1", "jp_table_comparison_1", "array_hyper_unique_1", "types_1", "table_1", "_fromA2B", "char", "from", "to", "options", "_table", "list", "row", "exports", "jp2zht", "jp2zhs", "zht2jp", "zhs2jp", "zh2jp", "arr", "jp2zh", "lazyAll", "a", "b", "uni_string_1", "array_hyper_unique_1", "reToStringList", "re", "char", "s", "a", "exports", "array_hyper_unique_1", "util_1", "_greedyTableBuild", "data", "_greedyTableCacheRegexp", "_greedyTableCacheMap", "_greedyTableCacheTest", "arr", "r", "a", "c", "exports", "exports", "re_1", "exports", "core_1", "exports", "table_1", "greedyTableTest", "input", "greedyTableCharArray", "char", "greedyTableReplace", "r", "jp_table_convert_1", "zh_table_alias_1", "tslib_1", "jp_table_alias_1", "zh_table_greedy_1", "util_1", "exports", "auto", "char", "options", "jt", "js", "greedyTable", "zh_table_alias_1", "tslib_1", "exports", "util_1", "jp_table_convert_1", "exports", "jp_table_convert_1", "zh_convert_1", "filename", "name", "options", "jp", "exports", "word", "txt", "zh", "s", "tslib_1", "exports", "novel_filename_1", "index_1", "exports", "__importDefault", "index_2", "index_3", "filename_1", "require_package", "__commonJSMin", "exports", "module", "exports", "index_1", "tslib_1", "exports", "simplified_to_traditional_exports", "__export", "simplified_to_traditional_default", "__toCommonJS", "import_cjk_conv", "import_api", "isEmpty", "string", "fetchInputItem", "selectedText", "isEmpty", "clipboardText", "import_api", "simplified_to_traditional_default", "props", "text", "actionAfterConversion", "simplifiedToTraditionalQuoteStyle", "input", "fetchInputItem", "tw", "finalTw"]
}
